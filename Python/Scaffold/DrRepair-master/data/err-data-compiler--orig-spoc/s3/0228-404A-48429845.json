{
  "meta": {
    "index": 228,
    "hitid": "3IYI9285WSUW73VGPSI24Y4ZT1YJC3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "404A",
    "subid": "48429845"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "new integer grid_size",
      "code": "int grid_size ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read grid_size",
      "code": "cin >> grid_size ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create new boolean called valid = true",
      "code": "bool valid = true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create vector of strings grid",
      "code": "vector < string > grid ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i from 0 to grid_size exclusive",
      "code": "for ( int i = 0 ; i < grid_size ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare new string line",
      "code": "string line ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read line",
      "code": "cin >> line ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "push line into grid",
      "code": "grid . push_back ( line ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create character x_char = character at the index 0 of grid [ 0 ]",
      "code": "char x_char = grid [ 0 ] . at ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare new character called y_char = character at the index 1 of grid [ 0 ]",
      "code": "char y_char = grid [ 0 ] . at ( 1 ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if x_char is equal to y_char , change the value of valid to false",
      "code": "if ( x_char == y_char ) { valid = false ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if valid is true",
      "code": "if ( valid )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "in a for loop , change i from 0 to grid_size exclusive",
      "code": "for ( int i = 0 ; i < grid_size ; ++ i )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if character at the index i of grid [ i ] ! = x_char",
      "code": "if ( grid [ i ] . at ( i ) != x_char )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "change valid to false",
      "code": "valid = false ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if valid is true",
      "code": "if ( valid )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i from grid_size - 1 to 0 inclusive decrementing i",
      "code": "for ( int i = grid_size - 1 ; i >= 0 ; -- i )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if character at the index grid_size - i - 1 of grid [ i ] ! = x_char",
      "code": "if ( grid [ i ] . at ( grid_size - i - 1 ) != x_char )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "assign the new value = false to valid",
      "code": "valid = false ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if valid is true",
      "code": "if ( valid )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "in a for loop , change i from 0 to grid_size exclusive incrementing i",
      "code": "for ( int i = 0 ; i < grid_size ; ++ i )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "increment j in a loop from 0 to grid_size exclusive",
      "code": "for ( int j = 0 ; j < grid_size ; ++ j )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "if i ! = j and j ! = grid_size - i - 1",
      "code": "if ( ( i != j ) && ( j != grid_size - i - 1 ) )",
      "indent": 4
    },
    {
      "line": 33,
      "text": "if character at the position j of i - th element of the grid is not equal to y_char",
      "code": "if ( grid [ i ] . at ( j ) != y_char )",
      "indent": 5
    },
    {
      "line": 34,
      "text": "set valid to false",
      "code": "valid = false ;",
      "indent": 6
    },
    {
      "line": 35,
      "text": "break the loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "if valid is true",
      "code": "if ( valid )",
      "indent": 1
    },
    {
      "line": 42,
      "text": "print \" YES \" to the standard output",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 44,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( grid . find ( grid_size - i - 1 ) != x_char )"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘find’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 2,
      "err_msg": "‘grid_size’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < grid_size ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "bool line ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(bool&)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "grid . push_back ( endl ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(<unresolved overloaded function type>)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < grid_size ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( grid [ i ] . at ( grid [ i ] ) != x_char )"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::at(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = grid_size - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( grid . substr ( grid_size - i - 1 ) != x_char )"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘substr’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "for ( i = 0 ; i < grid_size ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( j = 0 ; j < grid_size ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 46,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        10,
        11,
        23
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        10,
        11,
        23,
        33
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        10,
        11,
        23,
        43
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        10,
        11,
        23,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        33
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid [ j ] [ j ] != y_char )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        10,
        11,
        33,
        43
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid [ j ] [ j ] != y_char )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        10,
        11,
        33,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid [ j ] [ j ] != y_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        43
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        10,
        11,
        43,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘find’"
    },
    {
      "mod_line": [
        10,
        23,
        33
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘find’"
    },
    {
      "mod_line": [
        10,
        23,
        33,
        43
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘find’"
    },
    {
      "mod_line": [
        10,
        23,
        33,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23,
        43
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘find’"
    },
    {
      "mod_line": [
        10,
        23,
        43,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        33,
        43
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid [ j ] [ j ] != y_char )",
        "do"
      ],
      "err_line": 46,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        33,
        43,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid [ j ] [ j ] != y_char )",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        33,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "if ( grid [ j ] [ j ] != y_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        43
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "do"
      ],
      "err_line": 46,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        43,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "char x_char = ( char ) grid [ 0 ] . size ( ) ;",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        11,
        23,
        33
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        11,
        23,
        33,
        43
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        11,
        23,
        33,
        4
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        43
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        11,
        23,
        43,
        4
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        4
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        33
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid [ j ] [ j ] != y_char )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        11,
        33,
        43
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid [ j ] [ j ] != y_char )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        11,
        33,
        43,
        4
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid [ j ] [ j ] != y_char )",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        33,
        4
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "if ( grid [ j ] [ j ] != y_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        43
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(std::__cxx11::basic_string<char>&)’"
    },
    {
      "mod_line": [
        11,
        43,
        4
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "char y_char = grid [ 0 ] . substr ( grid [ 0 ] ) ;",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33
      ],
      "mod_code": [
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘find’"
    },
    {
      "mod_line": [
        23,
        33,
        43
      ],
      "mod_code": [
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘find’"
    },
    {
      "mod_line": [
        23,
        33,
        43,
        4
      ],
      "mod_code": [
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        4
      ],
      "mod_code": [
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "if ( grid [ j ] [ j ] != y_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        43
      ],
      "mod_code": [
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘find’"
    },
    {
      "mod_line": [
        23,
        43,
        4
      ],
      "mod_code": [
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        4
      ],
      "mod_code": [
        "if ( grid . find ( grid_size - i - 1 ) != x_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        43
      ],
      "mod_code": [
        "if ( grid [ j ] [ j ] != y_char )",
        "do"
      ],
      "err_line": 46,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        33,
        43,
        4
      ],
      "mod_code": [
        "if ( grid [ j ] [ j ] != y_char )",
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        4
      ],
      "mod_code": [
        "if ( grid [ j ] [ j ] != y_char )",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    },
    {
      "mod_line": [
        43,
        4
      ],
      "mod_code": [
        "do",
        "vector < grid > grid ;"
      ],
      "err_line": 4,
      "err_msg": "‘grid’ was not declared in this scope"
    }
  ]
}