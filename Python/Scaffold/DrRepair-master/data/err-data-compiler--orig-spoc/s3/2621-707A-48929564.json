{
  "meta": {
    "index": 2621,
    "hitid": "3TKSOBLOHLA7FF5YN09QVQF42OOBBR",
    "workerid": "A1APYLD4DUK33J",
    "probid": "707A",
    "subid": "48929564"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare prime with integer n as argument , returning boolean",
      "code": "bool prime ( int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer c with c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n % i is 0 , increment c",
      "code": "if ( n % i == 0 ) c ++ ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if c is 1",
      "code": "if ( c == 1 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return true from function",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "nelse",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return false from function",
      "code": "return false ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "create integers n , m , c , d with c = 0 , d = 0",
      "code": "int n , m , c = 0 , d = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "create character x",
      "code": "char x ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if x is ' B ' or x is ' W ' or x is ' G '",
      "code": "if ( x == ' B ' || x == ' W ' || x == ' G ' )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 20,
      "text": "increment d",
      "code": "d ++ ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if c is ( n * m )",
      "code": "if ( c == ( n * m ) )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" # Black & White \" print newline",
      "code": "cout << \" #Black&White \" << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else if d is not 0",
      "code": "else if ( d != 0 )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print \" # Color \" print newline",
      "code": "cout << \" #Color \" << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int n , m , c = 0 , d = 0 , d ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        26,
        15
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        15,
        13
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        15,
        23
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! c * m )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        13
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "char s ;"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        13,
        23
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "char s ;",
        "if ( ! c * m )"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        15
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        15,
        13
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        15,
        13,
        23
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;",
        "if ( ! c * m )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        15,
        23
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! c * m )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        13
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "char s ;"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        13,
        23
      ],
      "mod_code": [
        "cout << \" # Black \" << endl ;",
        "char s ;",
        "if ( ! c * m )"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        15
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        15,
        13
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        15,
        13,
        23
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;",
        "if ( ! c * m )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        15,
        13,
        24
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        15,
        23
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! c * m )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        15,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! c * m )",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        15,
        24
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        13
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "char s ;"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        13,
        23
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "char s ;",
        "if ( ! c * m )"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        13,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "char s ;",
        "if ( ! c * m )",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        13,
        24
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "char s ;",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13,
        23
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;",
        "if ( ! c * m )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13,
        23,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;",
        "if ( ! c * m )",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "char s ;",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        23
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! c * m )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        23,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! c * m )",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23
      ],
      "mod_code": [
        "char s ;",
        "if ( ! c * m )"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        24
      ],
      "mod_code": [
        "char s ;",
        "if ( ! c * m )",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "char s ;",
        "cout << \" # Black \" << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "‘x’ was not declared in this scope"
    }
  ]
}