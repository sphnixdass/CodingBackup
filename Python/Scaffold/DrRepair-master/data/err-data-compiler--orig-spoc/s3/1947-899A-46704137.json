{
  "meta": {
    "index": 1947,
    "hitid": "36D1BWBEHNV9AT9ZVW6O8DNUKHGM2Q",
    "workerid": "AIWEXPJAU66D9",
    "probid": "899A",
    "subid": "46704137"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n and data",
      "code": "int n , data ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integers c1 and c2 = 0",
      "code": "int c1 = 0 , c2 = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read data",
      "code": "cin >> data ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if data = 1",
      "code": "if ( data == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment c1",
      "code": "c1 ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if data = 2",
      "code": "else if ( data == 2 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment c2",
      "code": "c2 ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create integer a with value min of c1 and c2",
      "code": "int a = min ( c1 , c2 ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "decrease c1 by a",
      "code": "c1 -= a ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "decrease c2 by a",
      "code": "c2 -= a ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "increase a by c1 / 3",
      "code": "a += c1 / 3 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print a",
      "code": "cout << a << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "getline ( cin , data ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int a = min ( c1 and c2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        11
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        11,
        15
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        11,
        8
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;",
        "else if ( ! data )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        11,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        5,
        15
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        15,
        8
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "cout << a ;",
        "else if ( ! data )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        15,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "cout << a ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "else if ( ! data )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        8,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "getline ( cin , data ) ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( ! data )",
        "int a = min ( c1 and c2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        11,
        15
      ],
      "mod_code": [
        "if ( ! data )",
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        8
      ],
      "mod_code": [
        "if ( ! data )",
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;",
        "else if ( ! data )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        11,
        8
      ],
      "mod_code": [
        "if ( ! data )",
        "int a = min ( c1 and c2 ) ;",
        "else if ( ! data )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        11,
        8,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "int a = min ( c1 and c2 ) ;",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        11,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "int a = min ( c1 and c2 ) ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        15,
        8,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "cout << a ;",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        15,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "cout << a ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        11,
        15
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        8
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;",
        "else if ( ! data )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        2
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        11,
        8
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;",
        "else if ( ! data )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        11,
        8,
        2
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        11,
        2
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "int a = min ( c1 and c2 ) ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        15,
        8
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "cout << a ;",
        "else if ( ! data )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        15,
        8,
        2
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "cout << a ;",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        15,
        2
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "cout << a ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "else if ( ! data )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "getline ( cin , data ) ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        11,
        15,
        8
      ],
      "mod_code": [
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;",
        "else if ( ! data )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        11,
        15,
        8,
        2
      ],
      "mod_code": [
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        15,
        2
      ],
      "mod_code": [
        "int a = min ( c1 and c2 ) ;",
        "cout << a ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "int a = min ( c1 and c2 ) ;",
        "else if ( ! data )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        11,
        8,
        2
      ],
      "mod_code": [
        "int a = min ( c1 and c2 ) ;",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "int a = min ( c1 and c2 ) ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        15,
        8,
        2
      ],
      "mod_code": [
        "cout << a ;",
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "cout << a ;",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "else if ( ! data )",
        "int c1 = 0 = 0 , c2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    }
  ]
}