{
  "meta": {
    "index": 903,
    "hitid": "31MCUE39BKGY319WOTMYEI8PU93G3M",
    "workerid": "A1APYLD4DUK33J",
    "probid": "332A",
    "subid": "41201044"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while ( read n is true )",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer sum with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "create string str",
      "code": "string str ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = n to size of str exclusive , increment i by n",
      "code": "for ( int i = n ; i < str . size ( ) ; i += n )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if str [ i - 1 ] is str [ i - 2 ] and str [ i - 2 ] is str [ i - 3 ] , increment sum",
      "code": "if ( str [ i - 1 ] == str [ i - 2 ] && str [ i - 2 ] == str [ i - 3 ] ) sum ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print sum print newline",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = n ; i < str . size ( ) ; i += n )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( i = n ; i < str . size ( ) ; i += n )",
        "while ( cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "for ( i = n ; i < str . size ( ) ; i += n )",
        "while ( cin >> n ;",
        "int str ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        5
      ],
      "mod_code": [
        "for ( i = n ; i < str . size ( ) ; i += n )",
        "while ( cin >> n ;",
        "int str ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "for ( i = n ; i < str . size ( ) ; i += n )",
        "while ( cin >> n ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( i = n ; i < str . size ( ) ; i += n )",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        5
      ],
      "mod_code": [
        "for ( i = n ; i < str . size ( ) ; i += n )",
        "int str ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( i = n ; i < str . size ( ) ; i += n )",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> n ;",
        "int str ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> n ;",
        "int str ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( cin >> n ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int str ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}