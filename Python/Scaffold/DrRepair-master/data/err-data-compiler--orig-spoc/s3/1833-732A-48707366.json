{
  "meta": {
    "index": 1833,
    "hitid": "3HY86PZXPYC49KZQVUIRQM8GKWC1EB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "732A",
    "subid": "48707366"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new integer variables k , r and tmp where tmp = 0",
      "code": "int k , r , tmp = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read from the input to k and r",
      "code": "cin >> k >> r ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign k to tmp",
      "code": "tmp = k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 1 to i inclusive",
      "code": "for ( int i = 1 ; i <= i ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "change the value of k to k multiplied by i",
      "code": "k *= i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if k % 10 = 0",
      "code": "if ( k % 10 == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print i",
      "code": "cout << i << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "declare new integer variable x with value 0",
      "code": "int x = 0 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set the value of x to k % 10",
      "code": "x = k % 10 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if x is equal to r",
      "code": "if ( x == r )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print i",
      "code": "cout << i << endl ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "change k to tmp",
      "code": "k = tmp ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int tmp = k ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "k to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        6,
        9
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        6,
        9,
        2
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "do",
        "k >> k >> r ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        6,
        9,
        1
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "do",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        6,
        9,
        11
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "do",
        "x /= 10 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        6,
        2
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "k >> k >> r ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        6,
        2,
        1
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        6,
        2,
        11
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "k >> k >> r ;",
        "x /= 10 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        6,
        1
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        6,
        1,
        11
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        6,
        11
      ],
      "mod_code": [
        "k to ;",
        "if ( ! k % 10 )",
        "x /= 10 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "k to ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        9,
        2
      ],
      "mod_code": [
        "k to ;",
        "do",
        "k >> k >> r ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        9,
        2,
        1
      ],
      "mod_code": [
        "k to ;",
        "do",
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        9,
        2,
        11
      ],
      "mod_code": [
        "k to ;",
        "do",
        "k >> k >> r ;",
        "x /= 10 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        9,
        1
      ],
      "mod_code": [
        "k to ;",
        "do",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        9,
        1,
        11
      ],
      "mod_code": [
        "k to ;",
        "do",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        9,
        11
      ],
      "mod_code": [
        "k to ;",
        "do",
        "x /= 10 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "k to ;",
        "k >> k >> r ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        2,
        1
      ],
      "mod_code": [
        "k to ;",
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        2,
        1,
        11
      ],
      "mod_code": [
        "k to ;",
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        2,
        11
      ],
      "mod_code": [
        "k to ;",
        "k >> k >> r ;",
        "x /= 10 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "k to ;",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        1,
        11
      ],
      "mod_code": [
        "k to ;",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "k to ;",
        "x /= 10 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "do",
        "k >> k >> r ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        9,
        2,
        1
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "do",
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        6,
        9,
        2,
        11
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "do",
        "k >> k >> r ;",
        "x /= 10 ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        9,
        1
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "do",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        6,
        9,
        1,
        11
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "do",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "do",
        "x /= 10 ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        2,
        1
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        6,
        2,
        1,
        11
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        6,
        1,
        11
      ],
      "mod_code": [
        "if ( ! k % 10 )",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "do",
        "k >> k >> r ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        2,
        1
      ],
      "mod_code": [
        "do",
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        9,
        2,
        1,
        11
      ],
      "mod_code": [
        "do",
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        9,
        2,
        11
      ],
      "mod_code": [
        "do",
        "k >> k >> r ;",
        "x /= 10 ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "do",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        9,
        1,
        11
      ],
      "mod_code": [
        "do",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "do",
        "x /= 10 ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        2,
        1,
        11
      ],
      "mod_code": [
        "k >> k >> r ;",
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int k , r , tmp , tmp ;",
        "x /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    }
  ]
}