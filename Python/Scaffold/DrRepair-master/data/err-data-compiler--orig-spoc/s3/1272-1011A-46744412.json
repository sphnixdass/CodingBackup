{
  "meta": {
    "index": 1272,
    "hitid": "386T3MLZLNPNTU4HM8SRK7TK41480C",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1011A",
    "subid": "46744412"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new set of unique characters called v",
      "code": "set < char > v ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create iterator it for a set of chars",
      "code": "set < char > :: iterator it ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer variables n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "a is a new character",
      "code": "char a ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read from the input to n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "in a for loop , change i from 0 to n exclusive by step of 1",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read standard input to a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "insert a into v",
      "code": "v . insert ( a ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "new array of characters s with size 101",
      "code": "char s [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create new integer i with value 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "move it thorugh set v , multiplying s [ i ] by the value at it on each step",
      "code": "for ( it = v . begin ( ) ; it != v . end ( ) ; ++ i , ++ it ) { s [ i ] = * it ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "c is an array of characters with 101 elements",
      "code": "char c [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "create new integer variable l = 0",
      "code": "int l = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for j = 0 to i exclusive incrementing j",
      "code": "for ( int j = 0 ; j < i ; j ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if s [ j + 1 ] - s [ j ] = 1",
      "code": "if ( s [ j + 1 ] - s [ j ] == 1 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "assign s [ j ] to c [ l ]",
      "code": "c [ l ] = s [ j ] ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increment l",
      "code": "l ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "assign j + 1 to j",
      "code": "j = j + 1 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "assign the new value = s [ j ] to c [ l ]",
      "code": "c [ l ] = s [ j ] ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "increment l by one",
      "code": "l ++ ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "create integer p with value 0",
      "code": "int p = 0 ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if l > = k",
      "code": "if ( l >= k )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "for j from 0 to k exclusive , assign c [ j ] - 96 + p to p",
      "code": "for ( int j = 0 ; j < k ; j ++ ) p = c [ j ] - 96 + p ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print p",
      "code": "cout << p << endl ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "v [ i ] *= it ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "set < string > v ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(char&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < char > :: iterator a ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char a’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "set < char > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> a )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "v . push_back ( a ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<char>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "v [ i ++ ] = v [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "l = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "else if ( l >= k )"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( int j = 0 ; j < k ; j ++ ) { p + p [ j ] - 96 + p ; }"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "cin >> a )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        7,
        8
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "cin >> a )",
        "v . push_back ( a ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        7,
        8,
        4
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "cin >> a )",
        "v . push_back ( a ) ;",
        "set < char > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        7,
        8,
        16
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "cin >> a )",
        "v . push_back ( a ) ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        7,
        4
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "cin >> a )",
        "set < char > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        7,
        4,
        16
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "cin >> a )",
        "set < char > a ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        7,
        16
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "cin >> a )",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "v . push_back ( a ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<char>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        12,
        8,
        4
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "v . push_back ( a ) ;",
        "set < char > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        8,
        4,
        16
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "v . push_back ( a ) ;",
        "set < char > a ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        8,
        16
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "v . push_back ( a ) ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<char>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "set < char > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        4,
        16
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "set < char > a ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "v [ i ] *= it ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "cin >> a )",
        "v . push_back ( a ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "cin >> a )",
        "v . push_back ( a ) ;",
        "set < char > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        7,
        8,
        4,
        12
      ],
      "mod_code": [
        "cin >> a )",
        "v . push_back ( a ) ;",
        "set < char > a ;",
        "v [ i ++ ] = v [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        7,
        8,
        4,
        16
      ],
      "mod_code": [
        "cin >> a )",
        "v . push_back ( a ) ;",
        "set < char > a ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        7,
        8,
        12
      ],
      "mod_code": [
        "cin >> a )",
        "v . push_back ( a ) ;",
        "v [ i ++ ] = v [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        16
      ],
      "mod_code": [
        "cin >> a )",
        "v . push_back ( a ) ;",
        "v [ i ++ ] = v [ i ] ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16
      ],
      "mod_code": [
        "cin >> a )",
        "v . push_back ( a ) ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "cin >> a )",
        "set < char > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        7,
        4,
        12
      ],
      "mod_code": [
        "cin >> a )",
        "set < char > a ;",
        "v [ i ++ ] = v [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        7,
        4,
        12,
        16
      ],
      "mod_code": [
        "cin >> a )",
        "set < char > a ;",
        "v [ i ++ ] = v [ i ] ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        7,
        4,
        16
      ],
      "mod_code": [
        "cin >> a )",
        "set < char > a ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "cin >> a )",
        "v [ i ++ ] = v [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        12,
        16
      ],
      "mod_code": [
        "cin >> a )",
        "v [ i ++ ] = v [ i ] ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "cin >> a )",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "v . push_back ( a ) ;",
        "set < char > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8,
        4,
        12
      ],
      "mod_code": [
        "v . push_back ( a ) ;",
        "set < char > a ;",
        "v [ i ++ ] = v [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8,
        4,
        12,
        16
      ],
      "mod_code": [
        "v . push_back ( a ) ;",
        "set < char > a ;",
        "v [ i ++ ] = v [ i ] ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8,
        4,
        16
      ],
      "mod_code": [
        "v . push_back ( a ) ;",
        "set < char > a ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "v . push_back ( a ) ;",
        "v [ i ++ ] = v [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<char>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        8,
        12,
        16
      ],
      "mod_code": [
        "v . push_back ( a ) ;",
        "v [ i ++ ] = v [ i ] ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<char>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "v . push_back ( a ) ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<char>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "set < char > a ;",
        "v [ i ++ ] = v [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4,
        12,
        16
      ],
      "mod_code": [
        "set < char > a ;",
        "v [ i ++ ] = v [ i ] ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "set < char > a ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "v [ i ++ ] = v [ i ] ;",
        "if ( ! s [ j + 1 ] - s [ j ] )"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<char>’ and ‘int’)"
    }
  ]
}