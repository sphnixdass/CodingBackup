{
  "meta": {
    "index": 403,
    "hitid": "3NSCTNUR2ZH07PJXGCIHXTV6BXDA51",
    "workerid": "A1APYLD4DUK33J",
    "probid": "813A",
    "subid": "48583369"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long long suma",
      "code": "long long suma ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , m , aux , auxl , auxr",
      "code": "int n , m , aux , auxl , auxr ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare boolean sinoutput = true",
      "code": "bool sinoutput = true ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read aux",
      "code": "cin >> aux ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment suma by aux",
      "code": "suma += aux ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read auxl , auxr",
      "code": "cin >> auxl >> auxr ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if sinoutput and suma is less than or equal to auxl",
      "code": "if ( sinoutput && suma <= auxl )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print auxl , ' \\ n '",
      "code": "cout << auxl << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "let sinoutput be false",
      "code": "sinoutput = false ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if sinoutput and auxl is less than or equal to suma and suma is less than or equal to auxr",
      "code": "else if ( sinoutput && auxl <= suma && suma <= auxr )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print suma , ' \\ n '",
      "code": "cout << suma << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "let sinoutput be false",
      "code": "sinoutput = false ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if sinoutput is true , print \" - 1 \\ n \"",
      "code": "if ( sinoutput ) { cout << \" -1\\n \" ; }",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "sinoutput = true ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "gets ( m ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        2
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "sinoutput = true ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        15,
        2,
        10
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "sinoutput = true ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        15,
        2,
        11
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "sinoutput = true ;",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        15,
        10
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        10,
        11
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "sinoutput = true ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        2,
        15
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "sinoutput = true ;",
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        2,
        15,
        10
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "sinoutput = true ;",
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        2,
        15,
        11
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "sinoutput = true ;",
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        2,
        10
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "sinoutput = true ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        2,
        10,
        11
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "sinoutput = true ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        2,
        11
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "sinoutput = true ;",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        12,
        15,
        10
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        10,
        11
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        11
      ],
      "mod_code": [
        "if ( sinoutput <= auxl && suma <= auxl )",
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "sinoutput = true ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        15,
        2,
        10
      ],
      "mod_code": [
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "sinoutput = true ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        15,
        2,
        10,
        11
      ],
      "mod_code": [
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "sinoutput = true ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        15,
        2,
        11
      ],
      "mod_code": [
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "sinoutput = true ;",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        10,
        11
      ],
      "mod_code": [
        "else if ( sinoutput <= suma && auxl <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "sinoutput = true ;",
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        2,
        15,
        10
      ],
      "mod_code": [
        "sinoutput = true ;",
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        2,
        15,
        10,
        11
      ],
      "mod_code": [
        "sinoutput = true ;",
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        2,
        15,
        11
      ],
      "mod_code": [
        "sinoutput = true ;",
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "sinoutput = true ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        2,
        10,
        11
      ],
      "mod_code": [
        "sinoutput = true ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "sinoutput = true ;",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 2,
      "err_msg": "‘sinoutput’ does not name a type"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        10,
        11
      ],
      "mod_code": [
        "else if ( sinoutput <= suma && suma <= auxr && suma <= auxr )",
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "cin >> auxl >> auxl ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}