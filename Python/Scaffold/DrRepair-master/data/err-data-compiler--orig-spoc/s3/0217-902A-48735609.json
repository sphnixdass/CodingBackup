{
  "meta": {
    "index": 217,
    "hitid": "3UQ1LLR26A2E9EMI8ZYOEIR3XNGLA3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "902A",
    "subid": "48735609"
  },
  "lines": [
    {
      "line": 0,
      "text": "getint is an inlined integer function",
      "code": "inline int getint ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare ints r = 0 and k = 1",
      "code": "int r = 0 , k = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "defin new char c with value from the input",
      "code": "char c = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read char from the input into c , while c is not a digit character",
      "code": "for ( ; c < ' 0 ' || c > ' 9 ' ; c = getchar ( ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if c = ' - ' , change k to - 1",
      "code": "if ( c == ' - ' ) k = - 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "while is a digit character , read new value for the c from the input , then change r to r * 10 + c - ' 0 '",
      "code": "for ( ; c >= ' 0 ' && c <= ' 9 ' ; c = getchar ( ) ) r = r * 10 + c - ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return r * k",
      "code": "return r * k ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 9,
      "text": "new integer n with value from getint ( )",
      "code": "int n = getint ( ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "m is a new integer with value from getint ( )",
      "code": "int m = getint ( ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "define new integer maxx with value 0",
      "code": "int maxx = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "in a for loop , change i from 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "declare integer variable with name x = result of getint ( )",
      "code": "int x = getint ( ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "y is a new integer = value , returned from getint ( )",
      "code": "int y = getint ( ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if maxx > = x , change maxx to max of maxx and y",
      "code": "if ( maxx >= x ) maxx = max ( maxx , y ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if maxx > = m",
      "code": "if ( maxx >= m )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" YES \" to standard output",
      "code": "puts ( \" YES \" ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" NO \" to stdout",
      "code": "puts ( \" NO \" ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void getint ( )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char c = input ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) r = r * 10 + c - ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int n = max ( getint ( ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "m = getint ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long maxx = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘max(long long int&, int&)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "y = getint ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else if ( maxx >= m )"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        10
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        10,
        2
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;",
        "char c = input ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        10,
        0
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;",
        "void getint ( )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        10,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;",
        "y = getint ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "char c = input ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        0
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "char c = input ;",
        "void getint ( )"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "char c = input ;",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        0
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "void getint ( )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        0,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "y = getint ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "while ( cin >> c )",
        "m = getint ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "while ( cin >> c )",
        "m = getint ( ) ;",
        "char c = input ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2,
        0
      ],
      "mod_code": [
        "while ( cin >> c )",
        "m = getint ( ) ;",
        "char c = input ;",
        "void getint ( )"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "m = getint ( ) ;",
        "char c = input ;",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        0
      ],
      "mod_code": [
        "while ( cin >> c )",
        "m = getint ( ) ;",
        "void getint ( )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        0,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "m = getint ( ) ;",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "m = getint ( ) ;",
        "y = getint ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( cin >> c )",
        "char c = input ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        0
      ],
      "mod_code": [
        "while ( cin >> c )",
        "char c = input ;",
        "void getint ( )"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        0,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "char c = input ;",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "char c = input ;",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "while ( cin >> c )",
        "void getint ( )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        0,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "while ( cin >> c )",
        "y = getint ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        10,
        2
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;",
        "char c = input ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        2,
        0
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;",
        "char c = input ;",
        "void getint ( )"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        2,
        14
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;",
        "char c = input ;",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        0
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;",
        "void getint ( )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        10,
        0,
        14
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        10,
        14
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "m = getint ( ) ;",
        "y = getint ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "char c = input ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        0
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "char c = input ;",
        "void getint ( )"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        0,
        14
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "char c = input ;",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        14
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "char c = input ;",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "void getint ( )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        0,
        14
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "while ( cin <= getchar ( ) ) { r = r * 10 + c - ' 0 ' ; }",
        "y = getint ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "m = getint ( ) ;",
        "char c = input ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        0
      ],
      "mod_code": [
        "m = getint ( ) ;",
        "char c = input ;",
        "void getint ( )"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        0,
        14
      ],
      "mod_code": [
        "m = getint ( ) ;",
        "char c = input ;",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        14
      ],
      "mod_code": [
        "m = getint ( ) ;",
        "char c = input ;",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "m = getint ( ) ;",
        "void getint ( )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0,
        14
      ],
      "mod_code": [
        "m = getint ( ) ;",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "m = getint ( ) ;",
        "y = getint ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "char c = input ;",
        "void getint ( )"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        0,
        14
      ],
      "mod_code": [
        "char c = input ;",
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "char c = input ;",
        "y = getint ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "void getint ( )",
        "y = getint ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    }
  ]
}