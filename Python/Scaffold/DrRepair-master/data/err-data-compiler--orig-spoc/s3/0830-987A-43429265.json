{
  "meta": {
    "index": 830,
    "hitid": "3IH9TRB0FBTGPP1CRD8IB168CPG1IH",
    "workerid": "A1APYLD4DUK33J",
    "probid": "987A",
    "subid": "43429265"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare map from string to boolean f",
      "code": "map < string , bool > f ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare string p",
      "code": "string p ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer ans = 6",
      "code": "int ans = 6 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while decrement n is true",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if not f [ p ] , decrement ans",
      "code": "if ( ! f [ p ] ) ans -- ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let f [ p ] be 1",
      "code": "f [ p ] = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if not f [ \" purple \" ] print \" Power \" , newline",
      "code": "if ( ! f [ \" purple \" ] ) cout << \" Power \" << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if not f [ \" green \" ] print \" Time \" , newline",
      "code": "if ( ! f [ \" green \" ] ) cout << \" Time \" << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if not f [ \" blue \" ] print \" Space \" , newline",
      "code": "if ( ! f [ \" blue \" ] ) cout << \" Space \" << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if not f [ \" orange \" ] print \" Soul \" , newline",
      "code": "if ( ! f [ \" orange \" ] ) cout << \" Soul \" << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if not f [ \" red \" ] print \" Reality \" , newline",
      "code": "if ( ! f [ \" red \" ] ) cout << \" Reality \" << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if not f [ \" yellow \" ] print \" Mind \" , newline",
      "code": "if ( ! f [ \" yellow \" ] ) cout << \" Mind \" << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < string , bool f ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool p ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, bool>’ and ‘bool’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( p ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, bool>’ and ‘bool’)"
    },
    {
      "mod_line": [
        15,
        4,
        2
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        4,
        2,
        6
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "cin >> N ;",
        "while ( -- -- )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        4,
        2,
        8
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "cin >> N ;",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        4,
        2,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "cin >> N ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        4,
        6
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        4,
        6,
        8
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        4,
        6,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "while ( -- -- )",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        4,
        8
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, bool>’ and ‘bool’)"
    },
    {
      "mod_line": [
        15,
        4,
        8,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        4,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "bool p ;",
        "gets ( p ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        6
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "cin >> N ;",
        "while ( -- -- )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        6,
        8
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "cin >> N ;",
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        6,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "cin >> N ;",
        "while ( -- -- )",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        8
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "cin >> N ;",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        8,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "cin >> N ;",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "cin >> N ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        6,
        8
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        6,
        8,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        6,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "while ( -- -- )",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        8,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "if ( ! f [ \" orange \" ] ) cout << \" Soul \" ;",
        "gets ( p ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "bool p ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "bool p ;",
        "cin >> N ;",
        "while ( -- -- )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        6,
        8
      ],
      "mod_code": [
        "bool p ;",
        "cin >> N ;",
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        6,
        7
      ],
      "mod_code": [
        "bool p ;",
        "cin >> N ;",
        "while ( -- -- )",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "bool p ;",
        "cin >> N ;",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        8,
        7
      ],
      "mod_code": [
        "bool p ;",
        "cin >> N ;",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "bool p ;",
        "cin >> N ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "bool p ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "bool p ;",
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        7
      ],
      "mod_code": [
        "bool p ;",
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "bool p ;",
        "while ( -- -- )",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "bool p ;",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, bool>’ and ‘bool’)"
    },
    {
      "mod_line": [
        4,
        8,
        7
      ],
      "mod_code": [
        "bool p ;",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "bool p ;",
        "gets ( p ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> N ;",
        "while ( -- -- )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        7
      ],
      "mod_code": [
        "cin >> N ;",
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        7
      ],
      "mod_code": [
        "cin >> N ;",
        "while ( -- -- )",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        7
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8,
        7
      ],
      "mod_code": [
        "while ( -- -- )",
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "while ( -- -- )",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( ! f [ p ] ) ans ++ ;",
        "gets ( p ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}