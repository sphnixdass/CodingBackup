{
  "meta": {
    "index": 2765,
    "hitid": "360ZO6N6J1DKADUYG5L3I0V8RAP9MF",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "454A",
    "subid": "46977020"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "mid = integer with mid = ( n + 1 ) / 2",
      "code": "int mid = ( n + 1 ) / 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 1 to abs ( mid - i ) , print *",
      "code": "for ( int j = 1 ; j <= abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 1 to ( n - 2 * ( abs ( mid - i ) ) ) , print D",
      "code": "for ( int j = 1 ; j <= ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) { cout << \" D \" ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 1 to abs ( mid - i ) , print *",
      "code": "for ( int j = 1 ; j <= abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j * ( n - 2 ) ) * ( abs ( mid - i ) ) ; ++ ' ) cout << \" D \" ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = 1 , ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) cout << \" D \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘-’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 ; j * ( n - 2 ) ) * ( abs ( mid - i ) ) ; ++ ' ) cout << \" D \" ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 ; j * ( n - 2 ) ) * ( abs ( mid - i ) ) ; ++ ' ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 ; j * ( n - 2 ) ) * ( abs ( mid - i ) ) ; ++ ' ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 , ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) cout << \" D \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘-’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 , ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) cout << \" D \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘-’ token"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 , ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘-’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j * ( n - 2 ) ) * ( abs ( mid - i ) ) ; ++ ' ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j * ( n - 2 ) ) * ( abs ( mid - i ) ) ; ++ ' ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j * ( n - 2 ) ) * ( abs ( mid - i ) ) ; ++ ' ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        5,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j * ( n - 2 ) ) * ( abs ( mid - i ) ) ; ++ ' ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j * ( n - 2 ) ) * ( abs ( mid - i ) ) ; ++ ' ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 , ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) cout << \" D \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘-’ token"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) cout << \" * \" ;",
        "for ( int j = 1 , ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘-’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int j = 1 , ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘-’ token"
    },
    {
      "mod_line": [
        6,
        5,
        7
      ],
      "mod_code": [
        "for ( int j = 1 , ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘-’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( int j = 1 , ( n - 2 * ( abs ( mid - i ) ) ) ; j ++ ) cout << \" D \" ;",
        "for ( int j = 1 ; j < abs ( mid - i ) ; j ++ ) { cout << \" * \" ; }"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘-’ token"
    }
  ]
}