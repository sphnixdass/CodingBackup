{
  "meta": {
    "index": 339,
    "hitid": "302OLP89DZ1L6ASCVM5PBZ1G3E1ACB",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "339A",
    "subid": "42207821"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int i",
      "code": "int i ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare allAreSame taking in string S and returning bool",
      "code": "bool allAreSame ( string S )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create bool flag = true",
      "code": "bool flag = true ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set i to 1",
      "code": "i = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while S [ i ] is truthy",
      "code": "while ( S [ i ] )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if S [ i ] is equal to ' + '",
      "code": "if ( S [ i ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if S [ 0 ] is equal to S [ i ]",
      "code": "else if ( S [ 0 ] == S [ i ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "add 1 to i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set flag to false",
      "code": "flag = false ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "return flag",
      "code": "return flag ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return flag",
      "code": "return flag ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "declare printString taking in string S",
      "code": "void printString ( string S )",
      "indent": 0
    },
    {
      "line": 17,
      "text": "print S [ 0 ]",
      "code": "cout << S [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set i to 1",
      "code": "i = 1 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "while S [ i ] is truthy",
      "code": "while ( S [ i ] )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if S [ i ] is not equal to ' + ' , print \" + \"",
      "code": "if ( S [ i ] != ' + ' ) { cout << \" + \" << S [ i ] ; }",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 26,
      "text": "create strings S , S1 = \" \" , S2 = \" \" , and S3 = \" \"",
      "code": "string S , S1 = \" \" , S2 = \" \" , S3 = \" \" ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "read S",
      "code": "cin >> S ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if S . length ( ) is equal to 1",
      "code": "if ( S . length ( ) == 1 )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print S",
      "code": "cout << S << endl ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "if allAreSame ( S ) returns truthy",
      "code": "if ( allAreSame ( S ) )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "call printString ( S )",
      "code": "printString ( S ) ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "for i = 0 to S . length ( ) exclusive",
      "code": "for ( i = 0 ; i < S . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 37,
      "text": "if S [ i ] is equal to ' 1 '",
      "code": "if ( S [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 38,
      "text": "set S1 to S1 + S [ i ]",
      "code": "S1 += S [ i ] ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "else if S [ i ] is equal to ' 2 '",
      "code": "else if ( S [ i ] == ' 2 ' )",
      "indent": 2
    },
    {
      "line": 40,
      "text": "set S2 to S2 + S [ i ]",
      "code": "S2 += S [ i ] ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "else if S [ i ] equals ' 3 '",
      "code": "else if ( S [ i ] == ' 3 ' )",
      "indent": 2
    },
    {
      "line": 42,
      "text": "add S [ i ] to S3",
      "code": "S3 += S [ i ] ;",
      "indent": 3
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 44,
      "text": "set i to 0",
      "code": "i = 0 ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "while S1 [ i ] is truthy",
      "code": "while ( S1 [ i ] )",
      "indent": 1
    },
    {
      "line": 46,
      "text": "print S1 [ i ]",
      "code": "cout << S1 [ i ] ;",
      "indent": 2
    },
    {
      "line": 47,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 48,
      "text": "if S1 [ i ] is truthy , print \" + \"",
      "code": "if ( S1 [ i ] ) cout << \" + \" ;",
      "indent": 2
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 50,
      "text": "set i to 0",
      "code": "i = 0 ;",
      "indent": 1
    },
    {
      "line": 51,
      "text": "while S2 [ i ] is truthy",
      "code": "while ( S2 [ i ] )",
      "indent": 1
    },
    {
      "line": 52,
      "text": "if S1 [ 0 ] is equal to ' 1 '",
      "code": "if ( S1 [ 0 ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 53,
      "text": "print \" + \" and S2 [ i ]",
      "code": "cout << \" + \" << S2 [ i ] ;",
      "indent": 3
    },
    {
      "line": 54,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 55,
      "text": "print S2 [ i ]",
      "code": "cout << S2 [ i ] ;",
      "indent": 3
    },
    {
      "line": 56,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 57,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 58,
      "text": "set i to 0",
      "code": "i = 0 ;",
      "indent": 1
    },
    {
      "line": 59,
      "text": "while S3 [ i ] is truthy",
      "code": "while ( S3 [ i ] )",
      "indent": 1
    },
    {
      "line": 60,
      "text": "if S1 [ 0 ] is equal to ' 1 ' or S2 [ 0 ] is equal to ' 2 '",
      "code": "if ( S1 [ 0 ] == ' 1 ' || S2 [ 0 ] == ' 2 ' )",
      "indent": 2
    },
    {
      "line": 61,
      "text": "print \" + \" and S3 [ i ]",
      "code": "cout << \" + \" << S3 [ i ] ;",
      "indent": 3
    },
    {
      "line": 62,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 63,
      "text": "print S3 [ i ]",
      "code": "cout << S3 [ i ] ;",
      "indent": 3
    },
    {
      "line": 64,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 65,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 66,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 67,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 68,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "void printString ( S ) ;"
      ],
      "err_line": 33,
      "err_msg": "variable or field ‘printString’ declared void"
    },
    {
      "mod_line": [
        54
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 56,
      "err_msg": "expected ‘while’ before ‘i’"
    },
    {
      "mod_line": [
        62
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 64,
      "err_msg": "expected ‘while’ before ‘i’"
    },
    {
      "mod_line": [
        26,
        29
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        46
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "cout << S1 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        53
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "cout << S1 [ i ] << endl ;",
        "cout << \" + \" << S2 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        61
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "cout << S1 [ i ] << endl ;",
        "cout << \" + \" << S3 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "cout << S1 [ i ] << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        53
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "cout << \" + \" << S2 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        53,
        61
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "cout << \" + \" << S2 [ i ] << endl ;",
        "cout << \" + \" << S3 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        53,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "cout << \" + \" << S2 [ i ] << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        61
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "cout << \" + \" << S3 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        61,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "cout << \" + \" << S3 [ i ] << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" S \" << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        46
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << S1 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        46,
        53
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << S1 [ i ] << endl ;",
        "cout << \" + \" << S2 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        46,
        53,
        61
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << S1 [ i ] << endl ;",
        "cout << \" + \" << S2 [ i ] << endl ;",
        "cout << \" + \" << S3 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        46,
        53,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << S1 [ i ] << endl ;",
        "cout << \" + \" << S2 [ i ] << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        46,
        61
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << S1 [ i ] << endl ;",
        "cout << \" + \" << S3 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        46,
        61,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << S1 [ i ] << endl ;",
        "cout << \" + \" << S3 [ i ] << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        46,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << S1 [ i ] << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        53
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" + \" << S2 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        53,
        61
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" + \" << S2 [ i ] << endl ;",
        "cout << \" + \" << S3 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        53,
        61,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" + \" << S2 [ i ] << endl ;",
        "cout << \" + \" << S3 [ i ] << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        53,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" + \" << S2 [ i ] << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        61
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" + \" << S3 [ i ] << endl ;"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        61,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "cout << \" + \" << S3 [ i ] << endl ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        60
      ],
      "mod_code": [
        "string S , S1 = \" \" , S2 = \" \" ;",
        "if ( S1 [ 0 ] == ' 1 ' && S2 [ 0 ] == ' 2 ' )"
      ],
      "err_line": 42,
      "err_msg": "‘S3’ was not declared in this scope"
    }
  ]
}