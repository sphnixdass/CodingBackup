{
  "meta": {
    "index": 2200,
    "hitid": "329E6HTMSWW35N5FEK7DCA0I2DGK30",
    "workerid": "AIWEXPJAU66D9",
    "probid": "350A",
    "subid": "40634853"
  },
  "lines": [
    {
      "line": 0,
      "text": "a is an array of long longs with size 100005",
      "code": "long long a [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long long variables n , m , i , j , x , y , z , p , q and d",
      "code": "long long n , m , i , j , x , y , z , p , q , d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m from the input",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set x to 0",
      "code": "x = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign 12345678 to y and z",
      "code": "y = z = 12345678 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "start for loop from i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "assign min of y and p to y",
      "code": "y = min ( y , p ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "assign max of x and p to x",
      "code": "x = max ( x , p ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "in a for loop , change i from 0 to m exclusive incrementing i",
      "code": "for ( i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read input to p",
      "code": "cin >> p ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "change z to min of z and p",
      "code": "z = min ( z , p ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "decrement z by one",
      "code": "z -- ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "assign 2 * y to y",
      "code": "y = 2 * y ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "change y to max of y and x",
      "code": "y = max ( y , x ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if y < = z",
      "code": "if ( y <= z )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print y to the standard output",
      "code": "cout << y << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" - 1 \" to the standard output",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long n , m , i , j , x , y , p , p , q , d ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int x = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( p ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int y = min ( y , p ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "x = max ( x and p ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "z = min ( z and p ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int y = 2 * y ;"
      ],
      "err_line": 16,
      "err_msg": "conflicting declaration ‘int y’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "y = max ( y and x ) ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else if ( y <= z )"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        7,
        16
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "gets ( p ) ;",
        "int y = 2 * y ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        4
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "gets ( p ) ;",
        "int y = 2 * y ;",
        "int x = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        9
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "gets ( p ) ;",
        "int y = 2 * y ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "gets ( p ) ;",
        "int x = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        5,
        7,
        4,
        9
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "gets ( p ) ;",
        "int x = 0 ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "gets ( p ) ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "int y = 2 * y ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        16,
        4
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "int y = 2 * y ;",
        "int x = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        5,
        16,
        4,
        9
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "int y = 2 * y ;",
        "int x = 0 ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        5,
        16,
        9
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "int y = 2 * y ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "int x = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        5,
        4,
        9
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "int x = 0 ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "y = 12345678 = 12345678 ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int y = 2 * y ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        16,
        4
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int y = 2 * y ;",
        "int x = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        7,
        16,
        4,
        9
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int y = 2 * y ;",
        "int x = 0 ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        7,
        16,
        4,
        5
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int y = 2 * y ;",
        "int x = 0 ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        7,
        16,
        9
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int y = 2 * y ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        16,
        9,
        5
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int y = 2 * y ;",
        "x = max ( x and p ) ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        16,
        5
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int y = 2 * y ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int x = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        7,
        4,
        9
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int x = 0 ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        7,
        4,
        9,
        5
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int x = 0 ;",
        "x = max ( x and p ) ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "gets ( p ) ;",
        "int x = 0 ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "gets ( p ) ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "gets ( p ) ;",
        "x = max ( x and p ) ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "gets ( p ) ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "int y = 2 * y ;",
        "int x = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        16,
        4,
        9
      ],
      "mod_code": [
        "int y = 2 * y ;",
        "int x = 0 ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        16,
        4,
        9,
        5
      ],
      "mod_code": [
        "int y = 2 * y ;",
        "int x = 0 ;",
        "x = max ( x and p ) ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        16,
        4,
        5
      ],
      "mod_code": [
        "int y = 2 * y ;",
        "int x = 0 ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "int y = 2 * y ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        16,
        9,
        5
      ],
      "mod_code": [
        "int y = 2 * y ;",
        "x = max ( x and p ) ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "int y = 2 * y ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "int x = 0 ;",
        "x = max ( x and p ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        4,
        9,
        5
      ],
      "mod_code": [
        "int x = 0 ;",
        "x = max ( x and p ) ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int x = 0 ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "x = max ( x and p ) ;",
        "y = 12345678 ( y , z ) ;"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    }
  ]
}