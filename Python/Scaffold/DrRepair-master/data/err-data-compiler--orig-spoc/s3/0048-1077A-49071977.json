{
  "meta": {
    "index": 48,
    "hitid": "3BVS8WK9Q0PH2NJ4TA17HDJHY17IBH",
    "workerid": "A1XZJAF9DYWJ5G",
    "probid": "1077A",
    "subid": "49071977"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "t = integer",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while t is greater than 0 , decrement t then",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let a , b , k = long long integers",
      "code": "long long a , b , k ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read a , b , k",
      "code": "cin >> a >> b >> k ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a is equal to b",
      "code": "if ( a == b )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if k modulo 2 is equal to 0",
      "code": "if ( k % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "otherwise",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print a",
      "code": "cout << a << endl ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if k modulo 2 is equal to 0",
      "code": "if ( k % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print ( k / 2 ) * a - ( k / 2 ) * b",
      "code": "cout << ( k / 2 ) * a - ( k / 2 ) * b << endl ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "otherwise",
      "code": "else",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print ( ( k / 2 ) + 1 ) * a - ( k / 2 ) * b",
      "code": "cout << ( ( k / 2 ) + 1 ) * a - ( k / 2 ) * b << endl ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "return else ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "return else ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "cout << a ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        11
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "cout << a ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        14
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "cout << a ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "cout << a ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        14
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "return else ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9,
        14
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << a ;",
        "return else ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        14
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << a ;",
        "return else ;",
        "return else ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << a ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        14
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << a ;",
        "return else ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        10,
        14,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << a ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << a ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "return else ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        11,
        14,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        14,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( t > 0 )",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "return else ;",
        "cout << a ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "return else ;",
        "cout << a ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        14
      ],
      "mod_code": [
        "return else ;",
        "cout << a ;",
        "return else ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        2
      ],
      "mod_code": [
        "return else ;",
        "cout << a ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        14
      ],
      "mod_code": [
        "return else ;",
        "cout << a ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        2
      ],
      "mod_code": [
        "return else ;",
        "cout << a ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        2
      ],
      "mod_code": [
        "return else ;",
        "cout << a ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "return else ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "return else ;",
        "return else ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        2
      ],
      "mod_code": [
        "return else ;",
        "return else ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "return else ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "return else ;",
        "return else ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        2
      ],
      "mod_code": [
        "return else ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << a ;",
        "return else ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << a ;",
        "return else ;",
        "return else ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        2
      ],
      "mod_code": [
        "cout << a ;",
        "return else ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        2
      ],
      "mod_code": [
        "cout << a ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "cout << a ;",
        "return else ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        14,
        2
      ],
      "mod_code": [
        "cout << a ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << a ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "return else ;",
        "return else ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        14,
        2
      ],
      "mod_code": [
        "return else ;",
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "return else ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}