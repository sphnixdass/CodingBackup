{
  "meta": {
    "index": 1946,
    "hitid": "35F6NGNVM8DK9PWPA5OVQIZUP5YT7E",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "899A",
    "subid": "46706445"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = array of 200005 integers",
      "code": "int a [ 200005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Read n values into array a",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "c , b = integers , both set to 0",
      "code": "int c = 0 , b = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a [ i ] is equal to 1",
      "code": "if ( a [ i ] == 1 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set c to c + 1",
      "code": "c = c + 1 ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set b to b + 1",
      "code": "b = b + 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if c is greater than or equal to b",
      "code": "if ( c >= b )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print b + ( c - b ) / 3 and a new line",
      "code": "cout << b + ( c - b ) / 3 << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print c and a new line",
      "code": "cout << c << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        6,
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "while ( n >> n )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "while ( n >> n )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        3,
        15,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "while ( n >> n )",
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        15,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        4,
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "while ( n >> n )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        4,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        4,
        15,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "while ( n >> n )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        3,
        15,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "while ( n >> n )",
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "while ( n >> n )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        3,
        15,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "while ( n >> n )",
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        15,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "while ( n >> n )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        15,
        13
      ],
      "mod_code": [
        "while ( n >> n )",
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "do",
        "if ( c <= b )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}