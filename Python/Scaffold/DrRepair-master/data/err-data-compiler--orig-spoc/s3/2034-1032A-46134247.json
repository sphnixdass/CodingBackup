{
  "meta": {
    "index": 2034,
    "hitid": "3QD8LUVX4XSC32RQRMAVH164BVR5XU",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "1032A",
    "subid": "46134247"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int array a of length 110",
      "code": "int a [ 110 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set Max = 0",
      "code": "int Max = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign 0 to num",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create int m",
      "code": "int m ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment a [ m ]",
      "code": "a [ m ] ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if a [ m ] = 1 , increment num",
      "code": "if ( a [ m ] == 1 ) num ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if a [ m ] > Max , set Max to a [ m ]",
      "code": "if ( a [ m ] > Max ) Max = a [ m ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if Max mod k = 0",
      "code": "if ( Max % k == 0 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print Max * num - n",
      "code": "cout << Max * num - n << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "otherwise",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ( Max / k + 1 ) * num * k - n and a new line",
      "code": "cout << ( Max / k + 1 ) * num * k - n << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "num = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int s [ 110 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n >> k )"
      ],
      "err_line": 11,
      "err_msg": "‘Max’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "Max = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘Max’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "gets ( m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "return else ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        0
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "int s [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        0,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        0,
        10
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "int s [ 110 ] ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        0,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "int s [ 110 ] ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        10
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "while ( cin >> n >> k )",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "gets ( m ) ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "num = 0 ;",
        "int s [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        3,
        10
      ],
      "mod_code": [
        "num = 0 ;",
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        3,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        5,
        0,
        10
      ],
      "mod_code": [
        "num = 0 ;",
        "int s [ 110 ] ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        10,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "int s [ 110 ] ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        5,
        0,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "int s [ 110 ] ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        10
      ],
      "mod_code": [
        "num = 0 ;",
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        10,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "while ( cin >> n >> k )",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "num = 0 ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "num = 0 ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int s [ 110 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        0,
        3
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        0,
        3,
        10
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        0,
        3,
        2
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        8,
        0,
        10
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int s [ 110 ] ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        0,
        10,
        2
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int s [ 110 ] ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        8,
        0,
        2
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int s [ 110 ] ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "gets ( m ) ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3,
        10
      ],
      "mod_code": [
        "gets ( m ) ;",
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3,
        10,
        2
      ],
      "mod_code": [
        "gets ( m ) ;",
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        8,
        3,
        2
      ],
      "mod_code": [
        "gets ( m ) ;",
        "while ( cin >> n >> k )",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "gets ( m ) ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10,
        2
      ],
      "mod_code": [
        "gets ( m ) ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        10
      ],
      "mod_code": [
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        10,
        2
      ],
      "mod_code": [
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        0,
        3,
        2
      ],
      "mod_code": [
        "int s [ 110 ] ;",
        "while ( cin >> n >> k )",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int s [ 110 ] ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        10,
        2
      ],
      "mod_code": [
        "int s [ 110 ] ;",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int s [ 110 ] ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;"
      ],
      "err_line": 11,
      "err_msg": "‘Max’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "while ( cin >> n >> k )",
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( cin >> n >> k )",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘while’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( a [ m ] == ' 1 ' ) num ++ ;",
        "int n , k"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘cin’"
    }
  ]
}