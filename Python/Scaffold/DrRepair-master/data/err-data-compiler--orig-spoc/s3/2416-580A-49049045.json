{
  "meta": {
    "index": 2416,
    "hitid": "3E9ZFLPWOYMOFQM5Y6TP6AA9H4UIXP",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "580A",
    "subid": "49049045"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let arr be a long long array of length n + 2",
      "code": "long long arr [ n + 2 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read the first n elements of arr",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let size = 1 , maxSize = INT_MIN , prev = arr [ 0 ] be long long",
      "code": "long long size = 1 , maxSize = INT_MIN , prev = arr [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if arr at i > = prev",
      "code": "if ( arr [ i ] >= prev )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment size",
      "code": "++ size ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set prev to arr at i",
      "code": "prev = arr [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set maxSize to the maximum between maxSize and size",
      "code": "maxSize = max ( maxSize , size ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set prev to arr at i",
      "code": "prev = arr [ i ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set size to 1",
      "code": "size = 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set maxSize to the max between maxSize and size",
      "code": "maxSize = max ( maxSize , size ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print maxSize",
      "code": "cout << maxSize << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long size ( 1 , maxSize = INT_MIN , prev = arr [ 0 ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘maxSize’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "size . push_back ( size ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘push_back’ in ‘size’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "maxSize = max ( maxSize , size ( ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        10
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        10,
        13
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do",
        "int size = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        10,
        1
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        10,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        13
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int size = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        13,
        1
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int size = 1 ;",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        13,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int size = 1 ;",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        1
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        1,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "char n ;",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        6,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        10,
        13
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "do",
        "int size = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        10,
        13,
        1
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "do",
        "int size = 1 ;",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        10,
        13,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "do",
        "int size = 1 ;",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        10,
        1
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "do",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        10,
        1,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "do",
        "char n ;",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        10,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "do",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "int size = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        13,
        1
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "int size = 1 ;",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        13,
        1,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "int size = 1 ;",
        "char n ;",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        13,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "int size = 1 ;",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        1,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "char n ;",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "max ( maxSize , size ( ) ) ;",
        "prev *= i ;"
      ],
      "err_line": 11,
      "err_msg": "‘size’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        10,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do",
        "int size = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do",
        "int size = 1 ;",
        "char n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do",
        "int size = 1 ;",
        "prev *= i ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        10,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do",
        "char n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        10,
        1,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do",
        "char n ;",
        "prev *= i ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "do",
        "prev *= i ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "do",
        "int size = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        13,
        1
      ],
      "mod_code": [
        "do",
        "int size = 1 ;",
        "char n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        13,
        1,
        12
      ],
      "mod_code": [
        "do",
        "int size = 1 ;",
        "char n ;",
        "prev *= i ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        13,
        12
      ],
      "mod_code": [
        "do",
        "int size = 1 ;",
        "prev *= i ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "do",
        "char n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        1,
        12
      ],
      "mod_code": [
        "do",
        "char n ;",
        "prev *= i ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "do",
        "prev *= i ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}