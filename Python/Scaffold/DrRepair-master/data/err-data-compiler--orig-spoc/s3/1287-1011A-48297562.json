{
  "meta": {
    "index": 1287,
    "hitid": "3RWB1RTQDJHQHB813T7HZ8USC9GP80",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1011A",
    "subid": "48297562"
  },
  "lines": [
    {
      "line": 0,
      "text": "N , K = int and A = int array of size 55",
      "code": "int N , K , A [ 55 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "str = string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read N then K then str",
      "code": "cin >> N >> K >> str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to N - 1 inclusive set A [ i ] to str [ i ] - ' a ' + 1",
      "code": "for ( int i = 0 ; i <= N - 1 ; i ++ ) A [ i ] = str [ i ] - ' a ' + 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sort A from index 0 to N",
      "code": "sort ( A , A + N ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "Last , cnt , Tot = int with Last = - 2 and cnt = 0 and Tot = 0",
      "code": "int Last = - 2 , cnt = 0 , Tot = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to N - 1 inclusive",
      "code": "for ( int i = 0 ; i <= N - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if A [ i ] - Last > = 2 and cnt < K",
      "code": "if ( A [ i ] - Last >= 2 && cnt < K )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set Last to A [ i ]",
      "code": "Last = A [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment Tot by A [ i ]",
      "code": "Tot += A [ i ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if cnt < K",
      "code": "if ( cnt < K )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print - 1",
      "code": "cout << - 1 << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print Tot",
      "code": "cout << Tot << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int N , A [ 55 ] , K [ 55 ] ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [55]’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sort ( A from 0 , A + N ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        16
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        16,
        2
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "do",
        "char str ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        16,
        8
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "do",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        16,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "do",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        2
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "char str ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        2,
        8
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        2,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "char str ;",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        8
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        8,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        17,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "cout << Tot ;",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        16,
        2
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "do",
        "char str ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        16,
        2,
        8
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "do",
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        16,
        2,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "do",
        "char str ;",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        16,
        8
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "do",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        16,
        8,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "do",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        16,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "do",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "char str ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        2,
        8
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        2,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "char str ;",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        8,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int N , K [ 55 ] , K [ 55 ] ;",
        "int Last = A [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int K [55]’"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "cout << Tot ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        16,
        2
      ],
      "mod_code": [
        "cout << Tot ;",
        "do",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        16,
        2,
        8
      ],
      "mod_code": [
        "cout << Tot ;",
        "do",
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        16,
        2,
        9
      ],
      "mod_code": [
        "cout << Tot ;",
        "do",
        "char str ;",
        "int Last = A [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        16,
        8
      ],
      "mod_code": [
        "cout << Tot ;",
        "do",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        16,
        8,
        9
      ],
      "mod_code": [
        "cout << Tot ;",
        "do",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )",
        "int Last = A [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        16,
        9
      ],
      "mod_code": [
        "cout << Tot ;",
        "do",
        "int Last = A [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        2
      ],
      "mod_code": [
        "cout << Tot ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        2,
        8
      ],
      "mod_code": [
        "cout << Tot ;",
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        2,
        8,
        9
      ],
      "mod_code": [
        "cout << Tot ;",
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )",
        "int Last = A [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        2,
        9
      ],
      "mod_code": [
        "cout << Tot ;",
        "char str ;",
        "int Last = A [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "do",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        2,
        8
      ],
      "mod_code": [
        "do",
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        2,
        8,
        9
      ],
      "mod_code": [
        "do",
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )",
        "int Last = A [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        2,
        9
      ],
      "mod_code": [
        "do",
        "char str ;",
        "int Last = A [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "do",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        8,
        9
      ],
      "mod_code": [
        "do",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )",
        "int Last = A [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "do",
        "int Last = A [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9
      ],
      "mod_code": [
        "char str ;",
        "if ( A [ i ] - ' Last ' >= 2 && cnt < K )",
        "int Last = A [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "char str ;",
        "int Last = A [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}