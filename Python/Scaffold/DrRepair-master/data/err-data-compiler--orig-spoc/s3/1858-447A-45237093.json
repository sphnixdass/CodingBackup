{
  "meta": {
    "index": 1858,
    "hitid": "3HY86PZXPYC49KZQVUIRQM8GJ9CE1D",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "447A",
    "subid": "45237093"
  },
  "lines": [
    {
      "line": 0,
      "text": "INF = const int with INF = 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = int array of size 333",
      "code": "int a [ 333 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "x , n , p = int",
      "code": "int x , n , p ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read p then n",
      "code": "cin >> p >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "ans = int with ans = - 1",
      "code": "int ans = - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set all values of a to 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a [ x mod p ] equals 0",
      "code": "if ( a [ x % p ] == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set a [ x mod p ] to 1",
      "code": "a [ x % p ] = 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if ans equals - 1",
      "code": "else if ( ans == - 1 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set ans to i",
      "code": "ans = i ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int ans = \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        5
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        5,
        4
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;",
        "p >> p >> n ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        5,
        3
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        9,
        5,
        14
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;",
        "cout << ans ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        4,
        3
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "if ( a [ x % p ] == ' 0 ' )",
        "p >> p >> n ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        9,
        3
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "if ( a [ x % p ] == ' 0 ' )",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        9,
        3,
        14
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "if ( a [ x % p ] == ' 0 ' )",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "int ans = \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        4
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "int ans = \" 1 \" ;",
        "p >> p >> n ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        4,
        3
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "int ans = \" 1 \" ;",
        "p >> p >> n ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        5,
        4,
        14
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "int ans = \" 1 \" ;",
        "p >> p >> n ;",
        "cout << ans ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        3
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "int ans = \" 1 \" ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        5,
        3,
        14
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "int ans = \" 1 \" ;",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        5,
        14
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "int ans = \" 1 \" ;",
        "cout << ans ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        4,
        3
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "p >> p >> n ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        4,
        3,
        14
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "p >> p >> n ;",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        11,
        3,
        14
      ],
      "mod_code": [
        "else if ( ! 1 )",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        4
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;",
        "p >> p >> n ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        4,
        3
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;",
        "p >> p >> n ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        9,
        5,
        4,
        14
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;",
        "p >> p >> n ;",
        "cout << ans ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        3
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        9,
        5,
        3,
        14
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        9,
        5,
        14
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "int ans = \" 1 \" ;",
        "cout << ans ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        3
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "p >> p >> n ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        9,
        4,
        3,
        14
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "p >> p >> n ;",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        9,
        3,
        14
      ],
      "mod_code": [
        "if ( a [ x % p ] == ' 0 ' )",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int ans = \" 1 \" ;",
        "p >> p >> n ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "int ans = \" 1 \" ;",
        "p >> p >> n ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        4,
        3,
        14
      ],
      "mod_code": [
        "int ans = \" 1 \" ;",
        "p >> p >> n ;",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        4,
        14
      ],
      "mod_code": [
        "int ans = \" 1 \" ;",
        "p >> p >> n ;",
        "cout << ans ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int ans = \" 1 \" ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        3,
        14
      ],
      "mod_code": [
        "int ans = \" 1 \" ;",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "int ans = \" 1 \" ;",
        "cout << ans ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "p >> p >> n ;",
        "int x , n , p , p ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        4,
        3,
        14
      ],
      "mod_code": [
        "p >> p >> n ;",
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int x , n , p , p ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int p’"
    }
  ]
}