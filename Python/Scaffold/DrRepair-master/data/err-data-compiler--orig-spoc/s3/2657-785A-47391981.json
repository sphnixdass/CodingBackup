{
  "meta": {
    "index": 2657,
    "hitid": "338431Z1FL9EEGBWN2021PK7SWCRO1",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "785A",
    "subid": "47391981"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "mp = map from string to int",
      "code": "map < string , int > mp ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set mp at \" Tetrahedron \" = 4",
      "code": "mp [ \" Tetrahedron \" ] = 4 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set mp at \" Cube \" = 6",
      "code": "mp [ \" Cube \" ] = 6 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set mp at \" Octahedron \" = 8",
      "code": "mp [ \" Octahedron \" ] = 8 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set mp at \" Dodecahedron \" = 12",
      "code": "mp [ \" Dodecahedron \" ] = 12 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set mp at \" Icosahedron \" = 20",
      "code": "mp [ \" Icosahedron \" ] = 20 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "x = 0 = int",
      "code": "int x = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n excluisve",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment x by mp at s",
      "code": "x += mp [ s ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print x",
      "code": "cout << x << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;"
      ],
      "err_line": 5,
      "err_msg": "assignment of read-only location ‘\"] = 6 ,\"’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "mp [ \" ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "map < string = int > mp ;"
      ],
      "err_line": 2,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "mp [ \" ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "mp [ \" ] = \" 8 \" ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "mp [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "mp [ \" ] = 20 = 20 ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int x , 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        9
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;",
        "int x , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        1
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "int x , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        1
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "int x , 0 ;",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "int x , 0 ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        1,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 6 , \" = 6 ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 8 ;",
        "int x , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        1
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 8 ;",
        "int x , 0 ;",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 8 ;",
        "int x , 0 ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        1
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 8 ;",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        1,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 8 ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "mp [ \" ] = 8 ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "int x , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        1
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "int x , 0 ;",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        1,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "int x , 0 ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "int x , 0 ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "mp [ \" ] = \" 4 \" ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;",
        "int x , 0 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        1
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;",
        "int x , 0 ;",
        "char n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;",
        "int x , 0 ;",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;",
        "char n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        1,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "mp [ \" ] = 8 ;",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "int x , 0 ;"
      ],
      "err_line": 5,
      "err_msg": "assignment of read-only location ‘\"] = 6 ,\"’"
    },
    {
      "mod_line": [
        5,
        9,
        1
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "int x , 0 ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "assignment of read-only location ‘\"] = 6 ,\"’"
    },
    {
      "mod_line": [
        5,
        9,
        1,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "int x , 0 ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "int x , 0 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "assignment of read-only location ‘\"] = 6 ,\"’"
    },
    {
      "mod_line": [
        5,
        1,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 6 , \" = 6 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "mp [ \" ] = 8 ;",
        "int x , 0 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        1
      ],
      "mod_code": [
        "mp [ \" ] = 8 ;",
        "int x , 0 ;",
        "char n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        1,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 8 ;",
        "int x , 0 ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 8 ;",
        "int x , 0 ;",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "mp [ \" ] = 8 ;",
        "char n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 8 ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "mp [ \" ] = 8 ;",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "int x , 0 ;",
        "char n ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        1,
        3
      ],
      "mod_code": [
        "int x , 0 ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "int x , 0 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}