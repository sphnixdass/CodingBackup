{
  "meta": {
    "index": 99,
    "hitid": "366FYU4PTGJ6FLLC34O9V14FT23EKI",
    "workerid": "A1APYLD4DUK33J",
    "probid": "391A",
    "subid": "14779044"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "increment s by ' a '",
      "code": "s += ' a ' ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers tmp , ans with tmp = 1 , ans = 0",
      "code": "int tmp = 1 , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to size of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s [ i ] is s [ i + 1 ]",
      "code": "if ( s [ i ] == s [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment tmp",
      "code": "tmp ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if tmp % 2 is 0 , increment ans",
      "code": "if ( tmp % 2 == 0 ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set tmp to 1",
      "code": "tmp = 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        8,
        0
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "do",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        2,
        8,
        10
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "do",
        "int tmp = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        8,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "do",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        0
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        2,
        0,
        10
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "int s ;",
        "int tmp = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        2,
        0,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "int s ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        2,
        10
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "int tmp = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        10,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "s >> s ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        8,
        0
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "do",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        8,
        0,
        10
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "do",
        "int s ;",
        "int tmp = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        8,
        0,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "do",
        "int s ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "do",
        "int tmp = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "do",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "do",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        0,
        10
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "int s ;",
        "int tmp = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        0,
        10,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "int s ;",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        0,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "int s ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "int tmp = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        10,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int tmp , ans = 1 , ans ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        8,
        0
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        0,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "int s ;",
        "int tmp = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        0,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "int s ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "int tmp = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        8,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2,
        0,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "int s ;",
        "int tmp = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2,
        0,
        10,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "int s ;",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2,
        0,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "int s ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "int tmp = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        10,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "do",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        0,
        10
      ],
      "mod_code": [
        "do",
        "int s ;",
        "int tmp = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        0,
        10,
        6
      ],
      "mod_code": [
        "do",
        "int s ;",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        0,
        6
      ],
      "mod_code": [
        "do",
        "int s ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "do",
        "int tmp = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "do",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "do",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int s ;",
        "int tmp = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        6
      ],
      "mod_code": [
        "int s ;",
        "int tmp = 1 ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int s ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘int’"
    }
  ]
}