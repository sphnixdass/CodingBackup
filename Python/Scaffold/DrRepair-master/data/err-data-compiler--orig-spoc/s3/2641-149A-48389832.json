{
  "meta": {
    "index": 2641,
    "hitid": "3K1H3NEY7LTWLTBTHISARRU1M9SDGS",
    "workerid": "AIWEXPJAU66D9",
    "probid": "149A",
    "subid": "48389832"
  },
  "lines": [
    {
      "line": 0,
      "text": "empty void function merge_sort with int array argument a , and int arguments low and high",
      "code": "void merge_sort ( int a [ ] , int low , int high ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "empty void function merge with int array argument a , and int arguments low mid and high",
      "code": "void merge ( int a [ ] , int low , int mid , int high ) ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create new integer k",
      "code": "int k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read k from the input",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "a is an array of integers with size 12",
      "code": "int a [ 12 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read 12 elements into array a",
      "code": "for ( int i = 0 ; i < 12 ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "call merge_sort with arguments a , 0 and 11",
      "code": "merge_sort ( a , 0 , 11 ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "new integer end = 11",
      "code": "int end = 11 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "define new integer height with value 0",
      "code": "int height = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while height < k & & end > = 0",
      "code": "while ( height < k && end >= 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "increase height by a [ end ]",
      "code": "height += a [ end ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "decrement end by one",
      "code": "end -- ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if height > = k",
      "code": "if ( height >= k )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print 11 - end to the standard output",
      "code": "cout << ( 11 - end ) << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "void function merge_sort with int array argument a , and int arguments low and high",
      "code": "void merge_sort ( int a [ ] , int low , int high )",
      "indent": 0
    },
    {
      "line": 21,
      "text": "if low is less than high",
      "code": "if ( low < high )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "declare integer mid = ( low + high ) / 2",
      "code": "int mid = ( low + high ) / 2 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "call merge_sort for a , low and mid",
      "code": "merge_sort ( a , low , mid ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "call merge_sort ( a , mid + 1 , high )",
      "code": "merge_sort ( a , mid + 1 , high ) ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "call merge ( a , low , mid , high )",
      "code": "merge ( a , low , mid , high ) ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "void function merge with int array argument a , and int arguments low mid and high",
      "code": "void merge ( int a [ ] , int low , int mid , int high )",
      "indent": 0
    },
    {
      "line": 29,
      "text": "n1 is a new integer with value mid - low + 1",
      "code": "int n1 = mid - low + 1 ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "declare integer variable with name n2 = high - mid",
      "code": "int n2 = high - mid ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "define integer arrays l with size n1 and r with size n2",
      "code": "int l [ n1 ] , r [ n2 ] ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "increment i in a loop fom 0 to n1 exclusive , changing l [ i ] to a [ low + i ] on each iteration",
      "code": "for ( int i = 0 ; i < n1 ; i ++ ) { l [ i ] = a [ low + i ] ; }",
      "indent": 1
    },
    {
      "line": 33,
      "text": "start for loop from j = 0 to n2 exclusive , assigning a [ mid + j + 1 ] to r [ j ]",
      "code": "for ( int j = 0 ; j < n2 ; j ++ ) { r [ j ] = a [ mid + j + 1 ] ; }",
      "indent": 1
    },
    {
      "line": 34,
      "text": "i is a new integer with value 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "declare new integer variable j = 0",
      "code": "int j = 0 ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "declare new integer k = low",
      "code": "int k = low ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "while i < n1 and j < n2",
      "code": "while ( i < n1 && j < n2 )",
      "indent": 1
    },
    {
      "line": 38,
      "text": "if l [ i ] is less than r [ j ]",
      "code": "if ( l [ i ] < r [ j ] )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "set a [ k ] to l [ i ]",
      "code": "a [ k ] = l [ i ] ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 42,
      "text": "assign the new value = r [ j ] to a [ k ]",
      "code": "a [ k ] = r [ j ] ;",
      "indent": 3
    },
    {
      "line": 43,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 45,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 47,
      "text": "while i < n1",
      "code": "while ( i < n1 )",
      "indent": 1
    },
    {
      "line": 48,
      "text": "change a [ k ] to l [ i ]",
      "code": "a [ k ] = l [ i ] ;",
      "indent": 2
    },
    {
      "line": 49,
      "text": "increase i by 1",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 50,
      "text": "increment k by one",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 52,
      "text": "while j < n2",
      "code": "while ( j < n2 )",
      "indent": 1
    },
    {
      "line": 53,
      "text": "assign the new value = r [ j ] to a [ k ]",
      "code": "a [ k ] = r [ j ] ;",
      "indent": 2
    },
    {
      "line": 54,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 2
    },
    {
      "line": 55,
      "text": "add 1 to k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 57,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "char a , low , mid ;"
      ],
      "err_line": 23,
      "err_msg": "conflicting declaration ‘char mid’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low , int high )"
      ],
      "err_line": 29,
      "err_msg": "‘mid’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int high , int high )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int high’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int k = s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long a [ 12 ] ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘long long int*’ to ‘int*’ for argument ‘1’ to ‘void merge_sort(int*, int, int)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "merge_sort ( a , 0 ) ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘void merge_sort(int*, int, int)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "const int end = 11 ;"
      ],
      "err_line": 12,
      "err_msg": "decrement of read-only variable ‘end’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int high , int high )"
      ],
      "err_line": 20,
      "err_msg": "redefinition of ‘int high’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int mid = ( long low + high ) / 2 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( j , low , mid ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "int merge_sort ( a , mid + 1 , high ) ;"
      ],
      "err_line": 24,
      "err_msg": "expression list treated as compound expression in initializer [-fpermissive]"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 25,
      "err_msg": "expression list treated as compound expression in initializer [-fpermissive]"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] )"
      ],
      "err_line": 29,
      "err_msg": "‘mid’ was not declared in this scope"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "i = 0 ;"
      ],
      "err_line": 34,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "j = 0 ;"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "k = low ;"
      ],
      "err_line": 36,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 45,
      "err_msg": "expected ‘while’ before ‘k’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        23
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        23,
        28
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        23,
        35
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;",
        "j = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        23,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        28
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "void merge ( int a [ ] , int low , int high )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        28,
        35
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        28,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "void merge ( int a [ ] , int low , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        35
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "j = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        35,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low [ ] , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        23
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "char a , low , mid ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        23,
        28
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        23,
        28,
        35
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        23,
        28,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        23,
        35
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "char a , low , mid ;",
        "j = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        23,
        35,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "char a , low , mid ;",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        23,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "char a , low , mid ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        28
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low , int high )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        28,
        35
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        28,
        35,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        28,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "void merge ( int a [ ] , int low , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        35
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "j = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        35,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        25
      ],
      "mod_code": [
        "void merge_sort ( int a [ ] , int low , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        23,
        28
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        23,
        28,
        35
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        23,
        28,
        25
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        23,
        35
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;",
        "j = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        23,
        35,
        25
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        23,
        25
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "char a , low , mid ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        28
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "void merge ( int a [ ] , int low , int high )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        28,
        35
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        28,
        35,
        25
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        28,
        25
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "void merge ( int a [ ] , int low , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        35
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "j = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        35,
        25
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        25
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low [ ] , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        23,
        28
      ],
      "mod_code": [
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )"
      ],
      "err_line": 23,
      "err_msg": "conflicting declaration ‘char mid’"
    },
    {
      "mod_line": [
        23,
        28,
        35
      ],
      "mod_code": [
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;"
      ],
      "err_line": 23,
      "err_msg": "conflicting declaration ‘char mid’"
    },
    {
      "mod_line": [
        23,
        28,
        35,
        25
      ],
      "mod_code": [
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 23,
      "err_msg": "conflicting declaration ‘char mid’"
    },
    {
      "mod_line": [
        23,
        28,
        25
      ],
      "mod_code": [
        "char a , low , mid ;",
        "void merge ( int a [ ] , int low , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 23,
      "err_msg": "conflicting declaration ‘char mid’"
    },
    {
      "mod_line": [
        23,
        35
      ],
      "mod_code": [
        "char a , low , mid ;",
        "j = 0 ;"
      ],
      "err_line": 23,
      "err_msg": "conflicting declaration ‘char mid’"
    },
    {
      "mod_line": [
        23,
        35,
        25
      ],
      "mod_code": [
        "char a , low , mid ;",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 23,
      "err_msg": "conflicting declaration ‘char mid’"
    },
    {
      "mod_line": [
        23,
        25
      ],
      "mod_code": [
        "char a , low , mid ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 23,
      "err_msg": "conflicting declaration ‘char mid’"
    },
    {
      "mod_line": [
        28,
        35
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;"
      ],
      "err_line": 29,
      "err_msg": "‘mid’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        35,
        25
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low , int high )",
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 25,
      "err_msg": "expression list treated as compound expression in initializer [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        25
      ],
      "mod_code": [
        "void merge ( int a [ ] , int low , int high )",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 25,
      "err_msg": "expression list treated as compound expression in initializer [-fpermissive]"
    },
    {
      "mod_line": [
        35,
        25
      ],
      "mod_code": [
        "j = 0 ;",
        "int merge ( a , low , mid , high ) ;"
      ],
      "err_line": 25,
      "err_msg": "expression list treated as compound expression in initializer [-fpermissive]"
    }
  ]
}