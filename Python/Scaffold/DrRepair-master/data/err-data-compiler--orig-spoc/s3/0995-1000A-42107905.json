{
  "meta": {
    "index": 995,
    "hitid": "36MUZ9VAE6WY1FF2BN2MRO9P9TBDE9",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "1000A",
    "subid": "42107905"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n and ans , set ans to 0",
      "code": "int n , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create map a from string to int",
      "code": "map < string , int > a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create string mid",
      "code": "string mid ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read mid",
      "code": "cin >> mid ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment a [ mid ]",
      "code": "a [ mid ] ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create string mid",
      "code": "string mid ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "read mid",
      "code": "cin >> mid ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if a [ mid ] different from 0",
      "code": "if ( a [ mid ] != 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "decrement a [ mid ]",
      "code": "a [ mid ] -- ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print n - ans",
      "code": "cout << n - ans << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "map < int , int > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool mid ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘bool’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( mid ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "bool mid ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘bool’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "gets ( mid ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        11,
        1,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;",
        "bool mid ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        11,
        1,
        2
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;",
        "map < int , int > a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        11,
        1,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        11,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "bool mid ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        10,
        2
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "bool mid ;",
        "map < int , int > a ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        10,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "bool mid ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "map < int , int > a ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        2,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "gets ( mid ) ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "int n , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        1,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "int n , ans = 0 , ans ;",
        "bool mid ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        1,
        10,
        2
      ],
      "mod_code": [
        "cin >> N ;",
        "int n , ans = 0 , ans ;",
        "bool mid ;",
        "map < int , int > a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        1,
        10,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "int n , ans = 0 , ans ;",
        "bool mid ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "cin >> N ;",
        "int n , ans = 0 , ans ;",
        "map < int , int > a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        1,
        2,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "int n , ans = 0 , ans ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        1,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "int n , ans = 0 , ans ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "bool mid ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "cin >> N ;",
        "bool mid ;",
        "map < int , int > a ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "bool mid ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "bool mid ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> N ;",
        "map < int , int > a ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        1,
        10
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;",
        "bool mid ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        1,
        10,
        2
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;",
        "bool mid ;",
        "map < int , int > a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        1,
        10,
        12
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;",
        "bool mid ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        1,
        2
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;",
        "map < int , int > a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        1,
        2,
        12
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        1,
        12
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "int n , ans = 0 , ans ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "bool mid ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        11,
        10,
        2
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "bool mid ;",
        "map < int , int > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        10,
        2,
        12
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "bool mid ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        10,
        12
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "bool mid ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "map < int , int > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        2,
        12
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "gets ( mid ) ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , ans = 0 , ans ;",
        "bool mid ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        10,
        2
      ],
      "mod_code": [
        "int n , ans = 0 , ans ;",
        "bool mid ;",
        "map < int , int > a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        10,
        2,
        12
      ],
      "mod_code": [
        "int n , ans = 0 , ans ;",
        "bool mid ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        10,
        12
      ],
      "mod_code": [
        "int n , ans = 0 , ans ;",
        "bool mid ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , ans = 0 , ans ;",
        "map < int , int > a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        2,
        12
      ],
      "mod_code": [
        "int n , ans = 0 , ans ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , ans = 0 , ans ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "bool mid ;",
        "map < int , int > a ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        2,
        12
      ],
      "mod_code": [
        "bool mid ;",
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "bool mid ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘bool’)"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "map < int , int > a ;",
        "if ( a [ mid ] != ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}