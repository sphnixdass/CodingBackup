{
  "meta": {
    "index": 258,
    "hitid": "3HXK2V1N4K99IJDDKT8TV83XPIXG2G",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "799A",
    "subid": "49055573"
  },
  "lines": [
    {
      "line": 0,
      "text": "N = const int with N = 1e5 + 100",
      "code": "const int N = 1e5 + 100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "PI = const double with PI = 3 . 14159",
      "code": "const double PI = 3.14159 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "v = bool vector",
      "code": "vector < bool > v ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n , t , k , d , times = int",
      "code": "int n , t , k , d , times ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "st = int set",
      "code": "set < int > st ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read n then t then k then d",
      "code": "cin >> n >> t >> k >> d ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if n is not a multiple of k",
      "code": "if ( n % k != 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set times to n / k + 1",
      "code": "times = n / k + 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set times to n / k",
      "code": "times = n / k ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "oven1 , oven2 = int with oven1 = 0 and oven2 = d",
      "code": "int oven1 = 0 , oven2 = d ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to times",
      "code": "for ( int i = 0 ; i < times ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if oven1 is less or equal to oven2",
      "code": "if ( oven1 <= oven2 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment oven1 by t",
      "code": "oven1 += t ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment oven2 by t",
      "code": "oven2 += t ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if max of oven2 and oven1 is less than times * t",
      "code": "if ( max ( oven2 , oven1 ) < times * t )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n , t , d , d , times ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "set < int = st ;"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘oven1’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        11,
        3
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        11,
        3,
        6
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        11,
        3,
        10
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;",
        "times /= k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        11,
        3,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        11,
        6
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        11,
        6,
        10
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "cin >> n >> t >> k >> n ;",
        "times /= k ;"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        11,
        6,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "cin >> n >> t >> k >> n ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        11,
        10
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "times /= k ;"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        11,
        10,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        11,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "int oven1 = 0 , oven2 = 0 ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "set < int = st ;",
        "int n , t , d , d , times ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "set < int = st ;",
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        3,
        6,
        10
      ],
      "mod_code": [
        "set < int = st ;",
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;",
        "times /= k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        3,
        6,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        3,
        10
      ],
      "mod_code": [
        "set < int = st ;",
        "int n , t , d , d , times ;",
        "times /= k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        3,
        10,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "int n , t , d , d , times ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        3,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "int n , t , d , d , times ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "set < int = st ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        6,
        10
      ],
      "mod_code": [
        "set < int = st ;",
        "cin >> n >> t >> k >> n ;",
        "times /= k ;"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "cin >> n >> t >> k >> n ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "cin >> n >> t >> k >> n ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "set < int = st ;",
        "times /= k ;"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        10,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "set < int = st ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        11,
        3,
        6
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        11,
        3,
        6,
        10
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;",
        "times /= k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        11,
        3,
        6,
        9
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        11,
        3,
        10
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;",
        "times /= k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        11,
        3,
        10,
        9
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        11,
        3,
        9
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "int n , t , d , d , times ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        11,
        6,
        10,
        9
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "cin >> n >> t >> k >> n ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘oven1’"
    },
    {
      "mod_line": [
        11,
        6,
        9
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "cin >> n >> t >> k >> n ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘oven1’"
    },
    {
      "mod_line": [
        11,
        10,
        9
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘oven1’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "int oven1 = 0 , oven2 = 0 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘oven1’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;",
        "times /= k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        9
      ],
      "mod_code": [
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "int n , t , d , d , times ;",
        "cin >> n >> t >> k >> n ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int n , t , d , d , times ;",
        "times /= k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "int n , t , d , d , times ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int n , t , d , d , times ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int d’"
    },
    {
      "mod_line": [
        6,
        10,
        9
      ],
      "mod_code": [
        "cin >> n >> t >> k >> n ;",
        "times /= k ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘oven1’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cin >> n >> t >> k >> n ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘oven1’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "times /= k ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘oven1’"
    }
  ]
}