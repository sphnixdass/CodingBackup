{
  "meta": {
    "index": 1724,
    "hitid": "30P8I9JKOIFKZDMVR79DTG9JW7I5V1",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "71A",
    "subid": "49055566"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b = integers with b = 0",
      "code": "int a , b = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = array of a strings",
      "code": "string s [ a ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while b is less than a",
      "code": "while ( b < a )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "Read s [ b ]",
      "code": "cin >> s [ b ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "c = integer with size of array s",
      "code": "int c = s [ b ] . size ( ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if c is less than or equal to 10",
      "code": "if ( c <= 10 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print s [ b ] and a new line",
      "code": "cout << s [ b ] << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print s [ b ] [ 0 ] , c - 2 , s [ b ] [ c - 1 ] and a new line",
      "code": "cout << s [ b ] [ 0 ] << c - 2 << s [ b ] [ c - 1 ] << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment b",
      "code": "b ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int c [ s ] ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘b’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "string s [ n ] ;",
        "int c [ s ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "string s [ n ] ;",
        "int c [ s ] ;",
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        1
      ],
      "mod_code": [
        "string s [ n ] ;",
        "int c [ s ] ;",
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "string s [ n ] ;",
        "int c [ s ] ;",
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        1
      ],
      "mod_code": [
        "string s [ n ] ;",
        "int c [ s ] ;",
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "string s [ n ] ;",
        "int c [ s ] ;",
        "int a = 0 , b ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "string s [ n ] ;",
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        1
      ],
      "mod_code": [
        "string s [ n ] ;",
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        1,
        6
      ],
      "mod_code": [
        "string s [ n ] ;",
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        6
      ],
      "mod_code": [
        "string s [ n ] ;",
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "string s [ n ] ;",
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        1
      ],
      "mod_code": [
        "string s [ n ] ;",
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        1,
        6
      ],
      "mod_code": [
        "string s [ n ] ;",
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        6
      ],
      "mod_code": [
        "string s [ n ] ;",
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "string s [ n ] ;",
        "int a = 0 , b ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "string s [ n ] ;",
        "int a = 0 , b ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "string s [ n ] ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "int c [ s ] ;",
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        6,
        10,
        1
      ],
      "mod_code": [
        "int c [ s ] ;",
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "int c [ s ] ;",
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        6,
        10,
        1
      ],
      "mod_code": [
        "int c [ s ] ;",
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "int c [ s ] ;",
        "int a = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        10,
        1,
        6
      ],
      "mod_code": [
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "cout << s [ b ] [ 0 ] << c - 2 << \" \" << s [ b ] [ c - 1 ] << endl ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        1,
        6
      ],
      "mod_code": [
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;",
        "int a = 0 , b ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "cout << s [ b ] [ 0 ] << \" \" << c [ b ] [ c - 1 ] << endl ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int a = 0 , b ;",
        "int c [ s ] = { 0 } ;"
      ],
      "err_line": 6,
      "err_msg": "size of array ‘c’ has non-integral type ‘std::__cxx11::string [a] {aka std::__cxx11::basic_string<char> [a]}’"
    }
  ]
}