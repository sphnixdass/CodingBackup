{
  "meta": {
    "index": 765,
    "hitid": "3VEI3XUCZRRWZGNX22DHQPPX214PRC",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "124A",
    "subid": "42453650"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , a , b = int , d and c = 0",
      "code": "int n , a , b , d = 0 , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , a , b",
      "code": "cin >> n >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "d = n - a",
      "code": "d = n - a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "c = b + 1",
      "code": "c = b + 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if d < = c",
      "code": "if ( d <= c )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print d",
      "code": "cout << d << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , b , d , d = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "d -= a ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "c += 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        8
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "c += 1 ;",
        "cout << c ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        5
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "c += 1 ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        6
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "c += 1 ;",
        "cout << d ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "cout << c ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        5
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "cout << c ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        6
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "cout << c ;",
        "cout << d ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        7,
        5
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        7,
        5,
        6
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "d -= a ;",
        "do",
        "cout << d ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        5
      ],
      "mod_code": [
        "d -= a ;",
        "c += 1 ;",
        "cout << c ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "d -= a ;",
        "c += 1 ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "d -= a ;",
        "c += 1 ;",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        8,
        5
      ],
      "mod_code": [
        "d -= a ;",
        "cout << c ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        8,
        5,
        6
      ],
      "mod_code": [
        "d -= a ;",
        "cout << c ;",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "d -= a ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "d -= a ;",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "do",
        "c += 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        4,
        8
      ],
      "mod_code": [
        "do",
        "c += 1 ;",
        "cout << c ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        4,
        8,
        5
      ],
      "mod_code": [
        "do",
        "c += 1 ;",
        "cout << c ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        4,
        8,
        6
      ],
      "mod_code": [
        "do",
        "c += 1 ;",
        "cout << c ;",
        "cout << d ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "do",
        "c += 1 ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        4,
        5,
        6
      ],
      "mod_code": [
        "do",
        "c += 1 ;",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        4,
        6
      ],
      "mod_code": [
        "do",
        "c += 1 ;",
        "cout << d ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "do",
        "cout << c ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        5
      ],
      "mod_code": [
        "do",
        "cout << c ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        8,
        5,
        6
      ],
      "mod_code": [
        "do",
        "cout << c ;",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "do",
        "cout << c ;",
        "cout << d ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "do",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        5,
        6
      ],
      "mod_code": [
        "do",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "do",
        "cout << d ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        8,
        5
      ],
      "mod_code": [
        "c += 1 ;",
        "cout << c ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        8,
        5,
        6
      ],
      "mod_code": [
        "c += 1 ;",
        "cout << c ;",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "c += 1 ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "c += 1 ;",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "cout << c ;",
        "else if ( d <= c )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        5,
        6
      ],
      "mod_code": [
        "cout << c ;",
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "else if ( d <= c )",
        "cout << d ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}