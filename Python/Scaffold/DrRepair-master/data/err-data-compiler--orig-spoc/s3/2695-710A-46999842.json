{
  "meta": {
    "index": 2695,
    "hitid": "35JDMRECC431DZPTDD3UX9CMMLREGK",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "710A",
    "subid": "46999842"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function check taking int r , int c and returning bool",
      "code": "bool check ( int r , int c )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if r > = 1 and r < = 8 ) and ( c > = 1 and c < = 8 )",
      "code": "if ( ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "x , y , tc , a , b , res = int with res = 0",
      "code": "int x , y , tc , a , b , res = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "pos = char array of size 3",
      "code": "char pos [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read pos",
      "code": "cin >> pos ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set x to pos [ 1 ] - ' 0 '",
      "code": "x = pos [ 1 ] - ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set y to ( pos [ 0 ] - ' a ' ) + 1",
      "code": "y = ( pos [ 0 ] - ' a ' ) + 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if check of x , y - 1 increment res",
      "code": "if ( check ( x , y - 1 ) ) res ++ ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if check of x , y + 1 increment res",
      "code": "if ( check ( x , y + 1 ) ) res ++ ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if check of x + 1 , y increment res",
      "code": "if ( check ( x + 1 , y ) ) res ++ ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if check of x - 1 , y increment res",
      "code": "if ( check ( x - 1 , y ) ) res ++ ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if check of x - 1 , y + 1 increment res",
      "code": "if ( check ( x - 1 , y + 1 ) ) res ++ ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if check of x - 1 , y - 1 increment res",
      "code": "if ( check ( x - 1 , y - 1 ) ) res ++ ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if check of x + 1 , y - 1 increment res",
      "code": "if ( check ( x + 1 , y - 1 ) ) res ++ ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if check of x + 1 , y + 1 increment res",
      "code": "if ( check ( x + 1 , y + 1 ) ) res ++ ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool check(int, int)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( check ( x - 1 ) ) res ++ ;"
      ],
      "err_line": 15,
      "err_msg": "too few arguments to function ‘bool check(int, int)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘bool check(int, int)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool check ( int r )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int x , y , a , a , b , res = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "char a [ 3 ] ;"
      ],
      "err_line": 8,
      "err_msg": "conflicting declaration ‘char a [3]’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( check ( x + 1 ) , y ) res ++ ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool check(int, int)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( check ( x + 1 ) , y + 1 ) ++ res ;"
      ],
      "err_line": 19,
      "err_msg": "too few arguments to function ‘bool check(int, int)’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x + 1 ) ) res ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15,
        18
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15,
        3
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        14,
        18
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        14,
        18,
        3
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        14,
        3
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x + 1 ) ) res ++ ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x - 1 ) ) res ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        15,
        18
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        15,
        18,
        3
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        15,
        3
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        18,
        3
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) && ( c >= 1 && c <= 8 ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool check(int, int)’"
    },
    {
      "mod_line": [
        14,
        15,
        18
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool check(int, int)’"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        1
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        3
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        15,
        1
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        15,
        1,
        3
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        15,
        3
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x - 1 ) ) res ++ ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool check(int, int)’"
    },
    {
      "mod_line": [
        14,
        18,
        1
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        18,
        1,
        3
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        18,
        3
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        1,
        3
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "if ( check ( x + 1 ) ) res ++ ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        18
      ],
      "mod_code": [
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;"
      ],
      "err_line": 15,
      "err_msg": "too few arguments to function ‘bool check(int, int)’"
    },
    {
      "mod_line": [
        15,
        18,
        1
      ],
      "mod_code": [
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        15,
        18,
        1,
        3
      ],
      "mod_code": [
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        15,
        18,
        3
      ],
      "mod_code": [
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        15,
        1,
        3
      ],
      "mod_code": [
        "if ( check ( x - 1 ) ) res ++ ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "if ( check ( x - 1 ) ) res ++ ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        1
      ],
      "mod_code": [
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        18,
        1,
        3
      ],
      "mod_code": [
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        18,
        3
      ],
      "mod_code": [
        "if ( check ( x + 1 ) , y - 1 ) ++ res ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "if ( r >= 1 && r <= 8 ) and ( c >= 1 && c <= 8 ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected identifier before ‘(’ token"
    }
  ]
}