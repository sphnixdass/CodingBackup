{
  "meta": {
    "index": 1537,
    "hitid": "3TD33TP5DLW2W506HM9U0FVYLTXBA1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1097A",
    "subid": "48925474"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string a , create string array b with size 5",
      "code": "string a , b [ 5 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare ada with no arguments , returning boolean",
      "code": "bool ada ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if b [ i ] [ 0 ] is a [ 0 ] or b [ i ] [ 1 ] is a [ 1 ] , return true from function",
      "code": "if ( b [ i ] [ 0 ] == a [ 0 ] || b [ i ] [ 1 ] == a [ 1 ] ) return true ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return false from function",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer k with k = 5",
      "code": "int k = 5 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while decrement k is true , read b [ k ]",
      "code": "while ( k -- ) cin >> b [ k ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if result of run ada is true",
      "code": "if ( ada ( ) )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( ada ( ada ) )"
      ],
      "err_line": 11,
      "err_msg": "too many arguments to function ‘bool ada()’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string a [ 5 ] , a [ 5 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada ( ada ) )"
      ],
      "err_line": 11,
      "err_msg": "too many arguments to function ‘bool ada()’"
    },
    {
      "mod_line": [
        10,
        11,
        0
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada ( ada ) )",
        "string a [ 5 ] , a [ 5 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        11,
        0,
        8
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada ( ada ) )",
        "string a [ 5 ] , a [ 5 ] ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        11,
        0,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada ( ada ) )",
        "string a [ 5 ] , a [ 5 ] ;",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        11,
        8
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada ( ada ) )",
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada ( ada ) )",
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada ( ada ) )",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "string a [ 5 ] , a [ 5 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        0,
        11
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "string a [ 5 ] , a [ 5 ] ;",
        "if ( ada )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        0,
        11,
        8
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "string a [ 5 ] , a [ 5 ] ;",
        "if ( ada )",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        0,
        11,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "string a [ 5 ] , a [ 5 ] ;",
        "if ( ada )",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        0,
        8
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "string a [ 5 ] , a [ 5 ] ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        0,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "string a [ 5 ] , a [ 5 ] ;",
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        0,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "string a [ 5 ] , a [ 5 ] ;",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        10,
        11,
        8
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada )",
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada )",
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "if ( ada )",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "while ( cin >> b [ k ] )",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "if ( ada ( ada ) )",
        "string a [ 5 ] , a [ 5 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        11,
        0,
        8
      ],
      "mod_code": [
        "if ( ada ( ada ) )",
        "string a [ 5 ] , a [ 5 ] ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        11,
        0,
        8,
        1
      ],
      "mod_code": [
        "if ( ada ( ada ) )",
        "string a [ 5 ] , a [ 5 ] ;",
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        11,
        0,
        1
      ],
      "mod_code": [
        "if ( ada ( ada ) )",
        "string a [ 5 ] , a [ 5 ] ;",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "if ( ada ( ada ) )",
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        1
      ],
      "mod_code": [
        "if ( ada ( ada ) )",
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( ada ( ada ) )",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "string a [ 5 ] , a [ 5 ] ;",
        "if ( ada )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        0,
        11,
        8
      ],
      "mod_code": [
        "string a [ 5 ] , a [ 5 ] ;",
        "if ( ada )",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        0,
        11,
        8,
        1
      ],
      "mod_code": [
        "string a [ 5 ] , a [ 5 ] ;",
        "if ( ada )",
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        0,
        11,
        1
      ],
      "mod_code": [
        "string a [ 5 ] , a [ 5 ] ;",
        "if ( ada )",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "string a [ 5 ] , a [ 5 ] ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        0,
        8,
        1
      ],
      "mod_code": [
        "string a [ 5 ] , a [ 5 ] ;",
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "string a [ 5 ] , a [ 5 ] ;",
        "bool ada ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string a [5]’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "if ( ada )",
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        1
      ],
      "mod_code": [
        "if ( ada )",
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( ada )",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "bool ada ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}