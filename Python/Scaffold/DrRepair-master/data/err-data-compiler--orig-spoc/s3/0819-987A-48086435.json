{
  "meta": {
    "index": 819,
    "hitid": "362E9TQF2HKDT4RF9WTLIOAEEEYIGX",
    "workerid": "A1APYLD4DUK33J",
    "probid": "987A",
    "subid": "48086435"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers t , i",
      "code": "int t , i ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare character array s size 6 by 21",
      "code": "char s [ 6 ] [ 21 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare string a",
      "code": "string a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "copy \" Power \" to s [ 0 ]",
      "code": "strcpy ( s [ 0 ] , \" Power \" ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "copy \" Time \" to s [ 1 ]",
      "code": "strcpy ( s [ 1 ] , \" Time \" ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "copy \" Space \" to s [ 2 ]",
      "code": "strcpy ( s [ 2 ] , \" Space \" ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "copy \" Soul \" to s [ 3 ]",
      "code": "strcpy ( s [ 3 ] , \" Soul \" ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "copy \" Reality \" to s [ 4 ]",
      "code": "strcpy ( s [ 4 ] , \" Reality \" ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "copy \" Mind \" to s [ 5 ]",
      "code": "strcpy ( s [ 5 ] , \" Mind \" ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "ignore input from cin",
      "code": "cin . ignore ( ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if t is 0",
      "code": "if ( t == 0 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print 6 and newline",
      "code": "cout << 6 << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for i = 0 to 6 exclusive , print s [ i ] and newline",
      "code": "for ( i = 0 ; i < 6 ; i ++ ) { cout << s [ i ] << endl ; }",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to t exclusive",
      "code": "for ( i = 0 ; i < t ; i ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if a is \" purple \"",
      "code": "if ( a == \" purple \" )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "copy \" - 1 \" to s [ 0 ]",
      "code": "strcpy ( s [ 0 ] , \" -1 \" ) ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else if a is \" green \"",
      "code": "else if ( a == \" green \" )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "copy \" - 1 \" to s [ 1 ]",
      "code": "strcpy ( s [ 1 ] , \" -1 \" ) ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "else if a is \" blue \"",
      "code": "else if ( a == \" blue \" )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "copy \" - 1 \" to s [ 2 ]",
      "code": "strcpy ( s [ 2 ] , \" -1 \" ) ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "else if a is \" orange \"",
      "code": "else if ( a == \" orange \" )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "copy \" - 1 \" to s [ 3 ]",
      "code": "strcpy ( s [ 3 ] , \" -1 \" ) ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "else if a is \" red \" ]",
      "code": "else if ( a == \" red \" )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "copy \" - 1 \" to s [ 4 ]",
      "code": "strcpy ( s [ 4 ] , \" -1 \" ) ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "else if a is \" yellow \"",
      "code": "else if ( a == \" yellow \" )",
      "indent": 3
    },
    {
      "line": 29,
      "text": "copy \" - 1 \" to s [ 5 ]",
      "code": "strcpy ( s [ 5 ] , \" -1 \" ) ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "print 6 - t , newline",
      "code": "cout << 6 - t << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "for i = 0 to 6 exclusive",
      "code": "for ( i = 0 ; i < 6 ; i ++ )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "if string comparison between s [ i ] and \" - 1 \" is not 0 , print s [ i ] and newline",
      "code": "if ( strcmp ( s [ i ] , \" -1 \" ) != 0 ) { cout << s [ i ] << endl ; }",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cin . getline ( input ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s [ 6 ] ] [ 21 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cin . ignore ( input ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 36,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 17,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else if ( a == \" orange ' )"
      ],
      "err_line": 24,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "else if ( a == \" red ' )"
      ],
      "err_line": 26,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        21
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        23
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        25
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        23
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        23,
        25
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        23,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        23,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        23,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        25
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        25,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        25,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        25,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        27,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        27,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        29,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 0 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        23
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        23,
        25
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        23,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        23,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        23,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        25
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        25,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        25,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        25,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        27,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        27,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        29,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 1 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        25
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        25,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        25,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        25,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        27,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        27,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        29,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 2 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        27,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        27,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        29,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 3 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        27
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        27,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        27,
        29,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        27,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 4 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        29
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        29,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "strcpy ( s [ 5 ] , \" - \" ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        33
      ],
      "mod_code": [
        "cin . getline ( input ) ;",
        "if ( strcmp ( s [ i ] , \" - \" ) != 0 ) cout << s [ i ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘input’ was not declared in this scope"
    }
  ]
}