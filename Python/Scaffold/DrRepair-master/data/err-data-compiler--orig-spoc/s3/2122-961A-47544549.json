{
  "meta": {
    "index": 2122,
    "hitid": "3OLZC0DJ8J9WB1HAYRS7IPDO1TNVI0",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "961A",
    "subid": "47544549"
  },
  "lines": [
    {
      "line": 0,
      "text": "make const int maxn = 1e3 + 100",
      "code": "const int maxn = 1e3 + 100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int array a of size maxn",
      "code": "int a [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "make ints n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer idx",
      "code": "int idx ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read idx",
      "code": "cin >> idx ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "subtract 1 from idx",
      "code": "idx -- ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "add 1 to a [ idx ]",
      "code": "a [ idx ] ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if * min_element ( a , a + n ) is not equal to 0",
      "code": "if ( * min_element ( a , a + n ) != 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for j = 0 to n exclusive , subtract 1 from a [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) a [ j ] -- ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increase ans by 1",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "gets ( idx ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        8,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        8,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        11,
        8,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "cout << ans ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        11,
        0,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        11,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( * ( a , a + n + n ) != 0 )",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "gets ( idx ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "gets ( idx ) ;",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "gets ( idx ) ;",
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "gets ( idx ) ;",
        "cout << ans ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "gets ( idx ) ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        8,
        0,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "gets ( idx ) ;",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "gets ( idx ) ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        16,
        0,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        16,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "cout << ans ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        0,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8,
        16
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;",
        "cout << ans ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8,
        16,
        0
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;",
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        8,
        16,
        1
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;",
        "cout << ans ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8,
        0
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        8,
        0,
        1
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        8,
        1
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "gets ( idx ) ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        16,
        0
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        16,
        0,
        1
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        16,
        1
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "cout << ans ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        0,
        1
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( * ( a , a + n + n ) != 0 )",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "gets ( idx ) ;",
        "cout << ans ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        16,
        0
      ],
      "mod_code": [
        "gets ( idx ) ;",
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        16,
        0,
        1
      ],
      "mod_code": [
        "gets ( idx ) ;",
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        16,
        1
      ],
      "mod_code": [
        "gets ( idx ) ;",
        "cout << ans ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "gets ( idx ) ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        0,
        1
      ],
      "mod_code": [
        "gets ( idx ) ;",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "gets ( idx ) ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        0,
        1
      ],
      "mod_code": [
        "cout << ans ;",
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "cout << ans ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int maxn = 1e3 + 100 ;",
        "int a [ maxn ] [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    }
  ]
}