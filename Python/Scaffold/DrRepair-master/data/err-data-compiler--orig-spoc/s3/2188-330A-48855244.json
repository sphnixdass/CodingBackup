{
  "meta": {
    "index": 2188,
    "hitid": "3T2HW4QDUV171RI73GRPF4QWW9K9CL",
    "workerid": "A1APYLD4DUK33J",
    "probid": "330A",
    "subid": "48855244"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer r , c , create integer arrays row , col with row size 11 , col size 11 , with row = { 0 } , with col = { 0 }",
      "code": "int r , c , row [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create strings",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read r read c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; ++ j )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ j ] is ' S '",
      "code": "if ( s [ j ] == ' S ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set row [ i ] to 1",
      "code": "row [ i ] = 1 ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set col [ j ] to 1",
      "code": "col [ j ] = 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "create integer cakes initialized with 0",
      "code": "int cakes ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; ++ i )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; ++ j )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if row [ i ] is 0 or col [ j ] is 0 , increment cakes by 1",
      "code": "if ( row [ i ] == 0 || col [ j ] == 0 ) { cakes += 1 ; }",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print cakes print newline",
      "code": "cout << cakes << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "break ;"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , c [ 11 ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [11]’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        ";"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        6
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        4
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "cin >> c >> c ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "cin >> c >> c ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        6,
        4
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        6,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "break ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        4
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "cin >> c >> c ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "cin >> c >> c ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "cin >> c >> c ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        6,
        4,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int r [ 11 ] , col [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "break ;",
        "cin >> c >> c ;"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "break ;",
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        4
      ],
      "mod_code": [
        "break ;",
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        5
      ],
      "mod_code": [
        "break ;",
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "break ;",
        "cin >> c >> c ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        5
      ],
      "mod_code": [
        "break ;",
        "cin >> c >> c ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "break ;",
        "cin >> c >> c ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "break ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        6,
        4
      ],
      "mod_code": [
        "break ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        6,
        4,
        5
      ],
      "mod_code": [
        "break ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "break ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "break ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "break ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "break ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        4,
        5
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}