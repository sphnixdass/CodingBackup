{
  "meta": {
    "index": 2001,
    "hitid": "3GVPRXWRPHOU0BGEGTPRCBXLFBC7IG",
    "workerid": "AIWEXPJAU66D9",
    "probid": "276A",
    "subid": "39770542"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k and joy",
      "code": "int n , k , joy ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integers f and t",
      "code": "int f , t ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read f and t",
      "code": "cin >> f >> t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if i is equal to 0",
      "code": "if ( i == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if t is greater than k",
      "code": "if ( t > k )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "assign f - ( t - k ) to joy",
      "code": "joy = f - ( t - k ) ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set joy to f",
      "code": "joy = f ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if t < = k",
      "code": "if ( t <= k )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if f is greater than joy , assign f to joy",
      "code": "if ( f > joy ) { joy = f ; }",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if f - ( t - k ) is greater than joy , change joy to f - ( t - k )",
      "code": "if ( f - ( t - k ) > joy ) { joy = f - ( t - k ) ; }",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print joy",
      "code": "cout << joy << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "joy to ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15,
        9
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15,
        9,
        10
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "do",
        "joy to ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        15,
        9,
        19
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "do",
        "cout << joy ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15,
        9,
        5
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "do",
        "while ( cin >> f >> t )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15,
        10
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "joy to ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        15,
        10,
        19
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "joy to ;",
        "cout << joy ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        15,
        10,
        5
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "joy to ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        15,
        19
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "cout << joy ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        5
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "cout << joy ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15,
        5
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "while ( cin >> f >> t )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "joy to ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        19
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "joy to ;",
        "cout << joy ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        5
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "joy to ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        9,
        19
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "cout << joy ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        5
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "cout << joy ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9,
        5
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "while ( cin >> f >> t )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "joy to ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        10,
        19
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "joy to ;",
        "cout << joy ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        5
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "joy to ;",
        "cout << joy ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        10,
        5
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "joy to ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        9,
        10
      ],
      "mod_code": [
        "do",
        "do",
        "joy to ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        9,
        10,
        19
      ],
      "mod_code": [
        "do",
        "do",
        "joy to ;",
        "cout << joy ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        9,
        10,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "joy to ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        9,
        19
      ],
      "mod_code": [
        "do",
        "do",
        "cout << joy ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        9,
        19,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "cout << joy ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        9,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "while ( cin >> f >> t )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "do",
        "joy to ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        10,
        19
      ],
      "mod_code": [
        "do",
        "joy to ;",
        "cout << joy ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        10,
        19,
        5
      ],
      "mod_code": [
        "do",
        "joy to ;",
        "cout << joy ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        10,
        5
      ],
      "mod_code": [
        "do",
        "joy to ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "do",
        "cout << joy ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        19,
        5
      ],
      "mod_code": [
        "do",
        "cout << joy ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "do",
        "while ( cin >> f >> t )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "do",
        "joy to ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        10,
        19
      ],
      "mod_code": [
        "do",
        "joy to ;",
        "cout << joy ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        5
      ],
      "mod_code": [
        "do",
        "joy to ;",
        "cout << joy ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        10,
        5
      ],
      "mod_code": [
        "do",
        "joy to ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "do",
        "cout << joy ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        19,
        5
      ],
      "mod_code": [
        "do",
        "cout << joy ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "do",
        "while ( cin >> f >> t )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "joy to ;",
        "cout << joy ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10,
        19,
        5
      ],
      "mod_code": [
        "joy to ;",
        "cout << joy ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "joy to ;",
        "while ( cin >> f >> t )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    }
  ]
}