{
  "meta": {
    "index": 993,
    "hitid": "34XASH8KLQG520A5XUH04QVNWE5MPL",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1000A",
    "subid": "47220853"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables n , i = 0 , j = 0 , count = 0 and m = 0",
      "code": "int n , i = 0 , j = 0 , count = 0 , m = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n from the user input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create an arrays of strings s1 and s2 with n elements",
      "code": "string s1 [ n ] , s2 [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n elements into s1 [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> s1 [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n elements into s2 [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> s2 [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "start for loop from i = 0 to n exclusive incrementing i",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "assign 0 to m",
      "code": "m = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "in a for loop from j = 0 to n exclusive",
      "code": "for ( j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s1 [ i ] = s2 [ j ]",
      "code": "if ( s1 [ i ] == s2 [ j ] )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "assign the new value = ' A ' to s2 [ j ]",
      "code": "s2 [ j ] = ' A ' ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment m",
      "code": "m ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if m is equal to n , increment count",
      "code": "if ( m == n ) { count ++ ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print count to the standard output",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "return ( 0 )",
      "code": "return ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        9
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        9,
        17
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        9,
        11
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        9,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        17
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "cout << count ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        17,
        11
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "cout << count ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        17,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "cout << count ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        11
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        11,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        1,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( s1 [ i ] == ' [ ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        9,
        17
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        9,
        17,
        11
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;",
        "stop ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        9,
        17,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        9,
        11
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( s1 [ i ] == ' [ ' )",
        "stop ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( s1 [ i ] == ' [ ' )",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        9,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( s1 [ i ] == ' [ ' )",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "{ cin >> n ;",
        "cout << count ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        17,
        11
      ],
      "mod_code": [
        "{ cin >> n ;",
        "cout << count ;",
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        17,
        11,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "cout << count ;",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        17,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "cout << count ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "{ cin >> n ;",
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "{ cin >> n ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        9,
        17
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        11
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        3
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        9,
        11
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        3
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "if ( s1 [ i ] == ' [ ' )",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "cout << count ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        17,
        11
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "cout << count ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        17,
        11,
        3
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "cout << count ;",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        17,
        3
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "cout << count ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        11,
        3
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , i , j = 0 , count = 0 , count = 0 ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        17,
        11
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;",
        "stop ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        17,
        11,
        3
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        17,
        3
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' )",
        "cout << count ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' )",
        "stop ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        3
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' )",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' )",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "cout << count ;",
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        11,
        3
      ],
      "mod_code": [
        "cout << count ;",
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "stop ;",
        "string s1 [ n ] , s2 [ n ] = { 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    }
  ]
}