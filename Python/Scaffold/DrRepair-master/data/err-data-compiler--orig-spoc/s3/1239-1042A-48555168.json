{
  "meta": {
    "index": 1239,
    "hitid": "306W7JMRYYSODH7RKOPG4OP3V538B0",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1042A",
    "subid": "48555168"
  },
  "lines": [
    {
      "line": 0,
      "text": "define long longs n and m",
      "code": "long long n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a is a new array of long longs with 2002 elements",
      "code": "long long a [ 2002 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create new long longs sum and maxm",
      "code": "long long sum , maxm ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "boolean function check with long long argument x",
      "code": "bool check ( long long x )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "new long long summ with value 0",
      "code": "long long summ = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive , change summ to summ + max of 0LL and x - a [ i ]",
      "code": "for ( long long i = 1 ; i <= n ; i ++ ) { summ += max ( 0LL , x - a [ i ] ) ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return summ > = m",
      "code": "return summ >= m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "bs is a long long function",
      "code": "long long bs ( )",
      "indent": 0
    },
    {
      "line": 9,
      "text": "new long long variable lo = maxm",
      "code": "long long lo = maxm ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "hi is a new long long variable = 1e9",
      "code": "long long hi = 1e9 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "loop while hi > lo",
      "code": "while ( hi > lo )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create new long long mid with value lo + ( hi - lo ) / 2",
      "code": "long long mid = lo + ( hi - lo ) / 2 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if check ( mid ) returned true",
      "code": "if ( check ( mid ) )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "change hi to mid",
      "code": "hi = mid ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "assign the new value = mid + 1 to lo",
      "code": "lo = mid + 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "return lo",
      "code": "return lo ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 21,
      "text": "read from the input to n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "loop , incrementing i from 1 to n inclusive",
      "code": "for ( long long i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read standard input to a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "change sum to the sum of sum and a [ i ]",
      "code": "sum += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "assign the new value = max of maxm and a [ i ] to maxm",
      "code": "maxm = max ( maxm , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "define long long variable tot = sum + m",
      "code": "long long tot = sum + m ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "create long long variablexx with value = tot / n",
      "code": "long long xx = tot / n ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "decrease tot by xx * n",
      "code": "tot -= ( xx * n ) ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if tot is greater than 0",
      "code": "if ( tot > 0 )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "assign the new value = xx + 1 to tot",
      "code": "tot = xx + 1 ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 33,
      "text": "change tot to xx",
      "code": "tot = xx ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "change the value of tot to the result of the call to bs ( )",
      "code": "tot = bs ( ) ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "print tot and \" \"",
      "code": "cout << tot << \" \" ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "print maxm + m to the standard output",
      "code": "cout << maxm + m << endl ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "long long variablexx = tot / n ;"
      ],
      "err_line": 29,
      "err_msg": "‘xx’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "long long bs ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "long long mid += ( hi - lo ) / 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "hi to ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "getline ( cin , a [ i ] ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘getline(std::istream&, long long int&)’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "maxm = max ( maxm , a ) [ i ] ;"
      ],
      "err_line": 25,
      "err_msg": "no matching function for call to ‘max(long long int&, long long int [2002])’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "long long tot += m ;"
      ],
      "err_line": 27,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "long long variablexx /= n ;"
      ],
      "err_line": 28,
      "err_msg": "expected initializer before ‘/=’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 34,
      "err_msg": "expected ‘while’ before ‘tot’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "tot to ;"
      ],
      "err_line": 33,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "tot = bs ( bs ) ;"
      ],
      "err_line": 34,
      "err_msg": "too many arguments to function ‘long long int bs()’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "cout << tot << \" \""
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        28,
        18
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        28,
        18,
        13
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "if ( ! check ( mid ) )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        28,
        18,
        13,
        32
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "if ( ! check ( mid ) )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        28,
        18,
        13,
        11
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "if ( ! check ( mid ) )",
        "while ( hi > 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        28,
        18,
        13,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "if ( ! check ( mid ) )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        18,
        32
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        28,
        18,
        32,
        11
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "do",
        "while ( hi > 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        28,
        18,
        32,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "do",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        18,
        11
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "while ( hi > 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        28,
        18,
        11,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        18,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        13
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "if ( ! check ( mid ) )"
      ],
      "err_line": 29,
      "err_msg": "‘xx’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        13,
        32
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "if ( ! check ( mid ) )",
        "do"
      ],
      "err_line": 29,
      "err_msg": "‘xx’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        13,
        32,
        11
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "if ( ! check ( mid ) )",
        "do",
        "while ( hi > 0 )"
      ],
      "err_line": 29,
      "err_msg": "‘xx’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        13,
        32,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "if ( ! check ( mid ) )",
        "do",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        13,
        11
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "if ( ! check ( mid ) )",
        "while ( hi > 0 )"
      ],
      "err_line": 29,
      "err_msg": "‘xx’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        13,
        11,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "if ( ! check ( mid ) )",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        13,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "if ( ! check ( mid ) )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        32
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do"
      ],
      "err_line": 29,
      "err_msg": "‘xx’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        32,
        11
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "while ( hi > 0 )"
      ],
      "err_line": 29,
      "err_msg": "‘xx’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        32,
        11,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        32,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "do",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        11
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "while ( hi > 0 )"
      ],
      "err_line": 29,
      "err_msg": "‘xx’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        11,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        28,
        3
      ],
      "mod_code": [
        "long long variablexx = tot / n ;",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "do",
        "if ( ! check ( mid ) )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        13,
        32
      ],
      "mod_code": [
        "do",
        "if ( ! check ( mid ) )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        13,
        32,
        11
      ],
      "mod_code": [
        "do",
        "if ( ! check ( mid ) )",
        "do",
        "while ( hi > 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        13,
        32,
        3
      ],
      "mod_code": [
        "do",
        "if ( ! check ( mid ) )",
        "do",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        18,
        13,
        11
      ],
      "mod_code": [
        "do",
        "if ( ! check ( mid ) )",
        "while ( hi > 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        13,
        11,
        3
      ],
      "mod_code": [
        "do",
        "if ( ! check ( mid ) )",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        18,
        13,
        3
      ],
      "mod_code": [
        "do",
        "if ( ! check ( mid ) )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        18,
        32
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        32,
        11
      ],
      "mod_code": [
        "do",
        "do",
        "while ( hi > 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        32,
        11,
        3
      ],
      "mod_code": [
        "do",
        "do",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        18,
        32,
        3
      ],
      "mod_code": [
        "do",
        "do",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "do",
        "while ( hi > 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        11,
        3
      ],
      "mod_code": [
        "do",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        18,
        3
      ],
      "mod_code": [
        "do",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        13,
        32
      ],
      "mod_code": [
        "if ( ! check ( mid ) )",
        "do"
      ],
      "err_line": 34,
      "err_msg": "expected ‘while’ before ‘tot’"
    },
    {
      "mod_line": [
        13,
        32,
        11
      ],
      "mod_code": [
        "if ( ! check ( mid ) )",
        "do",
        "while ( hi > 0 )"
      ],
      "err_line": 34,
      "err_msg": "expected ‘while’ before ‘tot’"
    },
    {
      "mod_line": [
        13,
        32,
        11,
        3
      ],
      "mod_code": [
        "if ( ! check ( mid ) )",
        "do",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        13,
        32,
        3
      ],
      "mod_code": [
        "if ( ! check ( mid ) )",
        "do",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        13,
        11,
        3
      ],
      "mod_code": [
        "if ( ! check ( mid ) )",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "if ( ! check ( mid ) )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        32,
        11
      ],
      "mod_code": [
        "do",
        "while ( hi > 0 )"
      ],
      "err_line": 34,
      "err_msg": "expected ‘while’ before ‘tot’"
    },
    {
      "mod_line": [
        32,
        11,
        3
      ],
      "mod_code": [
        "do",
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        32,
        3
      ],
      "mod_code": [
        "do",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "while ( hi > 0 )",
        "bool check ( long long x argument )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘...’ before ‘argument’"
    }
  ]
}