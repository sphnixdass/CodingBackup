{
  "meta": {
    "index": 495,
    "hitid": "37VE3DA4YUBH6S8KNSJMH1I2YOUBHJ",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "967A",
    "subid": "48465439"
  },
  "lines": [
    {
      "line": 0,
      "text": "make long long ints i , j , and t",
      "code": "long long int i , j , t ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "display setprecision ( 8 )",
      "code": "cout << setprecision ( 8 ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create long long ints n , s , x , and f = 0",
      "code": "long long int n , s , x , f = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create long long int arrays h of size n , m of size n , and b of size n",
      "code": "long long int h [ n ] , m [ n ] , b [ n ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read h [ i ] and b [ i ]",
      "code": "cin >> h [ i ] >> b [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set m [ i ] to b [ i ]",
      "code": "m [ i ] = b [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set m [ i ] to m [ i ] + h [ i ] * 60",
      "code": "m [ i ] += h [ i ] * 60 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment m [ i ]",
      "code": "m [ i ] ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set x to ( m [ 0 ] - 1 )",
      "code": "x = ( m [ 0 ] - 1 ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if x is greater than s",
      "code": "if ( x > s )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set x to 0 + s",
      "code": "x = 0 + s ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set j to x / 60",
      "code": "j = x / 60 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set j to x - j * 60",
      "code": "j = x - j * 60 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" 0 0 \"",
      "code": "cout << \" 0 0 \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set f to 1",
      "code": "f = 1 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 1 to n exclusive",
      "code": "for ( i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set x to ( m [ i ] - m [ i - 1 ] )",
      "code": "x = ( m [ i ] - m [ i - 1 ] ) ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if x / 2 is greater than s",
      "code": "if ( x / 2 > s )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set x to m [ i - 1 ] + s",
      "code": "x = m [ i - 1 ] + s ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "set j to x / 60",
      "code": "j = x / 60 ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "set j to x - j * 60",
      "code": "j = x - j * 60 ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "display ( long long int ) x / 60 , \" \" , and j",
      "code": "cout << ( long long int ) x / 60 << \" \" << j << endl ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "set f to 1",
      "code": "f = 1 ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "if f is equal to 0",
      "code": "if ( f == 0 )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "set x to m [ n - 1 ] + s",
      "code": "x = m [ n - 1 ] + s ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "set j to x / 60",
      "code": "j = x / 60 ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "st j to x - j * 60",
      "code": "j = x - j * 60 ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "display ( long long int ) x / 60 , \" \" , and j",
      "code": "cout << ( long long int ) x / 60 << \" \" << j << endl ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n >> s )"
      ],
      "err_line": 7,
      "err_msg": "‘h’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "m [ i ] = m [ i ] + 60 [ i ] * 60 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "x = 0 + y ;"
      ],
      "err_line": 14,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "st = x - j * 60 ;"
      ],
      "err_line": 35,
      "err_msg": "‘st’ was not declared in this scope"
    }
  ]
}