{
  "meta": {
    "index": 265,
    "hitid": "3N5YJ55YXGX4XEP3KCE3RAVS2IBNA2",
    "workerid": "AIWEXPJAU66D9",
    "probid": "799A",
    "subid": "40716543"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , t , k , d , tSinOven , tConOven , tt and td are integers where tConOven and tt = 0",
      "code": "int n , t , k , d , tSinOven , tConOven = 0 , tt = 0 , td ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , t , k and d",
      "code": "cin >> n >> t >> k >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set tSinOven to t * ( ( n / k ) + 1 if n modulo k > and 0 otherwise )",
      "code": "tSinOven = t * ( ( n / k ) + ( n % k > 0 ? 1 : 0 ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set tt to t",
      "code": "tt = t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increase d by t",
      "code": "d += t ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "change tConOven to ( tt if tt < d or d otherwise )",
      "code": "tConOven = ( tt < d ? tt : d ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "subtract k from n",
      "code": "n -= k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while n > 0 and tt < d",
      "code": "while ( n > 0 and tt < d )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "subtract k from n",
      "code": "n -= k ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase tt by t",
      "code": "tt += t ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set tConOven to d",
      "code": "tConOven = d ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while n > 0",
      "code": "while ( n > 0 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if tConOven = tt",
      "code": "if ( tConOven == tt )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "subtract k from n",
      "code": "n -= k ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "add t to tt",
      "code": "tt += t ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "assign d to tConOven",
      "code": "tConOven = d ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "go to the start of the loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "subtract k from n",
      "code": "n -= k ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increase d by t",
      "code": "d += t ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set tConOven to tt",
      "code": "tConOven = tt ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" YES \\ n \" if tSinOven > tConOven and \" NO \\ n \" otherwise",
      "code": "cout << ( tSinOven > tConOven ? \" YES\\n \" : \" NO\\n \" ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘:’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘:’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "C = d ;"
      ],
      "err_line": 12,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "to ;"
      ],
      "err_line": 18,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "tConOven to ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        3,
        13
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "while ( n -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "while ( n -- )",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "while ( n -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        13,
        3
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "while ( n -- )",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        13,
        3,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "while ( n -- )",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        13,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "while ( n -- )",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt , td = 0 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        3,
        1,
        13
      ],
      "mod_code": [
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "while ( n -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        3,
        1,
        13,
        2
      ],
      "mod_code": [
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "while ( n -- )",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        13,
        2
      ],
      "mod_code": [
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "while ( n -- )",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "tSinOven = t * ( n % k ) + 1 : ( n % k ) + 1 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘:’ token"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "while ( n -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        13,
        3
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "while ( n -- )",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        13,
        3,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "while ( n -- )",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        13,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "while ( n -- )",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , t , k , d , tSinOven , tConOven , tt , tt = 0 , td ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tt’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "while ( n -- )",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘:’ token"
    },
    {
      "mod_line": [
        13,
        3,
        2
      ],
      "mod_code": [
        "while ( n -- )",
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "tSinOven = t * ( ( n % k ) + 1 : n % k ) : 0 ;",
        "cin >> n >> t >> k >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘:’ token"
    }
  ]
}