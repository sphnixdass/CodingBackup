{
  "meta": {
    "index": 1346,
    "hitid": "3OPLMF3EU5HLTXG7H33T0OB3WUELNM",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "731A",
    "subid": "48285107"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make char cur = ' a '",
      "code": "char cur = ' a ' ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "make int mn",
      "code": "int mn ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to s . length ( ) exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set mn to min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) )",
      "code": "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set ans to ans + mn",
      "code": "ans += mn ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set cur to s [ i ]",
      "code": "cur = s [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "display ans",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char cur = ' a '"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        7,
        3,
        1
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        7,
        3,
        1,
        2
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        7,
        3,
        1,
        9
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "int s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        7,
        3,
        1,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "int s ;",
        "ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        9
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "s >> s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "s >> s ;",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        9
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "int cur = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        7,
        3,
        9,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        7,
        3,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "char cur = ' a '",
        "ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "int s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        1,
        2
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        1,
        2,
        9
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "int s ;",
        "s >> s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        1,
        2,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "int s ;",
        "s >> s ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        9
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "int s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        1,
        9,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "int s ;",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "int s ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        9
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "s >> s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        9,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "s >> s ;",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "s >> s ;",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "mn = min ( abs ( s [ i ] - cur ) , abs ( 26 - abs ( ( s [ i ] - cur ) ) ) ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "char cur = ' a '",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "char cur = ' a '",
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        3,
        1,
        2,
        9
      ],
      "mod_code": [
        "char cur = ' a '",
        "int s ;",
        "s >> s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        3,
        1,
        2,
        5
      ],
      "mod_code": [
        "char cur = ' a '",
        "int s ;",
        "s >> s ;",
        "ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        3,
        1,
        9
      ],
      "mod_code": [
        "char cur = ' a '",
        "int s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        3,
        1,
        9,
        5
      ],
      "mod_code": [
        "char cur = ' a '",
        "int s ;",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "char cur = ' a '",
        "int s ;",
        "ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "char cur = ' a '",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        9
      ],
      "mod_code": [
        "char cur = ' a '",
        "s >> s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        9,
        5
      ],
      "mod_code": [
        "char cur = ' a '",
        "s >> s ;",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "char cur = ' a '",
        "s >> s ;",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "char cur = ' a '",
        "int cur = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "char cur = ' a '",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "char cur = ' a '",
        "ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "int s ;",
        "s >> s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        5
      ],
      "mod_code": [
        "int s ;",
        "s >> s ;",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int s ;",
        "s >> s ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        5
      ],
      "mod_code": [
        "int s ;",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int s ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "int cur = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        9,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "int cur = s [ i ] ;",
        "ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ans’ was not declared in this scope"
    }
  ]
}