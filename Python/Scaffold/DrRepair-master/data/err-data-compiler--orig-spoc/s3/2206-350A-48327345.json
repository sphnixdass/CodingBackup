{
  "meta": {
    "index": 2206,
    "hitid": "38O9DZ0A62H7LQO78GZ7JHQ8V4W262",
    "workerid": "A1AYVATMT88U1W",
    "probid": "350A",
    "subid": "48327345"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let i , a , b , p , n , k , c be integers with a = 0 , b = 0 , c = 0",
      "code": "int i , a = 0 , b = 0 , p , n , k , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if a is equal to 0",
      "code": "if ( a == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "a is equal to p",
      "code": "a = p ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "a is equal to minimum of a , p",
      "code": "a = min ( a , p ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "b is equal to maximum of b , p",
      "code": "b = max ( b , p ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to k exclusive",
      "code": "for ( i = 0 ; i < k ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if c is equal to 0",
      "code": "if ( c == 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "c is equal to p",
      "code": "c = p ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "c is equal to minimum of c , p",
      "code": "c = min ( c , p ) ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if maximum of 2 * a , b is less than c",
      "code": "if ( max ( 2 * a , b ) < c )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print maximum of 2 * a , b and newline",
      "code": "cout << max ( 2 * a , b ) << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print - 1 and newline",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , k = 0 , c = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( p ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘b’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "a %= min ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "b = max ( b ) , p ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "gets ( p ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "c is min ( c , p ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        7
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        7,
        8
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "do",
        "a %= min ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        7,
        4
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "do",
        "gets ( p ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        7,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "do",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        8
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "a %= min ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        8,
        4
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "a %= min ;",
        "gets ( p ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        8,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "a %= min ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        4
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "gets ( p ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        4,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        18,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "if ( max ( 2 * a ) , b < c )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        7,
        8
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "do",
        "a %= min ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        4
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "do",
        "a %= min ;",
        "gets ( p ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "do",
        "a %= min ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        7,
        4
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "do",
        "gets ( p ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        7,
        4,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "do",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        7,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "do",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "a %= min ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "a %= min ;",
        "gets ( p ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        8,
        4,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "a %= min ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        8,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "a %= min ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "gets ( p ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        4,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "int i , a , b , p , n , k = 0 , c = 0 , c = 0 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        7
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘b’"
    },
    {
      "mod_line": [
        18,
        7,
        8
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "do",
        "a %= min ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        18,
        7,
        8,
        4
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "do",
        "a %= min ;",
        "gets ( p ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        7,
        8,
        15
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "do",
        "a %= min ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        18,
        7,
        4
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "do",
        "gets ( p ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        7,
        4,
        15
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "do",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        7,
        15
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "do",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘b’"
    },
    {
      "mod_line": [
        18,
        8
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "a %= min ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        18,
        8,
        4
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "a %= min ;",
        "gets ( p ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        8,
        4,
        15
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "a %= min ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        8,
        15
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "a %= min ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        18,
        4
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "gets ( p ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        4,
        15
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        15
      ],
      "mod_code": [
        "if ( max ( 2 * a ) , b < c )",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "do",
        "a %= min ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "do",
        "a %= min ;",
        "gets ( p ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        4,
        15
      ],
      "mod_code": [
        "do",
        "a %= min ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        15
      ],
      "mod_code": [
        "do",
        "a %= min ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "do",
        "gets ( p ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        15
      ],
      "mod_code": [
        "do",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘b’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "a %= min ;",
        "gets ( p ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        15
      ],
      "mod_code": [
        "a %= min ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "a %= min ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}