{
  "meta": {
    "index": 1905,
    "hitid": "351S7I5UG9QFY7S7EIRGK9YBRIAJN8",
    "workerid": "A1APYLD4DUK33J",
    "probid": "626A",
    "subid": "40494648"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare check with string s as argument",
      "code": "bool check ( string s )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers x , y , with x = 0 , y = 0",
      "code": "int x = 0 , y = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 0 to size of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if s [ i ] is ' R ' , increment x",
      "code": "if ( s [ i ] == ' R ' ) x ++ ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if s [ i ] is ' L ' , decrement x",
      "code": "if ( s [ i ] == ' L ' ) x -- ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if s [ i ] is ' D ' , decrement y",
      "code": "if ( s [ i ] == ' D ' ) y -- ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s [ i ] is ' U ' , increment y",
      "code": "if ( s [ i ] == ' U ' ) y ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return ( x is 0 and y is 0 ) from function",
      "code": "return x == 0 && y == 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while read n read s is true",
      "code": "while ( cin >> n >> s )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for j = 1 to j + i is less than or equal to n , incrementing j",
      "code": "for ( int j = 1 ; j + i <= n ; ++ j )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "create string cur with cur = substring of s from i to j",
      "code": "string cur = s . substr ( i , j ) ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "if result of run check with cur as argument , incrementing ans",
      "code": "if ( check ( cur ) ) { ans ++ ; }",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print ans print ' \\ n '",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string check ( string s )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( check ( cur ) )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x = 0 , y = 0 , y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘substr’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "while ( cin >> n >> y )"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = 1 ; j + i <= n ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        8
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        8,
        12
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        8,
        13
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        8,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        12
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        12,
        13
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "int s ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        12,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "int s ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        13
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "while ( cin >> n >> y )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        13,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        18,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "if ( check ( cur ) )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "string check ( string s )",
        "return x == 0 , y == 0 ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        8,
        12
      ],
      "mod_code": [
        "string check ( string s )",
        "return x == 0 , y == 0 ;",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        13
      ],
      "mod_code": [
        "string check ( string s )",
        "return x == 0 , y == 0 ;",
        "int s ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "return x == 0 , y == 0 ;",
        "int s ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        8,
        13
      ],
      "mod_code": [
        "string check ( string s )",
        "return x == 0 , y == 0 ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "return x == 0 , y == 0 ;",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        8,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "return x == 0 , y == 0 ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((void)0, (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "string check ( string s )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        12,
        13
      ],
      "mod_code": [
        "string check ( string s )",
        "int s ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "int s ;",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        12,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "int s ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "string check ( string s )",
        "while ( cin >> n >> y )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        13,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "string check ( string s )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘((x == 0) && (y == 0))’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        18,
        8
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        8,
        12
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;",
        "int s ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘substr’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        18,
        8,
        12,
        13
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;",
        "int s ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        8,
        12,
        17
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;",
        "int s ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘substr’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        18,
        8,
        13
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        8,
        13,
        17
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        8,
        17
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "return x == 0 , y == 0 ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        12
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "int s ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘substr’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        18,
        12,
        13
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "int s ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        12,
        13,
        17
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "int s ;",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        12,
        17
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "int s ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘substr’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "while ( cin >> n >> y )"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        17
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        17
      ],
      "mod_code": [
        "if ( check ( cur ) )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "return x == 0 , y == 0 ;",
        "int s ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘substr’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        12,
        13
      ],
      "mod_code": [
        "return x == 0 , y == 0 ;",
        "int s ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        17
      ],
      "mod_code": [
        "return x == 0 , y == 0 ;",
        "int s ;",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        17
      ],
      "mod_code": [
        "return x == 0 , y == 0 ;",
        "int s ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘substr’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "return x == 0 , y == 0 ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        17
      ],
      "mod_code": [
        "return x == 0 , y == 0 ;",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "int s ;",
        "while ( cin >> n >> y )"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        17
      ],
      "mod_code": [
        "int s ;",
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "int s ;",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘substr’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "while ( cin >> n >> y )",
        "string cur = s . substr ( i = j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘y’ was not declared in this scope"
    }
  ]
}