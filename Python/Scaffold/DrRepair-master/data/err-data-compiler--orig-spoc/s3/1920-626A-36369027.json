{
  "meta": {
    "index": 1920,
    "hitid": "3I7SHAD35MQGWU6518NJ4442VX0M74",
    "workerid": "A7Z6XB4WDJYSP",
    "probid": "626A",
    "subid": "36369027"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the function st",
      "code": "int st ( string str )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x = integer with x = 0",
      "code": "int x = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "y = integer with y = 0",
      "code": "int y = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to i to str size exclusive",
      "code": "for ( int i = 0 ; i < str . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if str [ i ] is U",
      "code": "if ( str [ i ] == ' U ' )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if str [ i ] is D",
      "code": "else if ( str [ i ] == ' D ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if str [ i ] is R",
      "code": "else if ( str [ i ] == ' R ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if str [ i ] is L",
      "code": "else if ( str [ i ] == ' L ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if x is 0 and y is 0",
      "code": "if ( x == 0 && y == 0 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "a , b = string with a = \" \"",
      "code": "string a = \" \" , b ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "i , j , cnt and len = integers with cnt = 0",
      "code": "int i , j , cnt = 0 , len ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "read len and b",
      "code": "cin >> len >> b ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 0 to len exclusive",
      "code": "for ( i = 0 ; i < len ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "a = \" \"",
      "code": "a = \" \" ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "for j = i to len exclusive",
      "code": "for ( j = i ; j < len ; j ++ )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "a = a + b [ j ]",
      "code": "a += b [ j ] ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "if st ( a ) is 1 increment cnt",
      "code": "if ( st ( a ) == 1 ) { cnt ++ ; }",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print cnt and new line",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void st ( )"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < size ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int st ( )"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < size ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        21
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < size ; i ++ )",
        "int i , j , cnt , len = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        21,
        8
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < size ; i ++ )",
        "int i , j , cnt , len = 0 ;",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        21,
        10
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < size ; i ++ )",
        "int i , j , cnt , len = 0 ;",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        8
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < size ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        8,
        10
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < size ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        10
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < size ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "void st ( )",
        "int i , j , cnt , len = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21,
        3
      ],
      "mod_code": [
        "void st ( )",
        "int i , j , cnt , len = 0 ;",
        "for ( int i = 0 ; i < i ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21,
        3,
        8
      ],
      "mod_code": [
        "void st ( )",
        "int i , j , cnt , len = 0 ;",
        "for ( int i = 0 ; i < i ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21,
        3,
        10
      ],
      "mod_code": [
        "void st ( )",
        "int i , j , cnt , len = 0 ;",
        "for ( int i = 0 ; i < i ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21,
        8
      ],
      "mod_code": [
        "void st ( )",
        "int i , j , cnt , len = 0 ;",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21,
        8,
        10
      ],
      "mod_code": [
        "void st ( )",
        "int i , j , cnt , len = 0 ;",
        "else if ( str [ i ] == ' 0 ' )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21,
        10
      ],
      "mod_code": [
        "void st ( )",
        "int i , j , cnt , len = 0 ;",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < i ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        8
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < i ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        8,
        10
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < i ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        10
      ],
      "mod_code": [
        "void st ( )",
        "for ( int i = 0 ; i < i ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "void st ( )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        10
      ],
      "mod_code": [
        "void st ( )",
        "else if ( str [ i ] == ' 0 ' )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "void st ( )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < size ; i ++ )",
        "int i , j , cnt , len = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < size ; i ++ )",
        "int i , j , cnt , len = 0 ;",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        8,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < size ; i ++ )",
        "int i , j , cnt , len = 0 ;",
        "else if ( str [ i ] == ' 0 ' )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < size ; i ++ )",
        "int i , j , cnt , len = 0 ;",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < size ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < size ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < size ; i ++ )",
        "else if ( str [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘size’ was not declared in this scope"
    }
  ]
}