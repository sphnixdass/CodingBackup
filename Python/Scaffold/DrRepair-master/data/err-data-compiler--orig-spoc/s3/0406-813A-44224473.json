{
  "meta": {
    "index": 406,
    "hitid": "3W5PY7V3UP19A6WLLK0R1PWIWPBJY6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "813A",
    "subid": "44224473"
  },
  "lines": [
    {
      "line": 0,
      "text": "PI is a new constant double with value acos ( - 1 . 0 )",
      "code": "const double PI = acos ( - 1.0 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "void function fast_in_out",
      "code": "void fast_in_out ( ) { }",
      "indent": 0
    },
    {
      "line": 2,
      "text": "void function pause",
      "code": "void pause ( ) { }",
      "indent": 0
    },
    {
      "line": 3,
      "text": "dx is a new array of integers with values 0 , 0 , - 1 , - 1 , - 1 , 1 , 1 , 1",
      "code": "int dx [ ] = { 0 , 0 , - 1 , - 1 , - 1 , 1 , 1 , 1 } ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "dy is a new array of integers with values - 1 , 1 , 0 , 1 , - 1 , - 1 , 0 , 1",
      "code": "int dy [ ] = { - 1 , 1 , 0 , 1 , - 1 , - 1 , 0 , 1 } ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "N is a new constant integer = 2e6 + 10",
      "code": "const int N = 2e6 + 10 ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare new array of booleans prime with size N",
      "code": "bool prime [ N ] ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "vis is a new array of integers with size N",
      "code": "int vis [ N ] ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "define function sieve",
      "code": "void sieve ( )",
      "indent": 0
    },
    {
      "line": 9,
      "text": "assign prime [ 0 ] and prime [ 1 ] to 1",
      "code": "prime [ 1 ] = prime [ 0 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 2 to N exclusive incrementing i",
      "code": "for ( long long i = 2 ; i < N ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "start for loop from j = i squared , while j < N and prime [ i ] is false , incrementing j by i and setting prime [ j ] to 1 on each iteration",
      "code": "for ( long long j = i * i ; j < N && ! prime [ i ] ; j += i ) prime [ j ] = 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "call fast_in_out ( )",
      "code": "fast_in_out ( ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "declare integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read from the input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "declare integer variables sum = 0 and ans = - 1",
      "code": "int sum = 0 , ans = - 1 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "in a for loop , change i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "declare integer variable with name x",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "read x from the user input",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "add x to sum",
      "code": "sum += x ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for i from 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "declare new integers l and r",
      "code": "int l , r ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "read variables l and r from the input",
      "code": "cin >> l >> r ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if sum < = r",
      "code": "if ( sum <= r )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "change ans to max of l and sum",
      "code": "ans = max ( l , sum ) ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print ans and ' \\ n ' to the standard output",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "call pause ( )",
      "code": "pause ( ) ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void fast_in_out ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "void pause ( )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "void sieve ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i < N ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "void fast_in_out ( )"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 35,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int x = s . size ( ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "gets ( m ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "long int l , r ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘max(long int&, int&)’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "ans = max ( l and sum ) ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 29,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "void pause ( )"
      ],
      "err_line": 34,
      "err_msg": "a function-definition is not allowed here before ‘return’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        26
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "l >> l >> r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        26,
        33
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "l >> l >> r ;",
        "void pause ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        26,
        8
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "l >> l >> r ;",
        "void sieve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        26,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "l >> l >> r ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        33
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "void pause ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        33,
        8
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "void pause ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        33,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "void pause ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        2,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        26
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "l >> l >> r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        26,
        33
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "l >> l >> r ;",
        "void pause ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        26,
        33,
        8
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "l >> l >> r ;",
        "void pause ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        26,
        33,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "l >> l >> r ;",
        "void pause ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        26,
        8
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "l >> l >> r ;",
        "void sieve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        26,
        8,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "l >> l >> r ;",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        26,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "l >> l >> r ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        33
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        33,
        8
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        33,
        8,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        33,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void pause ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        8,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "void fast_in_out ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        2,
        26
      ],
      "mod_code": [
        "void pause ( )",
        "l >> l >> r ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        26,
        33
      ],
      "mod_code": [
        "void pause ( )",
        "l >> l >> r ;",
        "void pause ( )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        26,
        33,
        8
      ],
      "mod_code": [
        "void pause ( )",
        "l >> l >> r ;",
        "void pause ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        26,
        33,
        20
      ],
      "mod_code": [
        "void pause ( )",
        "l >> l >> r ;",
        "void pause ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        26,
        8
      ],
      "mod_code": [
        "void pause ( )",
        "l >> l >> r ;",
        "void sieve ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        26,
        8,
        20
      ],
      "mod_code": [
        "void pause ( )",
        "l >> l >> r ;",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        26,
        20
      ],
      "mod_code": [
        "void pause ( )",
        "l >> l >> r ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        33
      ],
      "mod_code": [
        "void pause ( )",
        "void pause ( )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        33,
        8
      ],
      "mod_code": [
        "void pause ( )",
        "void pause ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        33,
        8,
        20
      ],
      "mod_code": [
        "void pause ( )",
        "void pause ( )",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        33,
        20
      ],
      "mod_code": [
        "void pause ( )",
        "void pause ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "void pause ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        20
      ],
      "mod_code": [
        "void pause ( )",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "void pause ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        26,
        33
      ],
      "mod_code": [
        "l >> l >> r ;",
        "void pause ( )"
      ],
      "err_line": 34,
      "err_msg": "a function-definition is not allowed here before ‘return’"
    },
    {
      "mod_line": [
        26,
        33,
        8
      ],
      "mod_code": [
        "l >> l >> r ;",
        "void pause ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        33,
        8,
        20
      ],
      "mod_code": [
        "l >> l >> r ;",
        "void pause ( )",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        33,
        20
      ],
      "mod_code": [
        "l >> l >> r ;",
        "void pause ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 34,
      "err_msg": "a function-definition is not allowed here before ‘return’"
    },
    {
      "mod_line": [
        26,
        8
      ],
      "mod_code": [
        "l >> l >> r ;",
        "void sieve ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        8,
        20
      ],
      "mod_code": [
        "l >> l >> r ;",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        33,
        8
      ],
      "mod_code": [
        "void pause ( )",
        "void sieve ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        33,
        8,
        20
      ],
      "mod_code": [
        "void pause ( )",
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        33,
        20
      ],
      "mod_code": [
        "void pause ( )",
        "x = getchar ( ) ;"
      ],
      "err_line": 34,
      "err_msg": "a function-definition is not allowed here before ‘return’"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "void sieve ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}