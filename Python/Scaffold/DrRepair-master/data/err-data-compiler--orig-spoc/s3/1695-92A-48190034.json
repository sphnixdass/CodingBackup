{
  "meta": {
    "index": 1695,
    "hitid": "3Z8UJEJOCZ7JORMOANGOM1M2RJ939U",
    "workerid": "AIWEXPJAU66D9",
    "probid": "92A",
    "subid": "48190034"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define long long ints a , b , c , d , e , f and g",
      "code": "long long int a , b , c , d , e , f , g ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create vector of long long integers v",
      "code": "vector < long long int > v ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "v1 is a new vector of integers",
      "code": "vector < int > v1 [ 200 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop , reading a and b from the input",
      "code": "while ( cin >> a >> b )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "change the value of c to 0",
      "code": "c = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change d to b",
      "code": "d = b ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "start infinite loop",
      "code": "while ( 1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if c is less than a",
      "code": "if ( c < a )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if b - c = 0",
      "code": "if ( b - c == 0 )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "print \" 0 \"",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "break",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "else if b - c is greater than 0",
      "code": "else if ( b - c > 0 )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "change b to b - c",
      "code": "b -= c ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 16,
      "text": "print b",
      "code": "cout << b << endl ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "break",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if b - c = 0",
      "code": "if ( b - c == 0 )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "print \" 0 \"",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "else if b - c is greater than 0",
      "code": "else if ( b - c > 0 )",
      "indent": 4
    },
    {
      "line": 24,
      "text": "subtract c from b",
      "code": "b -= c ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 26,
      "text": "print b",
      "code": "cout << b << endl ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 29,
      "text": "set c to 0",
      "code": "c = 0 ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> a >> b ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "d to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 22,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘c’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 27,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "d to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        21,
        6,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "d to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        21,
        6,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "d to ;",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        21,
        6,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "d to ;",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        21,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        21,
        17,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "do",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        21,
        17,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "do",
        "stop ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        21,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        21,
        5,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "cout << \" 0 \" ;",
        "stop ;"
      ],
      "err_line": 22,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        17,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "do",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        17,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "do",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        5,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        17,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "do",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        17,
        5,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "do",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        17,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "do",
        "stop ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        5,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "stop ;"
      ],
      "err_line": 22,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        6,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        6,
        17,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "do",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        6,
        17,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "do",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        6,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        6,
        5,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        6,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "d to ;",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        17,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "do",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        17,
        5,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "do",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        17,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "do",
        "stop ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        5,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "cout << \" 0 \" ;",
        "stop ;"
      ],
      "err_line": 22,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "d to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        17,
        5
      ],
      "mod_code": [
        "d to ;",
        "do",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        17,
        5,
        22
      ],
      "mod_code": [
        "d to ;",
        "do",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        17,
        22
      ],
      "mod_code": [
        "d to ;",
        "do",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "d to ;",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        5,
        22
      ],
      "mod_code": [
        "d to ;",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "d to ;",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "do",
        "c to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        17,
        5,
        22
      ],
      "mod_code": [
        "do",
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        17,
        22
      ],
      "mod_code": [
        "do",
        "stop ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        22
      ],
      "mod_code": [
        "c to ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘to’"
    }
  ]
}