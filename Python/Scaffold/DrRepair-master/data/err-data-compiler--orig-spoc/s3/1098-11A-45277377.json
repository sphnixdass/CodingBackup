{
  "meta": {
    "index": 1098,
    "hitid": "35U0MRQMUJ167NSDWM5C2M9AC06VOA",
    "workerid": "A1APYLD4DUK33J",
    "probid": "11A",
    "subid": "45277377"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs n , d , adder , res with res = 0",
      "code": "long long n , d , adder , res = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create long long array arr with size n",
      "code": "long long arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read arr [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if arr [ i - 1 ] is greater than or equal to arr [ i ]",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if arr [ i - 1 ] is greater than or equal to arr [ i ]",
      "code": "if ( arr [ i - 1 ] >= arr [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set adder to ( arr [ i - 1 ] - arr [ i ] ) / d + 1",
      "code": "adder = ( arr [ i - 1 ] - arr [ i ] ) / d + 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment res by adder",
      "code": "res += adder ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment arr [ i ] by adder * d",
      "code": "arr [ i ] += adder * d ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print res print newline",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( arr [ i - 1 ] >= arr [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> d )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( arr [ i - 1 ] >= ( arr [ i ] ) )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( arr [ i - 1 ] >= arr [ i ] )",
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "if ( arr [ i - 1 ] >= arr [ i ] )",
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;",
        "arr [ i ] += d * d ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        2
      ],
      "mod_code": [
        "if ( arr [ i - 1 ] >= arr [ i ] )",
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;",
        "arr [ i ] += d * d ;",
        "while ( cin >> n >> d )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "if ( arr [ i - 1 ] >= arr [ i ] )",
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;",
        "while ( cin >> n >> d )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "if ( arr [ i - 1 ] >= arr [ i ] )",
        "arr [ i ] += d * d ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "if ( arr [ i - 1 ] >= arr [ i ] )",
        "arr [ i ] += d * d ;",
        "while ( cin >> n >> d )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( arr [ i - 1 ] >= arr [ i ] )",
        "while ( cin >> n >> d )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;",
        "arr [ i ] += d * d ;",
        "while ( cin >> n >> d )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        2,
        5
      ],
      "mod_code": [
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;",
        "arr [ i ] += d * d ;",
        "while ( cin >> n >> d )",
        "if ( arr [ i - 1 ] >= ( arr [ i ] ) )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;",
        "arr [ i ] += d * d ;",
        "if ( arr [ i - 1 ] >= ( arr [ i ] ) )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;",
        "while ( cin >> n >> d )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;",
        "while ( cin >> n >> d )",
        "if ( arr [ i - 1 ] >= ( arr [ i ] ) )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "adder = ( arr [ i - 1 ] - ( arr [ i ] ) / d + 1 ) ;",
        "if ( arr [ i - 1 ] >= ( arr [ i ] ) )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "arr [ i ] += d * d ;",
        "while ( cin >> n >> d )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        5
      ],
      "mod_code": [
        "arr [ i ] += d * d ;",
        "while ( cin >> n >> d )",
        "if ( arr [ i - 1 ] >= ( arr [ i ] ) )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "arr [ i ] += d * d ;",
        "if ( arr [ i - 1 ] >= ( arr [ i ] ) )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> d )",
        "if ( arr [ i - 1 ] >= ( arr [ i ] ) )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    }
  ]
}