{
  "meta": {
    "index": 1978,
    "hitid": "3U74KRR67MF9CAOCQC5KMFLKQ7UTNR",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "899A",
    "subid": "41454336"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = array of 200001 integers",
      "code": "int a [ 200001 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "i = integer",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "Read n values into array a",
      "code": "for ( i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "s1 , s2 = integers , both set to 0",
      "code": "int s1 = 0 , s2 = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n exclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if a [ i ] is 1",
      "code": "if ( a [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment s1",
      "code": "s1 ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment s2",
      "code": "s2 ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if s1 is greater than s2",
      "code": "if ( s1 > s2 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print s2 + ( s1 - s2 ) / 3 and a new line",
      "code": "cout << s2 + ( s1 - s2 ) / 3 << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print s1 and a new line",
      "code": "cout << s1 << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "do",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )",
        "do",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "do",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )",
        "do",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )",
        "do",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        10,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "do",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        10,
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "do",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "do",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        5
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "do",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        5,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "do",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "do",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        5,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "do",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        5,
        3
      ],
      "mod_code": [
        "do",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "do",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}