{
  "meta": {
    "index": 987,
    "hitid": "3VQTAXTYN3FMBEE4NRQL0G7SSWSUBZ",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "461A",
    "subid": "39083332"
  },
  "lines": [
    {
      "line": 0,
      "text": "dat = array of 300005 long long",
      "code": "long long dat [ 300005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "sum = array of 300005 long long",
      "code": "long long sum [ 300005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "res = long long",
      "code": "long long res ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "res = 0",
      "code": "res = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "fill dat with 0",
      "code": "memset ( dat , 0 , sizeof ( dat ) ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 0 to n exclusive read dat [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> dat [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "sort first n items of dat",
      "code": "sort ( dat , dat + n ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = n - 1 down to 0 inclusive add dat [ i + 1 ] to dat [ i ]",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- ) dat [ i ] += dat [ i + 1 ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 0 to n - 1 exclusive add dat [ i ] to res",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ ) res += dat [ i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "add dat [ 0 ] to res",
      "code": "res += dat [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        4,
        12
      ],
      "mod_code": [
        "cout << res ;",
        "while ( n >> n )",
        "char n ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        10,
        12
      ],
      "mod_code": [
        "cout << res ;",
        "while ( n >> n )",
        "for ( int i = n - 1 ; i >= 0 ; i -- ) dat [ i ] = dat [ i + 1 ] ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        12
      ],
      "mod_code": [
        "cout << res ;",
        "while ( n >> n )",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        4,
        10,
        12
      ],
      "mod_code": [
        "cout << res ;",
        "char n ;",
        "for ( int i = n - 1 ; i >= 0 ; i -- ) dat [ i ] = dat [ i + 1 ] ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        4,
        12
      ],
      "mod_code": [
        "cout << res ;",
        "char n ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        10,
        12
      ],
      "mod_code": [
        "cout << res ;",
        "for ( int i = n - 1 ; i >= 0 ; i -- ) dat [ i ] = dat [ i + 1 ] ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "cout << res ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        10,
        12
      ],
      "mod_code": [
        "while ( n >> n )",
        "char n ;",
        "for ( int i = n - 1 ; i >= 0 ; i -- ) dat [ i ] = dat [ i + 1 ] ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        12
      ],
      "mod_code": [
        "while ( n >> n )",
        "char n ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        12
      ],
      "mod_code": [
        "while ( n >> n )",
        "for ( int i = n - 1 ; i >= 0 ; i -- ) dat [ i ] = dat [ i + 1 ] ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "while ( n >> n )",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        12
      ],
      "mod_code": [
        "char n ;",
        "for ( int i = n - 1 ; i >= 0 ; i -- ) dat [ i ] = dat [ i + 1 ] ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "char n ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- ) dat [ i ] = dat [ i + 1 ] ;",
        "res = dat + dat [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    }
  ]
}