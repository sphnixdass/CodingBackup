{
  "meta": {
    "index": 57,
    "hitid": "3JYPJ2TAYI2ZWQIOB7DN90BEZDUFP8",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "1077A",
    "subid": "49093476"
  },
  "lines": [
    {
      "line": 0,
      "text": "i , ii , n , a , b , k , a1 , x = integers",
      "code": "long long i , ii , n , a , b , k , a1 , x ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Read a , b , k",
      "code": "cin >> a >> b >> k ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set a1 to a",
      "code": "a1 = a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set x to 0",
      "code": "x = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set a to a * k / 2",
      "code": "a *= k / 2 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set b to b * k / 2",
      "code": "b *= k / 2 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set x to a - b",
      "code": "x = a - b ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if k modulo 2 is 1 , then set x to x + a1",
      "code": "if ( k % 2 == 1 ) x += a1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print x and a new line",
      "code": "cout << x << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        8,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "a = a * k / 2 ;",
        "b = b * k / 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        6,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "a = a * k / 2 ;",
        "int x = 0 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        8,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "a = a * k / 2 ;",
        "b /= 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "a = a * k / 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        6,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "b = b * k / 2 ;",
        "int x = 0 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "b = b * k / 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "int x = 0 ;",
        "b /= 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "int x = 0 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "b /= 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int i , ii , n , a , b , k , a1 , x ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        2
      ],
      "mod_code": [
        "a = a * k / 2 ;",
        "b = b * k / 2 ;",
        "int x = 0 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        2
      ],
      "mod_code": [
        "a = a * k / 2 ;",
        "b = b * k / 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        8,
        2
      ],
      "mod_code": [
        "a = a * k / 2 ;",
        "int x = 0 ;",
        "b /= 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        2
      ],
      "mod_code": [
        "a = a * k / 2 ;",
        "int x = 0 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        2
      ],
      "mod_code": [
        "a = a * k / 2 ;",
        "b /= 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "a = a * k / 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6,
        2
      ],
      "mod_code": [
        "b = b * k / 2 ;",
        "int x = 0 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "b = b * k / 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "int x = 0 ;",
        "b /= 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "int x = 0 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "b /= 2 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    }
  ]
}