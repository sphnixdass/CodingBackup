{
  "meta": {
    "index": 2653,
    "hitid": "31KSVEGZ34MMJPKYEORCIJXTVYBRWD",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "785A",
    "subid": "48857522"
  },
  "lines": [
    {
      "line": 0,
      "text": "function prime ( get int n , return bool )",
      "code": "bool prime ( int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is multiple of i increment c",
      "code": "if ( n % i == 0 ) c ++ ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if c is 1",
      "code": "if ( c == 1 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return false",
      "code": "return false ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "n = unsigned long long , sum = 0",
      "code": "unsigned long long n , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "arr = array of n string",
      "code": "string arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read arr [ i ]",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if arr [ i ] is \" Tetrahedron \"",
      "code": "if ( arr [ i ] == \" Tetrahedron \" )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "add 4 to sum",
      "code": "sum += 4 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else if arr [ i ] is \" Cube \"",
      "code": "else if ( arr [ i ] == \" Cube \" )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "add 6 to sum",
      "code": "sum += 6 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else if arr [ i ] is \" Octahedron \"",
      "code": "else if ( arr [ i ] == \" Octahedron \" )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "add 8 to sum",
      "code": "sum += 8 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else if arr [ i ] is \" Dodecahedron \"",
      "code": "else if ( arr [ i ] == \" Dodecahedron \" )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "add 12 to sum",
      "code": "sum += 12 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 25,
      "text": "add 20 to sum",
      "code": "sum += 20 ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool prime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "c = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long unsigned int sum’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "char arr [ n ] ;"
      ],
      "err_line": 16,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cin >> arr . size ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘size’ in ‘arr’, which is of non-class type ‘std::__cxx11::string [n] {aka std::__cxx11::basic_string<char> [n]}’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else if ( arr [ i ] == ' Cube \" )"
      ],
      "err_line": 18,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else if ( arr [ i ] == ' Dodecahedron \" )"
      ],
      "err_line": 22,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        7
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        7,
        15
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "do",
        "cin >> arr . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        7,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "do",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        11,
        7,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "do",
        "char arr [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        15
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "cin >> arr . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        15,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        11,
        15,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "cin >> arr . size ( ) ;",
        "char arr [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        11,
        20,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        11,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "unsigned long long sum , sum = 0 ;",
        "char arr [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        15
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "do",
        "cin >> arr . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        15,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "do",
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        7,
        15,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "do",
        "cin >> arr . size ( ) ;",
        "char arr [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "do",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        7,
        20,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "do",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        7,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "do",
        "char arr [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cin >> arr . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        15,
        20,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        15,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cin >> arr . size ( ) ;",
        "char arr [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        20,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "char arr [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        7,
        15
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "do",
        "cin >> arr . size ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        7,
        15,
        20
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "do",
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        7,
        15,
        13
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "do",
        "cin >> arr . size ( ) ;",
        "char arr [ n ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        7,
        20
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "do",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        7,
        20,
        13
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "do",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        7,
        13
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "do",
        "char arr [ n ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "cin >> arr . size ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long unsigned int sum’"
    },
    {
      "mod_line": [
        11,
        15,
        20
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        15,
        20,
        13
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        15,
        13
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "cin >> arr . size ( ) ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long unsigned int sum’"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        20,
        13
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "unsigned long long sum , sum = 0 ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long unsigned int sum’"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "do",
        "cin >> arr . size ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        15,
        20
      ],
      "mod_code": [
        "do",
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        15,
        20,
        13
      ],
      "mod_code": [
        "do",
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        15,
        13
      ],
      "mod_code": [
        "do",
        "cin >> arr . size ( ) ;",
        "char arr [ n ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "do",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        20,
        13
      ],
      "mod_code": [
        "do",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "do",
        "char arr [ n ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        15,
        20,
        13
      ],
      "mod_code": [
        "cin >> arr . size ( ) ;",
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "cin >> arr . size ( ) ;",
        "char arr [ n ] ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘size’ in ‘arr’, which is of non-class type ‘char [n]’"
    },
    {
      "mod_line": [
        20,
        13
      ],
      "mod_code": [
        "else if ( arr [ i ] == ' Octahedron \" )",
        "char arr [ n ] ;"
      ],
      "err_line": 20,
      "err_msg": "missing terminating ' character"
    }
  ]
}