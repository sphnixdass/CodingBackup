{
  "meta": {
    "index": 997,
    "hitid": "37PGLWGSJT0IVQNYZNE0GG27LVFKI2",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1000A",
    "subid": "46243301"
  },
  "lines": [
    {
      "line": 0,
      "text": "create a map from strings to integers with name str",
      "code": "map < string , int > str ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create new integer called t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer variable with name ans with value 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to t exclusive",
      "code": "for ( int i = 0 ; i < t ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare string variable with name s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read s from the input",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment str [ s ]",
      "code": "str [ s ] ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "in a for loop , change i from 0 to t exclusive incrementing i",
      "code": "for ( int i = 0 ; i < t ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "s is a new string variable",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read s from the input",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if str [ s ] is greater than 0",
      "code": "if ( str [ s ] > 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "decrement str [ s ] by one",
      "code": "str [ s ] -- ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < map < string > str ;"
      ],
      "err_line": 0,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int t = s . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "string s = s . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        12,
        11
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "s = getchar ( ) ;",
        "int s ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        12,
        11,
        19
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "s = getchar ( ) ;",
        "int s ;",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        12,
        11,
        7
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "s = getchar ( ) ;",
        "int s ;",
        "s = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        12,
        11,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "s = getchar ( ) ;",
        "int s ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        12,
        19,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "s = getchar ( ) ;",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        12,
        7,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "s = getchar ( ) ;",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        12,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "int s ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        11,
        19
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "int s ;",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        11,
        19,
        7
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "int s ;",
        "cout << ans ;",
        "s = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        11,
        19,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "int s ;",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11,
        7
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "int s ;",
        "s = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        11,
        7,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "int s ;",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "int s ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        19,
        7,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "cout << ans ;",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        19,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "if ( str [ s ] > ' 0 ' )",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "int s ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        12,
        11,
        19
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "int s ;",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        12,
        11,
        19,
        7
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "int s ;",
        "cout << ans ;",
        "s = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        12,
        11,
        19,
        3
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "int s ;",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        7
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "int s ;",
        "s = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        12,
        11,
        7,
        3
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "int s ;",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        3
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "int s ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        19,
        7,
        3
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "cout << ans ;",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        19,
        3
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        3
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "int s ;",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        19,
        7
      ],
      "mod_code": [
        "int s ;",
        "cout << ans ;",
        "s = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        19,
        7,
        3
      ],
      "mod_code": [
        "int s ;",
        "cout << ans ;",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        19,
        3
      ],
      "mod_code": [
        "int s ;",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "int s ;",
        "s = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        7,
        3
      ],
      "mod_code": [
        "int s ;",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "int s ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        7,
        3
      ],
      "mod_code": [
        "cout << ans ;",
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "s = getchar ( ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}