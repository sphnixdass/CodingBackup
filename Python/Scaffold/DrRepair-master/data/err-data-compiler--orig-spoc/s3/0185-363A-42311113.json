{
  "meta": {
    "index": 185,
    "hitid": "3N3WJQXELSKP4BREVK598085LZJL2R",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "363A",
    "subid": "42311113"
  },
  "lines": [
    {
      "line": 0,
      "text": "set string a to O - |",
      "code": "string a = \" O-| \" ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "b = - O |",
      "code": "string b = \" -O| \" ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create long long n",
      "code": "long long n ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let x be long long",
      "code": "long long x ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if n = 0 , print a , - OOOO",
      "code": "if ( n == 0 ) cout << a << \" -OOOO \" << endl ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while n greater than 0",
      "code": "while ( n > 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "x = n mod 10",
      "code": "x = n % 10 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if x > = 5",
      "code": "if ( x >= 5 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print b",
      "code": "cout << b ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "x = x - 5",
      "code": "x = x - 5 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print a",
      "code": "cout << a ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if x equal to 0",
      "code": "if ( x == 0 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print -",
      "code": "cout << \" - \" ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "otherwise",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "print O",
      "code": "cout << \" O \" ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "decrement y",
      "code": "x -- ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print a newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "n = n / 10",
      "code": "n = n / 10 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string a = 1e-9 ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "b = 1e-9 ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "y -- ;"
      ],
      "err_line": 20,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "b = ' O ' ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "return else ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "-- y ;"
      ],
      "err_line": 20,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        6
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        6,
        10
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        6,
        13
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        6,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        6,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "cout << b << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        10,
        13
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "cout << b << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        10,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        10,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "cout << b << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        13
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "cout << a << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        17,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        1,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "b = 1e-9 ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        10
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        10,
        13
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        10,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        10,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        13
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        13,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        13,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        17,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        6,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << b << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        10,
        13
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << b << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        10,
        13,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << b << endl ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        10,
        13,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << b << endl ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        10,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        10,
        17,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        10,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << b << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << a << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        13,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        13,
        17,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        13,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        17,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "string a = 1e-9 ;",
        "y -- ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        10
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        10,
        13
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        10,
        17
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        10,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        13
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        17
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        17
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        17,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << b << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10,
        13
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << b << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10,
        13,
        17
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << b << endl ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10,
        13,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << b << endl ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10,
        17
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10,
        17,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << b << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << a << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        17
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        17,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        17,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "b = 1e-9 ;",
        "y -- ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        13
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        17
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        20
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        17
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        20
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        20
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << b << endl ;",
        "y -- ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        17
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        20
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        20
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        20
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "if ( n == 0 ) cout << a << \" \" << - OOOO << endl ;",
        "y -- ;"
      ],
      "err_line": 6,
      "err_msg": "‘OOOO’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << b << endl ;",
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 20,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << b << endl ;",
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 20,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        17,
        20
      ],
      "mod_code": [
        "cout << b << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 20,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        20
      ],
      "mod_code": [
        "cout << b << endl ;",
        "y -- ;"
      ],
      "err_line": 20,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 20,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "cout << a << endl ;",
        "y -- ;"
      ],
      "err_line": 20,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "y -- ;"
      ],
      "err_line": 20,
      "err_msg": "‘y’ was not declared in this scope"
    }
  ]
}