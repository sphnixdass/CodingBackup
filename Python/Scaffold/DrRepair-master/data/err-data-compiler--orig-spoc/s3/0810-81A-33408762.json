{
  "meta": {
    "index": 810,
    "hitid": "3TZDZ3Y0JS0NEO89NJ25Y875TZN910",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "81A",
    "subid": "33408762"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string array",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = ( s . length ( ) - 1 ) to greater than or equal to 0 do the following",
      "code": "for ( int i = ( s . length ( ) - 1 ) ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if s [ i ] is s [ i + 1 ] then do the following s . erase ( i , 2 )",
      "code": "if ( s [ i ] == s [ i + 1 ] ) s . erase ( i , 2 ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "output s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = ( s . length ( ) - 1 ) ; i >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s [ 101 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = ( s . length ( ) - 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( int i = ( s . length ( ) - 1 ) ; i >= 0 )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "for ( int i = ( s . length ( ) - 1 ) ; i >= 0 )",
        "s >> s ;",
        "string s [ 101 ] ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’ and ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( int i = ( s . length ( ) - 1 ) ; i >= 0 )",
        "string s [ 101 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’)"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "string s [ 101 ] ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’ and ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        1,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "string s [ 101 ] ;",
        "for ( int i = ( s . length ( ) - 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’ and ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = ( s . length ( ) - 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "string s [ 101 ] ;",
        "for ( int i = ( s . length ( ) - 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’)"
    }
  ]
}