{
  "meta": {
    "index": 2679,
    "hitid": "3OJX0UFJ0Z13NLZ7P7CP9AC24WUU9U",
    "workerid": "A1AYVATMT88U1W",
    "probid": "785A",
    "subid": "48911187"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n is an integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let total be integer 0",
      "code": "int total = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let tmp be a string",
      "code": "string tmp ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read tmp",
      "code": "cin >> tmp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : : tolower )",
      "code": "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , :: tolower ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if tmp . compare ( \" tetrahedron \" ) equals 0",
      "code": "if ( tmp . compare ( \" tetrahedron \" ) == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increase total by 4",
      "code": "total += 4 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if if tmp . compare ( \" cube \" ) equals 0",
      "code": "else if ( tmp . compare ( \" cube \" ) == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increase total by 6",
      "code": "total += 6 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if if tmp . compare ( \" octahedron \" ) equals 0",
      "code": "else if ( tmp . compare ( \" octahedron \" ) == 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increase total by 8",
      "code": "total += 8 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if if tmp . compare ( \" dodecahedron \" ) equals 0",
      "code": "else if ( tmp . compare ( \" dodecahedron \" ) == 0 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increase total by 12",
      "code": "total += 12 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else if if tmp . compare ( \" icosahedron \" ) equals 0",
      "code": "else if ( tmp . compare ( \" icosahedron \" ) == 0 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increase total by 20",
      "code": "total += 20 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print total and newline",
      "code": "cout << total << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘:’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "total = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char tmp ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘:’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "char tmp ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "char tmp ;",
        "total = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        16
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "char tmp ;",
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        8
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "char tmp ;",
        "total = 0 ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        16
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "char tmp ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        3,
        16,
        8
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "char tmp ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        3,
        8
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "char tmp ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "total = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        16
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        16,
        8
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        8
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "total = 0 ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘:’ token"
    },
    {
      "mod_line": [
        7,
        16,
        8
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘:’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "transform ( tmp . begin ( ) , tmp . end ( ) , tmp . begin ( ) , : ( ) ) ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "char tmp ;",
        "total = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        16
      ],
      "mod_code": [
        "char tmp ;",
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        16,
        8
      ],
      "mod_code": [
        "char tmp ;",
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        16,
        7
      ],
      "mod_code": [
        "char tmp ;",
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "char tmp ;",
        "total = 0 ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        8,
        7
      ],
      "mod_code": [
        "char tmp ;",
        "total = 0 ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        7
      ],
      "mod_code": [
        "char tmp ;",
        "total = 0 ;",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "char tmp ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        16,
        8
      ],
      "mod_code": [
        "char tmp ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        16,
        8,
        7
      ],
      "mod_code": [
        "char tmp ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        16,
        7
      ],
      "mod_code": [
        "char tmp ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "char tmp ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        8,
        7
      ],
      "mod_code": [
        "char tmp ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "char tmp ;",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘tmp’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        16,
        8
      ],
      "mod_code": [
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        16,
        8,
        7
      ],
      "mod_code": [
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        16,
        7
      ],
      "mod_code": [
        "total = 0 ;",
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "total = 0 ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        7
      ],
      "mod_code": [
        "total = 0 ;",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "total = 0 ;",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘total’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        7
      ],
      "mod_code": [
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘:’ token"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "else if ( ! ( tmp . compare ( \" icosahedron \" ) ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘:’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( ! tmp . compare ( \" tetrahedron \" ) == 0 )",
        "transform ( tmp . begin ( ) , tmp . end ( ) , : ( begin , : ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘:’ token"
    }
  ]
}