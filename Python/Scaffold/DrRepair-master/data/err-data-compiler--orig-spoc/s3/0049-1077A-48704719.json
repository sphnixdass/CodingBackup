{
  "meta": {
    "index": 49,
    "hitid": "3D5G8J4N5AYMKFXLS3RBWWFXCA3VTH",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "1077A",
    "subid": "48704719"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function fastpow with arguments of long long base and long long exp that returns a long long",
      "code": "long long fastpow ( long long base , long long exp )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "res = long long = 1",
      "code": "long long res = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while exp > 0",
      "code": "while ( exp > 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if exp is odd , then res = ( res * base ) modulo 1000000009",
      "code": "if ( exp % 2 == 1 ) res = ( res * base ) % 1000000009 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "base = ( base * base ) % 1000000009",
      "code": "base = ( base * base ) % 1000000009 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "exp = exp / 2",
      "code": "exp /= 2 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return res modulo 1000000009",
      "code": "return res % 1000000009 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "in function ask with argument of long long a that returns a long long",
      "code": "long long ask ( long long a )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "print 1 a",
      "code": "cout << 1 << \" \" << a << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "x = long long",
      "code": "long long x ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return x",
      "code": "return x ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 16,
      "text": "testcases = long long",
      "code": "long long testcases ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read testcases",
      "code": "cin >> testcases ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "while looping decrease testcases by 1",
      "code": "while ( testcases -- )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "a , b , k = long long",
      "code": "long long a , b , k ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "read a , b , k",
      "code": "cin >> a >> b >> k ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if k is even",
      "code": "if ( k % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print ( k / 2 ) * ( a - b )",
      "code": "cout << ( k / 2 ) * ( a - b ) << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print ( ( k - 1 ) / 2 ) * ( a - b ) + a",
      "code": "cout << ( ( k - 1 ) / 2 ) * ( a - b ) + a << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        23,
        18
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "do",
        "while ( -- testcases )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        23,
        18,
        17
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "do",
        "while ( -- testcases )",
        "cout << testcases ;"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        23,
        17
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "do",
        "cout << testcases ;"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        18
      ],
      "mod_code": [
        "do",
        "while ( -- testcases )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        18,
        17
      ],
      "mod_code": [
        "do",
        "while ( -- testcases )",
        "cout << testcases ;"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        17
      ],
      "mod_code": [
        "do",
        "cout << testcases ;"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}