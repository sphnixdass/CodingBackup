{
  "meta": {
    "index": 1828,
    "hitid": "39WSF6KUV2FP5C6R1WG22ILOD7LOEK",
    "workerid": "AIWEXPJAU66D9",
    "probid": "732A",
    "subid": "41918823"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new ints a and b",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "loop , reading a and b from the input",
      "code": "while ( cin >> a >> b )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create new ints ans and flag = 0",
      "code": "int ans = 0 , flag = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "increment i in a for loop from 1 to 10",
      "code": "for ( int i = 1 ; i <= 10 ; i ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if i * a % 10 = 0 or ( i * a - b ) % 10 = 0",
      "code": "if ( i * a % 10 == 0 || ( i * a - b ) % 10 == 0 )",
      "indent": 3
    },
    {
      "line": 6,
      "text": "assign i to ans",
      "code": "ans = i ;",
      "indent": 4
    },
    {
      "line": 7,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        7
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "cout << ans ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        7,
        6
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "cout << ans ;",
        "do",
        "int ans = i ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        7,
        2
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "cout << ans ;",
        "do",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        2
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "cout << ans ;",
        "int ans = i ;",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        10,
        2
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "cout << ans ;",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "do",
        "int ans = i ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        2
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "do",
        "int ans = i ;",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "do",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "int ans = i ;",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( i * a % 10 == 0 || ( i * a - b ) % 10 )",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "cout << ans ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        7,
        6
      ],
      "mod_code": [
        "cout << ans ;",
        "do",
        "int ans = i ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        7,
        6,
        2
      ],
      "mod_code": [
        "cout << ans ;",
        "do",
        "int ans = i ;",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        7,
        2
      ],
      "mod_code": [
        "cout << ans ;",
        "do",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        6,
        2
      ],
      "mod_code": [
        "cout << ans ;",
        "int ans = i ;",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << ans ;",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "do",
        "int ans = i ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        6,
        2
      ],
      "mod_code": [
        "do",
        "int ans = i ;",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "do",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "int ans = i ;",
        "while ( cin >> a >> b ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    }
  ]
}