{
  "meta": {
    "index": 658,
    "hitid": "3VMHWJRYHVA45ZKFXYN43DXH0ANXFT",
    "workerid": "A1APYLD4DUK33J",
    "probid": "5A",
    "subid": "35880219"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer olnum with olnum = 0",
      "code": "int olnum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integers charnum , charsum with charnum = 0 , charsum = 0",
      "code": "int charnum = 0 , charsum = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while read line from cin to s",
      "code": "while ( getline ( cin , s ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ 0 ] is ' + '",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment olnum",
      "code": "olnum ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if s [ 0 ] is ' - '",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrement olnum",
      "code": "olnum -- ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = 1 to size of s exclusive",
      "code": "for ( int i = 1 ; i < s . size ( ) ; i ++ )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if value of s at index i is ' : '",
      "code": "if ( s . at ( i ) == ' : ' )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increment charnum by size of s - i - 1",
      "code": "charnum += s . size ( ) - i - 1 ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "increment charsum by charnum * olnum",
      "code": "charsum += charnum * olnum ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set charnum by 0",
      "code": "charnum = 0 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print charsum print newline",
      "code": "cout << charsum << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        17
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        17,
        9
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        17,
        14
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        17,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        14
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        14
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        14,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        7,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "charnum -= 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        17,
        9
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "charnum -= 0 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        17,
        9,
        14
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "charnum -= 0 ;",
        "do",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        17,
        9,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "charnum -= 0 ;",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        17,
        14
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "charnum -= 0 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        17,
        14,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "charnum -= 0 ;",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        17,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "charnum -= 0 ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        9,
        14
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "do",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        9,
        14,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "do",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        9,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        14,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int charnum , charsum = 0 , charsum ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int charsum’"
    },
    {
      "mod_line": [
        7,
        17,
        9
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        17,
        9,
        14
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;",
        "do",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        17,
        9,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        17,
        14
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        17,
        14,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        17,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "charnum -= 0 ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        9,
        14
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        9,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        14,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "charnum -= 0 ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        9,
        14
      ],
      "mod_code": [
        "charnum -= 0 ;",
        "do",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        9,
        14,
        4
      ],
      "mod_code": [
        "charnum -= 0 ;",
        "do",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        17,
        9,
        4
      ],
      "mod_code": [
        "charnum -= 0 ;",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        17,
        14
      ],
      "mod_code": [
        "charnum -= 0 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        14,
        4
      ],
      "mod_code": [
        "charnum -= 0 ;",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "charnum -= 0 ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        14,
        4
      ],
      "mod_code": [
        "do",
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "do",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    }
  ]
}