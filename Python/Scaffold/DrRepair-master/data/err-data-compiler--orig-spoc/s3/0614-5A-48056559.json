{
  "meta": {
    "index": 614,
    "hitid": "31KSVEGZ34MMJPKYEORCIJXTUWSRWP",
    "workerid": "AIWEXPJAU66D9",
    "probid": "5A",
    "subid": "48056559"
  },
  "lines": [
    {
      "line": 0,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let active be integer = 0",
      "code": "int active = 0 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let ans be long long = 0",
      "code": "long long ans = 0 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read line into s in the loop",
      "code": "while ( getline ( cin , s ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ 0 ] = ' + '",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment active",
      "code": "++ active ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if s [ 0 ] = ' - '",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrease active",
      "code": "-- active ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for integer i = 0 to length of s - 1 inclusive",
      "code": "for ( int i = 0 ; i <= s . length ( ) - 1 ; ++ i )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if s [ i ] = ' : '",
      "code": "if ( s [ i ] == ' : ' )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increase ans by active * ( length of s - i - 1 )",
      "code": "ans += active * ( s . length ( ) - i - 1 ) ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print ans and \" \\ n \"",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "active = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "loop >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘loop’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 13,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        0
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "char s ;"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        0,
        7
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        0,
        13
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "char s ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        0,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "char s ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        7
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        7,
        13
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        7,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "else if ( s [ 0 ] == \" - ' )",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        13
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        13,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "active = 0 ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        0,
        7
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        0,
        7,
        13
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        0,
        7,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        0,
        13
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        0,
        13,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s ;",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        0,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        13
      ],
      "mod_code": [
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "while ( cin >> s )",
        "stop ;"
      ],
      "err_line": 13,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        11
      ],
      "mod_code": [
        "while ( cin >> s )",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 13,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "active = 0 ;",
        "char s ;"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        1,
        0,
        7
      ],
      "mod_code": [
        "active = 0 ;",
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        0,
        7,
        13
      ],
      "mod_code": [
        "active = 0 ;",
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        0,
        7,
        11
      ],
      "mod_code": [
        "active = 0 ;",
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        0,
        13
      ],
      "mod_code": [
        "active = 0 ;",
        "char s ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        1,
        0,
        13,
        11
      ],
      "mod_code": [
        "active = 0 ;",
        "char s ;",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        1,
        0,
        11
      ],
      "mod_code": [
        "active = 0 ;",
        "char s ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "active = 0 ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        7,
        13
      ],
      "mod_code": [
        "active = 0 ;",
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        7,
        13,
        11
      ],
      "mod_code": [
        "active = 0 ;",
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        7,
        11
      ],
      "mod_code": [
        "active = 0 ;",
        "else if ( s [ 0 ] == \" - ' )",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "active = 0 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        11
      ],
      "mod_code": [
        "active = 0 ;",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "active = 0 ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘active’ does not name a type"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        7,
        13
      ],
      "mod_code": [
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        7,
        13,
        11
      ],
      "mod_code": [
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        7,
        11
      ],
      "mod_code": [
        "char s ;",
        "else if ( s [ 0 ] == \" - ' )",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "char s ;",
        "stop ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        0,
        13,
        11
      ],
      "mod_code": [
        "char s ;",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "char s ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        13,
        11
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )",
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )",
        "if ( ! s [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "stop ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 13,
      "err_msg": "‘stop’ was not declared in this scope"
    }
  ]
}