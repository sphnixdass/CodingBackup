{
  "meta": {
    "index": 1873,
    "hitid": "34O39PNDK62UVMMNJXVGV5K8LXKBR8",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "447A",
    "subid": "40911443"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "p , number = integers",
      "code": "int p , number ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read p and number",
      "code": "while ( cin >> p >> number )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = set of integer",
      "code": "set < int > s ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "temp = array of size number",
      "code": "int temp [ number ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 0 to number , read temp [ i ]",
      "code": "for ( int i = 0 ; i < number ; i ++ ) { cin >> temp [ i ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to number",
      "code": "for ( int i = 0 ; i < number ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s . count ( temp [ i ] modulo p ) is 0",
      "code": "if ( s . count ( temp [ i ] % p ) == 0 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "s . insert ( temp [ i ] modulo p )",
      "code": "s . insert ( temp [ i ] % p ) ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if i is number - 1",
      "code": "if ( i == number - 1 )",
      "indent": 4
    },
    {
      "line": 10,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else if s . count ( temp [ i ] modulo p ) is 1",
      "code": "else if ( s . count ( temp [ i ] % p ) == 1 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print i + 1",
      "code": "cout << i + 1 << endl ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> p >> y )"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "temp [ number ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        8,
        9
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        8,
        9,
        3
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        8,
        9,
        13
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        8,
        9,
        15
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        8,
        3
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        8,
        3,
        13
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        8,
        3,
        15
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "int s ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        8,
        13
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        8,
        13,
        15
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        8,
        15
      ],
      "mod_code": [
        "do",
        "s . insert ( ( temp [ i ] % p ) ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "do",
        "if ( i == number )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        9,
        3
      ],
      "mod_code": [
        "do",
        "if ( i == number )",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        9,
        3,
        13
      ],
      "mod_code": [
        "do",
        "if ( i == number )",
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        9,
        3,
        15
      ],
      "mod_code": [
        "do",
        "if ( i == number )",
        "int s ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        9,
        13
      ],
      "mod_code": [
        "do",
        "if ( i == number )",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        9,
        13,
        15
      ],
      "mod_code": [
        "do",
        "if ( i == number )",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        9,
        15
      ],
      "mod_code": [
        "do",
        "if ( i == number )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "do",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        3,
        13
      ],
      "mod_code": [
        "do",
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        3,
        13,
        15
      ],
      "mod_code": [
        "do",
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        3,
        15
      ],
      "mod_code": [
        "do",
        "int s ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "do",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        13,
        15
      ],
      "mod_code": [
        "do",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        9,
        3
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9,
        3,
        13
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )",
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9,
        3,
        15
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )",
        "int s ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9,
        13
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        15
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "if ( i == number )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        3,
        13
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        3,
        13,
        15
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        3,
        15
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "int s ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        13,
        15
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "s . insert ( ( temp [ i ] % p ) ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( i == number )",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        3,
        13
      ],
      "mod_code": [
        "if ( i == number )",
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        3,
        13,
        15
      ],
      "mod_code": [
        "if ( i == number )",
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        3,
        15
      ],
      "mod_code": [
        "if ( i == number )",
        "int s ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        15
      ],
      "mod_code": [
        "if ( i == number )",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "if ( i == number )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        13,
        15
      ],
      "mod_code": [
        "int s ;",
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "int s ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘count’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "else if ( ! s . count ( temp [ i ] % p ) == 1 )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}