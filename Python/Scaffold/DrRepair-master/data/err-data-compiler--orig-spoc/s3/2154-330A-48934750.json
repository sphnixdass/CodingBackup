{
  "meta": {
    "index": 2154,
    "hitid": "30U1YOGZGAQZBYKKCIMRG5D49XLDS0",
    "workerid": "AIWEXPJAU66D9",
    "probid": "330A",
    "subid": "48934750"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m and cnt be integers with cnt = 0",
      "code": "int n , m , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let row and col be boolean arrays with size 12",
      "code": "bool row [ 12 ] = { } , col [ 12 ] = { } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare character variable c",
      "code": "char c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if c = ' S ' , put 1 in row [ i ] and col [ j ]",
      "code": "if ( c == ' S ' ) row [ i ] = col [ j ] = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for integer j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if ! ( row [ i ] and col [ j ] ) , increment cnt",
      "code": "if ( ! ( row [ i ] && col [ j ] ) ) cnt ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print cnt and ' \\ n '",
      "code": "cout << cnt << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] . push_back ( ' S ' ) ; }"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘push_back’ in ‘row[i]’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        8,
        13,
        7
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        7,
        3
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "gets ( c ) ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        7,
        6
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "gets ( c ) ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        3
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        3,
        6
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        6
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        3
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "gets ( c ) ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        3,
        6
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "gets ( c ) ;",
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        3,
        13
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "gets ( c ) ;",
        "char s ;",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        6
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "gets ( c ) ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        6,
        13
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "gets ( c ) ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        13
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "gets ( c ) ;",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        6
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        6,
        13
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        13
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "char s ;",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        13
      ],
      "mod_code": [
        "if ( c == ' S ' ) { row [ i ] ++ ; }",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        3
      ],
      "mod_code": [
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "gets ( c ) ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        3,
        6
      ],
      "mod_code": [
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "gets ( c ) ;",
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        6
      ],
      "mod_code": [
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "gets ( c ) ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3,
        6
      ],
      "mod_code": [
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "if ( ! ! ( row [ i ] , col [ j ] ) ) cnt ++ ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "gets ( c ) ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "gets ( c ) ;",
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        6,
        13
      ],
      "mod_code": [
        "gets ( c ) ;",
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        13
      ],
      "mod_code": [
        "gets ( c ) ;",
        "char s ;",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "gets ( c ) ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        13
      ],
      "mod_code": [
        "gets ( c ) ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "gets ( c ) ;",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        13
      ],
      "mod_code": [
        "char s ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "char s ;",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ! ( row [ i ] , col [ j ] ) ) cnt ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}