{
  "meta": {
    "index": 2656,
    "hitid": "335VBRURDJUMYP2LZ7XK5SQZI80E9X",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "785A",
    "subid": "49037689"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer as n",
      "code": "long int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "long long integer as jumlah = 0",
      "code": "long long jumlah = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to less than n do the following",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "S = string array",
      "code": "string S ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read S",
      "code": "cin >> S ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if S is Tetrahedron then do the following",
      "code": "if ( S == \" Tetrahedron \" )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set jumlah to jumlah + 4",
      "code": "jumlah = jumlah + 4 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if S is Octahedron then do the following",
      "code": "else if ( S == \" Octahedron \" )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set jumlah to jumlah + 8",
      "code": "jumlah = jumlah + 8 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if S is Cube then do the following",
      "code": "else if ( S == \" Cube \" )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set jumlah to jumlah + 6",
      "code": "jumlah = jumlah + 6 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if S is Dodecahedron then do the following",
      "code": "else if ( S == \" Dodecahedron \" )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set jumlah to jumlah + 12",
      "code": "jumlah = jumlah + 12 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if S is Icosahedron then do the following",
      "code": "else if ( S == \" Icosahedron \" )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set jumlah to jumlah + 20",
      "code": "jumlah = jumlah + 20 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "output jumlah",
      "code": "cout << jumlah << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "while ( S == Tetrahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( S == Octahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( S == Cube )"
      ],
      "err_line": 11,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( S == Dodecahedron )"
      ],
      "err_line": 13,
      "err_msg": "‘Dodecahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( S == Icosahedron )"
      ],
      "err_line": 15,
      "err_msg": "‘Icosahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string S [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [101] {aka std::__cxx11::basic_string<char> [101]}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( S == Tetrahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( ! Octahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( ! Cube )"
      ],
      "err_line": 11,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( ! Dodecahedron )"
      ],
      "err_line": 13,
      "err_msg": "‘Dodecahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( ! Icosahedron )"
      ],
      "err_line": 15,
      "err_msg": "‘Icosahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Octahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        11
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Octahedron )",
        "else if ( S == Cube )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        13
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Octahedron )",
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        15
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Octahedron )",
        "else if ( S == Cube )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        13
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Octahedron )",
        "else if ( S == Dodecahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        15
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Octahedron )",
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        15
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Octahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Cube )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        13
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        15
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        9
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        15
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Cube )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        9
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Cube )",
        "else if ( S == Icosahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        9
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Cube )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Dodecahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        15
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        9
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        9
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Dodecahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        9
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( S == Icosahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "while ( S == Tetrahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 7,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "else if ( S == Octahedron )",
        "else if ( S == Cube )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "else if ( S == Octahedron )",
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        15
      ],
      "mod_code": [
        "else if ( S == Octahedron )",
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15
      ],
      "mod_code": [
        "else if ( S == Octahedron )",
        "else if ( S == Cube )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "else if ( S == Octahedron )",
        "else if ( S == Dodecahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15
      ],
      "mod_code": [
        "else if ( S == Octahedron )",
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "else if ( S == Octahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )"
      ],
      "err_line": 11,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        15
      ],
      "mod_code": [
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 11,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        9
      ],
      "mod_code": [
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        9
      ],
      "mod_code": [
        "else if ( S == Cube )",
        "else if ( S == Dodecahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "else if ( S == Cube )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 11,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        9
      ],
      "mod_code": [
        "else if ( S == Cube )",
        "else if ( S == Icosahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "else if ( S == Cube )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )"
      ],
      "err_line": 13,
      "err_msg": "‘Dodecahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        9
      ],
      "mod_code": [
        "else if ( S == Dodecahedron )",
        "else if ( S == Icosahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "else if ( S == Dodecahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "else if ( S == Icosahedron )",
        "else if ( ! Octahedron )"
      ],
      "err_line": 9,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    }
  ]
}