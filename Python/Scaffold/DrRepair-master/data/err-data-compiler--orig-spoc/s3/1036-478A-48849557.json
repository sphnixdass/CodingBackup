{
  "meta": {
    "index": 1036,
    "hitid": "379OL9DBSS8K4UJCZ89ECVIF0KV9YX",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "478A",
    "subid": "48849557"
  },
  "lines": [
    {
      "line": 0,
      "text": "MOD = constant integer with value of 1e9 + 7",
      "code": "const int MOD = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function pow that returns a long long and takes arguments a , b = long long",
      "code": "long long pow ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "ans = long long with value of 1",
      "code": "long long ans = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while b is not 0",
      "code": "while ( b )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if b bitwise and 1 is true then set ans to ( ans * a ) mod MOD",
      "code": "if ( b & 1 ) ans = ( ans * a ) % MOD ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set b to b / 2",
      "code": "b /= 2 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set a to ( a * a ) mod MOD",
      "code": "a = ( a * a ) % MOD ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return ans",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "c1 , c2 , c3 , c4 , c5 = integers",
      "code": "int c1 , c2 , c3 , c4 , c5 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read c1 , c2 , c3 , c4 and c5",
      "code": "cin >> c1 >> c2 >> c3 >> c4 >> c5 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "s = integer with value of c1 + c2 + c3 + c4 + c5",
      "code": "int s = c1 + c2 + c3 + c4 + c5 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if s equals 0",
      "code": "if ( s == 0 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print - 1",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if s mod 5 equals 0",
      "code": "if ( s % 5 == 0 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print s / 5",
      "code": "cout << s / 5 << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print - 1",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long pow ( long long a )"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long ans -= 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "a = ( a * a ) mod ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        12
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        12,
        6
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        12,
        17
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        12,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        6
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "a = ( a * a ) mod ;"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        6,
        17
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        6,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        17
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        17,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "if ( s == ' 0 ' )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        6
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        6,
        17
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        6,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        17
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        17,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "a = ( a * a ) mod ;"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        17
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        17,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "a = ( a * a ) mod ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        17,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "long long pow ( long long a )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12,
        6
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        14,
        12,
        6,
        17
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        14,
        12,
        6,
        20
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        14,
        12,
        17
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        12,
        17,
        20
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        12,
        20
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "a = ( a * a ) mod ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        14,
        6,
        17
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        14,
        6,
        17,
        20
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "a = ( a * a ) mod ;",
        "do",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        14,
        6,
        20
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        20
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "do",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "if ( s == ' 0 ' )",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        12,
        6,
        17
      ],
      "mod_code": [
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        12,
        6,
        17,
        20
      ],
      "mod_code": [
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;",
        "do",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        12,
        6,
        20
      ],
      "mod_code": [
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        17,
        20
      ],
      "mod_code": [
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "cin >> c1 >> c1 >> c3 >> c4 >> c5 ;",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        6,
        17,
        20
      ],
      "mod_code": [
        "a = ( a * a ) mod ;",
        "do",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "a = ( a * a ) mod ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}