{
  "meta": {
    "index": 1658,
    "hitid": "3SX4X51T803MFZPFLREG6ZVXSSMOAO",
    "workerid": "A1AYVATMT88U1W",
    "probid": "70A",
    "subid": "48540312"
  },
  "lines": [
    {
      "line": 0,
      "text": "let fastMax be a function that accepts integers x , y and returns a integer",
      "code": "int fastMax ( int x , int y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return the value of ( ( ( y - x ) > > ( 32 - 1 ) ) & ( x ^ y ) ) ^ y",
      "code": "return ( ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let fastMin be a function that accepts integers x , y and returns a integer",
      "code": "int fastMin ( int x , int y )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "return the value of ( ( ( y - x ) > > ( 32 - 1 ) ) & ( x ^ y ) ) ^ x",
      "code": "return ( ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "let MOD be a constant long integer with MOD = 1e6 + 3",
      "code": "const long long int MOD = 1e6 + 3 ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "let MAXN be a constant long integer with MAXN = 1001",
      "code": "const long long int MAXN = 1001 ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "first = array of long integers of length MAXN",
      "code": "long long int first [ MAXN ] ;",
      "indent": 0
    },
    {
      "line": 9,
      "text": "let n be a long integer",
      "code": "long long int n ;",
      "indent": 0
    },
    {
      "line": 10,
      "text": "let solve be a void function",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "first [ 0 ] is equal to first [ 1 ] is equal to 1",
      "code": "first [ 0 ] = first [ 1 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for long integer i = 2 to MAXN exclusive , first [ i ] is equal to ( 3 * first [ i - 1 ] ) modulo MOD",
      "code": "for ( long long int i = 2 ; i < MAXN ; i ++ ) { first [ i ] = ( 3 * first [ i - 1 ] ) % MOD ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print first [ n ] and newline",
      "code": "cout << first [ n ] << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "let t be a long integer",
      "code": "long long int t ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "t is equal to 1",
      "code": "t = 1 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "while t is decremented by 1 , call the solve function",
      "code": "while ( t -- ) solve ( ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "void solve ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 13,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "t = l ;"
      ],
      "err_line": 18,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        10
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;",
        "void solve ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        18
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;",
        "t = l ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        10
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        10,
        18
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "void solve ( ) ;",
        "t = l ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        10,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "void solve ( ) ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        18
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "t = l ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "first [ 0 ] = first [ 1 ] ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        10
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "cin >> N ;",
        "void solve ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        10,
        18
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "cin >> N ;",
        "void solve ( ) ;",
        "t = l ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        10,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "cin >> N ;",
        "void solve ( ) ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        18
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "cin >> N ;",
        "t = l ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "cin >> N ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "cin >> N ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "void solve ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        18
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "void solve ( ) ;",
        "t = l ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        18,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "void solve ( ) ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "void solve ( ) ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "t = l ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        18,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;"
      ],
      "err_line": 13,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        10
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;",
        "void solve ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        10,
        18
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;",
        "void solve ( ) ;",
        "t = l ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        10,
        1
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;",
        "void solve ( ) ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        18
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;",
        "t = l ;"
      ],
      "err_line": 13,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        1
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        1
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "cin >> N ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        10,
        18
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "void solve ( ) ;",
        "t = l ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        10,
        18,
        1
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "void solve ( ) ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10,
        1
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "void solve ( ) ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "t = l ;"
      ],
      "err_line": 18,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        1
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "first [ 0 ] = first [ 1 ] ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "void solve ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        10,
        18
      ],
      "mod_code": [
        "cin >> N ;",
        "void solve ( ) ;",
        "t = l ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        10,
        18,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "void solve ( ) ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        10,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "void solve ( ) ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "cin >> N ;",
        "t = l ;"
      ],
      "err_line": 13,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "void solve ( ) ;",
        "t = l ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        18,
        1
      ],
      "mod_code": [
        "void solve ( ) ;",
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "void solve ( ) ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        18,
        1
      ],
      "mod_code": [
        "t = l ;",
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}