{
  "meta": {
    "index": 1930,
    "hitid": "3UEDKCTP9VKL6662GWA3PRCY6S57KK",
    "workerid": "A1APYLD4DUK33J",
    "probid": "626A",
    "subid": "36367615"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integers c , c1 , x , y , with c = 0 , c1 = 0",
      "code": "int c = 0 , c1 = 0 , x , y ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set c to 0",
      "code": "c = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set c to 0 , set y to 0",
      "code": "x = 0 , y = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for j = i to n exclusive",
      "code": "for ( int j = i ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if s [ j ] is ' R '",
      "code": "if ( s [ j ] == ' R ' )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else if s [ j ] is ' U '",
      "code": "else if ( s [ j ] == ' U ' )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else if s [ j ] is ' L '",
      "code": "else if ( s [ j ] == ' L ' )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else if s [ j ] is ' D '",
      "code": "else if ( s [ j ] == ' D ' )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if x is 0 and y is 0 , increment cnt",
      "code": "if ( x == 0 && y == 0 ) { c ++ ; }",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if c is greater than 0 , set c1 to c1 + c",
      "code": "if ( c > 0 ) { c1 = c1 + c ; }",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print c1 print newline",
      "code": "cout << c1 << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) { cnt ++ ; }"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "if ( x == 0 && y == 0 ) cnt ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        14
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "else if ( ! s [ j ] == ' L ' )"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        14,
        10
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "else if ( ! s [ j ] == ' L ' )",
        "if ( ! s [ j ] )"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        14,
        3
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "else if ( ! s [ j ] == ' L ' )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        19,
        10
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "if ( ! s [ j ] )"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        10,
        3
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        19,
        3
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        10,
        3
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "else if ( ! s [ j ] == ' L ' )",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        3
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "else if ( ! s [ j ] == ' L ' )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        10,
        3
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "c = 0 , y = 0 ;",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "int c = 0 , y = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        8,
        14
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "int c = 0 , y = 0 ;",
        "else if ( ! s [ j ] == ' L ' )"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        8,
        14,
        10
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "int c = 0 , y = 0 ;",
        "else if ( ! s [ j ] == ' L ' )",
        "if ( ! s [ j ] )"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        8,
        14,
        3
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "int c = 0 , y = 0 ;",
        "else if ( ! s [ j ] == ' L ' )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        8,
        10
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "int c = 0 , y = 0 ;",
        "if ( ! s [ j ] )"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        8,
        10,
        3
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "int c = 0 , y = 0 ;",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        8,
        3
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "int c = 0 , y = 0 ;",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        14
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "else if ( ! s [ j ] == ' L ' )"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        14,
        10
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "else if ( ! s [ j ] == ' L ' )",
        "if ( ! s [ j ] )"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        14,
        10,
        3
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "else if ( ! s [ j ] == ' L ' )",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        14,
        3
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "else if ( ! s [ j ] == ' L ' )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        10
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "if ( ! s [ j ] )"
      ],
      "err_line": 19,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        10,
        3
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "if ( x == 0 && y == 0 ) cnt ++ ;",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        10,
        3
      ],
      "mod_code": [
        "int c = 0 , y = 0 ;",
        "else if ( ! s [ j ] == ' L ' )",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        3
      ],
      "mod_code": [
        "int c = 0 , y = 0 ;",
        "else if ( ! s [ j ] == ' L ' )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        10,
        3
      ],
      "mod_code": [
        "int c = 0 , y = 0 ;",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "int c = 0 , y = 0 ;",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        10,
        3
      ],
      "mod_code": [
        "else if ( ! s [ j ] == ' L ' )",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "else if ( ! s [ j ] == ' L ' )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}