{
  "meta": {
    "index": 2642,
    "hitid": "3M47JKRKCXVI75QWOX88T83BH4S86F",
    "workerid": "AIWEXPJAU66D9",
    "probid": "149A",
    "subid": "41946507"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define new integers k and sm with sm = 0 and int array a with size 12",
      "code": "int k , a [ 12 ] , sm = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read variable k from the input",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if sm > = k",
      "code": "if ( sm >= k )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read 12 elements from the input to a",
      "code": "for ( int i = 0 ; i < 12 ; ++ i ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort 12 elements of array a",
      "code": "sort ( a , a + 12 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "start for loop from i = 0 to 12 exclusive incrementing i",
      "code": "for ( int i = 0 ; i < 12 ; ++ i )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "add a [ 11 - i ] to sm",
      "code": "sm += a [ 11 - i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if sm > = k",
      "code": "if ( sm >= k )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print i + 1",
      "code": "cout << ( i + 1 ) << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sort ( a , a + n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 12 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        3
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        3,
        9
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        3,
        2
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )",
        "k = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        3,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        9
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "for ( i = 0 ; i < 12 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        9,
        2
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        9,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        2
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        2,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "k = getchar ( ) ;",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        9
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        9,
        2
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        9,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        2
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "if ( sm = k )",
        "k = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        2,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "if ( sm = k )",
        "k = getchar ( ) ;",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "if ( sm = k )",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "for ( i = 0 ; i < 12 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        2
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        2,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "k = getchar ( ) ;",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "if ( sm = k )"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        9
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        9,
        2
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        9,
        11
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "if ( sm = k )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )",
        "k = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        11
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )",
        "k = getchar ( ) ;",
        "if ( sm = k )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        11
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )",
        "if ( sm = k )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "for ( i = 0 ; i < 12 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9,
        2
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9,
        2,
        11
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;",
        "if ( sm = k )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9,
        11
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "if ( sm = k )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        11
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "k = getchar ( ) ;",
        "if ( sm = k )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "sm = a + a [ 11 - i ] ;",
        "if ( sm = k )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9,
        2,
        11
      ],
      "mod_code": [
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;",
        "if ( sm = k )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "if ( sm = k )",
        "for ( i = 0 ; i < 12 ; i ++ )",
        "if ( sm = k )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 12 ; i ++ )",
        "k = getchar ( ) ;",
        "if ( sm = k )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 12 ; i ++ )",
        "if ( sm = k )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}