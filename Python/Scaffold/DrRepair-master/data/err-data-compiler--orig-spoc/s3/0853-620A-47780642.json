{
  "meta": {
    "index": 853,
    "hitid": "3087LXLJ6MAW89E4UMYXUZA6QILF0T",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "620A",
    "subid": "47780642"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x1 , x2 , y1 , y2 = integers",
      "code": "int x1 , x2 , y1 , y2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "diff1 , diff2 = integers",
      "code": "int diff1 , diff2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "Read x1 , y1",
      "code": "cin >> x1 >> y1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Read x2 , y2",
      "code": "cin >> x2 >> y2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set diff1 to absolute value of x2 - x1",
      "code": "diff1 = abs ( x2 - x1 ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set diff2 to absolute value of y2 - y1",
      "code": "diff2 = abs ( y2 - y1 ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if diff1 is greater than diff2",
      "code": "if ( diff1 > diff2 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print diff1 and a new line",
      "code": "cout << diff1 << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else if diff2 is greater than diff1",
      "code": "else if ( diff2 > diff1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print diff2 and a new line",
      "code": "cout << diff2 << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else if diff1 is equal to diff2",
      "code": "else if ( diff1 == diff2 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print diff1 and a new line",
      "code": "cout << diff1 << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if diff2 diff1"
      ],
      "err_line": 11,
      "err_msg": "expected ‘(’ before ‘diff2’"
    },
    {
      "mod_line": [
        6,
        3,
        11
      ],
      "mod_code": [
        "diff2 = abs ( y2 ) - y1 ;",
        "cin >> x1 >> x1 ;",
        "else if diff2 diff1"
      ],
      "err_line": 11,
      "err_msg": "expected ‘(’ before ‘diff2’"
    },
    {
      "mod_line": [
        6,
        3,
        11,
        4
      ],
      "mod_code": [
        "diff2 = abs ( y2 ) - y1 ;",
        "cin >> x1 >> x1 ;",
        "else if diff2 diff1",
        "cin >> x2 >> x2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘(’ before ‘diff2’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "diff2 = abs ( y2 ) - y1 ;",
        "else if diff2 diff1"
      ],
      "err_line": 11,
      "err_msg": "expected ‘(’ before ‘diff2’"
    },
    {
      "mod_line": [
        6,
        11,
        4
      ],
      "mod_code": [
        "diff2 = abs ( y2 ) - y1 ;",
        "else if diff2 diff1",
        "cin >> x2 >> x2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘(’ before ‘diff2’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin >> x1 >> x1 ;",
        "else if diff2 diff1"
      ],
      "err_line": 11,
      "err_msg": "expected ‘(’ before ‘diff2’"
    },
    {
      "mod_line": [
        3,
        11,
        4
      ],
      "mod_code": [
        "cin >> x1 >> x1 ;",
        "else if diff2 diff1",
        "cin >> x2 >> x2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘(’ before ‘diff2’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "else if diff2 diff1",
        "cin >> x2 >> x2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘(’ before ‘diff2’"
    }
  ]
}