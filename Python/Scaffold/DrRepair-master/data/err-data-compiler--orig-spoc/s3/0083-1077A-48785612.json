{
  "meta": {
    "index": 83,
    "hitid": "3WRBLBQ2GR22M9AZ564FCKAISKIG01",
    "workerid": "A2M1CVZZJAN4T4",
    "probid": "1077A",
    "subid": "48785612"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let a , b and k be long long variables",
      "code": "long long a , b , k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create long long ans",
      "code": "long long ans ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for t iterations",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read a , b and k",
      "code": "cin >> a >> b >> k ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set ans to 0",
      "code": "ans = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "create bool even = true",
      "code": "bool even = true ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if k is even",
      "code": "if ( k % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set ans to k / 2 * ( a - b )",
      "code": "ans = k / 2 * ( a - b ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set ans to k / 2 * ( a - b ) + a",
      "code": "ans = k / 2 * ( a - b ) + a ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        7
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;",
        "int ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        6
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "int ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        6
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "int ans = 0 ;",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "int ans = 0 ;",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( int i = 0 ; j < t ; i ++ )",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "gets ( t ) ;",
        "ans /= 2 * ( a - b ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        7
      ],
      "mod_code": [
        "gets ( t ) ;",
        "ans /= 2 * ( a - b ) ;",
        "int ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        7,
        6
      ],
      "mod_code": [
        "gets ( t ) ;",
        "ans /= 2 * ( a - b ) ;",
        "int ans = 0 ;",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        7,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "ans /= 2 * ( a - b ) ;",
        "int ans = 0 ;",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        6
      ],
      "mod_code": [
        "gets ( t ) ;",
        "ans /= 2 * ( a - b ) ;",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        6,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "ans /= 2 * ( a - b ) ;",
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "ans /= 2 * ( a - b ) ;",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "gets ( t ) ;",
        "int ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "gets ( t ) ;",
        "int ans = 0 ;",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        6,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "int ans = 0 ;",
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "int ans = 0 ;",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "gets ( t ) ;",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "gets ( t ) ;",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;",
        "int ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        7,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;",
        "int ans = 0 ;",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;",
        "int ans = 0 ;",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;",
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "ans /= 2 * ( a - b ) ;",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "int ans = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "int ans = 0 ;",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "int ans = 0 ;",
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "int ans = 0 ;",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "while ( cin >> a >> b >> k )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; j < t ; i ++ )",
        "if ( k % 2 == 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}