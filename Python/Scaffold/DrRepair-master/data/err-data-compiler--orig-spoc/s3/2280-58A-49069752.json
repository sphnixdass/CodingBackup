{
  "meta": {
    "index": 2280,
    "hitid": "3LB1BGHFL2Q3O9SQXEEV3VJRUR8TYR",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "58A",
    "subid": "49069752"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = array of 100 char",
      "code": "char s [ 100 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "c = array of 5 char filled with ' h ' , ' e ' , ' l ' , ' l ' , ' o '",
      "code": "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "i = long long , ch , cn , j , d = 0",
      "code": "long long i , ch = 0 , cn = 0 , j = 0 , d = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "ln = length of s",
      "code": "long long ln = strlen ( s ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = d to ln exclusive",
      "code": "for ( j = d ; j < ln ; )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if c [ i ] is s [ j ]",
      "code": "if ( c [ i ] == s [ j ] )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment cn",
      "code": "cn ++ ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "d = j",
      "code": "d = j ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "d = j",
      "code": "d = j ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "j = d",
      "code": "j = d ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if cn is 5",
      "code": "if ( cn == 5 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print YES",
      "code": "cout << \" YES \" << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print NO",
      "code": "cout << \" NO \" << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int ln = s . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cout >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘char [100]’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int ln = s . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        7
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        19
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "for ( int j = d ; j < ln ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        19
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        19
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        19,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        4,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "long long i , ch , cn , j , d = 0 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "int ln = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        19
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        5,
        19
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "int ln = s . length ( ) ;",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        5,
        19,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "int ln = s . length ( ) ;",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        5,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "int ln = s . length ( ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "for ( int j = d ; j < ln ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        7,
        19
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        7,
        19,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        7,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        19,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "char c [ 5 ] = { ' h ' , ' e ' , ' l ' , ' l ' , ' o ' , ' o ' } ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "too many initializers for ‘char [5]’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        19
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        21
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        4,
        5,
        19
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        21
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        4,
        5,
        21
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "int ln = s . length ( ) ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        4,
        7,
        19,
        21
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        7,
        21
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        19,
        21
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "long long i , ch , cn , j , d = 0 ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        5,
        7,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        21
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        5,
        7,
        21
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int j = d ; j < ln ; j ++ )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "if ( cn == ' 5 ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        5,
        19,
        21
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        7,
        19,
        21
      ],
      "mod_code": [
        "for ( int j = d ; j < ln ; j ++ )",
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "for ( int j = d ; j < ln ; j ++ )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "if ( cn == ' 5 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}