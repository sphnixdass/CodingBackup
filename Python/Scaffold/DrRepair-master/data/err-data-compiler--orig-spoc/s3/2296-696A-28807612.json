{
  "meta": {
    "index": 2296,
    "hitid": "3E9VAUV7BW8Y9DTHRENE8QTZ62MYAA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "696A",
    "subid": "28807612"
  },
  "lines": [
    {
      "line": 0,
      "text": "define long long constants X = 131071 and mod = 1000000007",
      "code": "const long long mod = 1000000007 , X = 131071 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be a map from long longs to long longs",
      "code": "map < long long , long long > a ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "q , v , u , w , k and s are long longs with s = 0",
      "code": "long long q , v , u , w , k , s = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read from the input to q",
      "code": "cin >> q ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while q > 0",
      "code": "while ( q > 0 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "decrement q by one",
      "code": "q -- ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read variable k from the input",
      "code": "cin >> k ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if k = 1",
      "code": "if ( k == 1 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read from the input to v , u and w",
      "code": "cin >> v >> u >> w ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "while u is not v",
      "code": "while ( u != v )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if u is greater than v",
      "code": "if ( u > v )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increase a [ u ] by w",
      "code": "a [ u ] += w ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "set the value of u to u / 2",
      "code": "u = u / 2 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 15,
      "text": "change a [ v ] to a [ v ] + w",
      "code": "a [ v ] += w ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "change v to v / 2",
      "code": "v = v / 2 ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 20,
      "text": "change the value of s to 0",
      "code": "s = 0 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "read u and v from the user input",
      "code": "cin >> u >> v ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "while u ! = v",
      "code": "while ( u != v )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if u is greater than v",
      "code": "if ( u > v )",
      "indent": 4
    },
    {
      "line": 24,
      "text": "add a [ u ] to s",
      "code": "s += a [ u ] ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "assign u / 2 to u",
      "code": "u = u / 2 ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 27,
      "text": "increase s by a [ v ]",
      "code": "s += a [ v ] ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "set the value of v to v / 2",
      "code": "v = v / 2 ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 31,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long X = 131071 , mod == 1000000007 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘==’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < long long a ;"
      ],
      "err_line": 1,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long q , v , u , w , k , s , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int s’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( q ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 33,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        7
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        7,
        8
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "k = getchar ( ) ;",
        "if ( ! k )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        7,
        21
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "k = getchar ( ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        7,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "k = getchar ( ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        8
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "if ( ! k )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        8,
        21
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "if ( ! k )",
        "while ( cin >> u >> v )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        8,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "if ( ! k )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        21
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        21,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        15,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "a [ v ++ ] = a [ v ] + w ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "k = getchar ( ) ;",
        "if ( ! k )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        21
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "k = getchar ( ) ;",
        "if ( ! k )",
        "while ( cin >> u >> v )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "k = getchar ( ) ;",
        "if ( ! k )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        7,
        21
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "k = getchar ( ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        7,
        21,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "k = getchar ( ) ;",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        7,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "k = getchar ( ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "if ( ! k )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        8,
        21
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "if ( ! k )",
        "while ( cin >> u >> v )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        8,
        21,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "if ( ! k )",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        8,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "if ( ! k )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        21,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        3,
        26
      ],
      "mod_code": [
        "long long q , v , u , w , k , k , s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        15,
        7,
        8,
        26
      ],
      "mod_code": [
        "a [ v ++ ] = a [ v ] + w ;",
        "k = getchar ( ) ;",
        "if ( ! k )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        7,
        21,
        26
      ],
      "mod_code": [
        "a [ v ++ ] = a [ v ] + w ;",
        "k = getchar ( ) ;",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        7,
        26
      ],
      "mod_code": [
        "a [ v ++ ] = a [ v ] + w ;",
        "k = getchar ( ) ;",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        8,
        21,
        26
      ],
      "mod_code": [
        "a [ v ++ ] = a [ v ] + w ;",
        "if ( ! k )",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        8,
        26
      ],
      "mod_code": [
        "a [ v ++ ] = a [ v ] + w ;",
        "if ( ! k )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        21,
        26
      ],
      "mod_code": [
        "a [ v ++ ] = a [ v ] + w ;",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        26
      ],
      "mod_code": [
        "a [ v ++ ] = a [ v ] + w ;",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8,
        21,
        26
      ],
      "mod_code": [
        "k = getchar ( ) ;",
        "if ( ! k )",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8,
        26
      ],
      "mod_code": [
        "k = getchar ( ) ;",
        "if ( ! k )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        21,
        26
      ],
      "mod_code": [
        "k = getchar ( ) ;",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        26
      ],
      "mod_code": [
        "k = getchar ( ) ;",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        21,
        26
      ],
      "mod_code": [
        "if ( ! k )",
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        26
      ],
      "mod_code": [
        "if ( ! k )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        26
      ],
      "mod_code": [
        "while ( cin >> u >> v )",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}