{
  "meta": {
    "index": 1347,
    "hitid": "3OZ4VAIBEX9S6C1GG9D7UQSOE8BVJB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "731A",
    "subid": "42007468"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string variable with name s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s from the user input",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers strt and smoves = 0",
      "code": "int strt = 0 , smoves = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer variable len",
      "code": "int len = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "start for loop from i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create new integer index with value s [ i ] - 97",
      "code": "int index = s [ i ] - 97 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "declare integer variable walk with = abs ( strt - index )",
      "code": "int walk = abs ( strt - index ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if walk is less than 13",
      "code": "if ( walk < 13 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "change smoves to smoves + walk",
      "code": "smoves += walk ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "change smoves to smoves + 26 - walk",
      "code": "smoves += 26 - walk ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set strt to index",
      "code": "strt = index ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print smoves and \" \\ n \"",
      "code": "cout << smoves << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int len = str . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int with = abs ( strt - index ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘walk’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘strt’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "strt = s ;"
      ],
      "err_line": 13,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in assignment"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        13,
        7
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "int with = abs ( strt - index ) ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        13,
        7,
        10
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "int with = abs ( strt - index ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        13,
        7,
        1
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "int with = abs ( strt - index ) ;",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        13,
        7,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "int with = abs ( strt - index ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        13,
        10
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        13,
        10,
        1
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "do",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        13,
        10,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "do",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        13,
        1
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        13,
        1,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        13,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "strt = s ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "int with = abs ( strt - index ) ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        7,
        10
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "int with = abs ( strt - index ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        1
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "int with = abs ( strt - index ) ;",
        "do",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "int with = abs ( strt - index ) ;",
        "do",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "int with = abs ( strt - index ) ;",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        7,
        1,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "int with = abs ( strt - index ) ;",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "int with = abs ( strt - index ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        10,
        1
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "do",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        10,
        1,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "do",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        10,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "do",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int strt = 0 , smoves = 0 = 0 ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "strt = s ;",
        "int with = abs ( strt - index ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘walk’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        10
      ],
      "mod_code": [
        "strt = s ;",
        "int with = abs ( strt - index ) ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "‘walk’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        10,
        1
      ],
      "mod_code": [
        "strt = s ;",
        "int with = abs ( strt - index ) ;",
        "do",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13,
        7,
        10,
        6
      ],
      "mod_code": [
        "strt = s ;",
        "int with = abs ( strt - index ) ;",
        "do",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 8,
      "err_msg": "‘walk’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        1
      ],
      "mod_code": [
        "strt = s ;",
        "int with = abs ( strt - index ) ;",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13,
        7,
        1,
        6
      ],
      "mod_code": [
        "strt = s ;",
        "int with = abs ( strt - index ) ;",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13,
        7,
        6
      ],
      "mod_code": [
        "strt = s ;",
        "int with = abs ( strt - index ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 8,
      "err_msg": "‘walk’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "strt = s ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘strt’"
    },
    {
      "mod_line": [
        13,
        10,
        1
      ],
      "mod_code": [
        "strt = s ;",
        "do",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13,
        10,
        1,
        6
      ],
      "mod_code": [
        "strt = s ;",
        "do",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13,
        10,
        6
      ],
      "mod_code": [
        "strt = s ;",
        "do",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘strt’"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "strt = s ;",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13,
        1,
        6
      ],
      "mod_code": [
        "strt = s ;",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "strt = s ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 13,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in assignment"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "int with = abs ( strt - index ) ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "‘walk’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        1
      ],
      "mod_code": [
        "int with = abs ( strt - index ) ;",
        "do",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        10,
        1,
        6
      ],
      "mod_code": [
        "int with = abs ( strt - index ) ;",
        "do",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        10,
        6
      ],
      "mod_code": [
        "int with = abs ( strt - index ) ;",
        "do",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 8,
      "err_msg": "‘walk’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "int with = abs ( strt - index ) ;",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        1,
        6
      ],
      "mod_code": [
        "int with = abs ( strt - index ) ;",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "int with = abs ( strt - index ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 8,
      "err_msg": "‘walk’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "do",
        "string s = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        10,
        1,
        6
      ],
      "mod_code": [
        "do",
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "do",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘strt’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "string s = s . length ( ) ;",
        "int index = s [ i ] - ' 97 ' ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    }
  ]
}