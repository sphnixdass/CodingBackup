{
  "meta": {
    "index": 1323,
    "hitid": "341H3G5YF082DQ54VYS4XRQO3AC0ZA",
    "workerid": "A1APYLD4DUK33J",
    "probid": "731A",
    "subid": "48889075"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer i",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare character ch = ' a '",
      "code": "char ch = ' a ' ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer rotations = 0",
      "code": "int rotations = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to size of s exclusive",
      "code": "for ( i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare integer cur = ch - ' a '",
      "code": "int cur = ch - ' a ' ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "declare integer target = s [ i ] - ' a '",
      "code": "int target = s [ i ] - ' a ' ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if cur is target",
      "code": "if ( cur == target )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "end loop iteration",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if target is greater than cur",
      "code": "else if ( target > cur )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "declare integer x = ( target - cur ) % 26",
      "code": "int x = ( target - cur ) % 26 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "declare integer y = ( cur - target + 26 ) % 26",
      "code": "int y = ( cur - target + 26 ) % 26 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment rotations by minimum of x and y",
      "code": "rotations += min ( x , y ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "declare integer x = ( cur - target ) % 26",
      "code": "int x = ( cur - target ) % 26 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "declare integer y = ( target - cur + 26 ) % 26",
      "code": "int y = ( target - cur + 26 ) % 26 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increment rotations by minimum of x and y",
      "code": "rotations += min ( x , y ) ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "let ch be s [ i ]",
      "code": "ch = s [ i ] ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print rotations and newline",
      "code": "cout << rotations << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "ch = ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int cur -= ' a ' ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int target = s [ i ] - \" a ' ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int x = ( long target - cur ) % 26 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘ch’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        20,
        13,
        2
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        13,
        2,
        15
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        13,
        2,
        17
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        13,
        2,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        13,
        15
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘ch’"
    },
    {
      "mod_line": [
        20,
        13,
        15,
        17
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘ch’"
    },
    {
      "mod_line": [
        20,
        13,
        15,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "do",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        20,
        13,
        17,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        20,
        13,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        20,
        2
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        2,
        15
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "s >> s ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        2,
        15,
        17
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "s >> s ;",
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        2,
        15,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "s >> s ;",
        "do",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        2,
        17
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "s >> s ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        2,
        17,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "s >> s ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        2,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "s >> s ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        15
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘ch’"
    },
    {
      "mod_line": [
        20,
        15,
        17
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘ch’"
    },
    {
      "mod_line": [
        20,
        15,
        17,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        20,
        15,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "do",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        20,
        17,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        20,
        14
      ],
      "mod_code": [
        "int ch = s [ i ] ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        2,
        15
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        2,
        15,
        17
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;",
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        2,
        15,
        14
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;",
        "do",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        2,
        17
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        2,
        17,
        14
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        2,
        14
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "s >> s ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘ch’"
    },
    {
      "mod_line": [
        13,
        15,
        17
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘ch’"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        14
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        13,
        15,
        14
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "do",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        13,
        17,
        14
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "int y = ( cur - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        15,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        14
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        15,
        14
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        17,
        14
      ],
      "mod_code": [
        "s >> s ;",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "s >> s ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘ch’"
    },
    {
      "mod_line": [
        15,
        17,
        14
      ],
      "mod_code": [
        "do",
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "do",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        14
      ],
      "mod_code": [
        "int y = ( target - ( target + 26 ) % 26 ) ;",
        "rotations += min ( x and y ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(bool)’"
    }
  ]
}