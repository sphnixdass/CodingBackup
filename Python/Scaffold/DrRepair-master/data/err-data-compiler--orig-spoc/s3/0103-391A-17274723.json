{
  "meta": {
    "index": 103,
    "hitid": "38VTL6WC4A7137H0WIWX0FDDEODY5W",
    "workerid": "AIWEXPJAU66D9",
    "probid": "391A",
    "subid": "17274723"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers ans , s and n",
      "code": "int ans , s , n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string str",
      "code": "string str ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "change n to length of str",
      "code": "n = str . size ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "change str to \" \" + str",
      "code": "str = \" \" + str ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set s to 1",
      "code": "s = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if str [ i ] ! = str [ i - 1 ]",
      "code": "if ( str [ i ] != str [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s is even , increment ans",
      "code": "if ( s % 2 == 0 ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "change s to 0",
      "code": "s = 0 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment s by one",
      "code": "s ++ ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if s is even , increment ans by one",
      "code": "if ( s % 2 == 0 ) ans ++ ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans and ' \\ n '",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool str ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "gets ( str ) ;",
        "bool str ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        1,
        10
      ],
      "mod_code": [
        "gets ( str ) ;",
        "bool str ;",
        "int s = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        1,
        10,
        15
      ],
      "mod_code": [
        "gets ( str ) ;",
        "bool str ;",
        "int s = 0 ;",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        1,
        10,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "bool str ;",
        "int s = 0 ;",
        "str += str ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        1,
        15
      ],
      "mod_code": [
        "gets ( str ) ;",
        "bool str ;",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        1,
        15,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "bool str ;",
        "cout << ans << endl << ' \\n ' ;",
        "str += str ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "bool str ;",
        "str += str ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int s = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        10,
        15
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int s = 0 ;",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        10,
        15,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int s = 0 ;",
        "cout << ans << endl << ' \\n ' ;",
        "str += str ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        10,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int s = 0 ;",
        "str += str ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "gets ( str ) ;",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        15,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "cout << ans << endl << ' \\n ' ;",
        "str += str ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "str += str ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "bool str ;",
        "int s = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        1,
        10,
        15
      ],
      "mod_code": [
        "bool str ;",
        "int s = 0 ;",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        1,
        10,
        15,
        5
      ],
      "mod_code": [
        "bool str ;",
        "int s = 0 ;",
        "cout << ans << endl << ' \\n ' ;",
        "str += str ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        1,
        10,
        5
      ],
      "mod_code": [
        "bool str ;",
        "int s = 0 ;",
        "str += str ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "bool str ;",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        1,
        15,
        5
      ],
      "mod_code": [
        "bool str ;",
        "cout << ans << endl << ' \\n ' ;",
        "str += str ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "bool str ;",
        "str += str ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    }
  ]
}