{
  "meta": {
    "index": 1865,
    "hitid": "3S829FDFT2V77F6J6SSEFDUWOCQDXB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "447A",
    "subid": "41333196"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant double pi = acos ( - 1 )",
      "code": "const double pi = acos ( - 1 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant double eps = 1e - 6",
      "code": "const double eps = 1e-6 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare int array dx with 4 elements : 0 , 1 , 0 , - 1",
      "code": "int dx [ 4 ] = { 0 , 1 , 0 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare int array dy with 4 elements : 1 , 0 , - 1 , 0",
      "code": "int dy [ 4 ] = { 1 , 0 , - 1 , 0 } ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "gcd is a long long function with long long arguments a and b",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "return b ? gcd ( b , a % b ) : a",
      "code": "return b ? gcd ( b , a % b ) : a ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "lcm is a long long function with long long arguments a and b",
      "code": "long long lcm ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "return a / gcd ( a , b ) * b",
      "code": "return a / gcd ( a , b ) * b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare integers p and n",
      "code": "int p , n ;",
      "indent": 0
    },
    {
      "line": 11,
      "text": "let a be integer array with size 305",
      "code": "int a [ 305 ] ;",
      "indent": 0
    },
    {
      "line": 12,
      "text": "let vis be a boolean array with size 305",
      "code": "bool vis [ 305 ] ;",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "read p and n",
      "code": "cin >> p >> n ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 1 to n inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "declare integer variable pos = a [ i ] modulo p",
      "code": "int pos = a [ i ] % p ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if vis [ pos ] is true",
      "code": "if ( vis [ pos ] )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print i",
      "code": "cout << i << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set value of vis [ pos ] to true",
      "code": "vis [ pos ] = true ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 1 , - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , 0 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "return b ? b ( b , a % b ) : a ;"
      ],
      "err_line": 5,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        22
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        22,
        5
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        22,
        7
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        22,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "return b ? b ( b , a % b ) : a ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        7
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        22
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "vis [ ' pos ' ] = true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        22,
        5
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        22,
        5,
        7
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        22,
        5,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        22,
        7
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "vis [ ' pos ' ] = true ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        22,
        7,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "vis [ ' pos ' ] = true ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        22,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "vis [ ' pos ' ] = true ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "return b ? b ( b , a % b ) : a ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        5,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        7,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int dx [ 4 ] : 0 , 1 , 0 , - 1 ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        22
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        22,
        5
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        22,
        5,
        7
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        22,
        5,
        4
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        22,
        7
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        22,
        7,
        4
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        22,
        4
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "vis [ ' pos ' ] = true ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "return b ? b ( b , a % b ) : a ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        4
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int dy [ 4 ] : 1 , 0 , - 1 , 0 } ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘:’ token"
    },
    {
      "mod_line": [
        22,
        5
      ],
      "mod_code": [
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;"
      ],
      "err_line": 5,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        22,
        5,
        7
      ],
      "mod_code": [
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 5,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        22,
        5,
        7,
        4
      ],
      "mod_code": [
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        22,
        5,
        4
      ],
      "mod_code": [
        "vis [ ' pos ' ] = true ;",
        "return b ? b ( b , a % b ) : a ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        22,
        7
      ],
      "mod_code": [
        "vis [ ' pos ' ] = true ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        22,
        7,
        4
      ],
      "mod_code": [
        "vis [ ' pos ' ] = true ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        22,
        4
      ],
      "mod_code": [
        "vis [ ' pos ' ] = true ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )"
      ],
      "err_line": 5,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "return b ? b ( b , a % b ) : a ;",
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "return b ? b ( b , a % b ) : a ;",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "long long lcm ( long long a and long long b )",
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    }
  ]
}