{
  "meta": {
    "index": 401,
    "hitid": "3KWGG5KP6JWM8B11SPVUKQWGXVOMC5",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "813A",
    "subid": "41641128"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int a [ 1100 ] , b [ 1100 ] [ 2 ] , n , m",
      "code": "int a [ 1100 ] , b [ 1100 ] [ 2 ] , n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "sum = 0",
      "code": "long long int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set sum to sum + a [ i ]",
      "code": "sum += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to m exclusive , read b [ i ] [ 0 ] and b [ i ] [ 1 ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cin >> b [ i ] [ 0 ] >> b [ i ] [ 1 ] ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if b [ m - 1 ] [ 1 ] < sum",
      "code": "if ( b [ m - 1 ] [ 1 ] < sum )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "j = m - 1",
      "code": "int j = m - 1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "while b [ j ] [ 0 ] > sum , decrement j",
      "code": "while ( b [ j ] [ 0 ] > sum ) j -- ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if b [ j ] [ 1 ] > = sum",
      "code": "if ( b [ j ] [ 1 ] >= sum )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print b [ j + 1 ] [ 0 ] and a newline",
      "code": "cout << b [ j + 1 ] [ 0 ] << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "j = m - 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> a . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘int [1100]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "gets ( m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "j -= 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "j = m - 1 ;",
        "cout << sum ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        8
      ],
      "mod_code": [
        "j = m - 1 ;",
        "cout << sum ;",
        "gets ( m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        16,
        8,
        1
      ],
      "mod_code": [
        "j = m - 1 ;",
        "cout << sum ;",
        "gets ( m ) ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        16,
        8,
        12
      ],
      "mod_code": [
        "j = m - 1 ;",
        "cout << sum ;",
        "gets ( m ) ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        16,
        1
      ],
      "mod_code": [
        "j = m - 1 ;",
        "cout << sum ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        16,
        1,
        12
      ],
      "mod_code": [
        "j = m - 1 ;",
        "cout << sum ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        16,
        12
      ],
      "mod_code": [
        "j = m - 1 ;",
        "cout << sum ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "j = m - 1 ;",
        "gets ( m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        8,
        1
      ],
      "mod_code": [
        "j = m - 1 ;",
        "gets ( m ) ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        8,
        1,
        12
      ],
      "mod_code": [
        "j = m - 1 ;",
        "gets ( m ) ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        8,
        12
      ],
      "mod_code": [
        "j = m - 1 ;",
        "gets ( m ) ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "j = m - 1 ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        1,
        12
      ],
      "mod_code": [
        "j = m - 1 ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "j = m - 1 ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "gets ( m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        8,
        13
      ],
      "mod_code": [
        "cout << sum ;",
        "gets ( m ) ;",
        "j -= 1 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        8,
        13,
        1
      ],
      "mod_code": [
        "cout << sum ;",
        "gets ( m ) ;",
        "j -= 1 ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        8,
        13,
        12
      ],
      "mod_code": [
        "cout << sum ;",
        "gets ( m ) ;",
        "j -= 1 ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        8,
        1
      ],
      "mod_code": [
        "cout << sum ;",
        "gets ( m ) ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        8,
        1,
        12
      ],
      "mod_code": [
        "cout << sum ;",
        "gets ( m ) ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        8,
        12
      ],
      "mod_code": [
        "cout << sum ;",
        "gets ( m ) ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "cout << sum ;",
        "j -= 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        13,
        1
      ],
      "mod_code": [
        "cout << sum ;",
        "j -= 1 ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        13,
        1,
        12
      ],
      "mod_code": [
        "cout << sum ;",
        "j -= 1 ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        13,
        12
      ],
      "mod_code": [
        "cout << sum ;",
        "j -= 1 ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "cout << sum ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        1,
        12
      ],
      "mod_code": [
        "cout << sum ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "cout << sum ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "gets ( m ) ;",
        "j -= 1 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        1
      ],
      "mod_code": [
        "gets ( m ) ;",
        "j -= 1 ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        13,
        1,
        12
      ],
      "mod_code": [
        "gets ( m ) ;",
        "j -= 1 ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        13,
        12
      ],
      "mod_code": [
        "gets ( m ) ;",
        "j -= 1 ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        1,
        12
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "gets ( m ) ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "j -= 1 ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        1,
        12
      ],
      "mod_code": [
        "j -= 1 ;",
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "j -= 1 ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int a [ 1100 ] ] = b [ 1100 ] [ 2 ] , n , m ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘]’ token"
    }
  ]
}