{
  "meta": {
    "index": 1432,
    "hitid": "3ZUE82NE0AVEQYJ7PQBCNEGO9GTF8C",
    "workerid": "AIWEXPJAU66D9",
    "probid": "266A",
    "subid": "42243125"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer called n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let s be string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer called count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n - 1 exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "j is integer = 0",
      "code": "int j = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = i + 1 to n exclusive",
      "code": "for ( j = i + 1 ; j < n ; )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ i ] = s [ j ]",
      "code": "if ( s [ i ] == s [ j ] )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increase count by one",
      "code": "count ++ ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "increase j",
      "code": "j ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 12,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set i to j",
      "code": "i = j ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print count and a new line",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string s let"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 12,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "i to ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        11,
        2
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "string s let"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        14
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "string s let",
        "i to ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        8
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "string s let",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "string s let",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        11,
        14
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "i to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        8
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "i to ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "i to ;",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        7,
        11,
        8
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        11,
        8,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        7,
        11,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "do",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "string s let"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        2,
        14
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "string s let",
        "i to ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        2,
        14,
        8
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "string s let",
        "i to ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        2,
        14,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "string s let",
        "i to ;",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        2,
        8
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "string s let",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        2,
        8,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "string s let",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "string s let",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "i to ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        7,
        14,
        8
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "i to ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        7,
        14,
        8,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "i to ;",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        7,
        14,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "i to ;",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        7,
        8,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < n ; j ++ )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "do",
        "string s let"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        11,
        2,
        14
      ],
      "mod_code": [
        "do",
        "string s let",
        "i to ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        11,
        2,
        14,
        8
      ],
      "mod_code": [
        "do",
        "string s let",
        "i to ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        11,
        2,
        14,
        3
      ],
      "mod_code": [
        "do",
        "string s let",
        "i to ;",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        11,
        2,
        8
      ],
      "mod_code": [
        "do",
        "string s let",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        11,
        2,
        8,
        3
      ],
      "mod_code": [
        "do",
        "string s let",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        11,
        2,
        3
      ],
      "mod_code": [
        "do",
        "string s let",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "do",
        "i to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        14,
        8
      ],
      "mod_code": [
        "do",
        "i to ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        14,
        8,
        3
      ],
      "mod_code": [
        "do",
        "i to ;",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        11,
        14,
        3
      ],
      "mod_code": [
        "do",
        "i to ;",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "do",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        8,
        3
      ],
      "mod_code": [
        "do",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "do",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "string s let",
        "i to ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        2,
        14,
        8
      ],
      "mod_code": [
        "string s let",
        "i to ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        2,
        14,
        8,
        3
      ],
      "mod_code": [
        "string s let",
        "i to ;",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        2,
        14,
        3
      ],
      "mod_code": [
        "string s let",
        "i to ;",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "string s let",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        2,
        8,
        3
      ],
      "mod_code": [
        "string s let",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "string s let",
        "while ( cin >> n >> s )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "i to ;",
        "if ( s [ i ] == ' [ ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14,
        8,
        3
      ],
      "mod_code": [
        "i to ;",
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "i to ;",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' [ ' )",
        "while ( cin >> n >> s )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    }
  ]
}