{
  "meta": {
    "index": 1284,
    "hitid": "3OREP8RUT2536WD93M14W161JOEGBM",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "1011A",
    "subid": "48007541"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = character array of size 1000",
      "code": "char a [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "b = character array of size 1000",
      "code": "char b [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in the function cmp that takes char a , b and returns integer",
      "code": "int cmp ( char a , char b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return a - a < b - a",
      "code": "return a - ' a ' < b - ' a ' ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "m , n , i = integers",
      "code": "int m , n , i ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while read m",
      "code": "while ( cin >> m )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for i = 0 to m exclusive , read a [ i ]",
      "code": "for ( i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 10,
      "text": "sort a , a + m and cmp",
      "code": "sort ( a , a + m , cmp ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "sum = integer with sum = a [ 0 ] - a + 1",
      "code": "int sum = a [ 0 ] - ' a ' + 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "k = integer with k = 1",
      "code": "int k = 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "rec = integer with rec = 0",
      "code": "int rec = 0 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for i = 1 to m exclusive",
      "code": "for ( i = 1 ; i < m ; i ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if ( k > = n ) , break loop",
      "code": "if ( k >= n ) break ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "rec = rec + a [ i ] - a [ i - 1 ]",
      "code": "rec += a [ i ] - a [ i - 1 ] ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if ( rec > 1 )",
      "code": "if ( rec > 1 )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "sum = sum + a [ i ] - a + 1",
      "code": "sum += a [ i ] - ' a ' + 1 ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "rec = 0",
      "code": "rec = 0 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if ( k < n )",
      "code": "if ( k < n )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print - 1",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char [1000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "sum += a [ i ] - a + 1 ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘char’ and ‘char [1000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char a [ 1000 ] [ 1000 ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int sum = a [ 0 ] - ( a + 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char*’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "sum += a [ i ] - a + 1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char [1000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        11,
        18,
        23
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "sum += a [ i ] - a + 1 ;",
        "if ( k < ' n ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char [1000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        11,
        18,
        23,
        10
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "sum += a [ i ] - a + 1 ;",
        "if ( k < ' n ' )",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11,
        18,
        10
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "sum += a [ i ] - a + 1 ;",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "if ( k < ' n ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char [1000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        11,
        23,
        10
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "if ( k < ' n ' )",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11,
        23,
        10,
        18
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "if ( k < ' n ' )",
        "sort ( a , a + m , cmp cmp cmp ) ;",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11,
        23,
        18
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "if ( k < ' n ' )",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char [1000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11,
        10,
        18
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "sort ( a , a + m , cmp cmp cmp ) ;",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "int sum = a [ 0 ] - a + 1 ;",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char [1000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        18,
        23
      ],
      "mod_code": [
        "sum += a [ i ] - a + 1 ;",
        "if ( k < ' n ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘char’ and ‘char [1000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        18,
        23,
        11
      ],
      "mod_code": [
        "sum += a [ i ] - a + 1 ;",
        "if ( k < ' n ' )",
        "int sum = a [ 0 ] - ( a + 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char*’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        18,
        23,
        11,
        10
      ],
      "mod_code": [
        "sum += a [ i ] - a + 1 ;",
        "if ( k < ' n ' )",
        "int sum = a [ 0 ] - ( a + 1 ) ;",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        18,
        23,
        10
      ],
      "mod_code": [
        "sum += a [ i ] - a + 1 ;",
        "if ( k < ' n ' )",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "sum += a [ i ] - a + 1 ;",
        "int sum = a [ 0 ] - ( a + 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char*’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        18,
        11,
        10
      ],
      "mod_code": [
        "sum += a [ i ] - a + 1 ;",
        "int sum = a [ 0 ] - ( a + 1 ) ;",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        18,
        10
      ],
      "mod_code": [
        "sum += a [ i ] - a + 1 ;",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        23,
        11
      ],
      "mod_code": [
        "if ( k < ' n ' )",
        "int sum = a [ 0 ] - ( a + 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char*’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        23,
        11,
        10
      ],
      "mod_code": [
        "if ( k < ' n ' )",
        "int sum = a [ 0 ] - ( a + 1 ) ;",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        23,
        11,
        10,
        18
      ],
      "mod_code": [
        "if ( k < ' n ' )",
        "int sum = a [ 0 ] - ( a + 1 ) ;",
        "sort ( a , a + m , cmp cmp cmp ) ;",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        23,
        11,
        18
      ],
      "mod_code": [
        "if ( k < ' n ' )",
        "int sum = a [ 0 ] - ( a + 1 ) ;",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char*’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        23,
        10
      ],
      "mod_code": [
        "if ( k < ' n ' )",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        23,
        10,
        18
      ],
      "mod_code": [
        "if ( k < ' n ' )",
        "sort ( a , a + m , cmp cmp cmp ) ;",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "int sum = a [ 0 ] - ( a + 1 ) ;",
        "sort ( a , a + m , cmp cmp cmp ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11,
        10,
        18
      ],
      "mod_code": [
        "int sum = a [ 0 ] - ( a + 1 ) ;",
        "sort ( a , a + m , cmp cmp cmp ) ;",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "int sum = a [ 0 ] - ( a + 1 ) ;",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘char’ and ‘char*’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "sort ( a , a + m , cmp cmp cmp ) ;",
        "sum += a [ i ] - ' a ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘cmp’"
    }
  ]
}