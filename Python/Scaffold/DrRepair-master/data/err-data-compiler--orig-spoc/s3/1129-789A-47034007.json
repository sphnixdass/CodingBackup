{
  "meta": {
    "index": 1129,
    "hitid": "3NFWQRSHVE8TJDPP8ON0FRXMYM4FG1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "789A",
    "subid": "47034007"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer INF = 0x7fffffff",
      "code": "const int INF = 0x7fffffff ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant integer inf = 0x3f3f3f3f",
      "code": "const int inf = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare constant integer maxn = 200005",
      "code": "const int maxn = 200005 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare constant integer N = 105",
      "code": "const int N = 105 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare inline read with long long address x as argument , returning void",
      "code": "inline void read ( long long & x )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare long long f = 1",
      "code": "long long f = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let x be 0",
      "code": "x = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare s = read character as character",
      "code": "char s = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while s is less than ' 0 ' or s is greater than ' 9 '",
      "code": "while ( s < ' 0 ' || s > ' 9 ' )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if s is ' - ' , let f be - 1",
      "code": "if ( s == ' - ' ) f = - 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let s be read character",
      "code": "s = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while s is greater than or equal to ' 0 ' and s is less than or equal to ' 9 '",
      "code": "while ( s >= ' 0 ' && s <= ' 9 ' )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "let x be x * 10 + s - ' 0 '",
      "code": "x = x * 10 + s - ' 0 ' ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "let s be read character",
      "code": "s = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "let x be x * f",
      "code": "x *= f ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "declare long longs n , k , ans , cnt , long long array a size maxn",
      "code": "long long n , k , a [ maxn ] , ans , cnt ;",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "run read with n as argument , run read with k as argument",
      "code": "read ( n ) , read ( k ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to n exclusive , run read with a [ i ] as argument",
      "code": "for ( int i = 0 ; i < n ; i ++ ) read ( a [ i ] ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 0 to n exclusive , increment ans by ( a [ i ] - 1 ) / k + 1",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { ans += ( a [ i ] - 1 ) / k + 1 ; }",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print ans + 1 / 2 and newline",
      "code": "cout << ( ans + 1 ) / 2 << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const INF = 0x7fffffff ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const int maxn = 100000 . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘size’ in ‘100000’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int x = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "declaration of ‘int x’ shadows a parameter"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "s = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "read ( n ) , read ( ) ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘void read(long long int&)’"
    },
    {
      "mod_line": [
        20,
        23,
        1
      ],
      "mod_code": [
        "read ( n ) ;",
        "cout << ans + 1 / 2 << endl ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        23,
        1,
        14
      ],
      "mod_code": [
        "read ( n ) ;",
        "cout << ans + 1 / 2 << endl ;",
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        23,
        1,
        4
      ],
      "mod_code": [
        "read ( n ) ;",
        "cout << ans + 1 / 2 << endl ;",
        "const inf = 0x3f3f3f3f ;",
        "inline void read ( long long x )"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        1
      ],
      "mod_code": [
        "read ( n ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        1,
        14
      ],
      "mod_code": [
        "read ( n ) ;",
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        1,
        14,
        4
      ],
      "mod_code": [
        "read ( n ) ;",
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;",
        "inline void read ( long long x )"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        1,
        14,
        23
      ],
      "mod_code": [
        "read ( n ) ;",
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;",
        "cout << ans + ( 1 / 2 ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        1,
        4
      ],
      "mod_code": [
        "read ( n ) ;",
        "const inf = 0x3f3f3f3f ;",
        "inline void read ( long long x )"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        1,
        4,
        23
      ],
      "mod_code": [
        "read ( n ) ;",
        "const inf = 0x3f3f3f3f ;",
        "inline void read ( long long x )",
        "cout << ans + ( 1 / 2 ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        1,
        23
      ],
      "mod_code": [
        "read ( n ) ;",
        "const inf = 0x3f3f3f3f ;",
        "cout << ans + ( 1 / 2 ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        23,
        1
      ],
      "mod_code": [
        "cout << ans + 1 / 2 << endl ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        23,
        1,
        14
      ],
      "mod_code": [
        "cout << ans + 1 / 2 << endl ;",
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        23,
        1,
        14,
        4
      ],
      "mod_code": [
        "cout << ans + 1 / 2 << endl ;",
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;",
        "inline void read ( long long x )"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        23,
        1,
        4
      ],
      "mod_code": [
        "cout << ans + 1 / 2 << endl ;",
        "const inf = 0x3f3f3f3f ;",
        "inline void read ( long long x )"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        1,
        14,
        4
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;",
        "inline void read ( long long x )"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        1,
        14,
        4,
        23
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;",
        "inline void read ( long long x )",
        "cout << ans + ( 1 / 2 ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        1,
        14,
        23
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "char s = getchar ( ) ;",
        "cout << ans + ( 1 / 2 ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "inline void read ( long long x )"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        1,
        4,
        23
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "inline void read ( long long x )",
        "cout << ans + ( 1 / 2 ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "cout << ans + ( 1 / 2 ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘inf’ does not name a type"
    }
  ]
}