{
  "meta": {
    "index": 1470,
    "hitid": "3QREJ3J433RKLRV4KQBD8WUZ2Z6KLD",
    "workerid": "AIWEXPJAU66D9",
    "probid": "873A",
    "subid": "48504175"
  },
  "lines": [
    {
      "line": 0,
      "text": "create an array of integers par with size 2000001 filled with 0",
      "code": "int par [ 2000001 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create an array of integers visited with size 2000001 filled with 0",
      "code": "int visited [ 2000001 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "integer function find_par with int argument x",
      "code": "int find_par ( int x )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "while par [ x ] ! = x , set x to the result of find_par of par [ x ]",
      "code": "while ( par [ x ] != x ) { x = find_par ( par [ x ] ) ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return x",
      "code": "return x ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "uni is a void function with int arguments x and y",
      "code": "void uni ( int x , int y )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "set par [ find_par ( y ) ] to par [ find_par ( x ) ]",
      "code": "par [ find_par ( y ) ] = par [ find_par ( x ) ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set par [ find_par ( x ) ] to par [ find_par ( y ) ]",
      "code": "par [ find_par ( x ) ] = par [ find_par ( y ) ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "create ints n , k , x , y and sum where sum = 0",
      "code": "int n , k , x , y , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n , k and x",
      "code": "cin >> n >> k >> x ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i from 0 to n - k exclusive",
      "code": "for ( int i = 0 ; i < n - k ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read input to y",
      "code": "cin >> y ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "add y to sum",
      "code": "sum += y ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "increase sum by x * k",
      "code": "sum += x * k ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "void uni ( int x and int y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int n , k , x , y , sum , sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        18
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "cout << sum ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        18,
        7
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        18,
        12
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "cout << sum ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        18,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "cout << sum ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        7
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        7,
        12
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        7,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        12
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        14,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "y >> y ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "cout << sum ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        18,
        7
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        18,
        7,
        12
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        18,
        7,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        18,
        12
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "cout << sum ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        18,
        12,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "cout << sum ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        18,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "cout << sum ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        7,
        12
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        7,
        12,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        12,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( par [ x ] != x ) x = par ( par [ x ] ) ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        14,
        18,
        7
      ],
      "mod_code": [
        "y >> y ;",
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        18,
        7,
        12
      ],
      "mod_code": [
        "y >> y ;",
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        18,
        7,
        8
      ],
      "mod_code": [
        "y >> y ;",
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        18,
        12,
        8
      ],
      "mod_code": [
        "y >> y ;",
        "cout << sum ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        14,
        18,
        8
      ],
      "mod_code": [
        "y >> y ;",
        "cout << sum ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "y >> y ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        7,
        12
      ],
      "mod_code": [
        "y >> y ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        7,
        12,
        8
      ],
      "mod_code": [
        "y >> y ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        7,
        8
      ],
      "mod_code": [
        "y >> y ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        12,
        8
      ],
      "mod_code": [
        "y >> y ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "y >> y ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        18,
        7
      ],
      "mod_code": [
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        18,
        7,
        12
      ],
      "mod_code": [
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        18,
        7,
        12,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        18,
        7,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        18,
        12,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        18,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘par’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        12,
        8
      ],
      "mod_code": [
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "par [ find_par ( y ) ] = par [ find_par ( x ) ] ) ;",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> k >> x )",
        "par [ find_par ( x ) ] += par ( y ) ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘par’ cannot be used as a function"
    }
  ]
}