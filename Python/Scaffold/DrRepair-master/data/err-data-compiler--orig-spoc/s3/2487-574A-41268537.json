{
  "meta": {
    "index": 2487,
    "hitid": "3ZG552ORAMYS0G389O7FV967CXOV2N",
    "workerid": "A1AYVATMT88U1W",
    "probid": "574A",
    "subid": "41268537"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = array of integers of length 105",
      "code": "int a [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n , t , t1 , maxx be integers",
      "code": "int n , t , t1 , maxx ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let sum be an integer with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "memset of a , 0 , length of a",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "t1 is equal to a [ 0 ]",
      "code": "t1 = a [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let ff , t be integers with ff = 1",
      "code": "int ff = 1 , t ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "while ff is equal to 1",
      "code": "while ( ff == 1 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "maxx is equal to - 1",
      "code": "maxx = - 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if maxx is less than a [ i ]",
      "code": "if ( maxx < a [ i ] )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "maxx is equal to a [ i ]",
      "code": "maxx = a [ i ] ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "t is equal to i",
      "code": "t = i ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if a [ 0 ] is greater than maxx",
      "code": "if ( a [ 0 ] > maxx )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "ff is equal to 0",
      "code": "ff = 0 ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 20,
      "text": "decrement a [ t ] by 1",
      "code": "a [ t ] -- ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "increment a [ 0 ] by 1",
      "code": "a [ 0 ] ++ ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print a [ 0 ] - t1 and newline",
      "code": "cout << a [ 0 ] - t1 << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        14,
        13,
        19
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "t /= i ;",
        "int maxx = a [ i ] ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        14,
        9,
        19
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "t /= i ;",
        "while ( ff == ' 1 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        14,
        19
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "t /= i ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        24
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "t /= i ;",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        9,
        19
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "int maxx = a [ i ] ;",
        "while ( ff == ' 1 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        19
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "int maxx = a [ i ] ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        24
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "int maxx = a [ i ] ;",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9,
        19
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "while ( ff == ' 1 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        24
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "while ( ff == ' 1 ' )",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19,
        24
      ],
      "mod_code": [
        "int ff , t = 1 ;",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        13,
        9,
        19
      ],
      "mod_code": [
        "t /= i ;",
        "int maxx = a [ i ] ;",
        "while ( ff == ' 1 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        13,
        19
      ],
      "mod_code": [
        "t /= i ;",
        "int maxx = a [ i ] ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        13,
        19,
        24
      ],
      "mod_code": [
        "t /= i ;",
        "int maxx = a [ i ] ;",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        9,
        19
      ],
      "mod_code": [
        "t /= i ;",
        "while ( ff == ' 1 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        9,
        19,
        24
      ],
      "mod_code": [
        "t /= i ;",
        "while ( ff == ' 1 ' )",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "t /= i ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        19,
        24
      ],
      "mod_code": [
        "t /= i ;",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        9,
        19
      ],
      "mod_code": [
        "int maxx = a [ i ] ;",
        "while ( ff == ' 1 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        9,
        19,
        24
      ],
      "mod_code": [
        "int maxx = a [ i ] ;",
        "while ( ff == ' 1 ' )",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "int maxx = a [ i ] ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        19,
        24
      ],
      "mod_code": [
        "int maxx = a [ i ] ;",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "while ( ff == ' 1 ' )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        19,
        24
      ],
      "mod_code": [
        "while ( ff == ' 1 ' )",
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        24
      ],
      "mod_code": [
        "do",
        "cout << a [ 0 ] - ' t1 ' << endl ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}