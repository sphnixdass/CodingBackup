{
  "meta": {
    "index": 967,
    "hitid": "39AYGO6AFFE3ACD0UZXRB5T66ZP6NZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "461A",
    "subid": "39275574"
  },
  "lines": [
    {
      "line": 0,
      "text": "a is a new array of long longs with 1e6 elements",
      "code": "long long a [ ( int ) 1e6 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare new integer variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read standard input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create new long long called sum = 0",
      "code": "long long sum = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i from 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read a [ i ] from the input",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "change sum to sum + a [ i ]",
      "code": "sum += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if n is equal to 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if n = 2",
      "code": "if ( n == 2 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print 2 * sum to the standard output",
      "code": "cout << 2 * sum << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "sort a",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "create new long long variable prod = n - 2",
      "code": "long long prod = n - 2 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "resta is a new long long = 0",
      "code": "long long resta = 0 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "i is a new integer variable with value 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "while prod > 0",
      "code": "while ( prod > 0 )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "add a [ i ] * prod to resta",
      "code": "resta += a [ i ] * prod ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "decrement prod",
      "code": "prod -- ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "declare long long resp with value sum * n - resta",
      "code": "long long resp = sum * n - resta ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print resp",
      "code": "cout << resp << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long a [ 1e6 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int i i ;"
      ],
      "err_line": 20,
      "err_msg": "expected initializer before ‘i’"
    },
    {
      "mod_line": [
        0,
        27
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cout << resp ;"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        27,
        6
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cout << resp ;",
        "cin >> a [ i ++ ] ;"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        27,
        6,
        5
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cout << resp ;",
        "cin >> a [ i ++ ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        27,
        6,
        3
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cout << resp ;",
        "cin >> a [ i ++ ] ;",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        27,
        5
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cout << resp ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        27,
        5,
        3
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cout << resp ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        27,
        3
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cout << resp ;",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cin >> a [ i ++ ] ;"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        6,
        5
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cin >> a [ i ++ ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        6,
        5,
        3
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cin >> a [ i ++ ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        6,
        3
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cin >> a [ i ++ ] ;",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        5,
        3
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "long long a [ 1e6 ] ;",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        27,
        6,
        0
      ],
      "mod_code": [
        "cout << resp ;",
        "cin >> a [ i ++ ] ;",
        "long long a [ 1e6 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        27,
        6,
        0,
        5
      ],
      "mod_code": [
        "cout << resp ;",
        "cin >> a [ i ++ ] ;",
        "long long a [ 1e6 ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        27,
        6,
        0,
        3
      ],
      "mod_code": [
        "cout << resp ;",
        "cin >> a [ i ++ ] ;",
        "long long a [ 1e6 ] = { 0 } ;",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        27,
        6,
        5
      ],
      "mod_code": [
        "cout << resp ;",
        "cin >> a [ i ++ ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        6,
        5,
        3
      ],
      "mod_code": [
        "cout << resp ;",
        "cin >> a [ i ++ ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        6,
        3
      ],
      "mod_code": [
        "cout << resp ;",
        "cin >> a [ i ++ ] ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        0
      ],
      "mod_code": [
        "cout << resp ;",
        "long long a [ 1e6 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        27,
        0,
        5
      ],
      "mod_code": [
        "cout << resp ;",
        "long long a [ 1e6 ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        27,
        0,
        5,
        3
      ],
      "mod_code": [
        "cout << resp ;",
        "long long a [ 1e6 ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        27,
        0,
        3
      ],
      "mod_code": [
        "cout << resp ;",
        "long long a [ 1e6 ] = { 0 } ;",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        27,
        5
      ],
      "mod_code": [
        "cout << resp ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        5,
        3
      ],
      "mod_code": [
        "cout << resp ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        3
      ],
      "mod_code": [
        "cout << resp ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "cin >> a [ i ++ ] ;",
        "long long a [ 1e6 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        6,
        0,
        5
      ],
      "mod_code": [
        "cin >> a [ i ++ ] ;",
        "long long a [ 1e6 ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        6,
        0,
        5,
        3
      ],
      "mod_code": [
        "cin >> a [ i ++ ] ;",
        "long long a [ 1e6 ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        6,
        0,
        3
      ],
      "mod_code": [
        "cin >> a [ i ++ ] ;",
        "long long a [ 1e6 ] = { 0 } ;",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cin >> a [ i ++ ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        3
      ],
      "mod_code": [
        "cin >> a [ i ++ ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "cin >> a [ i ++ ] ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "long long a [ 1e6 ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        5,
        3
      ],
      "mod_code": [
        "long long a [ 1e6 ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "long long a [ 1e6 ] = { 0 } ;",
        "cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "size of array ‘a’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}