{
  "meta": {
    "index": 1722,
    "hitid": "304QEQWKZPEQEMRXTPHNHTJKJ6AO0X",
    "workerid": "A1APYLD4DUK33J",
    "probid": "71A",
    "subid": "49037103"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n is true",
      "code": "while ( n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if length of s is less than or equal to 10",
      "code": "if ( s . length ( ) <= 10 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print s",
      "code": "cout << s ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print s [ 0 ]",
      "code": "cout << s [ 0 ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print length of s - 2",
      "code": "cout << s . length ( ) - 2 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print s [ length of s - 1 ]",
      "code": "cout << s [ s . length ( ) - 1 ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" \\ n \"",
      "code": "cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "decrement n",
      "code": "n -- ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s . size ( ) - 2 << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s . size ( ) - 2 << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s . size ( ) - 2 << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s . size ( ) - 2 << endl ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s . size ( ) - 2 << endl ;",
        "<< \" \\n \" ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s . size ( ) - 2 << endl ;",
        "<< \" \\n \" ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        10,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s . size ( ) - 2 << endl ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        10,
        5,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s . size ( ) - 2 << endl ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        10,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s . size ( ) - 2 << endl ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        11,
        13
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        11,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        11,
        5,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        11,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "cout << s << endl ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "<< \" \\n \" ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        13,
        5,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "<< \" \\n \" ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        13,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "<< \" \\n \" ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        5
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        4
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        11,
        5
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        11,
        5,
        4
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        11,
        4
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        5
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "<< \" \\n \" ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        5,
        4
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "<< \" \\n \" ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        13,
        4
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "<< \" \\n \" ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        5,
        4
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "cout << s . size ( ) - 2 << endl ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        13,
        5
      ],
      "mod_code": [
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        13,
        5,
        4
      ],
      "mod_code": [
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        11,
        13,
        4
      ],
      "mod_code": [
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "<< \" \\n \" ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        5,
        4
      ],
      "mod_code": [
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "cout << s [ s . size ( ) - 1 ] << endl ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        5,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    }
  ]
}