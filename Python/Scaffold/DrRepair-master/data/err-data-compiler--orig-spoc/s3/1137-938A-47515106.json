{
  "meta": {
    "index": 1137,
    "hitid": "3DTJ4WT8BD914GKY35RJIGSSWOOZEM",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "938A",
    "subid": "47515106"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function car taking a char x and returning a bool",
      "code": "bool car ( char x )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return true if x is not a lowercase vowel including y",
      "code": "return ( x != ' a ' && x != ' u ' && x != ' i ' && x != ' e ' && x != ' o ' && x != ' y ' ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "jap = bool with hap = false",
      "code": "bool hap = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if car of s [ i ] equals true",
      "code": "if ( car ( s [ i ] ) )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print s [ i ]",
      "code": "cout << s [ i ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set hap to false",
      "code": "hap = 0 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if hap equals false",
      "code": "if ( ! hap )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set hap to true",
      "code": "hap = 1 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "print s [ i ]",
      "code": "cout << s [ i ] ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "return x ? true : y ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "bool jap = false ;"
      ],
      "err_line": 12,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "return x ? x : y ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        12
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = false ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        15
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "bool hap = false ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        15
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "bool hap = false ;",
        "bool hap = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "bool hap = false ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        15
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "bool hap = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        15,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool jap = false ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "return x ? true : y ;",
        "if ( ! ( s [ i ] ) )"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12
      ],
      "mod_code": [
        "return x ? true : y ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = false ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12,
        15
      ],
      "mod_code": [
        "return x ? true : y ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = false ;",
        "bool hap = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = false ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        15
      ],
      "mod_code": [
        "return x ? true : y ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        15,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "if ( ! ( s [ i ] ) )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool hap = false ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        15
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool hap = false ;",
        "bool hap = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        15,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool hap = false ;",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool hap = false ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool hap = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "return x ? true : y ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )"
      ],
      "err_line": 12,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = false ;"
      ],
      "err_line": 14,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        15
      ],
      "mod_code": [
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = false ;",
        "bool hap = true ;"
      ],
      "err_line": 14,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        13
      ],
      "mod_code": [
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = false ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        15
      ],
      "mod_code": [
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = true ;"
      ],
      "err_line": 12,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        13
      ],
      "mod_code": [
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "bool jap = false ;",
        "if ( ! ( s [ i ] ) )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "bool jap = false ;",
        "bool hap = false ;"
      ],
      "err_line": 14,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        15
      ],
      "mod_code": [
        "bool jap = false ;",
        "bool hap = false ;",
        "bool hap = true ;"
      ],
      "err_line": 14,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        13
      ],
      "mod_code": [
        "bool jap = false ;",
        "bool hap = false ;",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        13
      ],
      "mod_code": [
        "bool jap = false ;",
        "bool hap = false ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "bool jap = false ;",
        "bool hap = true ;"
      ],
      "err_line": 12,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        13
      ],
      "mod_code": [
        "bool jap = false ;",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "bool jap = false ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘hap’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        13
      ],
      "mod_code": [
        "if ( ! ( s [ i ] ) )",
        "bool hap = false ;",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        12,
        13
      ],
      "mod_code": [
        "if ( ! ( s [ i ] ) )",
        "bool hap = false ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        15,
        13
      ],
      "mod_code": [
        "if ( ! ( s [ i ] ) )",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "if ( ! ( s [ i ] ) )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        15,
        13
      ],
      "mod_code": [
        "bool hap = false ;",
        "bool hap = true ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "bool hap = false ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "bool hap = true ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}