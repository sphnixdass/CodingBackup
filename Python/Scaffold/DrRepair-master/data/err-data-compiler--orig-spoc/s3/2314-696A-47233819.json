{
  "meta": {
    "index": 2314,
    "hitid": "3VCK0Q0PO588W1RLSAHA24JFTW70NW",
    "workerid": "A1APYLD4DUK33J",
    "probid": "696A",
    "subid": "47233819"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare map from long long to long long m",
      "code": "map < long long , long long > m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare lca with long longs u , v , inteiger w default - 1",
      "code": "long long lca ( long long u , long long v , int w = - 1 )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long long res = 0",
      "code": "long long res = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while u is not v",
      "code": "while ( u != v )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if v is less than u , swap elements between v and u",
      "code": "if ( v < u ) swap ( v , u ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if first index of v in m is not end of m , increment res by m [ v ]",
      "code": "if ( m . find ( v ) != m . end ( ) ) res += m [ v ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if bitwise not w , increment m [ v ] by w",
      "code": "if ( ~ w ) m [ v ] += w ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let v be v bitshift right 1",
      "code": "v >>= 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return res from function",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "declare integer q",
      "code": "int q ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "declare integer t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "declare long longs u , v , w",
      "code": "long long u , v , w ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read q",
      "code": "cin >> q ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "while decrement q is true",
      "code": "while ( q -- )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read t , u , v",
      "code": "cin >> t >> u >> v ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if t is 1",
      "code": "if ( t == 1 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "read w",
      "code": "cin >> w ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "run lca ( u , v , w )",
      "code": "lca ( u , v , w ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print result of run lca ( u , v ) , \" \\ n \"",
      "code": "cout << lca ( u , v ) << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )"
      ],
      "err_line": 22,
      "err_msg": "too few arguments to function ‘long long int lca(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < long long , long long m ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long v = - 1 )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int v’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int q = s . size ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << cin >> q ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "while ( -- -- )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "lca ( ( u , v , w ) ) ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘long long int lca(long long int, long long int, int)’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        3
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;",
        "while ( ! v )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        16
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;",
        "while ( -- -- )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        3
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( ! v )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        3,
        16
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( ! v )",
        "while ( -- -- )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        3,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( ! v )",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        16
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( -- -- )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        16,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        5,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( ! w ) m [ v ] += w ;"
      ],
      "err_line": 22,
      "err_msg": "too few arguments to function ‘long long int lca(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( ! w ) m [ v ] += w ;",
        "while ( ! v )"
      ],
      "err_line": 22,
      "err_msg": "too few arguments to function ‘long long int lca(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        16
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( ! w ) m [ v ] += w ;",
        "while ( ! v )",
        "while ( -- -- )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( ! w ) m [ v ] += w ;",
        "while ( ! v )",
        "if ( ! t )"
      ],
      "err_line": 22,
      "err_msg": "too few arguments to function ‘long long int lca(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        6,
        16
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( ! w ) m [ v ] += w ;",
        "while ( -- -- )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        6,
        16,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( ! w ) m [ v ] += w ;",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        6,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( ! w ) m [ v ] += w ;",
        "if ( ! t )"
      ],
      "err_line": 22,
      "err_msg": "too few arguments to function ‘long long int lca(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "while ( ! v )"
      ],
      "err_line": 22,
      "err_msg": "too few arguments to function ‘long long int lca(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        3,
        16
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "while ( ! v )",
        "while ( -- -- )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        16,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "while ( ! v )",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "while ( ! v )",
        "if ( ! t )"
      ],
      "err_line": 22,
      "err_msg": "too few arguments to function ‘long long int lca(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "while ( -- -- )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        16,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "long long lca ( long long u , long long v , long long w )",
        "if ( ! t )"
      ],
      "err_line": 22,
      "err_msg": "too few arguments to function ‘long long int lca(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;",
        "while ( ! v )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        16
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;",
        "while ( ! v )",
        "while ( -- -- )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        18
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;",
        "while ( ! v )",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        6,
        16
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;",
        "while ( -- -- )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        18
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        6,
        18
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! w ) m [ v ] += w ;",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( ! v )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        3,
        16
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( ! v )",
        "while ( -- -- )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        3,
        16,
        18
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( ! v )",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        3,
        18
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( ! v )",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( -- -- )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        16,
        18
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "if ( m . find ( v ) != m ) { res += m [ v ] ; }",
        "if ( ! t )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        6,
        3,
        16
      ],
      "mod_code": [
        "if ( ! w ) m [ v ] += w ;",
        "while ( ! v )",
        "while ( -- -- )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        3,
        16,
        18
      ],
      "mod_code": [
        "if ( ! w ) m [ v ] += w ;",
        "while ( ! v )",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "if ( ! w ) m [ v ] += w ;",
        "while ( -- -- )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        16,
        18
      ],
      "mod_code": [
        "if ( ! w ) m [ v ] += w ;",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "while ( ! v )",
        "while ( -- -- )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        16,
        18
      ],
      "mod_code": [
        "while ( ! v )",
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "while ( -- -- )",
        "if ( ! t )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘)’ token"
    }
  ]
}