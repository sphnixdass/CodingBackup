{
  "meta": {
    "index": 379,
    "hitid": "3TUOHPJXYHR6GL6ANNX471JHWFTXWC",
    "workerid": "AUD1I8FZAO4VF",
    "probid": "950A",
    "subid": "48603739"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let l and r and a be ints",
      "code": "int l , r , a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read l and r and a",
      "code": "cin >> l >> r >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let num be an int with value 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if l is r",
      "code": "if ( l == r )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set num to 1 + a / 2",
      "code": "num = l + a / 2 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if l is less than r",
      "code": "else if ( l < r )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if l + a is less than or equal to r",
      "code": "if ( l + a <= r )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set num to l + a",
      "code": "num = l + a ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set num to r + ( l + a - r ) / 2",
      "code": "num = r + ( l + a - r ) / 2 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if r + a is less than or equal to l",
      "code": "if ( r + a <= l )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set num to r + a",
      "code": "num = r + a ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set num to l + ( r + a - 1 ) / 2",
      "code": "num = l + ( r + a - l ) / 2 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print num * 2",
      "code": "cout << ( num * 2 ) << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int l , r let a ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘let’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int num be ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        3
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "num += a ;",
        "int num be ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        9
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "num += a ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "num += a ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "int num be ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        9
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "do",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        13,
        3
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "int num be ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        13,
        3,
        9
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        13,
        3,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        13,
        9
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        13,
        9,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "do",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        13,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "num += a ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "int num be ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        3,
        9
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        3,
        9,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "int num be ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        3,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        9,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "do",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "num = 1 + a / 2 ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        3
      ],
      "mod_code": [
        "num += a ;",
        "num += a ;",
        "int num be ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        8,
        13,
        3,
        9
      ],
      "mod_code": [
        "num += a ;",
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        8,
        13,
        3,
        14
      ],
      "mod_code": [
        "num += a ;",
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        8,
        13,
        9
      ],
      "mod_code": [
        "num += a ;",
        "num += a ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        9,
        14
      ],
      "mod_code": [
        "num += a ;",
        "num += a ;",
        "do",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        14
      ],
      "mod_code": [
        "num += a ;",
        "num += a ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "num += a ;",
        "int num be ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        8,
        3,
        9
      ],
      "mod_code": [
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        8,
        3,
        9,
        14
      ],
      "mod_code": [
        "num += a ;",
        "int num be ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        8,
        3,
        14
      ],
      "mod_code": [
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "num += a ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14
      ],
      "mod_code": [
        "num += a ;",
        "do",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "num += a ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "num += a ;",
        "int num be ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        13,
        3,
        9
      ],
      "mod_code": [
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        13,
        3,
        9,
        14
      ],
      "mod_code": [
        "num += a ;",
        "int num be ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        13,
        3,
        14
      ],
      "mod_code": [
        "num += a ;",
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "num += a ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        9,
        14
      ],
      "mod_code": [
        "num += a ;",
        "do",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "num += a ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        3,
        9,
        14
      ],
      "mod_code": [
        "int num be ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int num be ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}