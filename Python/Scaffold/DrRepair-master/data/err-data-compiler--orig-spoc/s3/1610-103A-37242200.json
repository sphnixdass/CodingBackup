{
  "meta": {
    "index": 1610,
    "hitid": "3SV8KD29L4M4QGC8ZR2MGB5XGLIKZP",
    "workerid": "AIWEXPJAU66D9",
    "probid": "103A",
    "subid": "37242200"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare long long integer array a with size 150",
      "code": "long long int a [ 150 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare long long integer variable sum = 0",
      "code": "long long int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign value of 0 to sum",
      "code": "sum = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if i = 1",
      "code": "if ( i == 1 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increase sum by a [ 1 ]",
      "code": "sum += a [ 1 ] ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increase sum by ( a [ i ] - 1 ) * i + 1",
      "code": "sum = sum + ( a [ i ] - 1 ) * i + 1 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        14,
        4,
        10
      ],
      "mod_code": [
        "sum += ( a [ i ] - 1 ) * ( i + 1 ) ;",
        "cout << sum ;",
        "while ( n >> n )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        14,
        10
      ],
      "mod_code": [
        "sum += ( a [ i ] - 1 ) * ( i + 1 ) ;",
        "cout << sum ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        4,
        10
      ],
      "mod_code": [
        "sum += ( a [ i ] - 1 ) * ( i + 1 ) ;",
        "while ( n >> n )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "sum += ( a [ i ] - 1 ) * ( i + 1 ) ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        4,
        10
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( n >> n )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "cout << sum ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "while ( n >> n )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}