{
  "meta": {
    "index": 497,
    "hitid": "3DW3BNF1GHC3MV5XP5GG50JAYXKV8U",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "967A",
    "subid": "40618303"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , s , h , m , a , b , h1 , m1 , r1 , r2 with r1 = - 1 , r2 = - 1",
      "code": "int n , s , h , m , a , b , h1 , m1 , r1 = - 1 , r2 = - 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set a and b to 0",
      "code": "a = 0 , b = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create boolean res with res = false",
      "code": "bool res = false ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n - 1 and increment i",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read h , m",
      "code": "cin >> h >> m ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set h1 to h - a",
      "code": "h1 = h - a ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set h1 to h1 * 60",
      "code": "h1 = h1 * 60 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set h1 to h1 - b + m",
      "code": "h1 = ( h1 - b ) + m ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if i is equal to 0 then",
      "code": "if ( i == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if h1 greater than or equal to ( s ) + 1 and res is equal to false then",
      "code": "if ( h1 >= ( s ) + 1 && res == false )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set res to true",
      "code": "res = true ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set r1 to 0",
      "code": "r1 = 0 ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set r2 to 0",
      "code": "r2 = 0 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if if h1 greater than or equal to ( 2 * s ) + 1 and res is equal to false then",
      "code": "if ( h1 >= ( 2 * s ) + 2 && res == false )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "set res to true",
      "code": "res = true ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "if b + s + 1 greater than 59 then",
      "code": "if ( b + s + 1 > 59 )",
      "indent": 4
    },
    {
      "line": 20,
      "text": "set r1 to a + 1",
      "code": "r1 = a + 1 ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "set r2 to b + s + 1 - 60",
      "code": "r2 = b + s + 1 - 60 ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "if r2 is equal to 60 then",
      "code": "if ( r2 == 60 )",
      "indent": 5
    },
    {
      "line": 23,
      "text": "set r2 to 0",
      "code": "r2 = 0 ;",
      "indent": 6
    },
    {
      "line": 24,
      "text": "increment r1",
      "code": "r1 ++ ;",
      "indent": 6
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 26,
      "text": "else do",
      "code": "else",
      "indent": 4
    },
    {
      "line": 27,
      "text": "set r1 to a",
      "code": "r1 = a ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "set r2 to b + s + 1",
      "code": "r2 = b + s + 1 ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 32,
      "text": "set a to h",
      "code": "a = h ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "set b to m",
      "code": "b = m ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "if res is false then",
      "code": "if ( ! res )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "if b + s + 1 greater than 59 then",
      "code": "if ( b + s + 1 > 59 )",
      "indent": 2
    },
    {
      "line": 37,
      "text": "set r1 to a + 1",
      "code": "r1 = a + 1 ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "set r2 to b + s + 1 - 60",
      "code": "r2 = b + s + 1 - 60 ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "if r2 is equal to 60 then",
      "code": "if ( r2 == 60 )",
      "indent": 3
    },
    {
      "line": 40,
      "text": "set r2 to 0",
      "code": "r2 = 0 ;",
      "indent": 4
    },
    {
      "line": 41,
      "text": "increment r1",
      "code": "r1 ++ ;",
      "indent": 4
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 43,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 44,
      "text": "set r1 to a",
      "code": "r1 = a ;",
      "indent": 3
    },
    {
      "line": 45,
      "text": "set r2 to b + s + 1",
      "code": "r2 = b + s + 1 ;",
      "indent": 3
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 48,
      "text": "print r1 and \" \" and r2",
      "code": "cout << r1 << \" \" << r2 << endl ;",
      "indent": 1
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 = - 1 , r1 = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘a’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "a to ;"
      ],
      "err_line": 32,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 47,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        5
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "cin >> n ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        7
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "cin >> n ;",
        "h1 -= a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "cin >> n ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        7
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "h1 -= a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "h1 -= a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "h1 -= a ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        2,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "int a = 0 , b = 0 ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "cin >> n ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        7
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "cin >> n ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "h1 -= a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "cin >> n ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "cin >> n ;",
        "h1 -= a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "cin >> n ;",
        "h1 -= a ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        3,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "cin >> n ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "h1 -= a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "h1 -= a ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        5,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "h1 -= a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        7,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "h1 -= a ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "int n , s , h , m , a , b , h1 , m1 , r1 , r1 , r2 , r2 = - 1 ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "cin >> n ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        7
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "cin >> n ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "h1 -= a ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        17
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "cin >> n ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "cin >> n ;",
        "h1 -= a ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        17
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "cin >> n ;",
        "h1 -= a ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        3,
        17
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "cin >> n ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "h1 -= a ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        17
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "h1 -= a ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        5,
        17
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "for ( int i = 0 ; i < n - 1 ; i ++ )",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "h1 -= a ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        7,
        17
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "h1 -= a ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "int a = 0 , b = 0 ;",
        "if ( h1 >= ( 2 * s ) + 1 && res == false )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    }
  ]
}