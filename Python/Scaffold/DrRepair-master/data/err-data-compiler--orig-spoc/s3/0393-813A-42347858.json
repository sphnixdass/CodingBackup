{
  "meta": {
    "index": 393,
    "hitid": "39HYCOOPKOFWD37FSLQ54WEYIV0MD5",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "813A",
    "subid": "42347858"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , m , cnt , l , r , a , sum , ans , and s_pro",
      "code": "int n , m , cnt , l , r , a , sum , ans , s_pro ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let bool ok",
      "code": "bool ok ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create int array pro of size n + 1",
      "code": "int pro [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , read pro [ i ] and set s_pro to s_pro + pro [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> pro [ i ] , s_pro += pro [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort array pro",
      "code": "sort ( pro , pro + n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integers lr and ri",
      "code": "int lf , ri ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read lf and ri",
      "code": "cin >> lf >> ri ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "while ok is falsy",
      "code": "while ( true && ! ok )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set sum to sum + pro [ a ]",
      "code": "sum += pro [ a ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increase cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if sum is greater than or equal to lf and sum is less than or equal to ri",
      "code": "if ( sum >= lf && sum <= ri )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set ans to sum",
      "code": "ans = sum ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else if sum is less than or equal to ri",
      "code": "else if ( sum <= ri )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set ans to lf",
      "code": "ans = lf ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "set sum to sum - pro [ a ]",
      "code": "sum -= pro [ a ] ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "decrease cnt by 1",
      "code": "cnt -- ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "increase a by 1",
      "code": "a ++ ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if a is equal to n or cnt is equal to n , set ok to 1",
      "code": "if ( a == n || cnt == n ) ok = 1 ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if cnt is equal to n",
      "code": "if ( cnt == n )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int lr , ri ;"
      ],
      "err_line": 10,
      "err_msg": "‘lf’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , m , cnt , l , r , a , sum , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool ok ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int a [ n + 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘pro’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( m ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "long long lr , ri ;"
      ],
      "err_line": 10,
      "err_msg": "‘lf’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cin >> lf >> b ;"
      ],
      "err_line": 10,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ans to ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "ans to ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘a’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        27
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )"
      ],
      "err_line": 10,
      "err_msg": "‘lf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        27,
        0
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        6,
        27,
        1
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )",
        "bool ok ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8,
        6,
        27,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "‘lf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        0
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        6,
        0,
        1
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        6,
        0,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        6,
        1
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "bool ok ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8,
        6,
        1,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "bool ok ( )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8,
        6,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "sort ( pro , pro + 4 ) ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "‘lf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        27
      ],
      "mod_code": [
        "int lr , ri ;",
        "if ( cnt == ' n ' )"
      ],
      "err_line": 10,
      "err_msg": "‘lf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        27,
        0
      ],
      "mod_code": [
        "int lr , ri ;",
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        27,
        0,
        1
      ],
      "mod_code": [
        "int lr , ri ;",
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        27,
        0,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        27,
        1
      ],
      "mod_code": [
        "int lr , ri ;",
        "if ( cnt == ' n ' )",
        "bool ok ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8,
        27,
        1,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "if ( cnt == ' n ' )",
        "bool ok ( )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8,
        27,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "if ( cnt == ' n ' )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "‘lf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "int lr , ri ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        0,
        1
      ],
      "mod_code": [
        "int lr , ri ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        0,
        1,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        0,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "int lr , ri ;",
        "bool ok ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8,
        1,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "bool ok ( )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8,
        29
      ],
      "mod_code": [
        "int lr , ri ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "‘lf’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        27,
        0
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        27,
        0,
        1
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        27,
        0,
        29
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        27,
        1
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )",
        "bool ok ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        27,
        1,
        29
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )",
        "bool ok ( )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        27,
        29
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "if ( cnt == ' n ' )",
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        0,
        1
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        0,
        1,
        29
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        0,
        29
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "bool ok ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        1,
        29
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "bool ok ( )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        29
      ],
      "mod_code": [
        "sort ( pro , pro + 4 ) ;",
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        27,
        0
      ],
      "mod_code": [
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        27,
        0,
        1
      ],
      "mod_code": [
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        27,
        0,
        1,
        29
      ],
      "mod_code": [
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        27,
        0,
        29
      ],
      "mod_code": [
        "if ( cnt == ' n ' )",
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        27,
        1
      ],
      "mod_code": [
        "if ( cnt == ' n ' )",
        "bool ok ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        27,
        1,
        29
      ],
      "mod_code": [
        "if ( cnt == ' n ' )",
        "bool ok ( )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        27,
        29
      ],
      "mod_code": [
        "if ( cnt == ' n ' )",
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        1,
        29
      ],
      "mod_code": [
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "bool ok ( )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        29
      ],
      "mod_code": [
        "int n , m , cnt , l , r , a , sum , ans , ans ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        29
      ],
      "mod_code": [
        "bool ok ( )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    }
  ]
}