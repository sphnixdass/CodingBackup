{
  "meta": {
    "index": 839,
    "hitid": "3OEWW2KGQJ5KD6SR515IW033DVHDOD",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "987A",
    "subid": "48269306"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int , c = 1 , ans = 0",
      "code": "int n , c = 1 , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s and k = array of 6 string",
      "code": "string s [ 6 ] , k [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s [ i ]",
      "code": "cin >> s [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s [ i ] [ 0 ] is ' p ' decrement c",
      "code": "if ( s [ i ] [ 0 ] == ' p ' ) c -- ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if c",
      "code": "if ( c )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "k [ ans ] = \" Power \"",
      "code": "k [ ans ] = \" Power \" ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "c = 1",
      "code": "c = 1 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if s [ i ] [ 0 ] is ' g ' decrement c",
      "code": "if ( s [ i ] [ 0 ] == ' g ' ) c -- ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if c",
      "code": "if ( c )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "k [ ans ] = \" Time \"",
      "code": "k [ ans ] = \" Time \" ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "c = 1",
      "code": "c = 1 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if s [ i ] [ 0 ] is ' b ' decrement c",
      "code": "if ( s [ i ] [ 0 ] == ' b ' ) c -- ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if c",
      "code": "if ( c )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "k [ ans ] = \" Space \"",
      "code": "k [ ans ] = \" Space \" ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "c = 1",
      "code": "c = 1 ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if s [ i ] [ 0 ] is ' o ' decrement c",
      "code": "if ( s [ i ] [ 0 ] == ' o ' ) c -- ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "if c",
      "code": "if ( c )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "k [ ans ] = \" Soul \"",
      "code": "k [ ans ] = \" Soul \" ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "c = 1",
      "code": "c = 1 ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 35,
      "text": "if s [ i ] [ 0 ] is ' r ' decrement c",
      "code": "if ( s [ i ] [ 0 ] == ' r ' ) c -- ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "if c",
      "code": "if ( c )",
      "indent": 1
    },
    {
      "line": 37,
      "text": "k [ ans ] = \" Reality \"",
      "code": "k [ ans ] = \" Reality \" ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 40,
      "text": "c = 1",
      "code": "c = 1 ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 42,
      "text": "if s [ i ] [ 0 ] is ' y ' decrement c",
      "code": "if ( s [ i ] [ 0 ] == ' y ' ) c -- ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "if c",
      "code": "if ( c )",
      "indent": 1
    },
    {
      "line": 44,
      "text": "k [ ans ] = \" Mind \"",
      "code": "k [ ans ] = \" Mind \" ;",
      "indent": 2
    },
    {
      "line": 45,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 47,
      "text": "print ans",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 48,
      "text": "for i = 0 to ans exclusive print k [ i ]",
      "code": "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string s [ 6 ] , k ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n = 1 , c = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "k [ ' ans \" ] = \" Power \" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int c = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "k [ ' ans \" ] = \" Time \" ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int c = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "k [ ' ans \" ] = \" Space \" ;"
      ],
      "err_line": 23,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int c = 1 ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "int c = 1 ;"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "k [ ' ans \" ] = \" Reality \" ;"
      ],
      "err_line": 37,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "int c = 1 ;"
      ],
      "err_line": 40,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "k [ ' ans \" ] = \" Mind \" ;"
      ],
      "err_line": 44,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        48
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        48,
        3
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        48,
        3,
        5
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        48,
        3,
        30
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        48,
        3,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;",
        "if ( c == c )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        48,
        5
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "getline ( cin , s [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        48,
        5,
        30
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        48,
        5,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "getline ( cin , s [ i ] ) ;",
        "if ( c == c )"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        48,
        30
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        48,
        30,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        48,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "if ( c == c )"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        30
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;",
        "if ( c == c )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        30
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "cin >> N ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        3,
        30,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "cin >> N ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        3,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "cin >> N ;",
        "if ( c == c )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "getline ( cin , s [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        30
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        5,
        30,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        5,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "getline ( cin , s [ i ] ) ;",
        "if ( c == c )"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        30
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        30,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "string s [ 6 ] , k ;",
        "if ( c == c )"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        48,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        48,
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        48,
        3,
        5,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        48,
        3,
        5,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;",
        "if ( c == c )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        48,
        3,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        48,
        3,
        30,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        48,
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "cin >> N ;",
        "if ( c == c )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        48,
        5,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        48,
        5,
        30,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        48,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        48,
        30,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans ; i ++ ) cout << k [ i ] ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        30
      ],
      "mod_code": [
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        30,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "getline ( cin , s [ i ] ) ;",
        "if ( c == c )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        30
      ],
      "mod_code": [
        "cin >> N ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        30,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( c == c )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        30
      ],
      "mod_code": [
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        30,
        15
      ],
      "mod_code": [
        "getline ( cin , s [ i ] ) ;",
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        30,
        15
      ],
      "mod_code": [
        "k [ ' ans \" ] = \" Soul \" ;",
        "if ( c == c )"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    }
  ]
}