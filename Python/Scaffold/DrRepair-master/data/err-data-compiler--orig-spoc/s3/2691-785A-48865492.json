{
  "meta": {
    "index": 2691,
    "hitid": "3YOAVL4CA0BJCEN5EZF69UG1KMVZ4S",
    "workerid": "AIWEXPJAU66D9",
    "probid": "785A",
    "subid": "48865492"
  },
  "lines": [
    {
      "line": 0,
      "text": "define function createMap that returns map of string to int",
      "code": "map < string , int > createMap ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let shapes be a map from strings to integers",
      "code": "map < string , int > shapes ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set shapes [ \" Tetrahedron \" ] to 4",
      "code": "shapes [ \" Tetrahedron \" ] = 4 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "change the value of shapes [ \" Cube \" ] to 6",
      "code": "shapes [ \" Cube \" ] = 6 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign the new value = 8 to shapes [ \" Octahedron \" ]",
      "code": "shapes [ \" Octahedron \" ] = 8 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "change shapes [ \" Dodecahedron \" ] to 12",
      "code": "shapes [ \" Dodecahedron \" ] = 12 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "change the value of shapes [ \" Icosahedron \" ] to 20",
      "code": "shapes [ \" Icosahedron \" ] = 20 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return shapes",
      "code": "return shapes ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "create a map from strings to integers called shapes and set it ' s value to the result of createMap ( )",
      "code": "map < string , int > shapes = createMap ( ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "define ints numShapes and count with count = 0",
      "code": "int numShapes , count = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read variable numShapes from the input",
      "code": "cin >> numShapes ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for integer i = 0 to numShapes exclusive",
      "code": "for ( int i = 0 ; i < numShapes ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "declare new string called input",
      "code": "string input ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "read from the input to input",
      "code": "cin >> input ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "change count to the sum of count and shapes [ input ]",
      "code": "count += shapes [ input ] ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < string , int > createMap ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::__cxx11::basic_string<char>, int>::map(char)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < string > createMap ;"
      ],
      "err_line": 0,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < strings , int > shapes ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "shapes [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 2,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "shapes [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "shapes [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "shapes [ \" Icosahedron ' ] = 20 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "map < string , int > shapes ( createMap , createMap ( createMap ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "too many arguments to function ‘std::map<std::__cxx11::basic_string<char>, int> createMap()’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "string input = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 15,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "map < string , int > shapes ( ' s ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        10,
        4
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "map < string , int > shapes ( ' s ' ) ;",
        "shapes [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        10,
        4,
        1
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "map < string , int > shapes ( ' s ' ) ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        10,
        4,
        5
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "map < string , int > shapes ( ' s ' ) ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        10,
        1
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "map < string , int > shapes ( ' s ' ) ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        10,
        1,
        5
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "map < string , int > shapes ( ' s ' ) ;",
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        10,
        5
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "map < string , int > shapes ( ' s ' ) ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        4,
        1
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        4,
        1,
        5
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        4,
        5
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1,
        5
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "map < string , int > createMap ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "map < string > createMap ;"
      ],
      "err_line": 0,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        10,
        0,
        4
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "map < string > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        0,
        4,
        1
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "map < string > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        0,
        4,
        5
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "map < string > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        0,
        1
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "map < string > createMap ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 0,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        10,
        0,
        1,
        5
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "map < string > createMap ;",
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        0,
        5
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "map < string > createMap ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "shapes [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        4,
        1
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        4,
        1,
        5
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        4,
        5
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1,
        5
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "map < string , int > shapes ( ' s ' ) ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "map < string > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        4,
        1
      ],
      "mod_code": [
        "map < string > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        4,
        1,
        5
      ],
      "mod_code": [
        "map < string > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        4,
        5
      ],
      "mod_code": [
        "map < string > createMap ;",
        "shapes [ \" Octahedron ' ] = 8 ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "map < string > createMap ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 0,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        0,
        1,
        5
      ],
      "mod_code": [
        "map < string > createMap ;",
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "map < string > createMap ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        5
      ],
      "mod_code": [
        "shapes [ \" Octahedron ' ] = 8 ;",
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "shapes [ \" Octahedron ' ] = 8 ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "map < strings , int > shapes ;",
        "shapes [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    }
  ]
}