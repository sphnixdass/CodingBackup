{
  "meta": {
    "index": 1884,
    "hitid": "3G57RS03HHZB2MOT3XP2RBC8Z9I52M",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "447A",
    "subid": "44758721"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int a and p",
      "code": "int a , p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create int i and int array ar of length 400 , set i to 400",
      "code": "int ar [ 400 ] , i = 400 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement i , ar [ i ] = 0",
      "code": "while ( i -- ) { ar [ i ] = 0 ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read p and a",
      "code": "cin >> p >> a ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "int c and res , set c = 0",
      "code": "int c = 0 , res ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to a exclusive",
      "code": "for ( int i = 1 ; i <= a ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create long long k",
      "code": "long long k ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if c = 0 and ar [ k mod p ] > 0",
      "code": "if ( c == 0 && ar [ k % p ] > 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "res = i",
      "code": "res = i ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "assign 1 to c",
      "code": "c = 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "ar [ k % p ] = 1",
      "code": "ar [ k % p ] = 1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if c = 0",
      "code": "if ( c == 0 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print res and a newline",
      "code": "cout << res << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int c , res = 0 , res ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a and p ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> p >> a )"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long k , k ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘long long int k’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        5,
        4
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        5,
        4,
        1
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )",
        "int a and p ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        5,
        4,
        8
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )",
        "cout << k ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        5,
        4,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "int a and p ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        5,
        1,
        8
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "int a and p ;",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        5,
        1,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "int a and p ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        5,
        8
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "cout << k ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        5,
        8,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "cout << k ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        5,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int c , res = 0 , res ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "while ( cin >> p >> a )"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        4,
        1
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "while ( cin >> p >> a )",
        "int a and p ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        4,
        1,
        8
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "while ( cin >> p >> a )",
        "int a and p ;",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        4,
        1,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "while ( cin >> p >> a )",
        "int a and p ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "while ( cin >> p >> a )",
        "cout << k ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "while ( cin >> p >> a )",
        "cout << k ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        4,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "while ( cin >> p >> a )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int a and p ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        1,
        8
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int a and p ;",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        1,
        8,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int a and p ;",
        "cout << k ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        1,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "int a and p ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "cout << k ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        8,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "cout << k ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "int i , ar [ 400 ] = 400 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        4,
        1
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )",
        "int a and p ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        4,
        1,
        8
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )",
        "int a and p ;",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        4,
        1,
        17
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )",
        "int a and p ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )",
        "cout << k ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        4,
        8,
        17
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )",
        "cout << k ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        4,
        17
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "while ( cin >> p >> a )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "int a and p ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        1,
        8
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "int a and p ;",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        1,
        8,
        17
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "int a and p ;",
        "cout << k ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        1,
        17
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "int a and p ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "cout << k ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        8,
        17
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "cout << k ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "int c , res = 0 , res ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "while ( cin >> p >> a )",
        "int a and p ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        1,
        8
      ],
      "mod_code": [
        "while ( cin >> p >> a )",
        "int a and p ;",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        1,
        8,
        17
      ],
      "mod_code": [
        "while ( cin >> p >> a )",
        "int a and p ;",
        "cout << k ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        1,
        17
      ],
      "mod_code": [
        "while ( cin >> p >> a )",
        "int a and p ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> p >> a )",
        "cout << k ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        17
      ],
      "mod_code": [
        "while ( cin >> p >> a )",
        "cout << k ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "while ( cin >> p >> a )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int a and p ;",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        8,
        17
      ],
      "mod_code": [
        "int a and p ;",
        "cout << k ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "int a and p ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "cout << k ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}