{
  "meta": {
    "index": 2664,
    "hitid": "38B7Q9C28GZILA96TPEMT4YM1AD695",
    "workerid": "A1AYVATMT88U1W",
    "probid": "785A",
    "subid": "42287462"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , sum are long integers",
      "code": "long long int n , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s is a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while n decreased by 1 is true",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s equals Tetrahedron",
      "code": "if ( s == \" Tetrahedron \" )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increase sum by 4",
      "code": "sum += 4 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if s equals Cube",
      "code": "else if ( s == \" Cube \" )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increase sum by 6",
      "code": "sum += 6 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if s equals Octahedron",
      "code": "else if ( s == \" Octahedron \" )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increase sum by 8",
      "code": "sum += 8 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if s equals Dodecahedron",
      "code": "else if ( s == \" Dodecahedron \" )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increase sum by 12",
      "code": "sum += 12 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if s equals Icosahedron",
      "code": "else if ( s == \" Icosahedron \" )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increase sum by 20",
      "code": "sum += 20 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print sum and endline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s == Tetrahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( s == Cube )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( s == Octahedron )"
      ],
      "err_line": 10,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( s == Dodecahedron )"
      ],
      "err_line": 12,
      "err_msg": "‘Dodecahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( s == Icosahedron )"
      ],
      "err_line": 14,
      "err_msg": "‘Icosahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( -- -- )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s == ' Tetrahedron ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( s == ' Cube ' )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( s == ' Octahedron ' )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( s == ' Dodecahedron ' )"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( s == ' Icosahedron ' )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Cube )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        10
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Cube )",
        "if ( s == Octahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        12
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Cube )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Cube )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        10
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Octahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        10,
        12
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        10,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Octahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        12
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        12,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Tetrahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Cube )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Cube )",
        "if ( s == Octahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        12
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Cube )",
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Cube )",
        "if ( s == Octahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Cube )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Cube )",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Cube )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Octahedron )"
      ],
      "err_line": 10,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 10,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 10,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Octahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 10,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 12,
      "err_msg": "‘Dodecahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 12,
      "err_msg": "‘Dodecahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "long long n , sum ;",
        "if ( s == Icosahedron )"
      ],
      "err_line": 14,
      "err_msg": "‘Icosahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Cube )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Cube )",
        "if ( s == Octahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        12
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Cube )",
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        14
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Cube )",
        "if ( s == Octahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Cube )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        14
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Cube )",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Cube )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Octahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        12
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        14
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        14
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Octahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "if ( s == Tetrahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 6,
      "err_msg": "‘Tetrahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( s == Cube )",
        "if ( s == Octahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "if ( s == Cube )",
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        14
      ],
      "mod_code": [
        "if ( s == Cube )",
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        14
      ],
      "mod_code": [
        "if ( s == Cube )",
        "if ( s == Octahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "if ( s == Cube )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        14
      ],
      "mod_code": [
        "if ( s == Cube )",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "if ( s == Cube )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 8,
      "err_msg": "‘Cube’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )"
      ],
      "err_line": 10,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        14
      ],
      "mod_code": [
        "if ( s == Octahedron )",
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 10,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "if ( s == Octahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 10,
      "err_msg": "‘Octahedron’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "if ( s == Dodecahedron )",
        "if ( s == Icosahedron )"
      ],
      "err_line": 12,
      "err_msg": "‘Dodecahedron’ was not declared in this scope"
    }
  ]
}