{
  "meta": {
    "index": 605,
    "hitid": "3AA88CN98PX4LQ23350324WVACYKYO",
    "workerid": "AIWEXPJAU66D9",
    "probid": "5A",
    "subid": "47293925"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let l be a unique set of strings",
      "code": "set < string > l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set integer ans to 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while can read line save it to s",
      "code": "while ( getline ( cin , s ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s is an empty string break the loop",
      "code": "if ( s == \" \" ) break ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s [ 0 ] is equal to ' + '",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "insert substring of s from position 1 into l",
      "code": "l . insert ( s . substr ( 1 ) ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if s [ 0 ] is equal to ' - '",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "erase substring of s from position 1 from l",
      "code": "l . erase ( s . substr ( 1 ) ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set integer i to 0",
      "code": "int i = 0 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "while ith element of s is not \" : \" increase i",
      "code": "while ( s [ i ] != ' : ' ) i ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increase ans by ( size of s - i - 1 ) * size of l",
      "code": "ans += ( ( int ) s . size ( ) - i - 1 ) * l . size ( ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(int, std::set<std::__cxx11::basic_string<char> >&)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( s . compare ( s ) != \" : \" ) ++ i ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < unique > l ;"
      ],
      "err_line": 2,
      "err_msg": "type/value mismatch at argument 1 in template parameter list for ‘template<class _Key, class _Compare, class _Alloc> class std::set’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> it )"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "l . insert ( 1 , l ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::set<std::__cxx11::basic_string<char> >&)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "s . erase ( 1 , s . substr ( 1 ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::basic_string<char>)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int i to = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( s . compare ( \" : \" ) != \" : \" ) ++ i ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        12
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        12
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        8
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "l . insert ( 1 , s ) ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        12
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        8
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12,
        8
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        12,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        12,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "while ( cin >> s [ it ] )",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        8
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        1
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7,
        9,
        8
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        9,
        8,
        1
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        9,
        1
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        12,
        8
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        12,
        8,
        1
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        12,
        1
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        8,
        1
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "l . insert ( 1 , s ) ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::substr(int, std::set<std::__cxx11::basic_string<char> >&)’"
    },
    {
      "mod_line": [
        9,
        12,
        8
      ],
      "mod_code": [
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        12,
        8,
        1
      ],
      "mod_code": [
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        12,
        1
      ],
      "mod_code": [
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        8,
        1
      ],
      "mod_code": [
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "s . erase ( 1 , s . substr ( 1 , l ) ) ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        8,
        1
      ],
      "mod_code": [
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "while ( s . compare ( s ) != \" : \" ) ++ i ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    }
  ]
}