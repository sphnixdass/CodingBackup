{
  "meta": {
    "index": 1081,
    "hitid": "302U8RURJZVOP2S1V75ZNX95MQ1VNV",
    "workerid": "AIWEXPJAU66D9",
    "probid": "11A",
    "subid": "47832275"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n , d , a , b and ans be long longs",
      "code": "long long n , d , a , b , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n and d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read b",
      "code": "cin >> b ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if b < = a",
      "code": "if ( b <= a )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "a = a - b",
      "code": "a = a - b ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increase ans by ( a / d + 1 )",
      "code": "ans += ( a / d + 1 ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increase b by ( ( a / d + 1 ) * d )",
      "code": "b += ( ( a / d + 1 ) * d ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "call function swap with arguments a and b",
      "code": "swap ( a , b ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print ans and ' \\ n '",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "swap ( a and b ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        2
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n >> d )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        6
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "while ( cin >> n >> d )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        11,
        2,
        6
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "while ( cin >> n >> d )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        11,
        2,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "while ( cin >> n >> d )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        11,
        6
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        11,
        6,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "swap ( a and b ) ;",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        4,
        2
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n >> d )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        4,
        2,
        6
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n >> d )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        4,
        2,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n >> d )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        4,
        6,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        4,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "while ( cin >> n >> d )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        2,
        6
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "while ( cin >> n >> d )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        2,
        6,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "while ( cin >> n >> d )",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        2,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "while ( cin >> n >> d )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        6,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "b += ( ( ( a / d + 1 ) * d ) ;",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        11,
        4,
        2
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n >> d )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        11,
        4,
        2,
        6
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n >> d )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4,
        2,
        13
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n >> d )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        11,
        4,
        6
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4,
        6,
        13
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4,
        13
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "while ( cin >> n >> d )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        11,
        2,
        6
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "while ( cin >> n >> d )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        2,
        6,
        13
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "while ( cin >> n >> d )",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        2,
        13
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "while ( cin >> n >> d )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        6,
        13
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "swap ( a and b ) ;",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n >> d )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        2,
        6,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n >> d )",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "while ( cin >> n >> d )",
        "else if ( b <= a )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        6,
        13
      ],
      "mod_code": [
        "while ( cin >> n >> d )",
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "else if ( b <= a )",
        "cout << ans << endl << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}