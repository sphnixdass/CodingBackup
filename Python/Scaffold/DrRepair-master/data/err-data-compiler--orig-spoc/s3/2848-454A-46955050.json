{
  "meta": {
    "index": 2848,
    "hitid": "3VZYA8PITOS46CLFOALO8NJT2B5054",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "454A",
    "subid": "46955050"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "k , m , i , v = integers",
      "code": "int k , m , i , v ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "m = ( k + 1 ) / 2",
      "code": "m = ( k + 1 ) / 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to m",
      "code": "for ( i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for v = 1 to k",
      "code": "for ( v = 1 ; v <= k ; v ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( abs ( m - v ) > = i )",
      "code": "if ( abs ( m - v ) >= i )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "print *",
      "code": "cout << \" * \" ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print D",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = ( m - 1 ) down to 1",
      "code": "for ( i = ( m - 1 ) ; i >= 1 ; i -- )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for v = 1 to k",
      "code": "for ( v = 1 ; v <= k ; v ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if ( abs ( m - v ) > = i )",
      "code": "if ( abs ( m - v ) >= i )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print *",
      "code": "cout << \" * \" ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 18,
      "text": "print D",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int m = ( k + 1 ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = ( m - 1 ) ; i >= 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "for ( int v = 1 ; v < k ; v ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        5,
        8
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "for ( int v = 1 ; v < k ; v ++ )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        5,
        8,
        2
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "for ( int v = 1 ; v < k ; v ++ )",
        "do",
        "cout << k ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        5,
        8,
        17
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "for ( int v = 1 ; v < k ; v ++ )",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        5,
        2
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "for ( int v = 1 ; v < k ; v ++ )",
        "cout << k ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        5,
        2,
        17
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "for ( int v = 1 ; v < k ; v ++ )",
        "cout << k ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        5,
        17
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "for ( int v = 1 ; v < k ; v ++ )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8,
        2
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "do",
        "cout << k ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8,
        2,
        17
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "do",
        "cout << k ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8,
        17
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "cout << k ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        2,
        17
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "cout << k ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "for ( int i = ( m - 1 ) ; i >= 1 )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "for ( i = ( m - 1 ) ; i >= 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        13,
        8
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        13,
        8,
        2
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "do",
        "cout << k ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        13,
        8,
        17
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        13,
        2
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "cout << k ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        13,
        2,
        17
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "cout << k ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        13,
        17
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "do",
        "cout << k ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        2,
        17
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "do",
        "cout << k ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        17
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        2,
        17
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "cout << k ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "for ( int v = 1 ; v < k ; v ++ )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8,
        2
      ],
      "mod_code": [
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "do",
        "cout << k ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8,
        2,
        17
      ],
      "mod_code": [
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "do",
        "cout << k ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8,
        17
      ],
      "mod_code": [
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "cout << k ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        2,
        17
      ],
      "mod_code": [
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "cout << k ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "for ( i = ( m - 1 ) ; i >= 1 )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "do",
        "cout << k ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        2,
        17
      ],
      "mod_code": [
        "do",
        "cout << k ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "cout << k ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}