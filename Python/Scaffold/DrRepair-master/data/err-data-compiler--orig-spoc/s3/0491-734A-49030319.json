{
  "meta": {
    "index": 491,
    "hitid": "3Z8UJEJOCZ7JORMOANGOM1M2QW939J",
    "workerid": "A1APYLD4DUK33J",
    "probid": "734A",
    "subid": "49030319"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer cnt with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create character c",
      "code": "char c ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if c is ' A ' , increment cnt",
      "code": "if ( c == ' A ' ) { cnt ++ ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set cnt to cnt * 2",
      "code": "cnt *= 2 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if cnt is n",
      "code": "if ( cnt == n )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" Friendship \" print newline",
      "code": "cout << \" Friendship \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else if cnt is greater than n",
      "code": "else if ( cnt > n )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print \" Anton \" print newline",
      "code": "cout << \" Anton \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" Danik \" print newline",
      "code": "cout << \" Danik \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        10,
        6
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "if ( ! cnt )",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        10,
        6,
        14
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "if ( ! cnt )",
        "gets ( c ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        10,
        6,
        13
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "if ( ! cnt )",
        "gets ( c ) ;",
        "cout << \" Anton \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        10,
        6,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "if ( ! cnt )",
        "gets ( c ) ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10,
        14
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "if ( ! cnt )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        10,
        14,
        13
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "if ( ! cnt )",
        "do",
        "cout << \" Anton \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        10,
        14,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "if ( ! cnt )",
        "do",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10,
        13,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "if ( ! cnt )",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "if ( ! cnt )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        6,
        14
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "gets ( c ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        6,
        14,
        13
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "gets ( c ) ;",
        "do",
        "cout << \" Anton \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        6,
        14,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "gets ( c ) ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6,
        13
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "gets ( c ) ;",
        "cout << \" Anton \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        6,
        13,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "gets ( c ) ;",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "gets ( c ) ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        14,
        13
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "do",
        "cout << \" Anton \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        14,
        13,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "do",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "cout << \" Danik \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "if ( ! cnt )",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        14
      ],
      "mod_code": [
        "if ( ! cnt )",
        "gets ( c ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        14,
        13
      ],
      "mod_code": [
        "if ( ! cnt )",
        "gets ( c ) ;",
        "do",
        "cout << \" Anton \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        14,
        2
      ],
      "mod_code": [
        "if ( ! cnt )",
        "gets ( c ) ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        13
      ],
      "mod_code": [
        "if ( ! cnt )",
        "gets ( c ) ;",
        "cout << \" Anton \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        13,
        2
      ],
      "mod_code": [
        "if ( ! cnt )",
        "gets ( c ) ;",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        2
      ],
      "mod_code": [
        "if ( ! cnt )",
        "gets ( c ) ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "if ( ! cnt )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        14,
        13
      ],
      "mod_code": [
        "if ( ! cnt )",
        "do",
        "cout << \" Anton \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        14,
        13,
        2
      ],
      "mod_code": [
        "if ( ! cnt )",
        "do",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14,
        2
      ],
      "mod_code": [
        "if ( ! cnt )",
        "do",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        2
      ],
      "mod_code": [
        "if ( ! cnt )",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( ! cnt )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "gets ( c ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        13
      ],
      "mod_code": [
        "gets ( c ) ;",
        "do",
        "cout << \" Anton \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        13,
        2
      ],
      "mod_code": [
        "gets ( c ) ;",
        "do",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        2
      ],
      "mod_code": [
        "gets ( c ) ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "gets ( c ) ;",
        "cout << \" Anton \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        13,
        2
      ],
      "mod_code": [
        "gets ( c ) ;",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "gets ( c ) ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "do",
        "cout << \" Anton \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        13,
        2
      ],
      "mod_code": [
        "do",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "do",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}