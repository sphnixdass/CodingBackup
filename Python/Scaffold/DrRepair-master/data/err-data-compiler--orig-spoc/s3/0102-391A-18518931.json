{
  "meta": {
    "index": 102,
    "hitid": "38DCH97KHHW0145ZUAJXO3TGXGRQJ7",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "391A",
    "subid": "18518931"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string a",
      "code": "string a ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create int s [ 0 ] = = a [ 0 ] | | s [ 1 ] = = a [ 1 ]",
      "code": "int i , j , k , t , q , m , n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set a to size of a",
      "code": "n = a . size ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set l to 0 , r to 1 and cnt = 0",
      "code": "int l = 0 , r = 1 , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while r less than n",
      "code": "while ( r < n )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a [ r ] = = a [ l ]",
      "code": "if ( a [ r ] == a [ l ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment r",
      "code": "r ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if r - 1 is even , add 1 to cnt",
      "code": "if ( ( r - l ) % 2 == 0 ) cnt ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "l = r",
      "code": "l = r ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if r - 1 is even , increment cnt",
      "code": "if ( ( r - l ) % 2 == 0 ) cnt ++ ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print cnt and a newline",
      "code": "cout << cnt << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int s [ 0 ] &= s [ 1 ] == a [ 1 ] == a [ 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘&=’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int a = a . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "l = 0 , r = 1 , cnt = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        10
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        10,
        14
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "if ( r - 1 == 0 ) cnt ++ ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        10,
        3
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        10,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        14
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        14,
        3
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        14,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        4,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "a = a . size ( ) ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        10,
        14
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "if ( r - 1 == 0 ) cnt ++ ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        10,
        14,
        3
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        10,
        14,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        10,
        3
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        10,
        3,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        10,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        14,
        3
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        14,
        3,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        14,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int s [ 0 ] |= s [ 1 ] == a [ 1 ] == a [ 1 ] ;",
        "int l = r ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘|=’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        3
      ],
      "mod_code": [
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        3
      ],
      "mod_code": [
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        3,
        11
      ],
      "mod_code": [
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        3
      ],
      "mod_code": [
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        3,
        11
      ],
      "mod_code": [
        "a = a . size ( ) ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "a = a . size ( ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        11
      ],
      "mod_code": [
        "a = a . size ( ) ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14,
        3
      ],
      "mod_code": [
        "if ( r - 1 == 0 ) cnt ++ ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14,
        3,
        11
      ],
      "mod_code": [
        "if ( r - 1 == 0 ) cnt ++ ;",
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        11
      ],
      "mod_code": [
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        3,
        11
      ],
      "mod_code": [
        "if ( r - 1 == 0 ) cnt ++ ;",
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin >> N ;",
        "int l = r ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}