{
  "meta": {
    "index": 1531,
    "hitid": "3ODOP6T3ASET63KTPS6SMJ6UZDO42H",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "1097A",
    "subid": "49087006"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set TESTS to 1",
      "code": "int TESTS = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while decrement TESTS",
      "code": "while ( TESTS -- )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create string s [ 5 ]",
      "code": "string a [ 5 ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to 5 exclusive , read a [ i ]",
      "code": "for ( long long int i = 0 ; i < 5 ; i ++ ) cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set flag to false",
      "code": "bool flag = false ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( long long int i = 0 ; i < 5 ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a [ i ] [ 0 ] = s [ 0 ] or a [ i ] [ 1 ] = s [ 1 ]",
      "code": "if ( a [ i ] [ 0 ] == s [ 0 ] || a [ i ] [ 1 ] == s [ 1 ] )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set flag to true",
      "code": "flag = true ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if flag is true",
      "code": "if ( flag == true )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print YES and a newline",
      "code": "cout << \" YES \" << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print NO and a newline",
      "code": "cout << \" NO \" << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string s [ 5 ] ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "flag = false ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int s [ 5 ] ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int s [5]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        7,
        16
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        2
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "do",
        "while ( cin >> TESTS )"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        11
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "do",
        "do"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "while ( cin >> TESTS )"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        11
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "while ( cin >> TESTS )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "while ( cin >> TESTS )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        7,
        11
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "flag = false ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        16,
        2
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "do",
        "while ( cin >> TESTS )"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        16,
        2,
        11
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "do",
        "while ( cin >> TESTS )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        16,
        2,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "do",
        "while ( cin >> TESTS )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        16,
        11
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "do",
        "do"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        16,
        11,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "do",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        16,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "while ( cin >> TESTS )"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        2,
        11
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "while ( cin >> TESTS )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        2,
        11,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "while ( cin >> TESTS )",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "while ( cin >> TESTS )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s [5]’"
    },
    {
      "mod_line": [
        5,
        11,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "string s [ 5 ] ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "flag = false ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16,
        2
      ],
      "mod_code": [
        "flag = false ;",
        "do",
        "while ( cin >> TESTS )"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16,
        2,
        11
      ],
      "mod_code": [
        "flag = false ;",
        "do",
        "while ( cin >> TESTS )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16,
        2,
        4
      ],
      "mod_code": [
        "flag = false ;",
        "do",
        "while ( cin >> TESTS )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        16,
        11
      ],
      "mod_code": [
        "flag = false ;",
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16,
        11,
        4
      ],
      "mod_code": [
        "flag = false ;",
        "do",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        16,
        4
      ],
      "mod_code": [
        "flag = false ;",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "flag = false ;",
        "while ( cin >> TESTS )"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        11
      ],
      "mod_code": [
        "flag = false ;",
        "while ( cin >> TESTS )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        11,
        4
      ],
      "mod_code": [
        "flag = false ;",
        "while ( cin >> TESTS )",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        4
      ],
      "mod_code": [
        "flag = false ;",
        "while ( cin >> TESTS )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "flag = false ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        4
      ],
      "mod_code": [
        "flag = false ;",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "flag = false ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "do",
        "while ( cin >> TESTS )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        2,
        11
      ],
      "mod_code": [
        "do",
        "while ( cin >> TESTS )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        2,
        11,
        4
      ],
      "mod_code": [
        "do",
        "while ( cin >> TESTS )",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        2,
        4
      ],
      "mod_code": [
        "do",
        "while ( cin >> TESTS )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        11,
        4
      ],
      "mod_code": [
        "do",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "while ( cin >> TESTS )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        11,
        4
      ],
      "mod_code": [
        "while ( cin >> TESTS )",
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> TESTS )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}