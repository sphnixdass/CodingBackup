{
  "meta": {
    "index": 1845,
    "hitid": "3TKXBROM5T4NK6HGH2EOF12U66IJI5",
    "workerid": "AIWEXPJAU66D9",
    "probid": "732A",
    "subid": "41878898"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new ints k and r",
      "code": "int k , r ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read k and r",
      "code": "cin >> k >> r ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if k % 10 is equal to either 0 or r",
      "code": "if ( k % 10 == 0 || k % 10 == r )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print 1 to the output stream",
      "code": "cout << 1 << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i from 2 to 10 inclusive incrementing i",
      "code": "for ( int i = 2 ; i <= 10 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if ( k * i ) % 10 = 0 or ( k * i ) % 10 = r",
      "code": "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 == r )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print i",
      "code": "cout << i << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( k % 10 == 0 || k % 10 == either )"
      ],
      "err_line": 3,
      "err_msg": "‘either’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 10 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )"
      ],
      "err_line": 8,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "if ( k % 10 == 0 || k % 10 == 0 )",
        "for ( i = 2 ; i <= 10 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "if ( k % 10 == 0 || k % 10 == 0 )",
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        9
      ],
      "mod_code": [
        "if ( k % 10 == 0 || k % 10 == 0 )",
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )",
        "cout << i ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "if ( k % 10 == 0 || k % 10 == 0 )",
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "cout << i ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "if ( k % 10 == 0 || k % 10 == 0 )",
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )"
      ],
      "err_line": 8,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "if ( k % 10 == 0 || k % 10 == 0 )",
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )",
        "cout << i ;"
      ],
      "err_line": 8,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        3
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )",
        "if ( k % 10 == 0 || k % 10 == either )"
      ],
      "err_line": 3,
      "err_msg": "‘either’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        3,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )",
        "if ( k % 10 == 0 || k % 10 == either )",
        "cout << i ;"
      ],
      "err_line": 3,
      "err_msg": "‘either’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )",
        "cout << i ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "if ( k % 10 == 0 || k % 10 == either )"
      ],
      "err_line": 3,
      "err_msg": "‘either’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "if ( k % 10 == 0 || k % 10 == either )",
        "cout << i ;"
      ],
      "err_line": 3,
      "err_msg": "‘either’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 10 ; i ++ )",
        "cout << i ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )",
        "if ( k % 10 == 0 || k % 10 == either )"
      ],
      "err_line": 3,
      "err_msg": "‘either’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        9
      ],
      "mod_code": [
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )",
        "if ( k % 10 == 0 || k % 10 == either )",
        "cout << i ;"
      ],
      "err_line": 3,
      "err_msg": "‘either’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( ( k * i ) % 10 == 0 || ( k * i ) % 10 = r )",
        "cout << i ;"
      ],
      "err_line": 8,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "if ( k % 10 == 0 || k % 10 == either )",
        "cout << i ;"
      ],
      "err_line": 3,
      "err_msg": "‘either’ was not declared in this scope"
    }
  ]
}