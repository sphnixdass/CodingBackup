{
  "meta": {
    "index": 2610,
    "hitid": "3IV1AEQ4DR7UV0538G2X2C8G2NC8JA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "707A",
    "subid": "41918117"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for integer i = 0 to n * m exclusive",
      "code": "for ( int i = 0 ; i < n * m ; ++ i )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s [ 0 ] = ' C ' | | s [ 0 ] = ' M ' | | s [ 0 ] = ' Y '",
      "code": "if ( s [ 0 ] == ' C ' || s [ 0 ] == ' M ' || s [ 0 ] == ' Y ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" # Color \\ n \"",
      "code": "cout << \" #Color\\n \" ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" # Black & White \\ n \"",
      "code": "cout << \" #Black&White\\n \" ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # Black ( \" \\n \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        11,
        4
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # Black ( \" \\n \" ) ;",
        "int s ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        11,
        4,
        5
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # Black ( \" \\n \" ) ;",
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        11,
        5
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # Black ( \" \\n \" ) ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "int s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4,
        5,
        11
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "int s ;",
        "s >> s ;",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4,
        11
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "int s ;",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        11
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "s >> s ;",
        "cout << \" # \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "cout << \" D\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        11,
        7,
        4
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "cout << \" D\\n \" ;",
        "int s ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        11,
        7,
        4,
        5
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "cout << \" D\\n \" ;",
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        11,
        7,
        5
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "cout << \" D\\n \" ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "int s ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        11,
        4,
        5
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "cout << \" D\\n \" ;",
        "int s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "cout << \" D\\n \" ;",
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4,
        5,
        11
      ],
      "mod_code": [
        "cout << \" D\\n \" ;",
        "int s ;",
        "s >> s ;",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4,
        11
      ],
      "mod_code": [
        "cout << \" D\\n \" ;",
        "int s ;",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "cout << \" D\\n \" ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        11
      ],
      "mod_code": [
        "cout << \" D\\n \" ;",
        "s >> s ;",
        "cout << \" # \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int s ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "int s ;",
        "s >> s ;",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "int s ;",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "cout << \" # \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}