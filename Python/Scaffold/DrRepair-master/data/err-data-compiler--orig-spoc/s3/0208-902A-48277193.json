{
  "meta": {
    "index": 208,
    "hitid": "3EQVJH0T40FH2E21NEA7HVOO4VSTHP",
    "workerid": "AIWEXPJAU66D9",
    "probid": "902A",
    "subid": "48277193"
  },
  "lines": [
    {
      "line": 0,
      "text": "a is a new array of integers with 105 elements",
      "code": "int a [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create ints n , m , x , y , l and r where l = 0",
      "code": "int n , m , x , y , l = 0 , r ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read standard input to n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "change i from 1 to n inclusive , incrementing i , in a loop",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if i = 1 and x ! = 0",
      "code": "if ( i == 1 && x != 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if i is equal to 1",
      "code": "if ( i == 1 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set r to y",
      "code": "r = y ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if x < = r",
      "code": "else if ( x <= r )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "assign the new value = max of r and y to r",
      "code": "r = max ( r , y ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if r > = m",
      "code": "if ( r >= m )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "r = max ( r assign y ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( r >= m )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        11,
        15
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "int r = y ;",
        "else if ( r >= m )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        13
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "int r = y ;",
        "else if ( r >= m )",
        "r = max ( r assign y ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        4
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "int r = y ;",
        "else if ( r >= m )",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "int r = y ;",
        "else if ( r >= m )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        11,
        13
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "int r = y ;",
        "r = max ( r assign y ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        4
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "int r = y ;",
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "int r = y ;",
        "r = max ( r assign y ) ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        11,
        4,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "int r = y ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        11,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "int r = y ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "else if ( r >= m )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        15,
        13
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "else if ( r >= m )",
        "r = max ( r assign y ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        15,
        13,
        4
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "else if ( r >= m )",
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        15,
        13,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "else if ( r >= m )",
        "r = max ( r assign y ) ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        15,
        4
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "else if ( r >= m )",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        15,
        4,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "else if ( r >= m )",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        15,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "else if ( r >= m )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "r = max ( r assign y ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        13,
        4
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        13,
        4,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        13,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "r = max ( r assign y ) ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        4,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "while ( cin >> x >> y )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "int r = y ;",
        "else if ( r >= m )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        15,
        13
      ],
      "mod_code": [
        "int r = y ;",
        "else if ( r >= m )",
        "r = max ( r assign y ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        11,
        15,
        13,
        4
      ],
      "mod_code": [
        "int r = y ;",
        "else if ( r >= m )",
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        11,
        15,
        13,
        17
      ],
      "mod_code": [
        "int r = y ;",
        "else if ( r >= m )",
        "r = max ( r assign y ) ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        11,
        15,
        4
      ],
      "mod_code": [
        "int r = y ;",
        "else if ( r >= m )",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        15,
        4,
        17
      ],
      "mod_code": [
        "int r = y ;",
        "else if ( r >= m )",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        15,
        17
      ],
      "mod_code": [
        "int r = y ;",
        "else if ( r >= m )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "int r = y ;",
        "r = max ( r assign y ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        11,
        13,
        4
      ],
      "mod_code": [
        "int r = y ;",
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        11,
        13,
        4,
        17
      ],
      "mod_code": [
        "int r = y ;",
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        11,
        13,
        17
      ],
      "mod_code": [
        "int r = y ;",
        "r = max ( r assign y ) ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        11,
        4,
        17
      ],
      "mod_code": [
        "int r = y ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "int r = y ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "else if ( r >= m )",
        "r = max ( r assign y ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        15,
        13,
        4
      ],
      "mod_code": [
        "else if ( r >= m )",
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        15,
        13,
        4,
        17
      ],
      "mod_code": [
        "else if ( r >= m )",
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        15,
        13,
        17
      ],
      "mod_code": [
        "else if ( r >= m )",
        "r = max ( r assign y ) ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "else if ( r >= m )",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15,
        4,
        17
      ],
      "mod_code": [
        "else if ( r >= m )",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "else if ( r >= m )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        13,
        4,
        17
      ],
      "mod_code": [
        "r = max ( r assign y ) ;",
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "r = max ( r assign y ) ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ , i ++ )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}