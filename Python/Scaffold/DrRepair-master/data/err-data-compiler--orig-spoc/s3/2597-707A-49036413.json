{
  "meta": {
    "index": 2597,
    "hitid": "30IRMPJWDZDVOPQHPA89U83Y74ZRK3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "707A",
    "subid": "49036413"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers a and b",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create boolean cek = 0",
      "code": "bool cek = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 1 to a inclusive",
      "code": "for ( int i = 1 ; i <= a ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer j = 1 to b inclusive",
      "code": "for ( int j = 1 ; j <= b ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "declare character variable c",
      "code": "char c ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if c ! = ' B ' & & c ! = ' W ' & & c ! = ' G ' set cek to 1",
      "code": "if ( c != ' B ' && c != ' W ' && c != ' G ' ) { cek = 1 ; }",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if cek is 1",
      "code": "if ( cek == 1 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" # Color \"",
      "code": "cout << \" #Color \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" # Black & White \"",
      "code": "cout << \" #Black&White \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cek = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        14,
        11,
        7
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "cout << \" # \" ;",
        "if ( ! cek )",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        7
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "cout << \" # \" ;",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        7
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "if ( ! cek )",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        7,
        14
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "if ( ! cek )",
        "gets ( c ) ;",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        14
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "if ( ! cek )",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        14
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "gets ( c ) ;",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        11,
        7
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "if ( ! cek )",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        11,
        7,
        12
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "if ( ! cek )",
        "gets ( c ) ;",
        "cout << \" # \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        7,
        12
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "gets ( c ) ;",
        "cout << \" # \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "if ( ! cek )",
        "gets ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        12
      ],
      "mod_code": [
        "if ( ! cek )",
        "gets ( c ) ;",
        "cout << \" # \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        12,
        14
      ],
      "mod_code": [
        "if ( ! cek )",
        "gets ( c ) ;",
        "cout << \" # \" ;",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        14
      ],
      "mod_code": [
        "if ( ! cek )",
        "gets ( c ) ;",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        12,
        14
      ],
      "mod_code": [
        "if ( ! cek )",
        "cout << \" # \" ;",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "if ( ! cek )",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "gets ( c ) ;",
        "cout << \" # \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        14
      ],
      "mod_code": [
        "gets ( c ) ;",
        "cout << \" # \" ;",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "gets ( c ) ;",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}