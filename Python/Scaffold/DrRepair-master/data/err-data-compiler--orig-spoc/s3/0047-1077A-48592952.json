{
  "meta": {
    "index": 47,
    "hitid": "3BKZLF990ZTQWT0YGAK0YQ84AK6QY7",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "1077A",
    "subid": "48592952"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "t , left , right , times = integers",
      "code": "int t , left , right , times ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "ans = long long",
      "code": "long long ans ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while decrement t",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read right , left , times",
      "code": "cin >> right >> left >> times ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "tem = long long with tem = right - left",
      "code": "long long tem = right - left ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "ans = 0",
      "code": "ans = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if ( times modulo 2 is 0 )",
      "code": "if ( times % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "ans = tem * times / 2",
      "code": "ans = tem * times / 2 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "ans = tem * ( times - 1 ) / 2 + right",
      "code": "ans = tem * ( times - 1 ) / 2 + right ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( -- -- )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "long long tem -= left ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        11,
        4,
        10
      ],
      "mod_code": [
        "int ans = 0 ;",
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        11,
        4,
        13
      ],
      "mod_code": [
        "int ans = 0 ;",
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )",
        "cout << ans ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        11,
        4,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        11,
        10
      ],
      "mod_code": [
        "int ans = 0 ;",
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        10,
        13
      ],
      "mod_code": [
        "int ans = 0 ;",
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "do",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        10,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "do",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( -- -- )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        4,
        10
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( -- -- )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        4,
        10,
        13
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( -- -- )",
        "do",
        "cout << ans ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        4,
        10,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( -- -- )",
        "do",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        4,
        13
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( -- -- )",
        "cout << ans ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        4,
        13,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( -- -- )",
        "cout << ans ;",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( -- -- )",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "int ans = 0 ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "int ans = 0 ;",
        "do",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "do",
        "cout << ans ;",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "do",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        4,
        10
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        4,
        10,
        13
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )",
        "do",
        "cout << ans ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        4,
        10,
        5
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )",
        "do",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        4,
        13
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )",
        "cout << ans ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        4,
        13,
        5
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )",
        "cout << ans ;",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        4,
        5
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "while ( -- -- )",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        10,
        13
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "do",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        10,
        13,
        5
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "do",
        "cout << ans ;",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        10,
        5
      ],
      "mod_code": [
        "long long ans = tem * ( times - 1 ) / 2 + right ;",
        "do",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "cout << ans ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        5
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "cout << ans ;",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        5
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "while ( -- -- )",
        "cout << ans ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        5
      ],
      "mod_code": [
        "while ( -- -- )",
        "cout << ans ;",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "while ( -- -- )",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "do",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        5
      ],
      "mod_code": [
        "do",
        "cout << ans ;",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "do",
        "cin >> right >> left >> left ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cout’"
    }
  ]
}