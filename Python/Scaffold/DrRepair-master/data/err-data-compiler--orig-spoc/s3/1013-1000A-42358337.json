{
  "meta": {
    "index": 1013,
    "hitid": "3VGZ74AYTGAMG15FHMXZ7LCJ19EGCT",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "1000A",
    "subid": "42358337"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "p , q = string pointers",
      "code": "string * p , * q ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set p = new string array of length n",
      "code": "p = new string [ n ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set q = new string array of length n",
      "code": "q = new string [ n ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let a and b be int arrays of length 10",
      "code": "int a [ 10 ] , b [ 10 ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "reset a to all 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "reset b to 0",
      "code": "memset ( b , 0 , sizeof ( b ) ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "m = int = 0",
      "code": "int m = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "read p at i",
      "code": "cin >> p [ i ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if p at i = S then increment a at 1",
      "code": "if ( p [ i ] == \" S \" ) a [ 1 ] ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if p at i = XS then increment a at 2",
      "code": "if ( p [ i ] == \" XS \" ) a [ 2 ] ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if p at i = XXS then increment a at 3",
      "code": "if ( p [ i ] == \" XXS \" ) a [ 3 ] ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if p at i = XXXS then increment a at 4",
      "code": "if ( p [ i ] == \" XXXS \" ) a [ 4 ] ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if p at i = M then increment a at 5",
      "code": "if ( p [ i ] == \" M \" ) a [ 5 ] ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if p at i = L then increment a at 6",
      "code": "if ( p [ i ] == \" L \" ) a [ 6 ] ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if p at i = XL then increment a at 7",
      "code": "if ( p [ i ] == \" XL \" ) a [ 7 ] ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if p at i = XXL then increment a at 8",
      "code": "if ( p [ i ] == \" XXL \" ) a [ 8 ] ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if p at i = XXXL then increment a at 9",
      "code": "if ( p [ i ] == \" XXXL \" ) a [ 9 ] ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "read q at i",
      "code": "cin >> q [ i ] ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if q at i = S then increment b at 1",
      "code": "if ( q [ i ] == \" S \" ) b [ 1 ] ++ ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "if q at i = XS then increment b at 2",
      "code": "if ( q [ i ] == \" XS \" ) b [ 2 ] ++ ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "if q at i = XXS then increment b at 3",
      "code": "if ( q [ i ] == \" XXS \" ) b [ 3 ] ++ ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "if q at i = XXXS then increment b at 4",
      "code": "if ( q [ i ] == \" XXXS \" ) b [ 4 ] ++ ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "if q at i = M then increment b at 5",
      "code": "if ( q [ i ] == \" M \" ) b [ 5 ] ++ ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "if q at i = L then increment b at 6",
      "code": "if ( q [ i ] == \" L \" ) b [ 6 ] ++ ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "if q at i = XL then increment b at 7",
      "code": "if ( q [ i ] == \" XL \" ) b [ 7 ] ++ ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "if q at i = XXL then increment b at 8",
      "code": "if ( q [ i ] == \" XXL \" ) b [ 8 ] ++ ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "if q at i = XXXL then increment b at 9",
      "code": "if ( q [ i ] == \" XXXL \" ) b [ 9 ] ++ ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "for i = 1 to 10 exclusive",
      "code": "for ( int i = 1 ; i < 10 ; i ++ )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "if a at i > b at i then increment m by a at i - b at i",
      "code": "if ( a [ i ] > b [ i ] ) m += a [ i ] - b [ i ] ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 37,
      "text": "print m",
      "code": "cout << m << endl ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string * p , q ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "b = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 30,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 31,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 32,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 35,
      "err_msg": "invalid operands of types ‘int’ and ‘int [10]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string p , q ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string q [ n ] [ n ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [n] {aka std::__cxx11::basic_string<char> [n]}’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "b . reset ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘reset’ in ‘b’, which is of non-class type ‘int [10]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int m , m ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "p >> p [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) { a [ 2 ] ++ ; }"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) { a [ 3 ] ++ ; }"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) { a [ 4 ] ++ ; }"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( p [ i ] == M ) { a [ 5 ] ++ ; }"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' L ' ) a [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) { a [ 7 ] ++ ; }"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) { a [ 8 ] ++ ; }"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a [ 9 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( q [ i ] == S [ i ] ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) { b [ 2 ] ++ ; }"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) { b [ 3 ] ++ ; }"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) { b [ 4 ] ++ ; }"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "if ( q [ i ] == M ) { b ++ ; }"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "if ( q [ i ] == L ) b [ 6 ] ++ ;"
      ],
      "err_line": 29,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XL ) { b [ 7 ] ++ ; }"
      ],
      "err_line": 30,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXL ) b [ 8 ] ++ ;"
      ],
      "err_line": 31,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' XXXL ' ) b ++ ;"
      ],
      "err_line": 32,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "if ( a [ i ] > b [ i ] ) { m += a [ i - b ] ; }"
      ],
      "err_line": 35,
      "err_msg": "invalid operands of types ‘int’ and ‘int [10]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        13
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        14
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        14
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        15,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "b = 0 ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        14
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        19,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        18,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        19,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        19,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        18,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        19,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        18,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        24,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        25,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        26,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        28,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        29,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        30
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        30,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        30,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        30,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        30,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        30,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        30,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        31
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        31,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        31,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        31,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        32
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        32,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        35
      ],
      "mod_code": [
        "string * p , q ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        14
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        15
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        15
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        12,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        15
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        13,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        14,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        15,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        16,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        17,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        18,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        19,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        20,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        24,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        25,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        26,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        27,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        28,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        29,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        30
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        30,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        30,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        30,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        30,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        30,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        30,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        31
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        31,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        31,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        31,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        32
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        32,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        8,
        35
      ],
      "mod_code": [
        "b = 0 ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [10]’"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        15
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        13,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        14,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        15,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == ' S ' ) a [ 1 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XS ) a [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXS ) a [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXS ) a [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == M ) a [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == L ) a [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘L’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XL ) a [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 18,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXL ) a [ 8 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 19,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        31
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        31,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        31,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        32
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        32,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        35
      ],
      "mod_code": [
        "if ( p [ i ] == XXXL ) a ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘XXXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        27
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        26,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        27,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        24,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' S ' ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        25,
        26
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XS ) b [ 2 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 25,
      "err_msg": "‘XS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXS ) b [ 3 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘XXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXS ) b [ 4 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 27,
      "err_msg": "‘XXXS’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == M ) b [ 5 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        30
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        29,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == ' L ' ) b [ 6 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        30,
        31
      ],
      "mod_code": [
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;"
      ],
      "err_line": 30,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 30,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 30,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 30,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 30,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 30,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XL ) b [ 7 ] ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 30,
      "err_msg": "‘XL’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        32
      ],
      "mod_code": [
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;"
      ],
      "err_line": 31,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 31,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 31,
      "err_msg": "‘XXL’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        35
      ],
      "mod_code": [
        "if ( q [ i ] == XXXL ) b ++ ;",
        "if ( a [ i ] > b [ i ] ) m += a [ i - b ] ;"
      ],
      "err_line": 32,
      "err_msg": "‘XXXL’ was not declared in this scope"
    }
  ]
}