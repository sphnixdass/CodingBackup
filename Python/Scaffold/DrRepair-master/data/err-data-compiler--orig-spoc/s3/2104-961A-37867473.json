{
  "meta": {
    "index": 2104,
    "hitid": "36FQTHX3Z3L2CK1L87UKD7HSFJAB3A",
    "workerid": "A1APYLD4DUK33J",
    "probid": "961A",
    "subid": "37867473"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer array arr size 1000 = { 0 }",
      "code": "int arr [ 1000 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare temp as integer",
      "code": "int temp ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read temp",
      "code": "cin >> temp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment arr [ temp - 1 ]",
      "code": "arr [ temp - 1 ] ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare min = arr [ 0 ] as integer",
      "code": "int min = arr [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "iff arr [ i ] is less than min , let min be arr [ i ]",
      "code": "if ( arr [ i ] < min ) min = arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print min and newline",
      "code": "cout << min << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        6
      ],
      "mod_code": [
        "int n ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << temp ;"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        6,
        4
      ],
      "mod_code": [
        "int n ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        6,
        2
      ],
      "mod_code": [
        "int n ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << temp ;",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        10,
        4
      ],
      "mod_code": [
        "int n ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        4,
        2
      ],
      "mod_code": [
        "int n ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        10,
        2
      ],
      "mod_code": [
        "int n ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n ;",
        "cout << temp ;"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "int n ;",
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        4,
        2
      ],
      "mod_code": [
        "int n ;",
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        6,
        2
      ],
      "mod_code": [
        "int n ;",
        "cout << temp ;",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "int n ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n ;",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        6,
        4,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << temp ;",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        6,
        2,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << temp ;",
        "int arr [ 1000 ] = { { 0 } ;",
        "int m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cout << temp ;",
        "int m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        4,
        2,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;",
        "int m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        4,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "int m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        2,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;",
        "int m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        1
      ],
      "mod_code": [
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;",
        "int m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        4,
        1
      ],
      "mod_code": [
        "cout << temp ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        2,
        1
      ],
      "mod_code": [
        "cout << temp ;",
        "int arr [ 1000 ] = { { 0 } ;",
        "int m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "cout << temp ;",
        "int m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int arr [ 1000 ] = { { 0 } ;",
        "int m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int arr [ 1000 ] = { { 0 } ;",
        "int m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘}’ before ‘;’ token"
    }
  ]
}