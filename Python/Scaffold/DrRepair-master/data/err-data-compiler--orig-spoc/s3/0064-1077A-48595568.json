{
  "meta": {
    "index": 64,
    "hitid": "3NOEP8XAU4WGWC99B1J9F7BL3IQXPH",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "1077A",
    "subid": "48595568"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to t exclusive",
      "code": "for ( int i = 0 ; i < t ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create long long a , b , k",
      "code": "long long a , b , k ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read a , b and k",
      "code": "cin >> a >> b >> k ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if k is even",
      "code": "if ( k % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print ( k / 2 ) * ( a - b )",
      "code": "cout << ( k / 2 ) * ( a - b ) << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print ( k / 2 ) * ( a - b ) + a",
      "code": "cout << ( k / 2 ) * ( a - b ) + a << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "char t ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        1,
        8,
        2
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "char t ;",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1,
        8,
        3
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "char t ;",
        "do",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        2
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "char t ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1,
        2,
        3
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "char t ;",
        "gets ( t ) ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "char t ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        3
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "do",
        "gets ( t ) ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        3
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "do",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "gets ( t ) ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( k % 2 == 1 )",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "char t ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        8,
        2
      ],
      "mod_code": [
        "char t ;",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8,
        2,
        3
      ],
      "mod_code": [
        "char t ;",
        "do",
        "gets ( t ) ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8,
        3
      ],
      "mod_code": [
        "char t ;",
        "do",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "char t ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "char t ;",
        "gets ( t ) ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char t ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2,
        3
      ],
      "mod_code": [
        "do",
        "gets ( t ) ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "do",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "gets ( t ) ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}