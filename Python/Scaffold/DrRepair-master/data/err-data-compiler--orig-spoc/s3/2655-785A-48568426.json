{
  "meta": {
    "index": 2655,
    "hitid": "32CXT5U14GX39GGXKF6B9EHRKQCU85",
    "workerid": "A1AYVATMT88U1W",
    "probid": "785A",
    "subid": "48568426"
  },
  "lines": [
    {
      "line": 0,
      "text": "let cmp be a function which accepts integers a , b and returns a boolean value",
      "code": "bool cmp ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a is less than b",
      "code": "return a < b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let sum1 , sum2 , sum3 , sum4 , sum5 be integers with sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0",
      "code": "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if s [ 0 ] equals T",
      "code": "if ( s [ 0 ] == ' T ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment sum1 by 4",
      "code": "sum1 += 4 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if s [ 0 ] equals C",
      "code": "else if ( s [ 0 ] == ' C ' )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment sum2 by 6",
      "code": "sum2 += 6 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if s [ 0 ] equals O",
      "code": "else if ( s [ 0 ] == ' O ' )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment sum3 by 8",
      "code": "sum3 += 8 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else if s [ 0 ] equals D",
      "code": "else if ( s [ 0 ] == ' D ' )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment sum4 by 12",
      "code": "sum4 += 12 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increment sum5 by 20",
      "code": "sum5 += 20 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print sum1 + sum2 + sum3 + sum4 + sum5 and newline",
      "code": "cout << sum1 + sum2 + sum3 + sum4 + sum5 << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        9,
        10
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        16
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        9,
        16
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "else if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        10,
        16
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        10,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        16,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "else if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum4 = 0 , sum5 = 0 ;",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum4’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        9,
        10
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        16
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        9,
        16
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "else if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "s >> s ;",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        10,
        16
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        10,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        16,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "else if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 , sum3 = 0 , sum4 = 0 , sum5 = 0 , sum5 = 0 ;",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum5’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        10,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "s >> s ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        16,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "else if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}