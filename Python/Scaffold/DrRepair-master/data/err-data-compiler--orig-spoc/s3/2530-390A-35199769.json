{
  "meta": {
    "index": 2530,
    "hitid": "34XASH8KLQG520A5XUH04QVNWEZPMI",
    "workerid": "AIWEXPJAU66D9",
    "probid": "390A",
    "subid": "35199769"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare int variable n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be 2d int array with size 105 by 105",
      "code": "int a [ 105 ] [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let b be 2d int array with size 105 by 105",
      "code": "int b [ 105 ] [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n and loop further",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set sizeof ( a ) bytes at the pointer a to 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "declare int variables x and y",
      "code": "int x , y ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "loop i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read from the input to x and y",
      "code": "cin >> x >> y ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "change a [ x ] [ y ] to 1",
      "code": "a [ x ] [ y ] = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "copy sizeof ( a ) bytes from a to b",
      "code": "memcpy ( b , a , sizeof ( a ) ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "declare int variable ans = 0x3f3f3f3f",
      "code": "int ans = 0x3f3f3f3f ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "declare integer cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for i from 0 to 100 inclusive",
      "code": "for ( int i = 0 ; i <= 100 ; i ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for j = 0 to 100 inclusive",
      "code": "for ( int j = 0 ; j <= 100 ; j ++ )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if a [ i ] [ j ] = 1",
      "code": "if ( a [ i ] [ j ] == 1 )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increment cnt by one",
      "code": "cnt ++ ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if cnt is less than ans , change ans to cnt",
      "code": "if ( cnt < ans ) ans = cnt ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "assign 0 to cnt",
      "code": "cnt = 0 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "for i = 0 to 100 inclusive",
      "code": "for ( int i = 0 ; i <= 100 ; i ++ )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "for j = 0 to 100 inclusive",
      "code": "for ( int j = 0 ; j <= 100 ; j ++ )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "if a [ j ] [ i ] is 1",
      "code": "if ( a [ j ] [ i ] == 1 )",
      "indent": 4
    },
    {
      "line": 27,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 32,
      "text": "if cnt is less than ans , set ans to cnt",
      "code": "if ( cnt < ans ) ans = cnt ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘int (*)[105]’ to ‘char*’ for argument ‘1’ to ‘char* strcpy(char*, const char*)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] be ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int b [ 105 ] [ 105 ] be ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int x declare y ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> x >> b ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [105][105]’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "strcpy ( b , sizeof ( a ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘int (*)[105]’ to ‘char*’ for argument ‘1’ to ‘char* strcpy(char*, const char*)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "const int ans = 0x3f3f3f3f ;"
      ],
      "err_line": 22,
      "err_msg": "assignment of read-only variable ‘ans’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 18,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int cnt = 0 ;"
      ],
      "err_line": 23,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 28,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        12
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        12,
        28
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        12,
        26
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        12,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        28
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        28,
        26
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        28,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "stop ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        26
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        26,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "memset ( a , l , sizeof ( a ) ) ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘int (*)[105]’ to ‘char*’ for argument ‘1’ to ‘char* strcpy(char*, const char*)’"
    },
    {
      "mod_line": [
        11,
        12,
        28
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘int (*)[105]’ to ‘char*’ for argument ‘1’ to ‘char* strcpy(char*, const char*)’"
    },
    {
      "mod_line": [
        11,
        12,
        28,
        26
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘int (*)[105]’ to ‘char*’ for argument ‘1’ to ‘char* strcpy(char*, const char*)’"
    },
    {
      "mod_line": [
        11,
        12,
        28,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "stop ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        26
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘int (*)[105]’ to ‘char*’ for argument ‘1’ to ‘char* strcpy(char*, const char*)’"
    },
    {
      "mod_line": [
        11,
        12,
        26,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        28
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘int (*)[105]’ to ‘char*’ for argument ‘1’ to ‘char* strcpy(char*, const char*)’"
    },
    {
      "mod_line": [
        11,
        28,
        26
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘int (*)[105]’ to ‘char*’ for argument ‘1’ to ‘char* strcpy(char*, const char*)’"
    },
    {
      "mod_line": [
        11,
        28,
        26,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        28,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "stop ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        26
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘int (*)[105]’ to ‘char*’ for argument ‘1’ to ‘char* strcpy(char*, const char*)’"
    },
    {
      "mod_line": [
        11,
        26,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "strcpy ( a , sizeof ( a ) ) ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        28
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        28,
        26
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        28,
        9
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "stop ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        26
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        26,
        9
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        9
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "const int ans = 0x3f3f3f3f ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        28
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        28,
        26
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        28,
        26,
        9
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        28,
        9
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "stop ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        26
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        26,
        9
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "memset ( a , l , sizeof ( a ) ) ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        28
      ],
      "mod_code": [
        "const int ans = 0x3f3f3f3f ;",
        "stop ;"
      ],
      "err_line": 22,
      "err_msg": "assignment of read-only variable ‘ans’"
    },
    {
      "mod_line": [
        12,
        28,
        26
      ],
      "mod_code": [
        "const int ans = 0x3f3f3f3f ;",
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 22,
      "err_msg": "assignment of read-only variable ‘ans’"
    },
    {
      "mod_line": [
        12,
        28,
        26,
        9
      ],
      "mod_code": [
        "const int ans = 0x3f3f3f3f ;",
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        28,
        9
      ],
      "mod_code": [
        "const int ans = 0x3f3f3f3f ;",
        "stop ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        26
      ],
      "mod_code": [
        "const int ans = 0x3f3f3f3f ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 22,
      "err_msg": "assignment of read-only variable ‘ans’"
    },
    {
      "mod_line": [
        12,
        26,
        9
      ],
      "mod_code": [
        "const int ans = 0x3f3f3f3f ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "const int ans = 0x3f3f3f3f ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        26
      ],
      "mod_code": [
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )"
      ],
      "err_line": 28,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        26,
        9
      ],
      "mod_code": [
        "stop ;",
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        9
      ],
      "mod_code": [
        "stop ;",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        9
      ],
      "mod_code": [
        "if ( a [ j ] [ i ] == ' 1 ' )",
        "a [ x ] [ j ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}