{
  "meta": {
    "index": 2273,
    "hitid": "3EHVO81VN5FGTUQSLVQXBP5TCC4H17",
    "workerid": "AIWEXPJAU66D9",
    "probid": "58A",
    "subid": "42327074"
  },
  "lines": [
    {
      "line": 0,
      "text": "create new string called S",
      "code": "string S ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read S",
      "code": "cin >> S ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "remove first item of S while S [ 0 ] ! = ' h ' and length of S > 0",
      "code": "while ( S [ 0 ] != ' h ' && S . length ( ) > 0 ) { S . erase ( 0 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "remove the charcter at the index 1 of S while S [ 1 ] is not ' e ' and length of S > 1",
      "code": "while ( S [ 1 ] != ' e ' && S . length ( ) > 1 ) { S . erase ( 1 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "remove third character from S while S [ 2 ] ! = ' l ' and length of S > 2",
      "code": "while ( S [ 2 ] != ' l ' && S . length ( ) > 2 ) { S . erase ( 2 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while S [ 3 ] ! = ' l ' and length of S > 3 , remove the character at the index 3 from S",
      "code": "while ( S [ 3 ] != ' l ' && S . length ( ) > 3 ) { S . erase ( 3 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while S [ 4 ] ! = ' o ' and length of S > 4 , remove element at the index 4 from S",
      "code": "while ( S [ 4 ] != ' o ' && S . length ( ) > 4 ) { S . erase ( 4 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if length of S is greater than 5 , remove 100 characters from the index 5 of S",
      "code": "if ( S . length ( ) > 5 ) S . erase ( 5 , 100 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if S = \" hello \"",
      "code": "if ( S == \" hello \" )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string S = s . size ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "S [ 0 ] . push_back ( S [ 0 ] . size ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘push_back’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(0ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "S [ 1 ] . push_back ( S [ 1 ] . size ( ) , S . size ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘push_back’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 2 ] != ' l ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 2 ] != ' l ' && S . size ( ) )",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        7
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 2 ] != ' l ' && S . size ( ) )",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        7
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        5
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )",
        "while ( S [ 2 ] != ' l ' && S . size ( ) > 2 )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        5
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )",
        "while ( S [ 2 ] != ' l ' && S . size ( ) > 2 )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "while ( S [ 0 ] != ' h ' && S . size ( ) )",
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 2 ] != ' l ' && S . size ( ) > 2 )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 2 ] != ' l ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 2 ] != ' l ' && S . size ( ) )",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        7
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 2 ] != ' l ' && S . size ( ) )",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 2 ] != ' l ' && S . size ( ) )",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        5
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )",
        "while ( S [ 2 ] != ' l ' && S . size ( ) > 2 )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 3 ] != ' l ' && S . size ( ) )",
        "while ( S [ 2 ] != ' l ' && S . size ( ) > 2 )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 4 ] != ' o ' && S . size ( ) )",
        "while ( S [ 2 ] != ' l ' && S . size ( ) > 2 )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "S [ 1 ] . clear ( ) ;",
        "while ( S [ 2 ] != ' l ' && S . size ( ) > 2 )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘clear’ in ‘S.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(1ul)’, which is of non-class type ‘char’"
    }
  ]
}