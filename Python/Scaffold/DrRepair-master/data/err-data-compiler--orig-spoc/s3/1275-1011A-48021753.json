{
  "meta": {
    "index": 1275,
    "hitid": "3ABAOCJ4R8YQ2CBKX7WP4VLX1ARMQC",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "1011A",
    "subid": "48021753"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in void function solve",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sort s",
      "code": "sort ( ( s ) . begin ( ) , ( s ) . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "ch = char = s at 0",
      "code": "char ch = s [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "ans = s [ 0 ] - ' a ' + 1 = int",
      "code": "int ans = s [ 0 ] - ' a ' + 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to length of s",
      "code": "for ( int i = 1 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if k isn ' t 0 and s [ i ] - ch > = 2 then set ch to s at i , increment ans by s [ i ] - ' a ' + 1 , decrement k",
      "code": "if ( k and s [ i ] - ch >= 2 ) ch = s [ i ] , ans += s [ i ] - ' a ' + 1 , k -- ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if k isn ' t 0",
      "code": "if ( k )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print - 1",
      "code": "cout << - 1 << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 18,
      "text": "t = 1 = int",
      "code": "int t = 1 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "while decrementing t call solve",
      "code": "while ( t -- ) { solve ( ) ; }",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , k"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘string’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int t , 1 ;"
      ],
      "err_line": 18,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "if ( k != 0 && s [ i ] - ch >= 2 ) ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 , k -- ;",
        "while ( t -- )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        7,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "if ( k != 0 && s [ i ] - ch >= 2 ) ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 , k -- ;",
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "if ( k != 0 && s [ i ] - ch >= 2 ) ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 , k -- ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        19,
        7,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "while ( t -- )",
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        19,
        10,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "while ( t -- )",
        "if ( k != 0 && s [ i ] - ch >= 2 ) { ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 ; }",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        19,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "while ( t -- )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "if ( k != 0 && s [ i ] - ch >= 2 ) { ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 ; }",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "if ( k != 0 && s [ i ] - ch >= 2 ) { ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 ; }",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        19,
        7,
        14
      ],
      "mod_code": [
        "if ( k != 0 && s [ i ] - ch >= 2 ) ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 , k -- ;",
        "while ( t -- )",
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        19,
        14
      ],
      "mod_code": [
        "if ( k != 0 && s [ i ] - ch >= 2 ) ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 , k -- ;",
        "while ( t -- )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        7,
        14
      ],
      "mod_code": [
        "if ( k != 0 && s [ i ] - ch >= 2 ) ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 , k -- ;",
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "if ( k != 0 && s [ i ] - ch >= 2 ) ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 , k -- ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        7,
        10,
        14
      ],
      "mod_code": [
        "while ( t -- )",
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "if ( k != 0 && s [ i ] - ch >= 2 ) { ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 ; }",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        7,
        14
      ],
      "mod_code": [
        "while ( t -- )",
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        10,
        14
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( k != 0 && s [ i ] - ch >= 2 ) { ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 ; }",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        14
      ],
      "mod_code": [
        "while ( t -- )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        10,
        14
      ],
      "mod_code": [
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "if ( k != 0 && s [ i ] - ch >= 2 ) { ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 ; }",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "int ans = s [ 0 ] - ' a ' + ' 1 ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "if ( k != 0 && s [ i ] - ch >= 2 ) { ch = s [ i ] - ' a ' + 1 , ans += s [ i ] - 1 ; }",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}