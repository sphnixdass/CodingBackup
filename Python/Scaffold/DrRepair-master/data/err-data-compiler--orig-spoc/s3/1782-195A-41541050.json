{
  "meta": {
    "index": 1782,
    "hitid": "3INZSNUD80KH6JOL3CM0ZA8EIWUD9Y",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "195A",
    "subid": "41541050"
  },
  "lines": [
    {
      "line": 0,
      "text": "a , b , c = integers",
      "code": "int a , b , c ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in the function ok that takes integer x and returns bool",
      "code": "bool ok ( int x )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "return x * b + b * c > = a * c",
      "code": "return x * b + b * c >= a * c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "in the function binary that returns integer",
      "code": "int binary ( )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "lo , med , hi = integer with lo = 0 , hi = 999999",
      "code": "int lo = 0 , med , hi = 999999 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while lo < hi",
      "code": "while ( lo < hi )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "med = right shift ( lo + hi ) 1 place",
      "code": "med = ( lo + hi ) >> 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if ( ok ( med ) )",
      "code": "if ( ok ( med ) )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "hi = med",
      "code": "hi = med ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "lo = med + 1",
      "code": "lo = med + 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return lo",
      "code": "return lo ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 16,
      "text": "read a , b , c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print binary ( )",
      "code": "cout << binary ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "void binary ( )"
      ],
      "err_line": 13,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}