{
  "meta": {
    "index": 1306,
    "hitid": "3M4KL7H8KVH0W56BPCZTEYG33YK61R",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "846A",
    "subid": "40721870"
  },
  "lines": [
    {
      "line": 0,
      "text": "a , d = integer array of size 4005",
      "code": "int a [ 4005 ] , d [ 4005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "d [ 1 ] = a [ 1 ]",
      "code": "d [ 1 ] = a [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "len = integer with len = 1",
      "code": "int len = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 2 to n",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if ( a [ i ] > = d [ len ] )",
      "code": "if ( a [ i ] >= d [ len ] )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "d [ increment len ] = a [ i ]",
      "code": "d [ ++ len ] = a [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "j = integer with j = upper_bound ( d + 1 , d + len + 1 , a [ i ] ) - d",
      "code": "int j = upper_bound ( d + 1 , d + len + 1 , a [ i ] ) - d ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "d [ j ] = a [ i ]",
      "code": "d [ j ] = a [ i ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print len",
      "code": "cout << len << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "do",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "do",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        12,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "d [ j ] += a [ i ] ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( a [ i ] >= ' d ' )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( a [ i ] >= ' d ' )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( a [ i ] >= ' d ' )",
        "do",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( a [ i ] >= ' d ' )",
        "do",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( a [ i ] >= ' d ' )",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( a [ i ] >= ' d ' )",
        "d [ j ] += a [ i ] ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( a [ i ] >= ' d ' )",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        12,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "d [ j ] += a [ i ] ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "d [ j ] += a [ i ] ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        12
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )",
        "do",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )",
        "do",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        12
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )",
        "d [ j ] += a [ i ] ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( a [ i ] >= ' d ' )",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10,
        12
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "do",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "do",
        "d [ j ] += a [ i ] ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "do",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "d [ j ] += a [ i ] ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( a [ i ] >= ' d ' )",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "if ( a [ i ] >= ' d ' )",
        "do",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        9
      ],
      "mod_code": [
        "if ( a [ i ] >= ' d ' )",
        "do",
        "d [ j ] += a [ i ] ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        9
      ],
      "mod_code": [
        "if ( a [ i ] >= ' d ' )",
        "do",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "do",
        "d [ j ] += a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        12,
        9
      ],
      "mod_code": [
        "do",
        "d [ j ] += a [ i ] ;",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "do",
        "d [ len ++ ] = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}