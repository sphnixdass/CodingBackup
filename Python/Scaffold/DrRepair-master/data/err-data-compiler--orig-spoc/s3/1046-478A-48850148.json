{
  "meta": {
    "index": 1046,
    "hitid": "3X878VYTIECAQKEOFLJ69EKTZJH7FM",
    "workerid": "AAGJMIEHD79EY",
    "probid": "478A",
    "subid": "48850148"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare function fastIo with return type void",
      "code": "void fastIo ( ) { }",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "call function fastIo",
      "code": "fastIo ( ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let temp be int",
      "code": "int temp ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read temp",
      "code": "cin >> temp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "add temp to sum",
      "code": "sum += temp ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ( sum mod 5 equals 0 ) and sum is greater or equal to 5",
      "code": "if ( sum % 5 == 0 && sum >= 5 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print sum divided by 5",
      "code": "cout << sum / 5 << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void fastIo ( )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "( ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" divided 5 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        6,
        9,
        12
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        10
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        0
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;",
        "void fastIo ( )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;",
        "( ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" divided 5 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        0
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" divided 5 << endl ;",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        0
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "void fastIo ( )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        9,
        0,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "( ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12,
        10
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        12,
        10,
        0
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        12,
        10,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        12,
        0
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" -1 \" ;",
        "void fastIo ( )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        12,
        0,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" -1 \" ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        12,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" -1 \" ;",
        "( ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" divided 5 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        0
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        0,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "cout << \" divided 5 << endl ;",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "cout << temp ;",
        "void fastIo ( )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        0,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cout << temp ;",
        "( ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        9,
        12,
        10
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        12,
        10,
        0
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        12,
        10,
        2
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        12,
        0
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;",
        "void fastIo ( )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        9,
        12,
        0,
        2
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        9,
        12,
        2
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" -1 \" ;",
        "( ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" divided 5 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        0
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        0,
        2
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        2
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "cout << \" divided 5 << endl ;",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "void fastIo ( )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        9,
        0,
        2
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( sum % 5 == 0 ) && ( sum >= 5 ) ;",
        "( ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        10,
        0
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        10,
        0,
        2
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        10,
        2
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "cout << \" divided 5 << endl ;",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "void fastIo ( )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        12,
        0,
        2
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "( ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        0,
        2
      ],
      "mod_code": [
        "cout << \" divided 5 << endl ;",
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << \" divided 5 << endl ;",
        "( ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "void fastIo ( )",
        "( ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    }
  ]
}