{
  "meta": {
    "index": 505,
    "hitid": "3IVKZBIBJ03GNEPMYE5H7QS22CGSH1",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "967A",
    "subid": "37738024"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = int array of size 105",
      "code": "int a [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , s , h , m , x , y , t = int",
      "code": "int n , s , h , m , x , y , t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n then s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x then y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set a [ i ] to 60 * x + y",
      "code": "a [ i ] = 60 * x + y ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set a [ n + 1 ] to 1e9",
      "code": "a [ n + 1 ] = 1e9 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if s < a [ 1 ]",
      "code": "if ( s < a [ 1 ] )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print 0 and 0",
      "code": "cout << 0 << \" \" << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set t to a [ i ] + 2 * s + 1",
      "code": "t = a [ i ] + 2 * s + 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if t < a [ i + 1 ]",
      "code": "if ( t < a [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "decrement t by s",
      "code": "t -= s ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print t / 60 and t mod 60",
      "code": "cout << t / 60 << \" \" << t % 60 << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( ! s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        5,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        5,
        18
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        5,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "if ( ! s [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        9,
        18
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "if ( ! s [ 1 ] )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        9,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "if ( ! s [ 1 ] )",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        18
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        18,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        2,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "int n , s , h , m , y , y , t ;",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        5,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        5,
        9,
        18
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        5,
        9,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        5,
        18
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "cin >> x >> x ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        5,
        18,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "cin >> x >> x ;",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "if ( ! s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        9,
        18
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "if ( ! s [ 1 ] )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        9,
        18,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "if ( ! s [ 1 ] )",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        9,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "if ( ! s [ 1 ] )",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        18,
        17
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        5,
        9
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        5,
        9,
        18
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        5,
        9,
        17
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        5,
        18
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        5,
        18,
        17
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        5,
        17
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "cin >> x >> x ;",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "if ( ! s [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        9,
        18
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "if ( ! s [ 1 ] )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        9,
        18,
        17
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "if ( ! s [ 1 ] )",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        9,
        17
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "if ( ! s [ 1 ] )",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        18,
        17
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "int n , s , h , m , y , y , t ;",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        9,
        18
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        9,
        18,
        17
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        9,
        17
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "if ( ! s [ 1 ] )",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        18,
        17
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "if ( ! s [ 1 ] )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        18,
        17
      ],
      "mod_code": [
        "if ( ! s [ 1 ] )",
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "if ( ! s [ 1 ] )",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        17
      ],
      "mod_code": [
        "do",
        "cout << t / 60 << \" \" << t << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}