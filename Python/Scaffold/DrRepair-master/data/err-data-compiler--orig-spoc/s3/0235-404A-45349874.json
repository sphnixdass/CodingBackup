{
  "meta": {
    "index": 235,
    "hitid": "3SX4X51T803MFZPFLREG6ZVXSSNOAP",
    "workerid": "A1APYLD4DUK33J",
    "probid": "404A",
    "subid": "45349874"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare character array square size 300 by 300",
      "code": "char square [ 300 ] [ 300 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare flag = 0 , flag1 = 0 , flag2 = 0 as integers",
      "code": "int flag = 0 , flag1 = 0 , flag2 = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare characters letterx , letterx1",
      "code": "char letterx , letterx1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to n exclusive , read square [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { cin >> square [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let letterx be square [ 0 ] [ 0 ]",
      "code": "letterx = square [ 0 ] [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let letterx1 be square [ 0 ] [ 1 ]",
      "code": "letterx1 = square [ 0 ] [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if i is j and square [ i ] [ j ] is not letterx",
      "code": "if ( i == j && square [ i ] [ j ] != letterx )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "let flag be 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "end loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else if i + j is n - 1 and letterx is not square [ i ] [ j ]",
      "code": "else if ( i + j == n - 1 && letterx != square [ i ] [ j ] )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "let flag1 be 1",
      "code": "flag1 = 1 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "end loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else if ( i is greater than j or i is less than j ) and i + j is not n - 1",
      "code": "else if ( ( i > j || i < j ) && i + j != n - 1 )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if letterx1 is not square [ i ] [ j ]",
      "code": "if ( letterx1 != square [ i ] [ j ] )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "let flag2 be 1",
      "code": "flag2 = 1 ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "end loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 24,
      "text": "if square [ i ] [ j ] is letterx",
      "code": "if ( square [ i ] [ j ] == letterx )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "let flag2 be 1",
      "code": "flag2 = 1 ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "end loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if flag is 1 or flag1 is 1 or flag2 is 1",
      "code": "if ( flag == 1 || flag1 == 1 || flag2 == 1 )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 34,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "print ' \\ n '",
      "code": "putchar ( ' \\n ' ) ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 300 ] [ 300 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘square’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char letterx , y ;"
      ],
      "err_line": 10,
      "err_msg": "‘letterx1’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int letterx = square [ 0 ] [ 0 ] ;"
      ],
      "err_line": 9,
      "err_msg": "conflicting declaration ‘int letterx’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        19,
        32,
        34,
        3
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        32,
        34,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        19,
        32,
        31,
        3
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" NO \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        32,
        31,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" NO \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        19,
        32,
        3
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" NO \" << endl ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        32,
        3,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" NO \" << endl ;",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        32,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" NO \" << endl ;",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        19,
        34,
        31,
        3
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" YES \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        34,
        31,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" YES \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        19,
        34,
        3
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" YES \" << endl ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        34,
        3,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" YES \" << endl ;",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        34,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cout << \" YES \" << endl ;",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        19,
        31,
        3
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        31,
        3,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        31,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        3,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        33
      ],
      "mod_code": [
        "else if ( ( i > j ) || ( i + j ) != n - 1 )",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        32,
        34,
        31,
        3
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        34,
        31,
        33
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        32,
        34,
        3
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        34,
        3,
        33
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        34,
        33
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        32,
        31,
        3
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        31,
        3,
        33
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        31,
        33
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        32,
        3
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        3,
        33
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        33
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        34,
        31,
        3
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        31,
        3,
        33
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        31,
        33
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        34,
        3
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        3,
        33
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        33
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        31,
        3
      ],
      "mod_code": [
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        3,
        33
      ],
      "mod_code": [
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        33
      ],
      "mod_code": [
        "if ( ! flag || flag1 == 1 || flag2 == 1 )",
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘putchar’"
    },
    {
      "mod_line": [
        3,
        33
      ],
      "mod_code": [
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}