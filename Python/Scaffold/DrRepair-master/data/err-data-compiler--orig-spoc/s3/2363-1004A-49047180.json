{
  "meta": {
    "index": 2363,
    "hitid": "3NI0WFPPI9A0PGLTTTVT0TXTXJI60H",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1004A",
    "subid": "49047180"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers n and d",
      "code": "int n , d ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer array v with size 102",
      "code": "int v [ 102 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n and d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 1 to n inclusive read v [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> v [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer variable ans = 2",
      "code": "int ans = 2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if v [ i + 1 ] - v [ i ] is greater than 2 * d",
      "code": "if ( v [ i + 1 ] - v [ i ] > 2 * d )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increase ans by 2",
      "code": "ans += 2 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if v [ i + 1 ] - v [ i ] = 2 * d",
      "code": "else if ( v [ i + 1 ] - v [ i ] == 2 * d )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase and by 1",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print ans and \" \\ n \"",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "++ 1 ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "and ++ 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected identifier before ‘++’ token"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "++ 1 ;",
        "cout << ans << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "and ++ 1 ;",
        "cout << ans << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected identifier before ‘++’ token"
    }
  ]
}