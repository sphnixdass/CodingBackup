{
  "meta": {
    "index": 2861,
    "hitid": "3ZG552ORAMYS0G389O7FV967CXR2VX",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "454A",
    "subid": "47785703"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "star_count = d_count = integer , i = integer = 0",
      "code": "int star_count , d_count , i = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "star count = n - 1 , d_count = 1",
      "code": "star_count = n - 1 , d_count = 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "data = string vector",
      "code": "vector < string > data ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while star_count > = 0",
      "code": "while ( star_count >= 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "row = empty string",
      "code": "string row = \" \" ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 0 to star_count . 2 exclusive , at the start of a loop increase i by 1 , then row = row + *",
      "code": "for ( int i = 0 ; i < star_count / 2 ; ++ i ) row += \" * \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for i = 0 to d_count . 2 exclusive , at the start of a loop increase i by 1 , then row = row + D",
      "code": "for ( int i = 0 ; i < d_count ; ++ i ) row += \" D \" ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = 0 to star_count . 2 exclusive , at the start of a loop increase i by 1 , then row = row + *",
      "code": "for ( int i = 0 ; i < star_count / 2 ; ++ i ) row += \" * \" ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "push back the elements of data an insert a new element of row at the end of data",
      "code": "data . push_back ( row ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "star_count = star_count - 2",
      "code": "star_count -= 2 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "d_count = d_count + 2",
      "code": "d_count += 2 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increase i by 1",
      "code": "++ i ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to size of data exclusive , while looping increase i at the start of the loop , the nprint data [ i ]",
      "code": "for ( int i = 0 ; i < data . size ( ) ; ++ i ) cout << data [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = size of data - 2 to 0 inclusive , decrease i by 1 at the start of a loop , then print data [ i ]",
      "code": "for ( int i = data . size ( ) - 2 ; i >= 0 ; -- i ) cout << data [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int star_count = 0 , d_count = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int star = n - 1 , d_count = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int d_count’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "priority_queue < string > data ;"
      ],
      "err_line": 11,
      "err_msg": "‘class std::priority_queue<std::__cxx11::basic_string<char> >’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "string row = empty ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘empty’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < d_count . 2 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "data . push_back ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        8
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        9
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        9
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        10,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        10,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        9
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        16,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        7,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "string row = \" \" ;",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        16,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        8,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        9,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        9,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        10,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        10,
        16,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        10,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        16,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "int star_count , i , i = 0 ;",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        9
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        10
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        10
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        10
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "string row = \" \" ;",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        10
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        10
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "star = n - 1 , d_count = 1 ;",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘star’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        10
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        16
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        17
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        16
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        17
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        16
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        17
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        8,
        17
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        10
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        16
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        17
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        16
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        17
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        17
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        10,
        16
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        17
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        10,
        17
      ],
      "mod_code": [
        "string row = \" \" ;",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        9,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        9,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        9,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        10,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        10,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        10,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < d_count . 2 ; i ++ ) { row += D ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = 0 ; i < data . size ( ) ; i ++ )",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < star_count . 2 ; i ++ ) { row += * 1 ; }",
        "for ( int i = data . size ( ) - 2 ; i >= 0 ; i -- ) cout << data [ i ] << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before numeric constant"
    }
  ]
}