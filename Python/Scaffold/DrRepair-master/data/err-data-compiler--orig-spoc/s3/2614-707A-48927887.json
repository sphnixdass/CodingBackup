{
  "meta": {
    "index": 2614,
    "hitid": "3OREP8RUT2536WD93M14W161I1GBG8",
    "workerid": "A1AYVATMT88U1W",
    "probid": "707A",
    "subid": "48927887"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m be integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let boolean x is equal to true",
      "code": "bool x = true ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let arr [ n ] [ m ] is a 2d array of character elements which has n rows and m columns",
      "code": "char arr [ n ] [ m ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for ( integer i = 0 to n exclusive )",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to m ( exclusive )",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "rea the 2d array arr [ i ] [ j ]",
      "code": "cin >> arr [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if ( arr [ i ] [ j ] is not equal to G and arr [ i ] [ j ] is not equal to W and arr [ i ] [ j ] is not equal to B ) , x is equal to false",
      "code": "if ( arr [ i ] [ j ] != ' G ' && arr [ i ] [ j ] != ' W ' && arr [ i ] [ j ] != ' B ' ) { x = false ; }",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "check if ( x )",
      "code": "if ( x )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print # Black & White and newline",
      "code": "cout << \" #Black&White \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print # Color and newline",
      "code": "cout << \" #Color \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "x = true ;"
      ],
      "err_line": 2,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ m ] ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [m]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "int arr [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        7,
        12
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "int arr [ i ] [ j ] ;",
        "cout << \" # \" << \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "int arr [ i ] [ j ] ;",
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "int arr [ i ] [ j ] ;",
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        7,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "int arr [ i ] [ j ] ;",
        "cout << \" # \" ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        7,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "int arr [ i ] [ j ] ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "cout << \" # \" << \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        7
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" ;",
        "char arr [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        12,
        7
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "cout << \" # \" << \" \\n \" ;",
        "char arr [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        12,
        7,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "cout << \" # \" << \" \\n \" ;",
        "char arr [ i ] [ j ] ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "cout << \" # \" ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        14,
        7
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "cout << \" # \" ;",
        "char arr [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "char arr [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        7,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "char arr [ i ] [ j ] ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "char arr [ n ] [ m ] , m [ n ] ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char m [n]’"
    }
  ]
}