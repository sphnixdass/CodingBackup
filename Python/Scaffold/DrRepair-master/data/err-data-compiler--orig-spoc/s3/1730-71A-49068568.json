{
  "meta": {
    "index": 1730,
    "hitid": "38DCH97KHHW0145ZUAJXO3TGXGYQJE",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "71A",
    "subid": "49068568"
  },
  "lines": [
    {
      "line": 0,
      "text": "n = int",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "p = pointer to array of n string",
      "code": "string * p = new string [ n ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "p [ i ] = s",
      "code": "p [ i ] = s ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "s = p [ i ]",
      "code": "s = p [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if size of s > 10",
      "code": "if ( s . size ( ) > 10 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print s [ 0 ] , size of s - 2 , s [ size of s - 1 ]",
      "code": "cout << s [ 0 ] << s . size ( ) - 2 << s [ s . size ( ) - 1 ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print s",
      "code": "cout << s << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(0ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int s = p [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        1
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        1,
        0
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "char s ;",
        "char n ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        1,
        7
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "char s ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        1,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "char s ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        0
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "char n ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        0,
        7
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "char n ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        0,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "char n ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        7
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        7,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "p [ i ] = ' s ' ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        10,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "int s = p [ i ] ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        12,
        1,
        0
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char s ;",
        "char n ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        12,
        1,
        0,
        7
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char s ;",
        "char n ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        12,
        1,
        0,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char s ;",
        "char n ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        12,
        1,
        7
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char s ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        12,
        1,
        7,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char s ;",
        "p [ i ] = ' s ' ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        12,
        1,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char s ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char n ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(0ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        0,
        7
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char n ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(0ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        0,
        7,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char n ;",
        "p [ i ] = ' s ' ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(0ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        0,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "char n ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(0ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(0ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        7,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "p [ i ] = ' s ' ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(0ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "cout << s [ 0 ] . size ( ) - 2 << \" \" << s [ s . size ( ) - 1 ] << endl ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(0ul)’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        1,
        0
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char s ;",
        "char n ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        1,
        0,
        7
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char s ;",
        "char n ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        1,
        0,
        11
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char s ;",
        "char n ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        1,
        7
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char s ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        1,
        7,
        11
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char s ;",
        "p [ i ] = ' s ' ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        1,
        11
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char s ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char n ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        0,
        7
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char n ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        0,
        7,
        11
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char n ;",
        "p [ i ] = ' s ' ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        0,
        11
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "char n ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        7,
        11
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "p [ i ] = ' s ' ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "int s = p [ i ] ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "char s ;",
        "char n ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        1,
        0,
        7
      ],
      "mod_code": [
        "char s ;",
        "char n ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        1,
        0,
        7,
        11
      ],
      "mod_code": [
        "char s ;",
        "char n ;",
        "p [ i ] = ' s ' ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        1,
        0,
        11
      ],
      "mod_code": [
        "char s ;",
        "char n ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "char s ;",
        "p [ i ] = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        1,
        7,
        11
      ],
      "mod_code": [
        "char s ;",
        "p [ i ] = ' s ' ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "char s ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    }
  ]
}