{
  "meta": {
    "index": 1348,
    "hitid": "3P888QFVX3OE2FWWANB2WZA2WA6QOV",
    "workerid": "A1AYVATMT88U1W",
    "probid": "731A",
    "subid": "48718820"
  },
  "lines": [
    {
      "line": 0,
      "text": "let MAXX be constant long integer with MAXX = 2 * 1000010",
      "code": "const long long MAXX = 2 * ( 1000000 + 10 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let PI be a constant double value with PI = 3 . 14159265358979323846",
      "code": "const double PI = 3.14159265358979323846 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let mod be a constant long integer with mod = 1000000007",
      "code": "const long long mod = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "a = array of integers of length 80",
      "code": "int a [ 80 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "for i = 0 to 70 exclusive , a [ i ] is equal to i",
      "code": "for ( int i = 0 ; i < 70 ; i ++ ) { a [ i ] = i ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let sum be a integer with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "increment sum by minimum of absolute value of a [ 0 ] - a [ s [ 0 ] - a ] and absolute value of a [ 26 ] - a [ s [ 0 ] - a ]",
      "code": "sum += min ( abs ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] ) , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let len be a integer with len = length of s",
      "code": "int len = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to len - 1 exclusive",
      "code": "for ( int i = 0 ; i < len - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "let s1 be a character with s1 = maximum of s [ i ] , s [ i + 1 ]",
      "code": "char s1 = max ( s [ i ] , s [ i + 1 ] ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "let s2 be a character with s2 = minimum of s [ i ] , s [ i + 1 ]",
      "code": "char s2 = min ( s [ i ] , s [ i + 1 ] ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "let l1 be a integer with l1 = absolute value of a [ s1 - a ] - a [ s2 - a ]",
      "code": "int l1 = abs ( a [ s1 - ' a ' ] - a [ s2 - ' a ' ] ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "let l2 be a integer with l2 = absolute value of a [ s2 - a + 26 ] - a [ s1 - a ]",
      "code": "int l2 = abs ( a [ s2 - ' a ' + 26 ] - a [ s1 - ' a ' ] ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment sum by minimum of l1 , l2",
      "code": "sum += min ( l1 , l2 ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print sum and newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;"
      ],
      "err_line": 15,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "s1 = max ( s [ i ] , s [ i + 1 ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "char s2 = min ( s [ i ] ) , s [ i + 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(char&)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘l1’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘l2’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        9,
        14,
        15
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        7
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        14,
        15
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        7
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        14,
        7
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        9,
        15,
        7
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        9,
        15,
        7
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - a ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        14,
        15,
        7
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        7,
        9
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        9
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        14,
        15,
        7
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        7,
        9
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        9
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        7,
        9
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "char s ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "int l1 = abs ( a [ s1 - a ] - a [ s2 - a ] ) ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        7,
        9
      ],
      "mod_code": [
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "int l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "invalid operands of types ‘char’ and ‘int [80]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        7,
        9
      ],
      "mod_code": [
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "char s ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "l2 = abs ( a [ s2 - a + 26 ] - a [ s1 - a ] ) ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘l2’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "char s ;",
        "sum += min ( a [ 0 ] - a [ s [ 0 ] - ' a ' ] , abs ( a [ 26 ] - a [ s [ 0 ] - ' a ' ] ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}