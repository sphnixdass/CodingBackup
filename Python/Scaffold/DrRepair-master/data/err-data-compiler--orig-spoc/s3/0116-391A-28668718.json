{
  "meta": {
    "index": 116,
    "hitid": "3NRZ1LDP7W05179OCJ7UCSRWBIIZPA",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "391A",
    "subid": "28668718"
  },
  "lines": [
    {
      "line": 0,
      "text": "sol = integer",
      "code": "int sol ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str = string",
      "code": "string str ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to str . length ( ) exclusive",
      "code": "for ( int i = 1 ; i < str . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "j = integer with j = i",
      "code": "int j = i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while str [ j ] is str [ j - 1 ] and j < str . length ( ) , increment j",
      "code": "while ( str [ j ] == str [ j - 1 ] && j < str . length ( ) ) j ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "curr = integer with curr = j - i + 1",
      "code": "int curr = j - i + 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if curr modulo 2 is 0 , increment sol",
      "code": "if ( curr % 2 == 0 ) sol ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if j is not i , i = j - 1",
      "code": "if ( j != i ) i = j - 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print sol",
      "code": "cout << sol << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "cout << \" sol \" ;",
        "gets ( str ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        11,
        3,
        1
      ],
      "mod_code": [
        "cout << \" sol \" ;",
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "cout << \" sol \" ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    }
  ]
}