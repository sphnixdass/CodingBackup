{
  "meta": {
    "index": 187,
    "hitid": "3ODOP6T3ASET63KTPS6SMJ6UZDP42I",
    "workerid": "AIWEXPJAU66D9",
    "probid": "363A",
    "subid": "47327763"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new integer variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read from the input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create a map from integers to strings with name m",
      "code": "map < int , string > m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "change m [ 0 ] to \" O - | - OOOO \"",
      "code": "m [ 0 ] = \" O-|-OOOO \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign \" O - | O - OOO \" to m [ 1 ]",
      "code": "m [ 1 ] = \" O-|O-OOO \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set m [ 2 ] to \" O - | OO - OO \"",
      "code": "m [ 2 ] = \" O-|OO-OO \" ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "assign \" O - | OOO - O \" to m [ 3 ]",
      "code": "m [ 3 ] = \" O-|OOO-O \" ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "assign \" O - | OOOO - \" to m [ 4 ]",
      "code": "m [ 4 ] = \" O-|OOOO- \" ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "assign \" - O | - OOOO \" to m [ 5 ]",
      "code": "m [ 5 ] = \" -O|-OOOO \" ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "change m [ 6 ] to \" - O | O - OOO \"",
      "code": "m [ 6 ] = \" -O|O-OOO \" ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "assign \" - O | OO - OO \" to m [ 7 ]",
      "code": "m [ 7 ] = \" -O|OO-OO \" ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "change m [ 8 ] to \" - O | OOO - O \"",
      "code": "m [ 8 ] = \" -O|OOO-O \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set m [ 9 ] to \" - O | OOOO - \"",
      "code": "m [ 9 ] = \" -O|OOOO- \" ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if n is equal to 0",
      "code": "if ( n == 0 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print m [ 0 ]",
      "code": "cout << m [ 0 ] << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "while n ! = 0",
      "code": "while ( n != 0 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print m [ n modulo 10 ] to the standard output",
      "code": "cout << m [ n % 10 ] << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "assign n / 10 to n",
      "code": "n = n / 10 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < string , string > m ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < string , int > m ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 1 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 1 ] = \" \\0 \" ;",
        "m [ 2 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        7
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 1 ] = \" \\0 \" ;",
        "m [ 3 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 1 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 2 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        7
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 2 ] = \" \\0 \" ;",
        "m [ 3 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 2 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 3 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 3 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 0 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 1 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 1 ] = \" \\0 \" ;",
        "m [ 2 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        7
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 1 ] = \" \\0 \" ;",
        "m [ 2 ] = \" \\0 \" ;",
        "m [ 3 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 1 ] = \" \\0 \" ;",
        "m [ 2 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 1 ] = \" \\0 \" ;",
        "m [ 3 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 1 ] = \" \\0 \" ;",
        "m [ 3 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 1 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 2 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 2 ] = \" \\0 \" ;",
        "m [ 3 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 2 ] = \" \\0 \" ;",
        "m [ 3 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        6,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 2 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 3 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        7,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 3 ] = \" \\0 \" ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "map < string , string > m ;",
        "m [ 7 ] = \" \\0 \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    }
  ]
}