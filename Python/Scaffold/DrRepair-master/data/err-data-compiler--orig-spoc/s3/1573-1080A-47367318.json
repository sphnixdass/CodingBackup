{
  "meta": {
    "index": 1573,
    "hitid": "3MQKOF1EE2ISIF1TWNWSDUGPGXGWD8",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1080A",
    "subid": "47367318"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs n and k",
      "code": "long long n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "loop , reading n and k from the input",
      "code": "while ( cin >> n >> k )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare new long longs sum1 , sum2 and sum3",
      "code": "long long sum1 , sum2 , sum3 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "set sum1 to 2 * n / k",
      "code": "sum1 = 2 * n / k ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if 2 * n % k ! = 0 , add 1 to sum1",
      "code": "if ( 2 * n % k != 0 ) { sum1 ++ ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "assign 5 * n / k to sum2",
      "code": "sum2 = 5 * n / k ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if 5 * n modulo k is not 0 , increment sum2",
      "code": "if ( 5 * n % k != 0 ) { sum2 ++ ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "change sum3 to 8 * n / k",
      "code": "sum3 = 8 * n / k ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if 8 * n modulo k ! = 0 , increment sum3 by one",
      "code": "if ( 8 * n % k != 0 ) { sum3 ++ ; }",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print sum1 + sum2 + sum3",
      "code": "cout << sum1 + sum2 + sum3 << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n and k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int sum2’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "long long n and k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        2
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "long long n and k ;",
        "while ( n >> n >> k )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        2,
        8
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "long long n and k ;",
        "while ( n >> n >> k )",
        "sum3 = 8 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        2,
        4
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "long long n and k ;",
        "while ( n >> n >> k )",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "long long n and k ;",
        "sum3 = 8 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        8,
        4
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "long long n and k ;",
        "sum3 = 8 * ( n / k ) ;",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "long long n and k ;",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "while ( n >> n >> k )"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int sum2’"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "while ( n >> n >> k )",
        "sum3 = 8 * ( n / k ) ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int sum2’"
    },
    {
      "mod_line": [
        6,
        2,
        8,
        4
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "while ( n >> n >> k )",
        "sum3 = 8 * ( n / k ) ;",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int sum2’"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "while ( n >> n >> k )",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int sum2’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "sum3 = 8 * ( n / k ) ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int sum2’"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "sum3 = 8 * ( n / k ) ;",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int sum2’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "int sum2 = 5 * n / k ;",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "long long n and k ;",
        "while ( n >> n >> k )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "long long n and k ;",
        "while ( n >> n >> k )",
        "sum3 = 8 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        4
      ],
      "mod_code": [
        "long long n and k ;",
        "while ( n >> n >> k )",
        "sum3 = 8 * ( n / k ) ;",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "long long n and k ;",
        "while ( n >> n >> k )",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "long long n and k ;",
        "sum3 = 8 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "long long n and k ;",
        "sum3 = 8 * ( n / k ) ;",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long long n and k ;",
        "sum1 = 2 * ( n / k ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}