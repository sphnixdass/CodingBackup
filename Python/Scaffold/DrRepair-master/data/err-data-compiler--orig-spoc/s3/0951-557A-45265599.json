{
  "meta": {
    "index": 951,
    "hitid": "3O2Y2UIUCQOYLZL8YF8FDJPF53IFK1",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "557A",
    "subid": "45265599"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integers = n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "integers = min1 , min2 , min3 , max1 , max2 , max3",
      "code": "int min1 , min2 , min3 , max1 , max2 , max3 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "integers = S1 , S2 , S3",
      "code": "int S1 , S2 , S3 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n , min1 , max1 , min2 , max2 , min3 , max3",
      "code": "cin >> n >> min1 >> max1 >> min2 >> max2 >> min3 >> max3 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if n is max1 + min2 + min3 then do the following",
      "code": "if ( n == max1 + min2 + min3 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set S1 to max1",
      "code": "S1 = max1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set S2 to min2",
      "code": "S2 = min2 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set S3 to min3",
      "code": "S3 = min3 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "output S1 , , S2 , , S3",
      "code": "cout << S1 << \" \" << S2 << \" \" << S3 << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else if n is greater than max1 + min2 + min3 then do the following",
      "code": "else if ( n > max1 + min2 + min3 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set S1 to max1",
      "code": "S1 = max1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if n - S ! - max2 = min3 then do the following",
      "code": "if ( ( n - S1 - max2 ) == min3 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set S2 to max2",
      "code": "S2 = max2 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set S3 to min3",
      "code": "S3 = min3 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if n - S1 - max2 is greater than min3 then do the following",
      "code": "else if ( ( n - S1 - max2 ) > min3 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set S2 to max2",
      "code": "S2 = max2 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set S3 to n - S1 - S2",
      "code": "S3 = n - S1 - S2 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set S2 to n - S1 - min3",
      "code": "S2 = n - S1 - min3 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "set S3 to min3",
      "code": "S3 = min3 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "output S1 , , S2 , , S3",
      "code": "cout << S1 << \" \" << S2 << \" \" << S3 << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 24,
      "text": "set S1 to n - min2 - min3",
      "code": "S1 = n - min2 - min3 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "set S2 to min2",
      "code": "S2 = min2 ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "set S3 to min3",
      "code": "S3 = min3 ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "output S1 S2 S3",
      "code": "cout << S1 << \" \" << S2 << \" \" << S3 << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( n == max1 + min2 + min3 )"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( n - S != min3 )"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        27
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "cout << S1 << \" \" << S3 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27,
        18
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "cout << S1 << \" \" << S3 << endl ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27,
        18,
        7
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "cout << S1 << \" \" << S3 << endl ;",
        "do",
        "S2 = min2 - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27,
        18,
        23
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "cout << S1 << \" \" << S3 << endl ;",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27,
        7
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "cout << S1 << \" \" << S3 << endl ;",
        "S2 = min2 - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27,
        7,
        23
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "cout << S1 << \" \" << S3 << endl ;",
        "S2 = min2 - 1 ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27,
        23
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "cout << S1 << \" \" << S3 << endl ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        7
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "do",
        "S2 = min2 - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        7,
        23
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "do",
        "S2 = min2 - 1 ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        7,
        27
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "do",
        "S2 = min2 - 1 ;",
        "cout << S1 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        23
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        23,
        27
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "do",
        "do",
        "cout << S1 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        27
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "do",
        "cout << S1 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "S2 = min2 - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        23
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "S2 = min2 - 1 ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        23,
        27
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "S2 = min2 - 1 ;",
        "do",
        "cout << S1 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        27
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "S2 = min2 - 1 ;",
        "cout << S1 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        23
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        23,
        27
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "do",
        "cout << S1 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27
      ],
      "mod_code": [
        "if ( ( n - S ) != min3 )",
        "cout << S1 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        18
      ],
      "mod_code": [
        "cout << S1 << \" \" << S3 << endl ;",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        27,
        18,
        7
      ],
      "mod_code": [
        "cout << S1 << \" \" << S3 << endl ;",
        "do",
        "S2 = min2 - 1 ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        27,
        18,
        7,
        23
      ],
      "mod_code": [
        "cout << S1 << \" \" << S3 << endl ;",
        "do",
        "S2 = min2 - 1 ;",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        27,
        18,
        23
      ],
      "mod_code": [
        "cout << S1 << \" \" << S3 << endl ;",
        "do",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        27,
        7,
        23
      ],
      "mod_code": [
        "cout << S1 << \" \" << S3 << endl ;",
        "S2 = min2 - 1 ;",
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        27,
        23
      ],
      "mod_code": [
        "cout << S1 << \" \" << S3 << endl ;",
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        18,
        7
      ],
      "mod_code": [
        "do",
        "S2 = min2 - 1 ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        7,
        23
      ],
      "mod_code": [
        "do",
        "S2 = min2 - 1 ;",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        7,
        23,
        27
      ],
      "mod_code": [
        "do",
        "S2 = min2 - 1 ;",
        "do",
        "cout << S1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        7,
        27
      ],
      "mod_code": [
        "do",
        "S2 = min2 - 1 ;",
        "cout << S1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        23
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        23,
        27
      ],
      "mod_code": [
        "do",
        "do",
        "cout << S1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        27
      ],
      "mod_code": [
        "do",
        "cout << S1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        23
      ],
      "mod_code": [
        "S2 = min2 - 1 ;",
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        23,
        27
      ],
      "mod_code": [
        "S2 = min2 - 1 ;",
        "do",
        "cout << S1 << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        23,
        27
      ],
      "mod_code": [
        "do",
        "cout << S1 << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}