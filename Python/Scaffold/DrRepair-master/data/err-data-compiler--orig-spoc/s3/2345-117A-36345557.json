{
  "meta": {
    "index": 2345,
    "hitid": "3IHWR4LC7D7Y0PLXQYHXQBTGQVG8I2",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "117A",
    "subid": "36345557"
  },
  "lines": [
    {
      "line": 0,
      "text": "MAXN = const integer with MAXN = 1e5 + 100",
      "code": "const int MAXN = 1e5 + 100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "INF = const integer with INF = 0x3FFFFFFF",
      "code": "const int INF = 0x3FFFFFFF ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "MOD = const long long with MOD = 1e9 + 7",
      "code": "const long long MOD = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "s , f , t = integer arrays of size MAXN",
      "code": "int s [ MAXN ] , f [ MAXN ] , t [ MAXN ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "n , m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read s [ i ] , f [ i ] , t [ i ]",
      "code": "cin >> s [ i ] >> f [ i ] >> t [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s [ i ] is f [ i ]",
      "code": "if ( s [ i ] == f [ i ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print t [ i ]",
      "code": "cout << t [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if s [ i ] < f [ i ]",
      "code": "else if ( s [ i ] < f [ i ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "temp = integer with temp = t [ i ] modulo ( m - 1 )",
      "code": "int temp = t [ i ] % ( m - 1 ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if ( ( ( t [ i ] + ( m - 1 ) ) / ( m - 1 ) ) modulo 2 )",
      "code": "if ( ( ( t [ i ] + ( m - 1 ) ) / ( m - 1 ) ) % 2 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if not temp",
      "code": "if ( ! temp )",
      "indent": 4
    },
    {
      "line": 15,
      "text": "temp = 1",
      "code": "temp = 1 ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increment temp",
      "code": "temp ++ ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "if temp < = s [ i ]",
      "code": "if ( temp <= s [ i ] )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "print t [ i ] + f [ i ] - temp",
      "code": "cout << t [ i ] + f [ i ] - temp << endl ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 21,
      "text": "print t [ i ] + m - temp + m - 1 + f [ i ] - 1",
      "code": "cout << t [ i ] + m - temp + m - 1 + f [ i ] - 1 << endl ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if not temp",
      "code": "if ( ! temp )",
      "indent": 4
    },
    {
      "line": 24,
      "text": "temp = m",
      "code": "temp = m ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 26,
      "text": "temp = m - temp",
      "code": "temp = m - temp ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "if temp > = s [ i ]",
      "code": "if ( temp >= s [ i ] )",
      "indent": 4
    },
    {
      "line": 28,
      "text": "print t [ i ] + temp - 1 + f [ i ] - 1",
      "code": "cout << t [ i ] + temp - 1 + f [ i ] - 1 << endl ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 30,
      "text": "print t [ i ] + temp - 1 + f [ i ] - 1",
      "code": "cout << t [ i ] + temp - 1 + f [ i ] - 1 << endl ;",
      "indent": 5
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 33,
      "text": "temp = integer with temp = t [ i ] modulo ( m - 1 )",
      "code": "int temp = t [ i ] % ( m - 1 ) ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "if ( ( ( t [ i ] + ( m - 1 ) ) / ( m - 1 ) ) modulo 2 )",
      "code": "if ( ( ( t [ i ] + ( m - 1 ) ) / ( m - 1 ) ) % 2 )",
      "indent": 3
    },
    {
      "line": 35,
      "text": "if not temp",
      "code": "if ( ! temp )",
      "indent": 4
    },
    {
      "line": 36,
      "text": "temp = 1",
      "code": "temp = 1 ;",
      "indent": 5
    },
    {
      "line": 37,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 38,
      "text": "increment temp",
      "code": "temp ++ ;",
      "indent": 5
    },
    {
      "line": 39,
      "text": "if temp < = s [ i ]",
      "code": "if ( temp <= s [ i ] )",
      "indent": 4
    },
    {
      "line": 40,
      "text": "print t [ i ] + m - temp + m - f [ i ]",
      "code": "cout << t [ i ] + m - temp + m - f [ i ] << endl ;",
      "indent": 5
    },
    {
      "line": 41,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 42,
      "text": "print t [ i ] + m - temp + m - f [ i ]",
      "code": "cout << t [ i ] + m - temp + m - f [ i ] << endl ;",
      "indent": 5
    },
    {
      "line": 43,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 44,
      "text": "if not temp",
      "code": "if ( ! temp )",
      "indent": 4
    },
    {
      "line": 45,
      "text": "temp = m",
      "code": "temp = m ;",
      "indent": 5
    },
    {
      "line": 46,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 47,
      "text": "temp = m - temp",
      "code": "temp = m - temp ;",
      "indent": 5
    },
    {
      "line": 48,
      "text": "if temp > = s [ i ]",
      "code": "if ( temp >= s [ i ] )",
      "indent": 4
    },
    {
      "line": 49,
      "text": "print t [ i ] + temp - f [ i ]",
      "code": "cout << t [ i ] + temp - f [ i ] << endl ;",
      "indent": 5
    },
    {
      "line": 50,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 51,
      "text": "print t [ i ] + temp - 1 + m - 1 + m - f [ i ]",
      "code": "cout << t [ i ] + temp - 1 + m - 1 + m - f [ i ] << endl ;",
      "indent": 5
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const int INF = 0x3FFFFFFF << endl ;"
      ],
      "err_line": 1,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] , f [ MAXN ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int f [100100]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> s [ i ] >> f [ i ] >> t >> i ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [100100]’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( ( t [ i ] + ( m - 1 ) ) / ( m - 1 ) ) % 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘%’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "else if ( temp >= s [ i ] )"
      ],
      "err_line": 27,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "if ( ( t [ i ] + ( m - 1 ) ) / ( m - 1 ) ) % 2 ;"
      ],
      "err_line": 34,
      "err_msg": "expected primary-expression before ‘%’ token"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 39,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 43,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 53,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 48,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "else if ( temp >= s [ i ] )"
      ],
      "err_line": 48,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 52,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        36
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "int temp = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        36,
        32
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "int temp = 1 ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        36,
        15
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "int temp = 1 ;",
        "int temp = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        36,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "int temp = 1 ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        32
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        32,
        15
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "do",
        "int temp = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        32,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "do",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        15
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "int temp = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        15,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "int temp = 1 ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        36
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "int temp = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        36,
        32
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "int temp = 1 ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        36,
        32,
        15
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "int temp = 1 ;",
        "do",
        "int temp = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        36,
        32,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "int temp = 1 ;",
        "do",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        36,
        15
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "int temp = 1 ;",
        "int temp = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        36,
        15,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "int temp = 1 ;",
        "int temp = 1 ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        36,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "int temp = 1 ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        32
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        32,
        15
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "do",
        "int temp = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        32,
        15,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "do",
        "int temp = 1 ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        32,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "do",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "int temp = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "int temp = 1 ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        28
      ],
      "mod_code": [
        "int s [ MAXN ] , f [ MAXN ] ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        36,
        32
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "int temp = 1 ;",
        "do"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        36,
        32,
        15
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "int temp = 1 ;",
        "do",
        "int temp = 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        36,
        32,
        28
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "int temp = 1 ;",
        "do",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        32
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "do"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        32,
        15
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "do",
        "int temp = 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        32,
        15,
        28
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "do",
        "int temp = 1 ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        32,
        28
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "do",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        32
      ],
      "mod_code": [
        "int temp = 1 ;",
        "do"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        32,
        15
      ],
      "mod_code": [
        "int temp = 1 ;",
        "do",
        "int temp = 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        32,
        15,
        28
      ],
      "mod_code": [
        "int temp = 1 ;",
        "do",
        "int temp = 1 ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        32,
        28
      ],
      "mod_code": [
        "int temp = 1 ;",
        "do",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        32,
        15
      ],
      "mod_code": [
        "do",
        "int temp = 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        32,
        15,
        28
      ],
      "mod_code": [
        "do",
        "int temp = 1 ;",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        32,
        28
      ],
      "mod_code": [
        "do",
        "cout << t [ i ] + temp - 1 + f [ i ] - 1 ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}