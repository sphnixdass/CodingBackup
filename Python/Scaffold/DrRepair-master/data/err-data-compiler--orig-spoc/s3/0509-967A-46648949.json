{
  "meta": {
    "index": 509,
    "hitid": "3N3WJQXELSKP4BREVK598085LZQL2Y",
    "workerid": "A1APYLD4DUK33J",
    "probid": "967A",
    "subid": "46648949"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers n , s",
      "code": "int n , s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer arrays h size 200 , m size 200",
      "code": "int h [ 200 ] , m [ 200 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare f with integers a , b as arguments , returning integer",
      "code": "int f ( int a , int b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return a * 60 + b",
      "code": "return a * 60 + b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read n and s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive , read h [ i ] and m [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> h [ i ] >> m [ i ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to 29 exclusive",
      "code": "for ( int i = 0 ; i < 29 ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for j = 0 to 60 exclusive",
      "code": "for ( int j = 0 ; j < 60 ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "declare boolean ok = 1",
      "code": "bool ok = 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "for k = 0 to n exclusive",
      "code": "for ( int k = 0 ; k < n ; k ++ )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if absolute value of ( result of run f ( i , j ) - result of run f ( h [ k ] , m [ k ] ) ) is less than or equal to s , let ok be 0",
      "code": "if ( abs ( f ( i , j ) - f ( h [ k ] , m [ k ] ) ) <= s ) ok = 0 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if ok is true",
      "code": "if ( ok == true )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print i , \" \" , j , newline",
      "code": "cout << i << \" \" << j << endl ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘abs(int (&)(int, int), int&)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int h [ 200 ] [ 200 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "bool ok = l ;"
      ],
      "err_line": 10,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘abs(int&, int&)’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        10
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        10,
        9
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        10,
        8
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        9
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        9,
        8
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        8
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "bool ok = l ;"
      ],
      "err_line": 10,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        9
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        9,
        8
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        8
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "bool ok = l ;",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9,
        8
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "if ( abs ( f , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        10
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        10,
        9
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        10,
        8
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        9
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        9,
        8
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        1,
        8
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "int h [ 200 ] [ 200 ] ;",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "bool ok = l ;"
      ],
      "err_line": 10,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        9
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        9,
        8
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        8
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "bool ok = l ;",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9,
        8
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "if ( abs ( i , j ) - f ( h [ k ] , m [ k ] ) <= s ) { ok = 0 ; }",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        1,
        10,
        9
      ],
      "mod_code": [
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        1,
        10,
        9,
        8
      ],
      "mod_code": [
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        1,
        10,
        8
      ],
      "mod_code": [
        "int h [ 200 ] [ 200 ] ;",
        "bool ok = l ;",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int h [ 200 ] [ 200 ] ;",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        1,
        9,
        8
      ],
      "mod_code": [
        "int h [ 200 ] [ 200 ] ;",
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int h [ 200 ] [ 200 ] ;",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200]’)"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        8
      ],
      "mod_code": [
        "bool ok = l ;",
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "bool ok = l ;",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < 60 ; j ++ )",
        "for ( i = 0 ; i < 29 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}