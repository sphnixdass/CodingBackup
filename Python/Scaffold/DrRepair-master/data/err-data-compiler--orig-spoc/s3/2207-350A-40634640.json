{
  "meta": {
    "index": 2207,
    "hitid": "3CIS7GGG65DKIHQOXISB1ODDVT4EUI",
    "workerid": "A1AYVATMT88U1W",
    "probid": "350A",
    "subid": "40634640"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m , mx , mn , mini , x be long integers with mx = 0 , mn = 999 , mini = 999",
      "code": "long long n , m , mx = 0 , mn = 999 , mini = 999 , x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n is decremented by 1",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "mn is equal to minimum of mn , x",
      "code": "mn = min ( mn , x ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "mx is equal to minimum of mx , x",
      "code": "mx = max ( mx , x ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while m is decremented by 1",
      "code": "while ( m -- )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "mini is equal to minimum of mini , x",
      "code": "mini = min ( mini , x ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "mx is equal to maximum of mx , 2 * mn",
      "code": "mx = max ( mx , 2 * mn ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if mini is greater than mx",
      "code": "if ( mini > mx )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print mx and newline",
      "code": "cout << mx << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print - 1 and newline",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "mn is min ( mn , x ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "mx = min ( mx ) , x ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(long long int&)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "mx = max ( mx , 2 ) * mn ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6,
        15
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx , x ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6,
        15,
        3
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx , x ) ;",
        "do",
        "while ( -- n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6,
        15,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx , x ) ;",
        "do",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx , x ) ;",
        "while ( -- n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx , x ) ;",
        "while ( -- n )",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx , x ) ;",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        15,
        6
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "do",
        "mx = min ( mx ) , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        15,
        6,
        3
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "do",
        "mx = min ( mx ) , x ;",
        "while ( -- n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        15,
        6,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "do",
        "mx = min ( mx ) , x ;",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        15,
        3
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "do",
        "while ( -- n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        15,
        3,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "do",
        "while ( -- n )",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        15,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "do",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx ) , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx ) , x ;",
        "while ( -- n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx ) , x ;",
        "while ( -- n )",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        6,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mx = min ( mx ) , x ;",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "while ( -- n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "while ( -- n )",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "long long n , m , mx = 0 , mn = 999 , mini = 999 , x , x ;",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "mx = min ( mx , x ) ;",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        3
      ],
      "mod_code": [
        "mx = min ( mx , x ) ;",
        "do",
        "while ( -- n )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        3,
        10
      ],
      "mod_code": [
        "mx = min ( mx , x ) ;",
        "do",
        "while ( -- n )",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        10
      ],
      "mod_code": [
        "mx = min ( mx , x ) ;",
        "do",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "do",
        "mx = min ( mx ) , x ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(long long int&)’"
    },
    {
      "mod_line": [
        15,
        6,
        3
      ],
      "mod_code": [
        "do",
        "mx = min ( mx ) , x ;",
        "while ( -- n )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(long long int&)’"
    },
    {
      "mod_line": [
        15,
        6,
        3,
        10
      ],
      "mod_code": [
        "do",
        "mx = min ( mx ) , x ;",
        "while ( -- n )",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(long long int&)’"
    },
    {
      "mod_line": [
        15,
        6,
        10
      ],
      "mod_code": [
        "do",
        "mx = min ( mx ) , x ;",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(long long int&)’"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "do",
        "while ( -- n )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        3,
        10
      ],
      "mod_code": [
        "do",
        "while ( -- n )",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "do",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "mx = min ( mx ) , x ;",
        "while ( -- n )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(long long int&)’"
    },
    {
      "mod_line": [
        6,
        3,
        10
      ],
      "mod_code": [
        "mx = min ( mx ) , x ;",
        "while ( -- n )",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(long long int&)’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "mx = min ( mx ) , x ;",
        "mini += min ( mini , x ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(long long int&)’"
    }
  ]
}