{
  "meta": {
    "index": 2670,
    "hitid": "3FI30CQHVKD193O3R9SIKATCPAG6BF",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "785A",
    "subid": "41977275"
  },
  "lines": [
    {
      "line": 0,
      "text": "v = int array of length 256",
      "code": "int v [ 256 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "set v at ' T ' = 4",
      "code": "v [ ' T ' ] = 4 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set v at ' C ' = 6",
      "code": "v [ ' C ' ] = 6 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set v at ' O ' = 8",
      "code": "v [ ' O ' ] = 8 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set v at ' D ' = 12",
      "code": "v [ ' D ' ] = 12 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set v at ' I ' = 20",
      "code": "v [ ' I ' ] = 20 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "n , res = 0 be ints",
      "code": "int n , res = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment res by v at s at 0",
      "code": "res += v [ s [ 0 ] ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "res += v [ s ] [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘int [256]’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 256 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "v [ ' C ' ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "v [ ' D ' = ' 12 ' = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' = 20 ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "res += v [ 0 ] [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        6,
        12
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' ;",
        "res += v [ s ] [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        4
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        6,
        4,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' ;",
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "res += v [ s ] [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        12,
        6
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' I ' = ' 20 ' = 20 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        12,
        6,
        4
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        12,
        6,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        12,
        4
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        12,
        4,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        12,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' = 20 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        6,
        4,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        4,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "v [ ' D ' = 12 = 12 ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' ;",
        "res += v [ s ] [ 0 ] ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        12,
        4
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        12,
        4,
        2
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        12,
        2
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' ;",
        "res += v [ s ] [ 0 ] ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' ;",
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "res += v [ s ] [ 0 ] ;",
        "v [ ' I ' = ' 20 ' = 20 ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        6,
        4
      ],
      "mod_code": [
        "res += v [ s ] [ 0 ] ;",
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        6,
        4,
        2
      ],
      "mod_code": [
        "res += v [ s ] [ 0 ] ;",
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        6,
        2
      ],
      "mod_code": [
        "res += v [ s ] [ 0 ] ;",
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "res += v [ s ] [ 0 ] ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        4,
        2
      ],
      "mod_code": [
        "res += v [ s ] [ 0 ] ;",
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "res += v [ s ] [ 0 ] ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘int [256]’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' O ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "v [ ' I ' = ' 20 ' = 20 ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "v [ ' O ' ;",
        "v [ ' T ' ] = ' 4 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘]’ before ‘;’ token"
    }
  ]
}