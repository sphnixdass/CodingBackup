{
  "meta": {
    "index": 2308,
    "hitid": "3MDKGGG61QH15PIKRVJ3K4ZYVHET6Q",
    "workerid": "A2M1CVZZJAN4T4",
    "probid": "696A",
    "subid": "41149044"
  },
  "lines": [
    {
      "line": 0,
      "text": "m = map from long long int to long long int",
      "code": "map < long long int , long long int > m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long integers q , p , u , v , w , ans",
      "code": "long long int q , p , u , v , w , ans ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read q",
      "code": "cin >> q ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to i = q exclusive",
      "code": "for ( int i = 0 ; i < q ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if p is equal to 1",
      "code": "if ( p == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read u , v and w",
      "code": "cin >> u >> v >> w ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "while u is not equal to v",
      "code": "while ( u != v )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if u is greater than v then swap u and v",
      "code": "if ( u > v ) swap ( u , v ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "set m [ v ] to m [ v ] + w",
      "code": "m [ v ] = m [ v ] + w ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "assign v / 2 to v",
      "code": "v = v / 2 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if p is equal to 2",
      "code": "else if ( p == 2 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "read u and v",
      "code": "cin >> u >> v ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "ans = 0",
      "code": "ans = 0 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "while u is not equal to v",
      "code": "while ( u != v )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if u is greater than v then swap u and v",
      "code": "if ( u > v ) swap ( u , v ) ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "ans = ans + m [ v ]",
      "code": "ans += m [ v ] ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "set v to v / 2",
      "code": "v = v / 2 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cout << cin >> q ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < q ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        16,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "else if ( p == 5 )",
        "while ( u != ' v ' )",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        7,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "else if ( p == 5 )",
        "cin >> u >> u >> w ;",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "else if ( p == 5 )",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        5,
        14
      ],
      "mod_code": [
        "int ans = 0 ;",
        "else if ( p == 5 )",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        7,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( u != ' v ' )",
        "cin >> u >> u >> w ;",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( u != ' v ' )",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        5,
        14
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( u != ' v ' )",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        7,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "cin >> u >> u >> w ;",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        7,
        5,
        14
      ],
      "mod_code": [
        "int ans = 0 ;",
        "cin >> u >> u >> w ;",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "int ans = 0 ;",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        5,
        14
      ],
      "mod_code": [
        "int ans = 0 ;",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        16,
        7,
        5
      ],
      "mod_code": [
        "else if ( p == 5 )",
        "while ( u != ' v ' )",
        "cin >> u >> u >> w ;",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        16,
        5
      ],
      "mod_code": [
        "else if ( p == 5 )",
        "while ( u != ' v ' )",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        16,
        5,
        14
      ],
      "mod_code": [
        "else if ( p == 5 )",
        "while ( u != ' v ' )",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        5
      ],
      "mod_code": [
        "else if ( p == 5 )",
        "cin >> u >> u >> w ;",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        5,
        14
      ],
      "mod_code": [
        "else if ( p == 5 )",
        "cin >> u >> u >> w ;",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "else if ( p == 5 )",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        14
      ],
      "mod_code": [
        "else if ( p == 5 )",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        7,
        5
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "cin >> u >> u >> w ;",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        7,
        5,
        14
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "cin >> u >> u >> w ;",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        14
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "cin >> u >> u >> w ;",
        "gets ( p ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5,
        14
      ],
      "mod_code": [
        "cin >> u >> u >> w ;",
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "gets ( p ) ;",
        "while ( cin >> u >> v )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    }
  ]
}