{
  "meta": {
    "index": 655,
    "hitid": "33NKDW9FFXCX2N056WX3V7CE3XVXCI",
    "workerid": "A1APYLD4DUK33J",
    "probid": "5A",
    "subid": "38351881"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer k with k = 0",
      "code": "int k = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer kk with kk = 0",
      "code": "int kk = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer kkk with kkk = 0",
      "code": "int kkk = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer count with count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while read line from cin to s",
      "code": "while ( getline ( cin , s ) )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if s [ 0 ] is ' + '",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if s [ 0 ] is ' - '",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "decrement count",
      "code": "count -- ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if s [ i ] is ' : ' , increment k",
      "code": "if ( s [ i ] == ' : ' ) k ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "if k is greater than 0 and s [ i ] is not ' : ' , increment kk",
      "code": "if ( k > 0 && s [ i ] != ' : ' ) kk ++ ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set kkk to kkk + kk * count",
      "code": "kkk = kkk + kk * count ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set kk to 0",
      "code": "kk = 0 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set k to 0",
      "code": "k = 0 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print kkk print newline",
      "code": "cout << kkk << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "while ( cin >> cin >> s )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘kkk’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        12
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        12,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "do",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        7,
        12,
        19
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "do",
        "int kk = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        12,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "do",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        7,
        8,
        19
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        7,
        8,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        7,
        19
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "int kk = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        19,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘kkk’"
    },
    {
      "mod_line": [
        10,
        12,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        12,
        8,
        19
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        12,
        8,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "if ( s [ 0 ] == \" + ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        12,
        19
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "int kk = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘kkk’"
    },
    {
      "mod_line": [
        10,
        12,
        19,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        10,
        12,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        8,
        19
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        8,
        19,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        8,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "if ( s [ 0 ] == \" + ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        12,
        8
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        12,
        8,
        19
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do",
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        12,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do",
        "if ( s [ 0 ] == \" + ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        12,
        19
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do",
        "int kk = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        12,
        19,
        1
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        12,
        1
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        8,
        19
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        8,
        19,
        1
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "int kk = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        19,
        1
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "do",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        8,
        19
      ],
      "mod_code": [
        "do",
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        8,
        19,
        1
      ],
      "mod_code": [
        "do",
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        8,
        1
      ],
      "mod_code": [
        "do",
        "if ( s [ 0 ] == \" + ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "do",
        "int kk = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘kkk’"
    },
    {
      "mod_line": [
        12,
        19,
        1
      ],
      "mod_code": [
        "do",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "do",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        1
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "int s ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "int kk = 0 ;",
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    }
  ]
}