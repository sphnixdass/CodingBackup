{
  "meta": {
    "index": 2260,
    "hitid": "3ZZAYRN1I6LRUVOORR5X14LPGH2TO9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "82A",
    "subid": "41745784"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n is a new integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and loop further",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare ints y , z , i and j",
      "code": "int y , z , i , j ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "for i = 1 to 32 exclusive incrementing i",
      "code": "for ( i = 1 ; i < 32 ; i ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if n < = ( ( 1 < < i ) - 1 ) * 5 , break",
      "code": "if ( n <= ( ( 1 << i ) - 1 ) * 5 ) break ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if i is equal to 0",
      "code": "if ( i == 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "assign n to z",
      "code": "z = n ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "decrease n by ( ( 1 < < ( i - 1 ) ) - 1 ) * 5",
      "code": "n -= ( ( 1 << ( i - 1 ) ) - 1 ) * 5 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "start for loop from j = 1 to 5 inclusive",
      "code": "for ( j = 1 ; j <= 5 ; j ++ )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if n < = ( 1 < < ( i - 1 ) ) * j , break",
      "code": "if ( n <= ( 1 << ( i - 1 ) ) * j ) break ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set z to j",
      "code": "z = j ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if z = 1",
      "code": "if ( z == 1 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" Sheldon \"",
      "code": "cout << \" Sheldon \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else if z is equal to 2",
      "code": "else if ( z == 2 )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print \" Leonard \" to the standard output",
      "code": "cout << \" Leonard \" << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else if z is equal to 3",
      "code": "else if ( z == 3 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print \" Penny \"",
      "code": "cout << \" Penny \" << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else if z is equal to 4",
      "code": "else if ( z == 4 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print \" Rajesh \" to the standard output",
      "code": "cout << \" Rajesh \" << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print \" Howard \" to the standard output",
      "code": "cout << \" Howard \" << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "z to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}