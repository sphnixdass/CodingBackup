{
  "meta": {
    "index": 2229,
    "hitid": "34HEO7RUG6OPCCHVDJVK0U023F1RAV",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "82A",
    "subid": "40992434"
  },
  "lines": [
    {
      "line": 0,
      "text": "n = long",
      "code": "long n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = array of 6 string",
      "code": "string a [ 6 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "num = 0",
      "code": "long num = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "cnt = 0",
      "code": "long cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "t = 0",
      "code": "long t = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for l = 0 to n exclusive",
      "code": "for ( long l = 0 ; l < n ; l ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if t < n",
      "code": "if ( t < n )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add pow ( 2 , l ) * 5 to t",
      "code": "t += pow ( 2 , l ) * 5 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "m = 0",
      "code": "long m = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "decrement cnt",
      "code": "cnt -- ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = 0 to cnt exclusive add pow ( 2 , j ) * 5 to m",
      "code": "for ( long j = 0 ; j < cnt ; j ++ ) { m += pow ( 2 , j ) * 5 ; }",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if cnt is 0",
      "code": "if ( cnt == 0 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "num = n - 1",
      "code": "num = n - 1 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if n - m > = i * pow ( 2 , cnt ) and n - m < ( i + 1 ) * pow ( 2 , cnt )",
      "code": "if ( ( n - m ) >= i * pow ( 2 , cnt ) && ( n - m ) < ( i + 1 ) * pow ( 2 , cnt ) )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "num = i",
      "code": "num = i ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "a [ 0 ] = \" Sheldon \"",
      "code": "a [ 0 ] = \" Sheldon \" ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "a [ 1 ] = \" Leonard \"",
      "code": "a [ 1 ] = \" Leonard \" ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "a [ 2 ] = \" Penny \"",
      "code": "a [ 2 ] = \" Penny \" ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "a [ 3 ] = \" Rajesh \"",
      "code": "a [ 3 ] = \" Rajesh \" ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "a [ 4 ] = \" Howard \"",
      "code": "a [ 4 ] = \" Howard \" ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print a [ num ]",
      "code": "cout << a [ num ] << endl ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "m = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "num = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cnt = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "t = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "t = pow ( pow ( 2 , l ) * 5 ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘pow(__gnu_cxx::__promote_2<int, long int, double, double>::__type)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < cnt ; j ++ ) { m += pow ( 2 , j ) * 5 ; }"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘a’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "a [ 0 ] = ' Sheldon \" ;"
      ],
      "err_line": 27,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "a [ 1 ] = ' Leonard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "a [ 2 ] = ' Penny \" ;"
      ],
      "err_line": 29,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator/=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [7]’)"
    },
    {
      "mod_line": [
        14,
        32
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        32,
        28
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        32,
        28,
        19
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;",
        "do"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        32,
        28,
        30
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        32,
        28,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        32,
        19
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        32,
        19,
        30
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "do",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        32,
        19,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "do",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        32,
        30
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        32,
        30,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        32,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "cout << a [ num ] ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 1 ] = ' Leonard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        28,
        19
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 1 ] = ' Leonard \" ;",
        "do"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        28,
        19,
        30
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 1 ] = ' Leonard \" ;",
        "do",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        28,
        19,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 1 ] = ' Leonard \" ;",
        "do",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        28,
        30
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        28,
        30,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        28,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "m = 0 ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        30
      ],
      "mod_code": [
        "m = 0 ;",
        "do",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        19,
        30,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "do",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        19,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "do",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        30
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        30,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        14,
        31
      ],
      "mod_code": [
        "m = 0 ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        28
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        28,
        19
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;",
        "do"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        28,
        19,
        30
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;",
        "do",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        28,
        19,
        31
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;",
        "do",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        28,
        30
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        28,
        30,
        31
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        28,
        31
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        19
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘a’"
    },
    {
      "mod_line": [
        32,
        19,
        30
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "do",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        19,
        30,
        31
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "do",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        19,
        31
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "do",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘a’"
    },
    {
      "mod_line": [
        32,
        30
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        30,
        31
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        32,
        31
      ],
      "mod_code": [
        "cout << a [ num ] ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator/=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [7]’)"
    },
    {
      "mod_line": [
        28,
        19
      ],
      "mod_code": [
        "a [ 1 ] = ' Leonard \" ;",
        "do"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        28,
        19,
        30
      ],
      "mod_code": [
        "a [ 1 ] = ' Leonard \" ;",
        "do",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        28,
        19,
        30,
        31
      ],
      "mod_code": [
        "a [ 1 ] = ' Leonard \" ;",
        "do",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        28,
        19,
        31
      ],
      "mod_code": [
        "a [ 1 ] = ' Leonard \" ;",
        "do",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        28,
        30
      ],
      "mod_code": [
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        28,
        30,
        31
      ],
      "mod_code": [
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        28,
        31
      ],
      "mod_code": [
        "a [ 1 ] = ' Leonard \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 28,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        30
      ],
      "mod_code": [
        "do",
        "a [ 3 ] = ' Rajesh \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        30,
        31
      ],
      "mod_code": [
        "do",
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        31
      ],
      "mod_code": [
        "do",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘a’"
    },
    {
      "mod_line": [
        30,
        31
      ],
      "mod_code": [
        "a [ 3 ] = ' Rajesh \" ;",
        "a [ 4 ] /= \" Howard \" ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    }
  ]
}