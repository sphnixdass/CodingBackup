{
  "meta": {
    "index": 949,
    "hitid": "3M0556243SEZT56BVS0V5B6JZYNFN6",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "557A",
    "subid": "40302001"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integers = n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while reading n do the following",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "integers = a [ 10 ] , s [ 10 ] , t = 0 , c",
      "code": "int a [ 10 ] , s [ 10 ] , t = 0 , c ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "for i = 1 to less than or equal to 3 do the following",
      "code": "for ( int i = 1 ; i <= 3 ; i ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read s [ i ] , a [ i ]",
      "code": "cin >> s [ i ] >> a [ i ] ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "t equals t plus s [ i ]",
      "code": "t += s [ i ] ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set c to n - t",
      "code": "c = n - t ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if c is less than or equal to a [ 1 ] - s [ 1 ] then do the following",
      "code": "if ( c <= a [ 1 ] - s [ 1 ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "output c + s [ 1 ] and s [ 2 ] and s [ 3 ]",
      "code": "cout << c + s [ 1 ] << \" \" << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "subtract a [ 1 ] - s [ 1 ] from c",
      "code": "c -= a [ 1 ] - s [ 1 ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if c is less than or equal to a [ 2 ] - s [ 2 ] then do the following",
      "code": "if ( c <= a [ 2 ] - s [ 2 ] )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "output a [ 1 ] and s [ 2 ] + c and s [ 3 ]",
      "code": "cout << a [ 1 ] << \" \" << s [ 2 ] + c << \" \" << s [ 3 ] << endl ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "subtract a [ 2 ] - s [ 2 ] from c",
      "code": "c -= a [ 2 ] - s [ 2 ] ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "output a [ 1 ] and a [ 2 ] and s [ 3 ] + c",
      "code": "cout << a [ 1 ] << \" \" << a [ 2 ] << \" \" << s [ 3 ] + c << endl ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘cin’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "while ( c <= a [ 2 ] - s [ 2 ] )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        15,
        5
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "cin >> s [ i ] , a [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        15,
        5,
        10
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "cin >> s [ i ] , a [ i ] ;",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        15,
        5,
        8
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "cin >> s [ i ] , a [ i ] ;",
        "c -= t ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        15,
        5,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "cin >> s [ i ] , a [ i ] ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        15,
        10
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        15,
        10,
        8
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "c -= t ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        15,
        10,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        15,
        8
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "c -= t ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        15,
        8,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "c -= t ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        15,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cin >> s [ i ] , a [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        5,
        10
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cin >> s [ i ] , a [ i ] ;",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        5,
        10,
        8
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cin >> s [ i ] , a [ i ] ;",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "c -= t ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        5,
        10,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cin >> s [ i ] , a [ i ] ;",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cin >> s [ i ] , a [ i ] ;",
        "c -= t ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        5,
        8,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cin >> s [ i ] , a [ i ] ;",
        "c -= t ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        5,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cin >> s [ i ] , a [ i ] ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        8
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "c -= t ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        8,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "c -= t ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "c -= t ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        8,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "c -= t ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "while ( c <= a [ 1 ] - s [ 1 ] )",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "do",
        "cin >> s [ i ] , a [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        5,
        10
      ],
      "mod_code": [
        "do",
        "cin >> s [ i ] , a [ i ] ;",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        5,
        10,
        8
      ],
      "mod_code": [
        "do",
        "cin >> s [ i ] , a [ i ] ;",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "c -= t ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        5,
        10,
        11
      ],
      "mod_code": [
        "do",
        "cin >> s [ i ] , a [ i ] ;",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        5,
        8
      ],
      "mod_code": [
        "do",
        "cin >> s [ i ] , a [ i ] ;",
        "c -= t ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        5,
        8,
        11
      ],
      "mod_code": [
        "do",
        "cin >> s [ i ] , a [ i ] ;",
        "c -= t ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        5,
        11
      ],
      "mod_code": [
        "do",
        "cin >> s [ i ] , a [ i ] ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "do",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        10,
        8
      ],
      "mod_code": [
        "do",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "c -= t ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        10,
        8,
        11
      ],
      "mod_code": [
        "do",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "c -= t ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        10,
        11
      ],
      "mod_code": [
        "do",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "do",
        "c -= t ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        8,
        11
      ],
      "mod_code": [
        "do",
        "c -= t ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        8,
        11
      ],
      "mod_code": [
        "cin >> s [ i ] , a [ i ] ;",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "c -= t ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        11
      ],
      "mod_code": [
        "cin >> s [ i ] , a [ i ] ;",
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        8,
        11
      ],
      "mod_code": [
        "cin >> s [ i ] , a [ i ] ;",
        "c -= t ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "cin >> s [ i ] , a [ i ] ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        8,
        11
      ],
      "mod_code": [
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "c -= t ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << c + s [ 1 ] << s [ 2 ] << \" \" << s [ 3 ] << endl ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "c -= t ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}