{
  "meta": {
    "index": 2812,
    "hitid": "3L60IFZKF3CRX5B6NKTI3CL0T1YHH4",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "454A",
    "subid": "47662354"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "Size = integer",
      "code": "int Size ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read Size",
      "code": "cin >> Size ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to ( Size / 2 )",
      "code": "for ( int i = 0 ; i <= ( Size / 2 ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to ( Size / 2 ) - i exclusive , print *",
      "code": "for ( int j = 0 ; j < ( Size / 2 ) - i ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for k = 0 to ( i * 2 ) + 1 exclusive , print D",
      "code": "for ( int k = 0 ; k < ( i * 2 ) + 1 ; k ++ ) cout << \" D \" ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 0 to ( Size / 2 ) - i exclusive , print *",
      "code": "for ( int j = 0 ; j < ( Size / 2 ) - i ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = Size / 2 - 1 down to 0",
      "code": "for ( int i = Size / 2 - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to ( Size / 2 ) - i exclusive , print *",
      "code": "for ( int j = 0 ; j < ( Size / 2 ) - i ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for k = 0 to ( i * 2 ) + 1 , print D",
      "code": "for ( int k = 0 ; k < ( i * 2 ) + 1 ; k ++ ) cout << \" D \" ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for j = 0 to ( Size / 2 ) - i exclusive , print *",
      "code": "for ( int j = 0 ; j < ( Size / 2 ) - i ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( Size ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; i ++ )",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) { cout << \" * \" ; }",
        "gets ( Size ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; i ++ )",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) { cout << \" * \" ; }",
        "gets ( Size ) ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; i ++ )",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) { cout << \" * \" ; }",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; i ++ )",
        "gets ( Size ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; i ++ )",
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) cout << \" * \" ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; i ++ )",
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) cout << \" * \" ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; i ++ )",
        "gets ( Size ) ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; i ++ )",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) cout << \" * \" ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; i ++ )",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) { cout << \" * \" ; }",
        "gets ( Size ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) { cout << \" * \" ; }",
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) ; ++ i )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) { cout << \" * \" ; }",
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) ; ++ i )",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) { cout << \" * \" ; }",
        "gets ( Size ) ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) { cout << \" * \" ; }",
        "for ( int i = 0 ; i < ( Size / 2 ) ; ++ i )",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) { cout << \" * \" ; }",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) ; ++ i )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        10
      ],
      "mod_code": [
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) ; ++ i )",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) cout << \" * \" ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        10,
        9
      ],
      "mod_code": [
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) ; ++ i )",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) cout << \" * \" ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) ; ++ i )",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) cout << \" * \" ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        9
      ],
      "mod_code": [
        "gets ( Size ) ;",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) cout << \" * \" ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "gets ( Size ) ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; ++ i )",
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) cout << \" * \" ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) ; ++ i )",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ( Size / 2 ) - i ; i ++ ) cout << \" * \" ;",
        "for ( i = Size / 2 - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}