{
  "meta": {
    "index": 1370,
    "hitid": "3FSEU3P2NRUHBT3CFUH6VKPC2WTRRW",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "96A",
    "subid": "42328026"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "i = int , cnt = 0",
      "code": "int i , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "c is char",
      "code": "char c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "str is string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str",
      "code": "getline ( cin , str ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "c = first char in str",
      "code": "c = str [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to size of str , exclusive",
      "code": "for ( i = 0 ; i < str . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if c is str [ i ]",
      "code": "if ( c == str [ i ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if cnt > = 7 break",
      "code": "if ( cnt >= 7 ) { break ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "cnt = 1",
      "code": "cnt = 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "c = str [ i ]",
      "code": "c = str [ i ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if cnt < 7",
      "code": "if ( cnt < 7 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char c = str . first ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘char c’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char c ="
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char c = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘char c’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( ! c [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "char c = str . first ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘char c’"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "char c = str . first ;",
        "if ( ! c [ i ] )",
        "string s ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        3,
        2
      ],
      "mod_code": [
        "char c = str . first ;",
        "if ( ! c [ i ] )",
        "string s ;",
        "char c ="
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        5,
        7,
        3,
        1
      ],
      "mod_code": [
        "char c = str . first ;",
        "if ( ! c [ i ] )",
        "string s ;",
        "int i = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "char c = str . first ;",
        "if ( ! c [ i ] )",
        "char c ="
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        1
      ],
      "mod_code": [
        "char c = str . first ;",
        "if ( ! c [ i ] )",
        "char c =",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        5,
        7,
        1
      ],
      "mod_code": [
        "char c = str . first ;",
        "if ( ! c [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘char c’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "char c = str . first ;",
        "string s ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "char c = str . first ;",
        "string s ;",
        "char c ="
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        5,
        3,
        2,
        1
      ],
      "mod_code": [
        "char c = str . first ;",
        "string s ;",
        "char c =",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "char c = str . first ;",
        "string s ;",
        "int i = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "char c = str . first ;",
        "char c ="
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        5,
        2,
        1
      ],
      "mod_code": [
        "char c = str . first ;",
        "char c =",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "char c = str . first ;",
        "int i = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘char c’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "string s ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "string s ;",
        "char c ="
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        5
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "string s ;",
        "char c =",
        "char c = str . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        1
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "string s ;",
        "char c =",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        7,
        3,
        5
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "string s ;",
        "char c = str . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        5,
        1
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "string s ;",
        "char c = str . size ( ) ;",
        "int i = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        1
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "string s ;",
        "int i = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "char c ="
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "char c =",
        "char c = str . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        7,
        2,
        5,
        1
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "char c =",
        "char c = str . size ( ) ;",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        7,
        2,
        1
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "char c =",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "char c = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘char c’"
    },
    {
      "mod_line": [
        7,
        5,
        1
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "char c = str . size ( ) ;",
        "int i = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘char c’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( ! c [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "string s ;",
        "char c ="
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "string s ;",
        "char c =",
        "char c = str . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        1
      ],
      "mod_code": [
        "string s ;",
        "char c =",
        "char c = str . size ( ) ;",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "string s ;",
        "char c =",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘s’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "string s ;",
        "char c = str . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "string s ;",
        "char c = str . size ( ) ;",
        "int i = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "string s ;",
        "int i = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char c =",
        "char c = str . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "char c =",
        "char c = str . size ( ) ;",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "char c =",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘str’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "char c = str . size ( ) ;",
        "int i = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘char c’"
    }
  ]
}