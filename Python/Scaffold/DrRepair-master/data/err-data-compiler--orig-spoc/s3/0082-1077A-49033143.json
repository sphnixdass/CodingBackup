{
  "meta": {
    "index": 82,
    "hitid": "3WPCIUYH1A20QYXZ1IRHQA9QC3ZTDG",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1077A",
    "subid": "49033143"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integerss t , n , m , i , j , ans , k , a , b , c , d , e , sz , q and x",
      "code": "int t , n , m , i , j , ans , k , a , b , c , d , e , sz , q , x ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare strings s , s2 , s3 , s4 , s5 and s6",
      "code": "string s , s2 , s3 , s4 , s5 , s6 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "ar is a new array of long long integers with 1e6 + 10 elements",
      "code": "long long int ar [ ( int ) ( 1e6 + 10 ) ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "pq is new priority queue of long long integers",
      "code": "priority_queue < long long int > pq ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "brainfuck is an empty void function",
      "code": "void brainfuck ( ) ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "call brainfuck ( )",
      "code": "brainfuck ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "void function brainfuck",
      "code": "void brainfuck ( )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare long long ints x , y , z and w",
      "code": "long long int x , y , z , w ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read standard input to q",
      "code": "cin >> q ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "loop , decrementing q , while it is not 0",
      "code": "while ( q -- )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read x , y and z from the user input",
      "code": "cin >> x >> y >> z ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if z & 1 ! = 0",
      "code": "if ( z & 1 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "assign x * ( z / 2 + 1 ) to w",
      "code": "w = x * ( z / 2 + 1 ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "decrease w by y * ( z / 2 )",
      "code": "w -= y * ( z / 2 ) ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "assign the new value = x * ( z / 2 ) to w",
      "code": "w = x * ( z / 2 ) ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "decrease w by y * ( z / 2 )",
      "code": "w -= y * ( z / 2 ) ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print w and \" \\ n \"",
      "code": "cout << w << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "void brainfuck ( )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , c , d , e , e , q , x ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , s2 , s4 , s4 , s5 , s6 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘std::__cxx11::string s4’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long ar [ 1e6 + 10 ] ;"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "void brainfuck ( ) { }"
      ],
      "err_line": 9,
      "err_msg": "redefinition of ‘void brainfuck()’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "void brainfuck ( )"
      ],
      "err_line": 7,
      "err_msg": "a function-definition is not allowed here before ‘return’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "void brainfuck ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cin >> q )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "w = x * ( long z / 2 ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        2,
        4
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        6
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "void brainfuck ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        2,
        6
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        4
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "void brainfuck ( ) { }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        2,
        4
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( ) { }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( ) { }",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        2,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "long long int ar [ 1e6 + 10 ] ;",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        4,
        6
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( )",
        "void brainfuck ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        4,
        6,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( )",
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        4,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        6,
        4
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( )",
        "void brainfuck ( ) { }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        6,
        4,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( )",
        "void brainfuck ( ) { }",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        6,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( ) { }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        4,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "void brainfuck ( ) { }",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int t , n , m , i , j , ans , k , b , b , d , d , e , e , q , x ;",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "void brainfuck ( )"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        13
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        4,
        13
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        6,
        4
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "void brainfuck ( ) { }"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        6,
        4,
        13
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "void brainfuck ( ) { }",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        6,
        13
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( ) { }"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        4,
        13
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "void brainfuck ( ) { }",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "long long int ar [ 1e6 + 10 ] ;",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 2,
      "err_msg": "size of array ‘ar’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "void brainfuck ( )",
        "void brainfuck ( )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "void brainfuck ( )",
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "void brainfuck ( )",
        "void brainfuck ( ) { }"
      ],
      "err_line": 7,
      "err_msg": "a function-definition is not allowed here before ‘return’"
    },
    {
      "mod_line": [
        6,
        4,
        13
      ],
      "mod_code": [
        "void brainfuck ( )",
        "void brainfuck ( ) { }",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 7,
      "err_msg": "a function-definition is not allowed here before ‘return’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "void brainfuck ( )",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 7,
      "err_msg": "a function-definition is not allowed here before ‘return’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "void brainfuck ( ) { }",
        "cin >> x >> x >> z ;"
      ],
      "err_line": 9,
      "err_msg": "redefinition of ‘void brainfuck()’"
    }
  ]
}