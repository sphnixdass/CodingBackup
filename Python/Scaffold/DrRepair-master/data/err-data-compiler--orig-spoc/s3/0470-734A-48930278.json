{
  "meta": {
    "index": 470,
    "hitid": "3M0556243SEZT56BVS0V5B6JYBUNFA",
    "workerid": "A1AYVATMT88U1W",
    "probid": "734A",
    "subid": "48930278"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer = n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while is function of read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "string = s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "integer = num value is 0",
      "code": "int num = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to string lenght ( ) then increment i value",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ i ] is equal to ' A ' then increment num value",
      "code": "if ( s [ i ] == ' A ' ) num ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if n is subtracting with num and num is greather than num",
      "code": "if ( n - num > num )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print Danik",
      "code": "cout << \" Danik \" << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "or n is subtracting with num and num is less than num",
      "code": "else if ( n - num < num )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print Anton",
      "code": "cout << \" Anton \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print Friendship",
      "code": "cout << \" Friendship \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << Danik << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n |= num ( num , num ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘num’ cannot be used as a function"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << Anton << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( read ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s = s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int value = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << Danik ;"
      ],
      "err_line": 9,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << Anton ;"
      ],
      "err_line": 11,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "return else ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "if ( n != num || num > num )"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "if ( n != num || num > num )",
        "cout << Danik << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        10
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "if ( n != num || num > num )",
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        11
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "if ( n != num || num > num )",
        "cout << Danik << endl ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "if ( n != num || num > num )",
        "n |= num ( num , num ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        11
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "if ( n != num || num > num )",
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "if ( n != num || num > num )",
        "cout << Anton << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "cout << Danik << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        11
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "cout << Danik << endl ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "n |= num ( num , num ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( string i = 0 ; i < lenght ; i ++ )",
        "cout << Anton << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lenght’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "cout << Danik << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        11
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        6
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        11
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "cout << Danik << endl ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        6
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "cout << Danik << endl ;",
        "cout << Anton << endl ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "cout << Danik << endl ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "n |= num ( num , num ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘num’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘num’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        6
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "n |= num ( num , num ) ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "cout << Anton << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        6
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "cout << Anton << endl ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( n != num || num > num )",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        6
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        6
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "n |= num ( num , num ) ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        6
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "cout << Anton << endl ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘num’ cannot be used as a function"
    },
    {
      "mod_line": [
        10,
        11,
        6
      ],
      "mod_code": [
        "n |= num ( num , num ) ;",
        "cout << Anton << endl ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "n |= num ( num , num ) ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "for ( string i = 0 ; i < string ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    }
  ]
}