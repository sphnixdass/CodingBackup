{
  "meta": {
    "index": 2394,
    "hitid": "3J9UN9O9J3MCDB00DCPI9X2YJPYJ0W",
    "workerid": "A1APYLD4DUK33J",
    "probid": "472A",
    "subid": "48604499"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare isComposite with integer n as argument , returning boolean",
      "code": "bool isComposite ( int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if n is less than or equal to 1 , return false from function",
      "code": "if ( n <= 1 ) return false ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if n is less than or equal to 3 , return false from function",
      "code": "if ( n <= 3 ) return false ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n % 2 is 0 or n % 3 is 0 , return true from function",
      "code": "if ( n % 2 == 0 || n % 3 == 0 ) return true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 5 to i * i is less than or equal to n , incrementing i by i + 6",
      "code": "for ( int i = 5 ; i * i <= n ; i = i + 6 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if n % i is 0 or n % ( i + 2 ) is 0 , return true from function",
      "code": "if ( n % i == 0 || n % ( i + 2 ) == 0 ) return true ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "return false from function",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 9,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 2 to n exclusive",
      "code": "for ( int i = 2 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 2 to n exclusive",
      "code": "for ( int j = 2 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if ( result of run isComposite with i as argument and result of run isComposite with j as argument ) and i + j is n",
      "code": "if ( ( isComposite ( i ) && isComposite ( j ) ) && i + j == n )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print i print \" \" print j print newline",
      "code": "cout << i << \" \" << j << endl ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= n ; i += i + 6 )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 10,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        6,
        10
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "else",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        6,
        10,
        4
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "else",
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        10,
        14
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "else",
        "cin >> N ;",
        "cout << i << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        6,
        4
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "else",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        4,
        14
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "else",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        14
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "else",
        "cout << i << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "cin >> N ;"
      ],
      "err_line": 10,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        4
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        4,
        14
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        14
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "cin >> N ;",
        "cout << i << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        14
      ],
      "mod_code": [
        "if ( isComposite ( i ) && isComposite ( j ) , i + j == n )",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "else",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        10,
        4
      ],
      "mod_code": [
        "else",
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        4,
        14
      ],
      "mod_code": [
        "else",
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        4,
        13
      ],
      "mod_code": [
        "else",
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        14
      ],
      "mod_code": [
        "else",
        "cin >> N ;",
        "cout << i << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        13
      ],
      "mod_code": [
        "else",
        "cin >> N ;",
        "cout << i << \" \" ;",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        10,
        13
      ],
      "mod_code": [
        "else",
        "cin >> N ;",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "else",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        14
      ],
      "mod_code": [
        "else",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        14,
        13
      ],
      "mod_code": [
        "else",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        13
      ],
      "mod_code": [
        "else",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "else",
        "cout << i << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        14,
        13
      ],
      "mod_code": [
        "else",
        "cout << i << \" \" ;",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "else",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        14
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        14,
        13
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        13
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "cin >> N ;",
        "cout << i << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14,
        13
      ],
      "mod_code": [
        "cin >> N ;",
        "cout << i << \" \" ;",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 10,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 10,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        13
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "cout << i << \" \" ;",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= n ; i += i + 6 )",
        "if ( isComposite ( i ) == isComposite ( j ) && i + j == n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}