{
  "meta": {
    "index": 1575,
    "hitid": "3Q9SPIIRWJGUK8YHCD5QNT8JVUJWA6",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "1080A",
    "subid": "48976736"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , a , b , c , x , y , z , s = integers",
      "code": "int n , k , a , b , c , x , y , z , s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set a to n * 2",
      "code": "a = ( n * 2 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set b to n * 5",
      "code": "b = ( n * 5 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set c to n * 8",
      "code": "c = ( n * 8 ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a is less than k",
      "code": "if ( a < k )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set x to 1",
      "code": "x = 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if a modulo k is 0",
      "code": "if ( a % k == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set x to a / k",
      "code": "x = ( a / k ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set x to ( a / k ) + 1",
      "code": "x = ( a / k ) + 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if b is less than k",
      "code": "if ( b < k )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set y to 1",
      "code": "y = 1 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if b modulo k is 0",
      "code": "if ( b % k == 0 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set y to b / k",
      "code": "y = ( b / k ) ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set y to ( b / k ) + 1",
      "code": "y = ( b / k ) + 1 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if c is less than k",
      "code": "if ( c < k )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "set z to 1",
      "code": "z = 1 ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if c modulo k is 0",
      "code": "if ( c % k == 0 )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set z to c / k",
      "code": "z = ( c / k ) ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 30,
      "text": "set z to ( c / k ) + 1",
      "code": "z = ( c / k ) + 1 ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "set s to x + y + z",
      "code": "s = x + y + z ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "print s and a new line",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "x to 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 33,
      "err_msg": "expected ‘while’ before ‘s’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "z = ( long c / k ) + 1 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        21
      ],
      "mod_code": [
        "b *= 5 ;",
        "x /= k ;",
        "y /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "x /= k ;",
        "y /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        10,
        28,
        21
      ],
      "mod_code": [
        "b *= 5 ;",
        "x /= k ;",
        "z /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        10,
        28,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "x /= k ;",
        "z /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        10,
        21
      ],
      "mod_code": [
        "b *= 5 ;",
        "x /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        10,
        21,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "x /= k ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        10,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "x /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        19,
        28,
        21
      ],
      "mod_code": [
        "b *= 5 ;",
        "y /= k ;",
        "z /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        19,
        28,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "y /= k ;",
        "z /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        19,
        21
      ],
      "mod_code": [
        "b *= 5 ;",
        "y /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        19,
        21,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "y /= k ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        19,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "y /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        28,
        21
      ],
      "mod_code": [
        "b *= 5 ;",
        "z /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        28,
        21,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "z /= k ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        28,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "z /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "b *= 5 ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        21,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "b *= 5 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        10,
        19,
        28,
        21
      ],
      "mod_code": [
        "x /= k ;",
        "y /= k ;",
        "z /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        19,
        28,
        8
      ],
      "mod_code": [
        "x /= k ;",
        "y /= k ;",
        "z /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        10,
        19,
        21
      ],
      "mod_code": [
        "x /= k ;",
        "y /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        19,
        21,
        8
      ],
      "mod_code": [
        "x /= k ;",
        "y /= k ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        10,
        19,
        8
      ],
      "mod_code": [
        "x /= k ;",
        "y /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        10,
        28,
        21
      ],
      "mod_code": [
        "x /= k ;",
        "z /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        28,
        21,
        8
      ],
      "mod_code": [
        "x /= k ;",
        "z /= k ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        10,
        28,
        8
      ],
      "mod_code": [
        "x /= k ;",
        "z /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        10,
        21
      ],
      "mod_code": [
        "x /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        21,
        8
      ],
      "mod_code": [
        "x /= k ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "x /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        19,
        28,
        21
      ],
      "mod_code": [
        "y /= k ;",
        "z /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        19,
        28,
        21,
        8
      ],
      "mod_code": [
        "y /= k ;",
        "z /= k ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        19,
        28,
        8
      ],
      "mod_code": [
        "y /= k ;",
        "z /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "y /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        19,
        21,
        8
      ],
      "mod_code": [
        "y /= k ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "y /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        28,
        21
      ],
      "mod_code": [
        "z /= k ;",
        "y = ( long b / k ) + 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        28,
        21,
        8
      ],
      "mod_code": [
        "z /= k ;",
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        28,
        8
      ],
      "mod_code": [
        "z /= k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        21,
        8
      ],
      "mod_code": [
        "y = ( long b / k ) + 1 ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    }
  ]
}