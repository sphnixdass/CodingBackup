{
  "meta": {
    "index": 2823,
    "hitid": "3OID399FXG1Q7TFY6YMS96UPLUSFDV",
    "workerid": "A1HC0MVEW0VTB7",
    "probid": "454A",
    "subid": "47340278"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n be int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "get value of n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "int m = ( n + 1 ) / 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 1 to n inclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if i less than m",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if i less than m",
      "code": "if ( i < m )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if j is between m - i and m + i inclusive",
      "code": "if ( j >= m - i and j <= m + i )",
      "indent": 4
    },
    {
      "line": 8,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 5
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 10,
      "text": "print \" * \"",
      "code": "cout << \" * \" ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if j greater than ( i + 1 ) modulo m and j less than n - ( i modulo m )",
      "code": "if ( j > ( i + 1 ) % m and j < n - ( i % m ) )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 16,
      "text": "print \" * \"",
      "code": "cout << \" * \" ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( i < m )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 6,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else if ( i < m )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else if ( i < m )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" * \""
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << \" * \""
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( j < m - i && m + i <= m )"
      ],
      "err_line": 6,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int j = 1 ; j <= n ; j ++ )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( i < m )"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( i < m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( j < m - i && m + i <= m )"
      ],
      "err_line": 6,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        2
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        2
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        2,
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )",
        "gets ( n ) ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( i < m )",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( j < m - i && m + i <= m )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "if ( j < m - i && m + i <= m )",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 6,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "gets ( n ) ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ )",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 6,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        3
      ],
      "mod_code": [
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "if ( i < m )",
        "if ( j < m - i && m + i <= m )",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( i < m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "if ( i < m )",
        "gets ( n ) ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( i < m )",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "if ( j < m - i && m + i <= m )",
        "gets ( n ) ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( j < m - i && m + i <= m )",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 6,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "gets ( n ) ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}