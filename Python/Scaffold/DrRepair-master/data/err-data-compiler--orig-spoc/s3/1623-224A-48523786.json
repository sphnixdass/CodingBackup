{
  "meta": {
    "index": 1623,
    "hitid": "3EHIMLB7F7TY4UADKGZCQZS1QI48HC",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "224A",
    "subid": "48523786"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "lb , bh , hl , l , b , h = int",
      "code": "int lb , bh , hl , l , b , h ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read lb , bh , hl",
      "code": "cin >> lb >> bh >> hl ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "b = sqrt ( lb * bh / hl )",
      "code": "b = ( int ) sqrt ( lb * bh / hl ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "l = lb / b",
      "code": "l = lb / b ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "h = hl / l",
      "code": "h = hl / l ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print 4 * ( l + b + h )",
      "code": "cout << 4 * ( l + b + h ) << endl ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int lb , bh , hl , b , b , h ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int b = sqrt ( lb * bh / hl ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int l = lb / b ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int b = sqrt ( lb * bh / hl ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int b = sqrt ( lb * bh / hl ) ;",
        "int lb , bh , hl , b , b , h ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        3,
        1,
        5
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int b = sqrt ( lb * bh / hl ) ;",
        "int lb , bh , hl , b , b , h ;",
        "h /= l ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        3,
        1,
        4
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int b = sqrt ( lb * bh / hl ) ;",
        "int lb , bh , hl , b , b , h ;",
        "int l = lb / b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int b = sqrt ( lb * bh / hl ) ;",
        "h /= l ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        4
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int b = sqrt ( lb * bh / hl ) ;",
        "h /= l ;",
        "int l = lb / b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int b = sqrt ( lb * bh / hl ) ;",
        "int l = lb / b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int lb , bh , hl , b , b , h ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int lb , bh , hl , b , b , h ;",
        "h /= l ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        1,
        5,
        4
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int lb , bh , hl , b , b , h ;",
        "h /= l ;",
        "int l = lb / b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        1,
        4
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int lb , bh , hl , b , b , h ;",
        "int l = lb / b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        5,
        4
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "h /= l ;",
        "int l = lb / b ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "cin >> lb >> lb >> hl ;",
        "int l = lb / b ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int b = sqrt ( lb * bh / hl ) ;",
        "int lb , bh , hl , b , b , h ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "int b = sqrt ( lb * bh / hl ) ;",
        "int lb , bh , hl , b , b , h ;",
        "h /= l ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        1,
        5,
        4
      ],
      "mod_code": [
        "int b = sqrt ( lb * bh / hl ) ;",
        "int lb , bh , hl , b , b , h ;",
        "h /= l ;",
        "int l = lb / b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        1,
        4
      ],
      "mod_code": [
        "int b = sqrt ( lb * bh / hl ) ;",
        "int lb , bh , hl , b , b , h ;",
        "int l = lb / b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int b = sqrt ( lb * bh / hl ) ;",
        "h /= l ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "int b = sqrt ( lb * bh / hl ) ;",
        "h /= l ;",
        "int l = lb / b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int b = sqrt ( lb * bh / hl ) ;",
        "int l = lb / b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int lb , bh , hl , b , b , h ;",
        "h /= l ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "int lb , bh , hl , b , b , h ;",
        "h /= l ;",
        "int l = lb / b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int lb , bh , hl , b , b , h ;",
        "int l = lb / b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "h /= l ;",
        "int l = lb / b ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int l’"
    }
  ]
}