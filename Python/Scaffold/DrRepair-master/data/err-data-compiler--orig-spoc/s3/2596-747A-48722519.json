{
  "meta": {
    "index": 2596,
    "hitid": "3ZLW647WALP8O71PPE19CEEOLDY230",
    "workerid": "AIWEXPJAU66D9",
    "probid": "747A",
    "subid": "48722519"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints d , a , b and c where c = 1",
      "code": "int d , a , b , c = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a from the user input",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "in a for loop , change count from 1 to a inclusive , incrementing by 1",
      "code": "for ( int count = 1 ; count <= a ; ++ count )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer b = a / count",
      "code": "int b = a / count ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if b > = count",
      "code": "if ( b >= count )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a modulo count is 0 , assign the new value = max of count and c to d",
      "code": "if ( ! ( a % count ) ) { d = max ( count , c ) ; }",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print d , \" \" and a / d",
      "code": "cout << d << \" \" << a / d << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int d , a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> a ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( count = 1 ; count <= a ; count ++ )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else if ( b >= count )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int d , a , b , c , c ;",
        "else if ( b >= count )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "int d , a , b , c , c ;",
        "else if ( b >= count )",
        "{ cin >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        5,
        2,
        3
      ],
      "mod_code": [
        "int d , a , b , c , c ;",
        "else if ( b >= count )",
        "{ cin >> a ;",
        "for ( count = 1 ; count <= a ; count ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        5,
        3
      ],
      "mod_code": [
        "int d , a , b , c , c ;",
        "else if ( b >= count )",
        "for ( count = 1 ; count <= a ; count ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int d , a , b , c , c ;",
        "{ cin >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int d , a , b , c , c ;",
        "{ cin >> a ;",
        "for ( count = 1 ; count <= a ; count ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int d , a , b , c , c ;",
        "for ( count = 1 ; count <= a ; count ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "else if ( b >= count )",
        "{ cin >> a ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "else if ( b >= count )",
        "{ cin >> a ;",
        "for ( count = 1 ; count <= a ; count ++ )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "else if ( b >= count )",
        "for ( count = 1 ; count <= a ; count ++ )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "{ cin >> a ;",
        "for ( count = 1 ; count <= a ; count ++ )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    }
  ]
}