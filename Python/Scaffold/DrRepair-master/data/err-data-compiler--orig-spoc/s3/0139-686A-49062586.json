{
  "meta": {
    "index": 139,
    "hitid": "38O9DZ0A62H7LQO78GZ7JHQ8V4062A",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "686A",
    "subid": "49062586"
  },
  "lines": [
    {
      "line": 0,
      "text": "N = 100010",
      "code": "const int N = 1e5 + 100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "PI = 3 . 14159",
      "code": "const double PI = 3.14159 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "v = vector of bool",
      "code": "vector < bool > v ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n , x , a , x = long long",
      "code": "long long n , x , a , z ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "st = set of int",
      "code": "set < int > st ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "read n , x",
      "code": "cin >> n >> x ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "c = char",
      "code": "char c ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read c and a",
      "code": "cin >> c >> a ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if c is ' + '",
      "code": "if ( c == ' + ' )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "add a to x",
      "code": "x += a ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if a > x",
      "code": "if ( a > x )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increment z",
      "code": "z ++ ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "continue",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "subtract a from x",
      "code": "x -= a ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print x , space , z",
      "code": "cout << x << \" \" << z << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long n , x , a , x ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long int n , x , a , x ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "if ( ! c + ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        11,
        9
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "if ( ! c + ' + ' )",
        "bool c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        11,
        9,
        16
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "if ( ! c + ' + ' )",
        "bool c ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        11,
        9,
        13
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "if ( ! c + ' + ' )",
        "bool c ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        11,
        16
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "if ( ! c + ' + ' )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        11,
        16,
        13
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "if ( ! c + ' + ' )",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        11,
        13
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "if ( ! c + ' + ' )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "bool c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        9,
        16
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "bool c ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        13
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "bool c ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "bool c ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        16,
        13
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "long long n , x , a , x ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "long long int n , x , a , x ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        11,
        3,
        9
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "long long int n , x , a , x ;",
        "bool c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        11,
        3,
        9,
        16
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "long long int n , x , a , x ;",
        "bool c ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        11,
        3,
        9,
        13
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "long long int n , x , a , x ;",
        "bool c ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        11,
        3,
        16
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "long long int n , x , a , x ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        11,
        3,
        16,
        13
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "long long int n , x , a , x ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        11,
        3,
        13
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "long long int n , x , a , x ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        11,
        9,
        16
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "bool c ;",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        9,
        16,
        13
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "bool c ;",
        "do",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        9,
        13
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "bool c ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        16,
        13
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "do",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( ! c + ' + ' )",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "long long int n , x , a , x ;",
        "bool c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        9,
        16
      ],
      "mod_code": [
        "long long int n , x , a , x ;",
        "bool c ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        13
      ],
      "mod_code": [
        "long long int n , x , a , x ;",
        "bool c ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "long long int n , x , a , x ;",
        "bool c ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "long long int n , x , a , x ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        16,
        13
      ],
      "mod_code": [
        "long long int n , x , a , x ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "long long int n , x , a , x ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "bool c ;",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        16,
        13
      ],
      "mod_code": [
        "bool c ;",
        "do",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "bool c ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}