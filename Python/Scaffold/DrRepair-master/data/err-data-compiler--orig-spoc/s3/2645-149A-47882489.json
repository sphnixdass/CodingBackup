{
  "meta": {
    "index": 2645,
    "hitid": "3SZYX62S5GUIONLZ996XN2TGAPB579",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "149A",
    "subid": "47882489"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = array of 13 int , i , j , n = int , k and sum = 0",
      "code": "int a [ 13 ] , i , j , n , k = 0 , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 12 exclusive read a [ i ]",
      "code": "for ( i = 0 ; i < 12 ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n is 0",
      "code": "if ( n == 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print 0",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sort a",
      "code": "sort ( a , a + 12 ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for j = 11 down to 0 inclusive",
      "code": "for ( j = 11 ; j >= 0 ; j -- )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add a [ j ] to sum",
      "code": "sum = sum + a [ j ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if sum > = n",
      "code": "if ( sum >= n )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "print k",
      "code": "cout << k << endl ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if k is 12 print - 1",
      "code": "if ( k == 12 ) { cout << \" -1 \" << endl ; }",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 13 ] , i , i , j , k , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( sum >= n )"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "sort ( a , a + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        7,
        13
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "sort ( a , a + n ) ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        7,
        13,
        11
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "sort ( a , a + n ) ;",
        "do",
        "else if ( sum >= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        7,
        13,
        12
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "sort ( a , a + n ) ;",
        "do",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        7,
        11
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "sort ( a , a + n ) ;",
        "else if ( sum >= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        7,
        11,
        12
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "sort ( a , a + n ) ;",
        "else if ( sum >= n )",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        7,
        12
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "sort ( a , a + n ) ;",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        11
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "do",
        "else if ( sum >= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        11,
        12
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "do",
        "else if ( sum >= n )",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        11,
        7
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "do",
        "else if ( sum >= n )",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        12
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "do",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        12,
        7
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "do",
        "cout << k ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        7
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "do",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "else if ( sum >= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        11,
        12
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "else if ( sum >= n )",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        7
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "else if ( sum >= n )",
        "cout << k ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        11,
        7
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "else if ( sum >= n )",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "cout << k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        12,
        7
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "cout << k ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int a [ 13 ] , i , j , j , k , sum = 0 ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        13,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "do",
        "else if ( sum >= n )"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        13,
        11,
        12
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "do",
        "else if ( sum >= n )",
        "cout << k ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        13,
        12
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "do",
        "cout << k ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "else if ( sum >= n )"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        11,
        12
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "else if ( sum >= n )",
        "cout << k ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "do",
        "else if ( sum >= n )"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        11,
        12
      ],
      "mod_code": [
        "do",
        "else if ( sum >= n )",
        "cout << k ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        11,
        12,
        7
      ],
      "mod_code": [
        "do",
        "else if ( sum >= n )",
        "cout << k ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        11,
        7
      ],
      "mod_code": [
        "do",
        "else if ( sum >= n )",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "do",
        "cout << k ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        12,
        7
      ],
      "mod_code": [
        "do",
        "cout << k ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "do",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "else if ( sum >= n )",
        "cout << k ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        12,
        7
      ],
      "mod_code": [
        "else if ( sum >= n )",
        "cout << k ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "else if ( sum >= n )",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}