{
  "meta": {
    "index": 2171,
    "hitid": "3EQPA8A374Q9FW6QH62AFW5K1WIJZP",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "330A",
    "subid": "39285244"
  },
  "lines": [
    {
      "line": 0,
      "text": "a , b = sets of integers",
      "code": "set < int > a , b ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "r , c = integers",
      "code": "int r , c ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "cake = char",
      "code": "char cake ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read r and c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read cake",
      "code": "cin >> cake ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if cake = = ' S '",
      "code": "if ( cake == ' S ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "insert i into a",
      "code": "a . insert ( i ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "insert j into b",
      "code": "b . insert ( j ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print r * ( c - size of a * size of b )",
      "code": "cout << r * c - a . size ( ) * b . size ( ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "sets , b ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "sets &= b ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘cake’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "a . push_back ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "b . push_back ( j ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << r * ( c . size ( ) * b . size ( ) ) << endl ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘size’ in ‘c’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        2
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        2,
        8
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;",
        "if ( ! cake )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        2,
        10
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;",
        "b . push_back ( j ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        2,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        8
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "if ( ! cake )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        8,
        10
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "if ( ! cake )",
        "b . push_back ( j ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        8,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "if ( ! cake )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        10
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "b . push_back ( j ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        10,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "sets , b ;",
        "char s ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        8
      ],
      "mod_code": [
        "sets , b ;",
        "char s ;",
        "if ( ! cake )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        10
      ],
      "mod_code": [
        "sets , b ;",
        "char s ;",
        "if ( ! cake )",
        "b . push_back ( j ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "char s ;",
        "if ( ! cake )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        10
      ],
      "mod_code": [
        "sets , b ;",
        "char s ;",
        "b . push_back ( j ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        10,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "char s ;",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "char s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "sets , b ;",
        "if ( ! cake )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        10
      ],
      "mod_code": [
        "sets , b ;",
        "if ( ! cake )",
        "b . push_back ( j ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "if ( ! cake )",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "if ( ! cake )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "sets , b ;",
        "b . push_back ( j ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "sets , b ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘sets’ does not name a type"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘cake’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        8
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;",
        "if ( ! cake )"
      ],
      "err_line": 7,
      "err_msg": "‘cake’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        8,
        10
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;",
        "if ( ! cake )",
        "b . push_back ( j ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘cake’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        8,
        5
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;",
        "if ( ! cake )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        10
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;",
        "b . push_back ( j ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘cake’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        10,
        5
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        5
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "char s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        10
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "if ( ! cake )",
        "b . push_back ( j ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        14,
        8,
        10,
        5
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "if ( ! cake )",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        5
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "if ( ! cake )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "b . push_back ( j ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        14,
        10,
        5
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "cout << r * ( c - a . size ( ) * b . size ( ) ) << endl ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "char s ;",
        "if ( ! cake )"
      ],
      "err_line": 7,
      "err_msg": "‘cake’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        10
      ],
      "mod_code": [
        "char s ;",
        "if ( ! cake )",
        "b . push_back ( j ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘cake’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        5
      ],
      "mod_code": [
        "char s ;",
        "if ( ! cake )",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        5
      ],
      "mod_code": [
        "char s ;",
        "if ( ! cake )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "char s ;",
        "b . push_back ( j ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘cake’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        5
      ],
      "mod_code": [
        "char s ;",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( ! cake )",
        "b . push_back ( j ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        8,
        10,
        5
      ],
      "mod_code": [
        "if ( ! cake )",
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "if ( ! cake )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "b . push_back ( j ) ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}