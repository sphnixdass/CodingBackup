{
  "meta": {
    "index": 2504,
    "hitid": "3CKVGCS3PGZ5CEJQ06YW1YTLGVG0S9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "469A",
    "subid": "42108110"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new integers flag = 0 , n , high1 and high2 , and int pointers * p and * q",
      "code": "int n , * p , * q , flag = 0 , high1 , high2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read variables n and high1 from the input",
      "code": "cin >> n >> high1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set p to newint [ high1 ]",
      "code": "p = new int [ high1 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare new integer variable i",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read high1 elements of p from the input",
      "code": "for ( i = 0 ; i < high1 ; i ++ ) cin >> p [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read variable high2 from the input",
      "code": "cin >> high2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set q to newint [ high2 ]",
      "code": "q = new int [ high2 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read high2 elements of q from the input",
      "code": "for ( i = 0 ; i < high2 ; i ++ ) cin >> q [ i ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare integers level and j",
      "code": "int level , j ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for level from 1 to n inclusive",
      "code": "for ( level = 1 ; level <= n ; level ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "assign the new value = 0 to flag",
      "code": "flag = 0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "in a for loop , change j from 0 to high1 exclusive incrementing j",
      "code": "for ( j = 0 ; j < high1 ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if p [ j ] = level",
      "code": "if ( p [ j ] == level )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set the value of flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "in a for loop , change j from 0 to high2 exclusive",
      "code": "for ( j = 0 ; j < high2 ; j ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if q [ j ] = level",
      "code": "if ( q [ j ] == level )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "assign 1 to flag",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "if flag is equal to 0 , break",
      "code": "if ( flag == 0 ) break ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if level < = n",
      "code": "if ( level <= n )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print \" Oh , my keyboard ! \"",
      "code": "cout << \" Oh, my keyboard! \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" I become the guy . \"",
      "code": "cout << \" I become the guy. \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "p = newint [ high1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "q = newint [ high2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , * p , * q ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> b ;"
      ],
      "err_line": 2,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int p = newint [ high1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int p’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int i = s . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int q = newint [ high2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int q’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "flag = l ;"
      ],
      "err_line": 14,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else if ( level <= n )"
      ],
      "err_line": 24,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "cout << \" Oh \" << my << \" \\n \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘my’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 28,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        10
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        18
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        10,
        18
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        10,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        10,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        3,
        18
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        18,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        18,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        3,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        3,
        25,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        3,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "p = newint [ high1 ] ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        7,
        10
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        18
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        7,
        18
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        7,
        18,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        7,
        18,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        7,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        7,
        25,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        7,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "q = newint [ high2 ] ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "for ( int level = 1 ; level <= n ; level ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        10,
        18
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        10,
        18,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        10,
        18,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        10,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        10,
        25,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        10,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        18,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        18,
        25,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        18,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        25
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int high1’"
    },
    {
      "mod_line": [
        1,
        25,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        27
      ],
      "mod_code": [
        "int flag = 0 , n , high1 , high1 , p , * q ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        18
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        25
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        7,
        18
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        18,
        25
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        18,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        7,
        25
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        25,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        7,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "q = newint [ high2 ] ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        18
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        18,
        25
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        18,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        10,
        25
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        25,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        10,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        18,
        25
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        18,
        25,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        18,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        25,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3,
        27
      ],
      "mod_code": [
        "p = newint [ high1 ] ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        18
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 7,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        18,
        25
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        18,
        27
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        10,
        25
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        25,
        27
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        10,
        27
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )"
      ],
      "err_line": 7,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        25
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        25,
        27
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        18,
        27
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        25
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘newint’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25,
        27
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        27
      ],
      "mod_code": [
        "q = newint [ high2 ] ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        10,
        18,
        25,
        27
      ],
      "mod_code": [
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        10,
        18,
        27
      ],
      "mod_code": [
        "for ( int level = 1 ; level <= n ; level ++ )",
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        10,
        25,
        27
      ],
      "mod_code": [
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        10,
        27
      ],
      "mod_code": [
        "for ( int level = 1 ; level <= n ; level ++ )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        18,
        25,
        27
      ],
      "mod_code": [
        "if ( q [ j ] == ' level ' )",
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        18,
        27
      ],
      "mod_code": [
        "if ( q [ j ] == ' level ' )",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        27
      ],
      "mod_code": [
        "cout << \" Oh \" << endl ;",
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "stray ‘\\’ in program"
    }
  ]
}