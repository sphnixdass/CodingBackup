{
  "meta": {
    "index": 2181,
    "hitid": "3OJX0UFJ0Z13NLZ7P7CP9AC239RU9G",
    "workerid": "AIWEXPJAU66D9",
    "probid": "330A",
    "subid": "48550550"
  },
  "lines": [
    {
      "line": 0,
      "text": "set constant integer maxn to 100001",
      "code": "const int maxn = 100001 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let r and c be integer arrays with size 11",
      "code": "int r [ 11 ] , c [ 11 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "memset with arguments r , 0 and sizeof ( r )",
      "code": "memset ( r , 0 , sizeof ( r ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "memset with arguments c , 0 and sizeof ( c )",
      "code": "memset ( c , 0 , sizeof ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while reading n and m in a loop",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for integer j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "create character t",
      "code": "char t ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "if t = ' S ' , set r [ i ] and c [ j ] to 1",
      "code": "if ( t == ' S ' ) { r [ i ] = c [ j ] = 1 ; }",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "declare integer ans = n * m",
      "code": "int ans = n * m ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for integer j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if r [ i ] and c [ j ] are not 0 , decrement ans",
      "code": "if ( r [ i ] && c [ j ] ) ans -- ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "memset ( c , 0 , sizeof ( c ) )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 11,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        18,
        5
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        12,
        18,
        5,
        21
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        12,
        18,
        5,
        4
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        18,
        5,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "gets ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        12,
        18,
        21,
        4
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        18,
        21,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        18,
        4
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        18,
        4,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        18,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "gets ( t ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "memset ( c , 0 , sizeof ( c ) )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        12,
        5,
        21
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        12,
        5,
        21,
        4
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        5,
        21,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        12,
        5,
        4
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        5,
        4,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        5,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "gets ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        12,
        21,
        4
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        21,
        4,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        21,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        4,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "if ( t == ' S ' ) r [ i ] = 1 ;",
        "gets ( t ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        5
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        18,
        5,
        21
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        18,
        5,
        21,
        4
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        18,
        5,
        21,
        11
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        18,
        5,
        4
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        18,
        5,
        4,
        11
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        18,
        5,
        11
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( c , 0 , sizeof ( c ) )",
        "gets ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        18,
        21,
        4
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        18,
        21,
        4,
        11
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        18,
        21,
        11
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        4
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        18,
        4,
        11
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "if ( ! r [ i ] && c [ j ] != 0 ) ans -- ;",
        "gets ( t ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        5,
        21,
        4
      ],
      "mod_code": [
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        5,
        21,
        4,
        11
      ],
      "mod_code": [
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        5,
        21,
        11
      ],
      "mod_code": [
        "memset ( c , 0 , sizeof ( c ) )",
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "memset ( c , 0 , sizeof ( c ) )",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        5,
        4,
        11
      ],
      "mod_code": [
        "memset ( c , 0 , sizeof ( c ) )",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "memset ( c , 0 , sizeof ( c ) )",
        "gets ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        21,
        4
      ],
      "mod_code": [
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        21,
        4,
        11
      ],
      "mod_code": [
        "cout << ans ;",
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        21,
        11
      ],
      "mod_code": [
        "cout << ans ;",
        "gets ( t ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "memset ( r , 0 , sizeof ( r ) )",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    }
  ]
}