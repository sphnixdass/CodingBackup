{
  "meta": {
    "index": 2231,
    "hitid": "34YWR3PJ284D8V5PUG4J06ADVAB0XA",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "82A",
    "subid": "41666016"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant char array pointer nam containing { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" }",
      "code": "const char * nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create long long ints n and m = 1",
      "code": "long long n , m = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "decrease n by 1",
      "code": "n -- ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while n is greater than or equal to m * 5",
      "code": "while ( n >= m * 5 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set n to n - m * 5",
      "code": "n -= m * 5 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set m to m < < 1",
      "code": "m = m << 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print nam [ n / m ]",
      "code": "cout << nam [ n / m ] << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Penny \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "m = m >> 1 ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        0,
        7,
        9
      ],
      "mod_code": [
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "m = m >> 1 ;",
        "cout << nam [ n / m ] ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        3
      ],
      "mod_code": [
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "m = m >> 1 ;",
        "cout << nam [ n / m ] ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "m = m >> 1 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << nam [ n / m ] ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        0,
        9,
        3
      ],
      "mod_code": [
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << nam [ n / m ] ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        7,
        9,
        3
      ],
      "mod_code": [
        "m = m >> 1 ;",
        "cout << nam [ n / m ] ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        3,
        0
      ],
      "mod_code": [
        "m = m >> 1 ;",
        "cout << nam [ n / m ] ;",
        "cin >> N ;",
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Penny \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        7,
        9,
        0
      ],
      "mod_code": [
        "m = m >> 1 ;",
        "cout << nam [ n / m ] ;",
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Penny \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "m = m >> 1 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        0
      ],
      "mod_code": [
        "m = m >> 1 ;",
        "cin >> N ;",
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Penny \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "m = m >> 1 ;",
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Penny \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "cout << nam [ n / m ] ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        0
      ],
      "mod_code": [
        "cout << nam [ n / m ] ;",
        "cin >> N ;",
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Penny \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "cout << nam [ n / m ] ;",
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Penny \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "cin >> N ;",
        "const char nam [ ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Penny \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘const char []’"
    }
  ]
}