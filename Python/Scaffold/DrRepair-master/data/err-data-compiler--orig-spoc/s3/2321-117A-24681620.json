{
  "meta": {
    "index": 2321,
    "hitid": "36FFXPMST9I1PMXTRXO8NLI140COHO",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "117A",
    "subid": "24681620"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "decrement m",
      "code": "m -- ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "s , f , t = integers",
      "code": "int s , f , t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "Read s , f , t",
      "code": "cin >> s >> f >> t ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement s",
      "code": "s -- ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrement f",
      "code": "f -- ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if f is equal to s",
      "code": "if ( f == s )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print t and a new line",
      "code": "cout << t << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "Control jumps to the beginning of the loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "up = boolean",
      "code": "bool up ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "curlower = integer",
      "code": "int curlower ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if t is less than or equal to m OR ( t / m ) modulo 2 is equal to 0",
      "code": "if ( t <= m || ( t / m ) % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set up to true",
      "code": "up = true ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set up to false",
      "code": "up = false ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if up is true",
      "code": "if ( up )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if ( t modulo m is equal to 0",
      "code": "if ( t % m == 0 )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "if t / m modulo 2 is equal to 0",
      "code": "if ( t / m % 2 == 0 )",
      "indent": 4
    },
    {
      "line": 22,
      "text": "set curlower to 0",
      "code": "curlower = 0 ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 24,
      "text": "set curlower to m",
      "code": "curlower = m ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 26,
      "text": "if t modulo m is equal to 0 and t is not equal to 0 is true set curlower = m , if false curlower = t modulo m",
      "code": "curlower = ( t % m == 0 && t != 0 ) ? m : t % m ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "else if t modulo m is equal to 0",
      "code": "else if ( t % m == 0 )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "if t / m modulo 2 is equal to 1",
      "code": "if ( t / m % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 29,
      "text": "set curlower to m",
      "code": "curlower = m ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 31,
      "text": "set curlower to 0",
      "code": "curlower = 0 ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 33,
      "text": "set curlower to m - t % m",
      "code": "curlower = m - t % m ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "NeedTime = integer 0th 0",
      "code": "int NeedTime = 0 ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "if up is true",
      "code": "if ( up )",
      "indent": 2
    },
    {
      "line": 36,
      "text": "if curlower is greater than s",
      "code": "if ( curlower > s )",
      "indent": 3
    },
    {
      "line": 37,
      "text": "set NeedTime to NeedTime + 2 * ( m - curlower ) + curlower - s",
      "code": "NeedTime += 2 * ( m - curlower ) + curlower - s ;",
      "indent": 4
    },
    {
      "line": 38,
      "text": "set up to false",
      "code": "up = false ;",
      "indent": 4
    },
    {
      "line": 39,
      "text": "set curlower to s",
      "code": "curlower = s ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 41,
      "text": "if s is greater than curlower",
      "code": "if ( s > curlower )",
      "indent": 3
    },
    {
      "line": 42,
      "text": "set NeedTime = NeedTime + s - curlower",
      "code": "NeedTime += s - curlower ;",
      "indent": 4
    },
    {
      "line": 43,
      "text": "set curlower to s",
      "code": "curlower = s ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 45,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 46,
      "text": "if s is greater than curlower",
      "code": "if ( s > curlower )",
      "indent": 3
    },
    {
      "line": 47,
      "text": "set NeedTime = NeedTime + curlower * 2 + s - curlower",
      "code": "NeedTime += curlower * 2 + s - curlower ;",
      "indent": 4
    },
    {
      "line": 48,
      "text": "set curlower to s",
      "code": "curlower = s ;",
      "indent": 4
    },
    {
      "line": 49,
      "text": "set up to true",
      "code": "up = true ;",
      "indent": 4
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 51,
      "text": "if s is less than curlower",
      "code": "if ( s < curlower )",
      "indent": 3
    },
    {
      "line": 52,
      "text": "set NeedTime = NeedTime + curlower - s",
      "code": "NeedTime += curlower - s ;",
      "indent": 4
    },
    {
      "line": 53,
      "text": "set curlower to s",
      "code": "curlower = s ;",
      "indent": 4
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 56,
      "text": "if up is true",
      "code": "if ( up )",
      "indent": 2
    },
    {
      "line": 57,
      "text": "if curlower is greater than f",
      "code": "if ( curlower > f )",
      "indent": 3
    },
    {
      "line": 58,
      "text": "set NeedTime = NeedTime + 2 * ( m - curlower ) + curlower - f",
      "code": "NeedTime += 2 * ( m - curlower ) + curlower - f ;",
      "indent": 4
    },
    {
      "line": 59,
      "text": "set up to false",
      "code": "up = false ;",
      "indent": 4
    },
    {
      "line": 60,
      "text": "set curlower to f",
      "code": "curlower = f ;",
      "indent": 4
    },
    {
      "line": 61,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 62,
      "text": "if f is greater than curlower",
      "code": "if ( f > curlower )",
      "indent": 3
    },
    {
      "line": 63,
      "text": "set NeedTime = NeedTime + f - curlower",
      "code": "NeedTime += f - curlower ;",
      "indent": 4
    },
    {
      "line": 64,
      "text": "set curlower to f",
      "code": "curlower = f ;",
      "indent": 4
    },
    {
      "line": 65,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 66,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 67,
      "text": "if f is greater than curlower",
      "code": "if ( f > curlower )",
      "indent": 3
    },
    {
      "line": 68,
      "text": "set NeedTime = NeedTime + curlower * 2 + f - curlower",
      "code": "NeedTime += curlower * 2 + f - curlower ;",
      "indent": 4
    },
    {
      "line": 69,
      "text": "set curlower to f",
      "code": "curlower = f ;",
      "indent": 4
    },
    {
      "line": 70,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 71,
      "text": "if f is less than curlower , set NeedTime = NeedTime + curlower - f",
      "code": "if ( f < curlower ) { NeedTime += curlower - f ; }",
      "indent": 3
    },
    {
      "line": 72,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 73,
      "text": "print NeedTime + t and a new line",
      "code": "cout << NeedTime + t << endl ;",
      "indent": 2
    },
    {
      "line": 74,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 75,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 76,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "jumps ;"
      ],
      "err_line": 11,
      "err_msg": "‘jumps’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "bool up ( )"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 34,
      "err_msg": "expected ‘while’ before ‘NeedTime’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "C = s ;"
      ],
      "err_line": 39,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "C = s ;"
      ],
      "err_line": 43,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 56,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "C = s ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "C = s ;"
      ],
      "err_line": 53,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        60
      ],
      "mod_code": [
        "curlower to ;"
      ],
      "err_line": 60,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        64
      ],
      "mod_code": [
        "curlower to ;"
      ],
      "err_line": 64,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        66
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 73,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        69
      ],
      "mod_code": [
        "curlower to ;"
      ],
      "err_line": 69,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        26,
        25
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        48
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "do",
        "C = s ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        48,
        29
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "do",
        "C = s ;",
        "int curlower = m ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        48,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "do",
        "C = s ;",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        29
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "do",
        "int curlower = m ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        29,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "do",
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "do",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        48
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "C = s ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        48,
        29
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "C = s ;",
        "int curlower = m ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        48,
        29,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "C = s ;",
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        48,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "C = s ;",
        "curlower to ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 60,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        26,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) { curlower = t % m ; }",
        "curlower to ;"
      ],
      "err_line": 60,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        26,
        25
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        48
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "do",
        "C = s ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        48,
        29
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "do",
        "C = s ;",
        "int curlower = m ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        48,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "do",
        "C = s ;",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        29
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "do",
        "int curlower = m ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        29,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "do",
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        25,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "do",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        48
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "C = s ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        48,
        29
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "C = s ;",
        "int curlower = m ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        48,
        29,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "C = s ;",
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        48,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "C = s ;",
        "curlower to ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 60,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        26,
        60
      ],
      "mod_code": [
        "if ( t % m == 0 && t != 0 ) curlower = t % m ;",
        "curlower to ;"
      ],
      "err_line": 60,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        25,
        48
      ],
      "mod_code": [
        "do",
        "C = s ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        48,
        29
      ],
      "mod_code": [
        "do",
        "C = s ;",
        "int curlower = m ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        48,
        29,
        60
      ],
      "mod_code": [
        "do",
        "C = s ;",
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        48,
        60
      ],
      "mod_code": [
        "do",
        "C = s ;",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        29
      ],
      "mod_code": [
        "do",
        "int curlower = m ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        29,
        60
      ],
      "mod_code": [
        "do",
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        60
      ],
      "mod_code": [
        "do",
        "curlower to ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        48,
        29
      ],
      "mod_code": [
        "C = s ;",
        "int curlower = m ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        48,
        29,
        60
      ],
      "mod_code": [
        "C = s ;",
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        48,
        60
      ],
      "mod_code": [
        "C = s ;",
        "curlower to ;"
      ],
      "err_line": 48,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        60
      ],
      "mod_code": [
        "int curlower = m ;",
        "curlower to ;"
      ],
      "err_line": 60,
      "err_msg": "expected ‘;’ before ‘to’"
    }
  ]
}