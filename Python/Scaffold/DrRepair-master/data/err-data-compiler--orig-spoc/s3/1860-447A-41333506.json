{
  "meta": {
    "index": 1860,
    "hitid": "3MJ28H2Y1E2P9TDYQVNZYOFBZRNO59",
    "workerid": "AIWEXPJAU66D9",
    "probid": "447A",
    "subid": "41333506"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare boolean array a with size 305",
      "code": "bool a [ 305 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers x and n",
      "code": "int x , n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read x and n",
      "code": "cin >> x >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer variable p",
      "code": "int p ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "p = p modulo x",
      "code": "p %= x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if a [ p ] = true",
      "code": "if ( a [ p ] == true )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print i",
      "code": "cout << i << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set value of a [ p ] to true",
      "code": "a [ p ] = true ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        12,
        6
      ],
      "mod_code": [
        "cout << i ;",
        "a [ ' p ' ] = true ;",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        6,
        11
      ],
      "mod_code": [
        "cout << i ;",
        "a [ ' p ' ] = true ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        11
      ],
      "mod_code": [
        "cout << i ;",
        "a [ ' p ' ] = true ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cout << i ;",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6,
        11
      ],
      "mod_code": [
        "cout << i ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "cout << i ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "a [ ' p ' ] = true ;",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6,
        11
      ],
      "mod_code": [
        "a [ ' p ' ] = true ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "a [ ' p ' ] = true ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}