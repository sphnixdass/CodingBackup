{
  "meta": {
    "index": 16,
    "hitid": "3TC2K6WK9GWUP47V1VW53VMZ0CR82O",
    "workerid": "AIWEXPJAU66D9",
    "probid": "485A",
    "subid": "41605681"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "S = set of integers",
      "code": "set < int > S ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integers a and m",
      "code": "int a , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read a and m",
      "code": "cin >> a >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer variable k = a modulo m",
      "code": "int k = a % m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "add k to S",
      "code": "S . insert ( k ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare boolean variable stop = true",
      "code": "bool stop = true ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while k ! = 0",
      "code": "while ( k != 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare integer i = k",
      "code": "int i = k ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "multiply i by 2 while i is less than m",
      "code": "while ( i < m ) i *= 2 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "k = i % m",
      "code": "k = i % m ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if count of k in S is not 0",
      "code": "if ( S . count ( k ) )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set stop to false",
      "code": "stop = false ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "insert k into S",
      "code": "S . insert ( k ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if stop is true",
      "code": "if ( stop )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" No \"",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "S += k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( S [ k ] != 0 )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> a >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "S . push_back ( k ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "S . push_back ( k ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        11
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        19
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        21
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        12
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        19
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        21
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "cout << \" YES\\n \" ;",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        12
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "cout << \" YES\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        21
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        21,
        12
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "cout << \" NO\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        12
      ],
      "mod_code": [
        "S += k ;",
        "while ( i * 2 ) i *= 2 ;",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "S += k ;",
        "if ( S [ k ] != 0 )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        11,
        19
      ],
      "mod_code": [
        "S += k ;",
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        21
      ],
      "mod_code": [
        "S += k ;",
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        12
      ],
      "mod_code": [
        "S += k ;",
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        11,
        21
      ],
      "mod_code": [
        "S += k ;",
        "if ( S [ k ] != 0 )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        11,
        21,
        12
      ],
      "mod_code": [
        "S += k ;",
        "if ( S [ k ] != 0 )",
        "cout << \" NO\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        11,
        12
      ],
      "mod_code": [
        "S += k ;",
        "if ( S [ k ] != 0 )",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "S += k ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        19,
        21
      ],
      "mod_code": [
        "S += k ;",
        "cout << \" YES\\n \" ;",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        19,
        21,
        12
      ],
      "mod_code": [
        "S += k ;",
        "cout << \" YES\\n \" ;",
        "cout << \" NO\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        19,
        12
      ],
      "mod_code": [
        "S += k ;",
        "cout << \" YES\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "S += k ;",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        21,
        12
      ],
      "mod_code": [
        "S += k ;",
        "cout << \" NO\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "S += k ;",
        "bool stop = false ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        19
      ],
      "mod_code": [
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        21
      ],
      "mod_code": [
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        12
      ],
      "mod_code": [
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        21
      ],
      "mod_code": [
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        12
      ],
      "mod_code": [
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )",
        "cout << \" NO\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        12
      ],
      "mod_code": [
        "while ( i * 2 ) i *= 2 ;",
        "if ( S [ k ] != 0 )",
        "bool stop = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        19,
        21
      ],
      "mod_code": [
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        12
      ],
      "mod_code": [
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;",
        "cout << \" NO\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        19,
        12
      ],
      "mod_code": [
        "if ( S [ k ] != 0 )",
        "cout << \" YES\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "if ( S [ k ] != 0 )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        12
      ],
      "mod_code": [
        "if ( S [ k ] != 0 )",
        "cout << \" NO\\n \" ;",
        "bool stop = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "if ( S [ k ] != 0 )",
        "bool stop = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    }
  ]
}