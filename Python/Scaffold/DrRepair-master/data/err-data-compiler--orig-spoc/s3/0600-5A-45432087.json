{
  "meta": {
    "index": 600,
    "hitid": "34OWYT6U3WBYEU47VQNBQ7OR9ZOI9M",
    "workerid": "AIWEXPJAU66D9",
    "probid": "5A",
    "subid": "45432087"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "cmd = string",
      "code": "string cmd ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let ans and people_cnt be integers with value 0",
      "code": "int ans = 0 , people_cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while can read line into cmd",
      "code": "while ( getline ( cin , cmd ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if cmd [ 0 ] is equal to ' + '",
      "code": "if ( cmd [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increase people_cnt by one",
      "code": "people_cnt ++ ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if cmd [ 0 ] is equal to ' - '",
      "code": "else if ( cmd [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement people_cnt",
      "code": "people_cnt -- ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set integer idx to 0",
      "code": "int idx = 0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "while character at index idx of cmd is not \" : \" increase idx",
      "code": "while ( cmd [ idx ] != ' : ' ) idx ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increase ans by the ( length of the substring of length idx + 1 of cmd ) * people_cnt",
      "code": "ans += ( int ) cmd . substr ( idx + 1 ) . size ( ) * people_cnt ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print error cmd + \" \" + ans + end of the line",
      "code": "cerr << cmd << \" \" << ans << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘size’ in ‘idx’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( cmd [ 0 ] == \" + ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘cerr’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ans += the ( idx . size ( ) + 1 , cmd . length ( ) ) * people_cnt ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘size’ in ‘idx’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        13
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        13
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "cout << \" + \" << ans + \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        13,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "cout << \" + \" << ans + \" \\n \" ;",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘size’ in ‘idx’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        11,
        13
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘size’ in ‘idx’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        11,
        13,
        10
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        11,
        13,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        10
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        11,
        10,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        10
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "cout << \" + \" << ans + \" \\n \" ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        10,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "cout << \" + \" << ans + \" \\n \" ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "cout << \" + \" << ans + \" \\n \" ;",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "while ( cin >> cmd )",
        "char cmd ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        1
      ],
      "mod_code": [
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        10,
        11,
        1
      ],
      "mod_code": [
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "cout << \" + \" << ans + \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        13,
        1
      ],
      "mod_code": [
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "cout << \" + \" << ans + \" \\n \" ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "while ( cmd . at ( idx ) != \" : \" ) idx ++ ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘size’ in ‘idx’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        13,
        10
      ],
      "mod_code": [
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        10,
        1
      ],
      "mod_code": [
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        11,
        13,
        1
      ],
      "mod_code": [
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "cout << \" + \" << ans + \" \\n \" ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        10,
        1
      ],
      "mod_code": [
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "ans += the ( idx . size ( ) + 1 , cmd . people_cnt ( ) ) * people_cnt ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "cout << \" + \" << ans + \" \\n \" ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        10,
        1
      ],
      "mod_code": [
        "cout << \" + \" << ans + \" \\n \" ;",
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "cout << \" + \" << ans + \" \\n \" ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "while ( cmd . compare ( idx ) != \" : \" ) idx ++ ;",
        "char cmd ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    }
  ]
}