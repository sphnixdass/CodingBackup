{
  "meta": {
    "index": 241,
    "hitid": "344M16OZKI97NR6F0HGPNTLJNX9NEX",
    "workerid": "A1APYLD4DUK33J",
    "probid": "799A",
    "subid": "49031060"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , t , k , d , x , v , with x = 0 , v = 0",
      "code": "int n , t , k , d , x = 0 , v = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read t read k read d",
      "code": "cin >> n >> t >> k >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if k is greater than n",
      "code": "if ( k > n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while n is greater than k",
      "code": "while ( n > k )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement n by k",
      "code": "n -= k ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment x by t",
      "code": "x += t ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if n is greater than 0 , increment x by t",
      "code": "if ( n > 0 ) x += t ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set v to t + d",
      "code": "v = t + d ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if v is less than x",
      "code": "if ( v < x )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12,
        1,
        14
      ],
      "mod_code": [
        "v += d ;",
        "if ( v <= x )",
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12,
        1,
        5
      ],
      "mod_code": [
        "v += d ;",
        "if ( v <= x )",
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        12,
        14
      ],
      "mod_code": [
        "v += d ;",
        "if ( v <= x )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        5
      ],
      "mod_code": [
        "v += d ;",
        "if ( v <= x )",
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        12,
        5
      ],
      "mod_code": [
        "v += d ;",
        "if ( v <= x )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        14
      ],
      "mod_code": [
        "v += d ;",
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        1,
        14,
        5
      ],
      "mod_code": [
        "v += d ;",
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        5
      ],
      "mod_code": [
        "v += d ;",
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "v += d ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        14,
        5
      ],
      "mod_code": [
        "v += d ;",
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "v += d ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        1,
        14
      ],
      "mod_code": [
        "if ( v <= x )",
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        1,
        14,
        5
      ],
      "mod_code": [
        "if ( v <= x )",
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        1,
        5
      ],
      "mod_code": [
        "if ( v <= x )",
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "if ( v <= x )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        14,
        5
      ],
      "mod_code": [
        "if ( v <= x )",
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "if ( v <= x )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        14,
        5
      ],
      "mod_code": [
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , t , k , d = 0 , x , v = 0 ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘{’ token"
    }
  ]
}