{
  "meta": {
    "index": 70,
    "hitid": "3SNR5F7R92NF9QVO313XILP21YKIEH",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1077A",
    "subid": "48770564"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long t",
      "code": "long long t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement t is true",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare long longs a , b , k",
      "code": "long long a , b , k ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read a and b and k",
      "code": "cin >> a >> b >> k ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if k % 2 is 0",
      "code": "if ( k % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "declare long long temp = k / 2",
      "code": "long long temp = k / 2 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print temp * ( a - b ) and newline",
      "code": "cout << temp * ( a - b ) << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "declare long long temp1 = ( k + 1 ) / 2",
      "code": "long long temp1 = ( k + 1 ) / 2 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "declare long long temp2 = ( k - 1 ) / 2",
      "code": "long long temp2 = ( k - 1 ) / 2 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "declare long long ans = temp1 * a - temp2 * b",
      "code": "long long ans = ( temp1 ) * a - ( temp2 ) * b ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( -- -- )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( -- -- )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        9,
        6
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "if ( ! k % 2 )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        9,
        6,
        2
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "if ( ! k % 2 )",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( -- -- )",
        "if ( ! k % 2 )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "while ( -- -- )",
        "if ( ! k % 2 )",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( -- -- )",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "do",
        "if ( ! k % 2 )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        6,
        2
      ],
      "mod_code": [
        "do",
        "if ( ! k % 2 )",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( ! k % 2 )",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    }
  ]
}