{
  "meta": {
    "index": 2831,
    "hitid": "3QTFNPMJC6C5YMXBW4U283M1B3NZNK",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "454A",
    "subid": "47811069"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n / 2 inclusive",
      "code": "for ( int i = 0 ; i <= n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to ( n - i * 2 - 1 ) / 2 , print *",
      "code": "for ( int j = 0 ; j < ( n - i * 2 - 1 ) / 2 ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for j = 0 to i * 2 + 1 , print D",
      "code": "for ( int j = 0 ; j < i * 2 + 1 ; j ++ ) { cout << \" D \" ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 0 to ( n - i * 2 - 1 ) / 2 , print *",
      "code": "for ( int j = 0 ; j < ( n - i * 2 - 1 ) / 2 ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print new line",
      "code": "cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "i2 = n / 2 - 1 = int",
      "code": "int i2 = n / 2 - 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = n / 2 + 1",
      "code": "for ( int i = n / 2 + 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 0 to ( n - i2 * 2 - 1 ) / 2 , print *",
      "code": "for ( int j = 0 ; j < ( n - i2 * 2 - 1 ) / 2 ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for j = 0 to i2 * 2 + 1 , print D",
      "code": "for ( int j = 0 ; j < i2 * 2 + 1 ; j ++ ) { cout << \" D \" ; }",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for j = 0 to ( n - i2 * 2 - 1 ) / 2 , print *",
      "code": "for ( int j = 0 ; j < ( n - i2 * 2 - 1 ) / 2 ; j ++ ) { cout << \" * \" ; }",
      "indent": 2
    },
    {
      "line": 14,
      "text": "icrement i2",
      "code": "i2 -- ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print new line",
      "code": "cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        14
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        1
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        1
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        11,
        1
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        13,
        14
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        1
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "char n ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        13,
        1
      ],
      "mod_code": [
        "for ( int i = n / 2 + 1 ; ; i ++ )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "char n ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        10
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        10
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        10,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int j = 0 ; j * 2 * 1 )",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        14,
        10
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        14,
        10,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        14,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "char n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        14,
        10
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        14,
        10,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )",
        "char n ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        14,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "cout << i2 << endl ;",
        "char n ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        10,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "for ( int i = n / 2 + 1 ; i <= n ; i ++ )",
        "char n ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "for ( int j = 0 ; j * 2 * 1 )",
        "char n ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}