{
  "meta": {
    "index": 2186,
    "hitid": "3R5LWXWHR02AJZGA8ITMLYXT143XG2",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "330A",
    "subid": "49105666"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a [ n ] [ m ] = character array",
      "code": "char a [ n ] [ m ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "b = integer array of lenght 11",
      "code": "int b [ 11 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let c be an integer array of lenght 11",
      "code": "int c [ 11 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to 11 exclusive",
      "code": "for ( int i = 0 ; i < 11 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set b [ i ] to 1",
      "code": "b [ i ] = 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set c [ i ] to 1",
      "code": "c [ i ] = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let flag be an integer = 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if a [ i ] [ j ] is S",
      "code": "if ( a [ i ] [ j ] == ' S ' )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set b [ i ] to 0",
      "code": "b [ i ] = 0 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "set c [ j ] to 0",
      "code": "c [ j ] = 0 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "rowCount , colCount , cakes = integers = 0",
      "code": "int rowCount = 0 , colCount = 0 , cakes = 0 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if b [ i ] is different from 0",
      "code": "if ( b [ i ] != 0 )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set cakes = cakes + m",
      "code": "cakes += m ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increment rowCount",
      "code": "rowCount ++ ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if c [ i ] is different from 0",
      "code": "if ( c [ i ] != 0 )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "set cakes = cakes + n",
      "code": "cakes += n ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "increment colCount",
      "code": "colCount ++ ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "if flag is equal to 0",
      "code": "if ( flag == 0 )",
      "indent": 1
    },
    {
      "line": 35,
      "text": "print n * m",
      "code": "cout << n * m << endl ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "otherwise if rowCount and colCount are different from 0",
      "code": "else if ( rowCount != 0 && colCount != 0 )",
      "indent": 1
    },
    {
      "line": 37,
      "text": "prunt cakes - ( rowCount * colCount )",
      "code": "cout << cakes - ( rowCount * colCount ) << endl ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "otherwise if rowCount or colCount are equal to 0",
      "code": "else if ( rowCount == 0 || colCount == 0 )",
      "indent": 1
    },
    {
      "line": 39,
      "text": "print cakes",
      "code": "cout << cakes << endl ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 13,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "a [ n ] [ m ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 11 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int rowCount , colCount , cakes , cakes ;"
      ],
      "err_line": 21,
      "err_msg": "redeclaration of ‘int cakes’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 28,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        37,
        6
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "if ( c [ i ] != ' 0 ' )",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        29,
        37,
        14
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "if ( c [ i ] != ' 0 ' )",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        29,
        6
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "if ( c [ i ] != ' 0 ' )",
        "for ( i = 0 ; i < 11 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        29,
        6,
        14
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "if ( c [ i ] != ' 0 ' )",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        29,
        6,
        13
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "if ( c [ i ] != ' 0 ' )",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        29,
        14
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "if ( c [ i ] != ' 0 ' )",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        29,
        14,
        13
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "if ( c [ i ] != ' 0 ' )",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        37,
        6
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        37,
        6,
        14
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        37,
        6,
        13
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        37,
        14
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        37,
        14,
        13
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "for ( i = 0 ; i < 11 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6,
        14
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6,
        14,
        13
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6,
        13
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        14
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        14,
        13
      ],
      "mod_code": [
        "int rowCount , colCount , cakes = 0 ;",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        37,
        6
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        37,
        6,
        14
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        37,
        6,
        13
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        37,
        14
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        37,
        14,
        13
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "cakes = cakes - ( rowCount * colCount ) ;",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "for ( i = 0 ; i < 11 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        14
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        14,
        13
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        13
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        14
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        14,
        13
      ],
      "mod_code": [
        "if ( c [ i ] != ' 0 ' )",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        6
      ],
      "mod_code": [
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        6,
        14
      ],
      "mod_code": [
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        6,
        14,
        13
      ],
      "mod_code": [
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        6,
        13
      ],
      "mod_code": [
        "cakes = cakes - ( rowCount * colCount ) ;",
        "for ( i = 0 ; i < 11 ; i ++ )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        14
      ],
      "mod_code": [
        "cakes = cakes - ( rowCount * colCount ) ;",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        14,
        13
      ],
      "mod_code": [
        "cakes = cakes - ( rowCount * colCount ) ;",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < 11 ; i ++ )",
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < 11 ; i ++ )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == S )",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "‘S’ was not declared in this scope"
    }
  ]
}