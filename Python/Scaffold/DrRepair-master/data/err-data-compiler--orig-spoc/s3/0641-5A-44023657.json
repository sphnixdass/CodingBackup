{
  "meta": {
    "index": 641,
    "hitid": "3CKVGCS3PGZ5CEJQ06YW1YTLFTWS0C",
    "workerid": "A1APYLD4DUK33J",
    "probid": "5A",
    "subid": "44023657"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers ans , cnt with ans = 0 , cnt = 0",
      "code": "int ans = 0 , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while read line from cin to s",
      "code": "while ( getline ( cin , s ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if s [ 0 ] is ' + '",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if s [ 0 ] is ' - '",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement cnt",
      "code": "cnt -- ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment ans by cnt * ( size of s - first index of \" : \" in s - 1 )",
      "code": "ans += cnt * ( s . size ( ) - s . find ( \" : \" ) - 1 ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(const char*)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int ans = 0 , cnt = 0 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(const char [2])’"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "else if ( ! s [ 0 ] == ' - ' )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(const char*)’"
    },
    {
      "mod_line": [
        9,
        6,
        3
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        6,
        3,
        2
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        6,
        3,
        8
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        6,
        2
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        9,
        6,
        2,
        8
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        9,
        6,
        8
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(const char*)’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        3,
        2
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        3,
        2,
        8
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "while ( cin >> cin >> s )",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        3,
        8
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        9,
        2,
        8
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" - 1 ) ) ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(const char*)’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6,
        3,
        2,
        9
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "int s ;",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6,
        3,
        2,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6,
        3,
        9,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6,
        3,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        2,
        9
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int s ;",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        2,
        9,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int s ;",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(const char [2])’"
    },
    {
      "mod_line": [
        6,
        9,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(const char [2])’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        9
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "int s ;",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "int s ;",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int s ;",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        2,
        9,
        8
      ],
      "mod_code": [
        "int s ;",
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "ans += cnt * ( s . size ( ) - min ( \" : \" ) - 1 ) ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(const char [2])’"
    }
  ]
}