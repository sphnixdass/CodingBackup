{
  "meta": {
    "index": 389,
    "hitid": "30ZKOOGW2W01J7IEFPG5U3IPZH8A1J",
    "workerid": "AIWEXPJAU66D9",
    "probid": "813A",
    "subid": "48943453"
  },
  "lines": [
    {
      "line": 0,
      "text": "create new integers n , m and ans ; create integer arrays a , l and r with size 1009",
      "code": "int n , a [ 1009 ] , m , l [ 1009 ] , r [ 1009 ] , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "start for loop from i = 1 to n inclusive , read from the input to a [ i ] on each loop iteration",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m from the user input",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to m exclusive , read user input to l [ i ] and r [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cin >> l [ i ] >> r [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort a from index 0 to n",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "in a for loop , change i from 2 to n inclusive , changing a [ i ] to the sum of a [ i ] and a [ i - 1 ] on each iteration",
      "code": "for ( int i = 2 ; i <= n ; i ++ ) a [ i ] += a [ i - 1 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare integers in and last = 0",
      "code": "int in = 0 , last = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "in a for loop , change i from 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create new boolean called check with value 0",
      "code": "bool check = 0 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for in from to m exclusive incrementing in",
      "code": "for ( in ; in < m ; in ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if a [ i ] < = l [ in ]",
      "code": "if ( a [ i ] <= l [ in ] )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "change ans to the sum of ans and l [ in ] - last",
      "code": "ans += l [ in ] - last ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "assign l [ in ] to last",
      "code": "last = l [ in ] ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "change check to 1",
      "code": "check = 1 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if a [ i ] > = l [ in ] and a [ i ] < = r [ in ]",
      "code": "if ( a [ i ] >= l [ in ] && a [ i ] <= r [ in ] )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "change ans to the sum of ans and a [ i ] - last",
      "code": "ans += a [ i ] - last ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "change last to a [ i ]",
      "code": "last = a [ i ] ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "set check to 1",
      "code": "check = 1 ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if check is false",
      "code": "if ( ! check )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print - 1 to the standard output",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , r [ 1009 ] , ans ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( a from 0 , a + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int in = 0 , last = 0 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "0 = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; ++ from )"
      ],
      "err_line": 11,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "check to ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 22,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        22
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        22,
        6
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;",
        "sort ( a from 0 , a + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        22,
        20
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;",
        "last += a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        22,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        6
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "sort ( a from 0 , a + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        6,
        20
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        6,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "sort ( a from 0 , a + n ) ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        20
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "last += a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        20,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        11,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "for ( int i = 0 ; j < m ; ++ from )",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        22
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "stop ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        22,
        6
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "stop ;",
        "sort ( a from 0 , a + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        22,
        6,
        20
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "stop ;",
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        22,
        6,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "stop ;",
        "sort ( a from 0 , a + n ) ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        22,
        20
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "stop ;",
        "last += a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        22,
        20,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "stop ;",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        22,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "stop ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "sort ( a from 0 , a + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        6,
        20
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        6,
        20,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        6,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "sort ( a from 0 , a + n ) ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "last += a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        20,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int n , a [ 1009 ] , l [ 1009 ] , ans , ans ;",
        "cin >> n >> n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        22,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;",
        "sort ( a from 0 , a + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        11,
        22,
        6,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;",
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        11,
        22,
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;",
        "sort ( a from 0 , a + n ) ;",
        "cin >> n >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        11,
        22,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;",
        "last += a [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        22,
        20,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        22,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "stop ;",
        "cin >> n >> n ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "sort ( a from 0 , a + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        11,
        6,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        11,
        6,
        20,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        11,
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "sort ( a from 0 , a + n ) ;",
        "cin >> n >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "last += a [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; ++ from )",
        "cin >> n >> n ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        6
      ],
      "mod_code": [
        "stop ;",
        "sort ( a from 0 , a + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        22,
        6,
        20
      ],
      "mod_code": [
        "stop ;",
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        22,
        6,
        20,
        2
      ],
      "mod_code": [
        "stop ;",
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        22,
        6,
        2
      ],
      "mod_code": [
        "stop ;",
        "sort ( a from 0 , a + n ) ;",
        "cin >> n >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        22,
        20
      ],
      "mod_code": [
        "stop ;",
        "last += a [ i ] ;"
      ],
      "err_line": 22,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        20,
        2
      ],
      "mod_code": [
        "stop ;",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 22,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        2
      ],
      "mod_code": [
        "stop ;",
        "cin >> n >> n ;"
      ],
      "err_line": 22,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        6,
        20,
        2
      ],
      "mod_code": [
        "sort ( a from 0 , a + n ) ;",
        "last += a [ i ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "sort ( a from 0 , a + n ) ;",
        "cin >> n >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘from’"
    }
  ]
}