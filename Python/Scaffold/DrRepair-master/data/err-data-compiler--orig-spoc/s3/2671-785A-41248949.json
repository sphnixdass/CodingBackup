{
  "meta": {
    "index": 2671,
    "hitid": "3FSEU3P2NRUHBT3CFUH6VKPC3JWRRA",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "785A",
    "subid": "41248949"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "m = string , int map",
      "code": "map < string , int > m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set m [ \" Tetrahedron \" ] to 4",
      "code": "m [ \" Tetrahedron \" ] = 4 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set m [ \" Cube \" ] to 6",
      "code": "m [ \" Cube \" ] = 6 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set m [ \" Octahedron \" ] to 8",
      "code": "m [ \" Octahedron \" ] = 8 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set m [ \" Dodecahedron \" ] to 12",
      "code": "m [ \" Dodecahedron \" ] = 12 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set m [ \" Icosahedron \" ] to 20",
      "code": "m [ \" Icosahedron \" ] = 20 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "curr = string",
      "code": "string curr ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "cnt = int with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read curr",
      "code": "cin >> curr ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment cnt by m [ curr ]",
      "code": "cnt += m [ curr ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < int , int > m ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘std::map<int, int>::key_type {aka int}’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "m [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "m [ \" Icosahedron ' ] = 20 ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char curr ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘std::map<int, int>::key_type {aka int}’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        3,
        10
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘std::map<int, int>::key_type {aka int}’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        3,
        10,
        6
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        3,
        10,
        15
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;",
        "cout << cnt ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘std::map<int, int>::key_type {aka int}’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        3,
        10,
        4
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        3,
        6
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        3,
        6,
        15
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        3,
        6,
        4
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        3,
        15
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "cout << cnt ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘std::map<int, int>::key_type {aka int}’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        3,
        15,
        4
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        3,
        4
      ],
      "mod_code": [
        "char curr ;",
        "map < int , int > m ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "char curr ;",
        "int cnt = ' 0 ' ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        10,
        6
      ],
      "mod_code": [
        "char curr ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        6,
        15
      ],
      "mod_code": [
        "char curr ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        6,
        4
      ],
      "mod_code": [
        "char curr ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        15
      ],
      "mod_code": [
        "char curr ;",
        "int cnt = ' 0 ' ;",
        "cout << cnt ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        4
      ],
      "mod_code": [
        "char curr ;",
        "int cnt = ' 0 ' ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        4
      ],
      "mod_code": [
        "char curr ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "char curr ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        6,
        15
      ],
      "mod_code": [
        "char curr ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        6,
        15,
        4
      ],
      "mod_code": [
        "char curr ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        6,
        4
      ],
      "mod_code": [
        "char curr ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "char curr ;",
        "cout << cnt ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        15,
        4
      ],
      "mod_code": [
        "char curr ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "char curr ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘std::map<int, int>::key_type {aka int}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        6
      ],
      "mod_code": [
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        10,
        6,
        15
      ],
      "mod_code": [
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        10,
        6,
        4
      ],
      "mod_code": [
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        10,
        15
      ],
      "mod_code": [
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;",
        "cout << cnt ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘std::map<int, int>::key_type {aka int}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        15,
        4
      ],
      "mod_code": [
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        10,
        4
      ],
      "mod_code": [
        "map < int , int > m ;",
        "int cnt = ' 0 ' ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "map < int , int > m ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        6,
        15
      ],
      "mod_code": [
        "map < int , int > m ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        6,
        15,
        4
      ],
      "mod_code": [
        "map < int , int > m ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "map < int , int > m ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "map < int , int > m ;",
        "cout << cnt ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘std::map<int, int>::key_type {aka int}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        15,
        4
      ],
      "mod_code": [
        "map < int , int > m ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "map < int , int > m ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        6,
        15
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        6,
        15,
        4
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        6,
        4
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        15,
        4
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15,
        4
      ],
      "mod_code": [
        "m [ \" Octahedron ' ] = 8 ;",
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "m [ \" Octahedron ' ] = 8 ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "cout << cnt ;",
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    }
  ]
}