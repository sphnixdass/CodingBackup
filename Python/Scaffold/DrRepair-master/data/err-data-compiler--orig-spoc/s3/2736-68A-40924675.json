{
  "meta": {
    "index": 2736,
    "hitid": "3JHB4BPSFK3BVSSQ8YSKZ9FD1BJQ9G",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "68A",
    "subid": "40924675"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int x",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < ( int ) 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create int y",
      "code": "int y ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read y",
      "code": "cin >> y ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "x = min of x and y",
      "code": "x = min ( x , y ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create int a and b",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = a to b inclusive and to x , increment c",
      "code": "for ( int i = a ; i <= b && i < x ; i ++ ) c ++ ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char x ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(char&, int&)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char y ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "gets ( y ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int a and b ;"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( cin >> a >> b )"
      ],
      "err_line": 11,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "c = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "cout << c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        12,
        2
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "cout << c ;",
        "while ( cin >> x )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        12,
        4
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "cout << c ;",
        "char y ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        12,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "cout << c ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        2
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "while ( cin >> x )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        2,
        4
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "while ( cin >> x )",
        "char y ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "while ( cin >> x )",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        4
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "char y ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "gets ( y ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        12,
        2,
        4
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "cout << c ;",
        "while ( cin >> x )",
        "char y ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        11,
        12,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "cout << c ;",
        "while ( cin >> x )",
        "while ( cin >> a >> b )"
      ],
      "err_line": 11,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        4
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "cout << c ;",
        "char y ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        11,
        12,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "cout << c ;",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        11,
        12,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "cout << c ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 11,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        4
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "while ( cin >> x )",
        "char y ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        11,
        2,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "while ( cin >> x )",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        11,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "while ( cin >> x )",
        "while ( cin >> a >> b )"
      ],
      "err_line": 11,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "char y ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "for ( int i = a ; i <= b ; i ++ ) { c ++ ; }",
        "while ( cin >> a >> b )"
      ],
      "err_line": 11,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "gets ( y ) ;",
        "cout << c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        2
      ],
      "mod_code": [
        "gets ( y ) ;",
        "cout << c ;",
        "while ( cin >> x )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        2,
        4
      ],
      "mod_code": [
        "gets ( y ) ;",
        "cout << c ;",
        "while ( cin >> x )",
        "char y ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        2,
        9
      ],
      "mod_code": [
        "gets ( y ) ;",
        "cout << c ;",
        "while ( cin >> x )",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        4
      ],
      "mod_code": [
        "gets ( y ) ;",
        "cout << c ;",
        "char y ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        4,
        9
      ],
      "mod_code": [
        "gets ( y ) ;",
        "cout << c ;",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        9
      ],
      "mod_code": [
        "gets ( y ) ;",
        "cout << c ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "gets ( y ) ;",
        "while ( cin >> x )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "gets ( y ) ;",
        "while ( cin >> x )",
        "char y ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2,
        4,
        9
      ],
      "mod_code": [
        "gets ( y ) ;",
        "while ( cin >> x )",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2,
        9
      ],
      "mod_code": [
        "gets ( y ) ;",
        "while ( cin >> x )",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "gets ( y ) ;",
        "char y ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        9
      ],
      "mod_code": [
        "gets ( y ) ;",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "gets ( y ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        2,
        4
      ],
      "mod_code": [
        "cout << c ;",
        "while ( cin >> x )",
        "char y ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        12,
        2,
        4,
        9
      ],
      "mod_code": [
        "cout << c ;",
        "while ( cin >> x )",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        12,
        2,
        9
      ],
      "mod_code": [
        "cout << c ;",
        "while ( cin >> x )",
        "while ( cin >> a >> b )"
      ],
      "err_line": 11,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "cout << c ;",
        "char y ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        12,
        4,
        9
      ],
      "mod_code": [
        "cout << c ;",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "cout << c ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 11,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> x )",
        "char y ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "while ( cin >> x )",
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "while ( cin >> x )",
        "while ( cin >> a >> b )"
      ],
      "err_line": 11,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "char y ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, char&)’"
    }
  ]
}