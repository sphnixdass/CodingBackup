{
  "meta": {
    "index": 238,
    "hitid": "3ZTE0JGGCEMA8EMD55A7CULLSV8OCR",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "404A",
    "subid": "48939078"
  },
  "lines": [
    {
      "line": 0,
      "text": "integer as n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character array arr size of 300 by 300",
      "code": "char arr [ 300 ] [ 300 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to less than n do the following",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to less than n input arr array values",
      "code": "for ( int j = 0 ; j < n ; j ++ ) cin >> arr [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if arr [ 0 ] [ 0 ] is arr [ 1 ] [ 0 ] then do the following",
      "code": "if ( arr [ 0 ] [ 0 ] == arr [ 1 ] [ 0 ] )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "output NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to less than n do the following",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 0 to less than n do the following",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if i is j or j + i then do the following",
      "code": "if ( i == j || j + i == n - 1 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if arr [ i ] [ j ] is not equal to arr [ 0 ] [ 0 ] then do the following",
      "code": "if ( arr [ i ] [ j ] != arr [ 0 ] [ 0 ] )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "output NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if arr [ i ] [ j ] is not equal to arr [ 1 ] [ 0 ] then do the following",
      "code": "if ( arr [ i ] [ j ] != arr [ 1 ] [ 0 ] )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "output NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "output YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( i == j || i + i == j )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        17
      ],
      "mod_code": [
        "if ( i == j || i + i == j )",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "if ( i == j || i + i == j )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( i == j || j + i == j )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        17
      ],
      "mod_code": [
        "if ( i == j || j + i == j )",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "if ( i == j || j + i == j )",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}