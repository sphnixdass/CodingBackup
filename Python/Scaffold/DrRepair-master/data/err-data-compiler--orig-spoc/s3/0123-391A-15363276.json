{
  "meta": {
    "index": 123,
    "hitid": "3RBI0I35XEXYPSUWIZ84LIFT0SMY36",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "391A",
    "subid": "15363276"
  },
  "lines": [
    {
      "line": 0,
      "text": "maxN = const integer with maxN = 100 * 100 + 100",
      "code": "const int maxN = 100 * 100 + 100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , a , b , c = long long with b = 1",
      "code": "long long n , a , b = 1 , c ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to s . size ( ) exclusive",
      "code": "for ( int i = 1 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s [ i ] is s [ i - 1 ]",
      "code": "if ( s [ i ] == s [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment b",
      "code": "b ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment a",
      "code": "a ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "a = 0",
      "code": "a = 0 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if b modulo 2 is 0 and ( a is 0 or i is s . size ( ) - 1 ) increment c",
      "code": "if ( b % 2 == 0 && ( a == 0 || i == s . size ( ) - 1 ) ) c ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if a is 0 , b = 1",
      "code": "if ( a == 0 ) b = 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        9
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "s >> s ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        14
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        10
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "s >> s ;",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        14
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "do",
        "cout << c ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        10
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "do",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        14
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "cout << c ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        14,
        10
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "cout << c ;",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "char s ;",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        4,
        9
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "s >> s ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        4,
        9,
        14
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "s >> s ;",
        "do",
        "cout << c ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        4,
        9,
        10
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "s >> s ;",
        "do",
        "int a = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        4,
        14
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        4,
        14,
        10
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "s >> s ;",
        "cout << c ;",
        "int a = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        4,
        10
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "s >> s ;",
        "int a = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        9,
        14
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "do",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        10
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "do",
        "cout << c ;",
        "int a = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        9,
        10
      ],
      "mod_code": [
        "long long n , a , b , c = 1 ;",
        "do",
        "int a = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "char s ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "char s ;",
        "s >> s ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        14
      ],
      "mod_code": [
        "char s ;",
        "s >> s ;",
        "do",
        "cout << c ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        10
      ],
      "mod_code": [
        "char s ;",
        "s >> s ;",
        "do",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        4,
        14
      ],
      "mod_code": [
        "char s ;",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        4,
        14,
        10
      ],
      "mod_code": [
        "char s ;",
        "s >> s ;",
        "cout << c ;",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        4,
        10
      ],
      "mod_code": [
        "char s ;",
        "s >> s ;",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "char s ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        9,
        14
      ],
      "mod_code": [
        "char s ;",
        "do",
        "cout << c ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        9,
        14,
        10
      ],
      "mod_code": [
        "char s ;",
        "do",
        "cout << c ;",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        9,
        10
      ],
      "mod_code": [
        "char s ;",
        "do",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "char s ;",
        "cout << c ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        14,
        10
      ],
      "mod_code": [
        "char s ;",
        "cout << c ;",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "char s ;",
        "int a = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        9,
        14
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "cout << c ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "cout << c ;",
        "int a = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        9,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "int a = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        14,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "cout << c ;",
        "int a = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "int a = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "do",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        9,
        14,
        10
      ],
      "mod_code": [
        "do",
        "cout << c ;",
        "int a = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "do",
        "int a = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘(’ token"
    }
  ]
}