{
  "meta": {
    "index": 165,
    "hitid": "32TZXEA1OLEMHI2X6O6EH0WP77B14Y",
    "workerid": "AIWEXPJAU66D9",
    "probid": "363A",
    "subid": "47432685"
  },
  "lines": [
    {
      "line": 0,
      "text": "DisplayBoard is a void function with int argument remainder",
      "code": "void DisplayBoard ( int remainder )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if remainder is equal to 0",
      "code": "if ( remainder == 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "print \" O - | - OOOO \"",
      "code": "cout << \" O-|-OOOO \" << endl ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else if remainder is equal to 1",
      "code": "else if ( remainder == 1 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" O - | O - OOO \"",
      "code": "cout << \" O-|O-OOO \" << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else if remainder is equal to 2",
      "code": "else if ( remainder == 2 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" O - | OO - OO \"",
      "code": "cout << \" O-|OO-OO \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else if remainder is equal to 3",
      "code": "else if ( remainder == 3 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" O - | OOO - O \"",
      "code": "cout << \" O-|OOO-O \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else if remainder is equal to 4",
      "code": "else if ( remainder == 4 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" O - | OOOO - \"",
      "code": "cout << \" O-|OOOO- \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else if remainder is equal to 5",
      "code": "else if ( remainder == 5 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" - O | - OOOO \"",
      "code": "cout << \" -O|-OOOO \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else if remainder is equal to 6",
      "code": "else if ( remainder == 6 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" - O | O - OOO \"",
      "code": "cout << \" -O|O-OOO \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else if remainder is equal to 7",
      "code": "else if ( remainder == 7 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" - O | OO - OO \"",
      "code": "cout << \" -O|OO-OO \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if remainder is equal to 8",
      "code": "else if ( remainder == 8 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" - O | OOO - O \"",
      "code": "cout << \" -O|OOO-O \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else if remainder is equal to 9",
      "code": "else if ( remainder == 9 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" - O | OOOO - \"",
      "code": "cout << \" -O|OOOO- \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 23,
      "text": "declare integer variables num and remainder",
      "code": "int num , remainder ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "read input to num",
      "code": "cin >> num ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if num is equal to 0",
      "code": "if ( num == 0 )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print \" O - | - OOOO \"",
      "code": "cout << \" O-|-OOOO \" << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "while num > 0",
      "code": "while ( num > 0 )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "assign num % 10 to remainder",
      "code": "remainder = num % 10 ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "call method DisplayBoard ( remainder )",
      "code": "DisplayBoard ( remainder ) ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "change num to num / 10",
      "code": "num = num / 10 ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void DisplayBoard ( int x )"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "else if ( remainder == l )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else if ( i == 2 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" +------------------------+ \""
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else if ( remainder == l )"
      ],
      "err_line": 17,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int num = remainder , remainder ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘double (*)(double, double) throw ()’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        6,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        6,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        6,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        8,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        8,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        6,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        6,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        8,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        8,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        16,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        16,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|\\n \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        16,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |.|) \" << endl ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \""
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        18,
        26
      ],
      "mod_code": [
        "cout << \" |= \" ;",
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        26
      ],
      "mod_code": [
        "cout << \" +------------------------+ \"",
        "cout << \" |.|) \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘}’ token"
    }
  ]
}