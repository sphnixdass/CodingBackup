{
  "meta": {
    "index": 823,
    "hitid": "37VHPF5VYCX7NMZXYOLBF8VLDQ18C5",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "987A",
    "subid": "43523139"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let ints n , x1 = 0 , x2 = 0 , x3 = 0 , x4 = 0 , x5 = 0 , and x6 = 0",
      "code": "int n , x1 = 0 , x2 = 0 , x3 = 0 , x4 = 0 , x5 = 0 , x6 = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "getline ( cin , s ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print 6 - n",
      "code": "cout << 6 - n << endl ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read s",
      "code": "getline ( cin , s ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ 0 ] is equal to ' p ' , set x1 to 1",
      "code": "if ( s [ 0 ] == ' p ' ) x1 = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s [ 0 ] is equal to ' g ' , set x2 to 1",
      "code": "if ( s [ 0 ] == ' g ' ) x2 = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if s [ 0 ] equals ' b ' , set x3 to 1",
      "code": "if ( s [ 0 ] == ' b ' ) x3 = 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if s [ 0 ] is ' 0 ' , set x4 to 1",
      "code": "if ( s [ 0 ] == ' o ' ) x4 = 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if s [ 0 ] equals ' r ' , set x5 to 1",
      "code": "if ( s [ 0 ] == ' r ' ) x5 = 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if s [ 0 ] is ' y ' , set x6 to 1",
      "code": "if ( s [ 0 ] == ' y ' ) x6 = 1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if x1 is falsy , print \" Power \"",
      "code": "if ( ! x1 ) cout << \" Power \" << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if x2 is falsy , print \" Time \"",
      "code": "if ( ! x2 ) cout << \" Time \" << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if ! x3 is truthy , print \" Space \"",
      "code": "if ( ! x3 ) cout << \" Space \" << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if ! x4 is truthy , print \" Soul \"",
      "code": "if ( ! x4 ) cout << \" Soul \" << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if ! x5 is truthy , print \" Reality \"",
      "code": "if ( ! x5 ) cout << \" Reality \" << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if x6 is falsy , print \" Mind \"",
      "code": "if ( ! x6 ) cout << \" Mind \" << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , x1 = 0 , x2 = 0 , x2 = 0 , x4 = 0 , x5 = 0 , x6 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int x2’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}