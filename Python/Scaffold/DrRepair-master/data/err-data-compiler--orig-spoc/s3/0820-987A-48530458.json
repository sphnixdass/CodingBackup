{
  "meta": {
    "index": 820,
    "hitid": "36BTXXLZ2V2AAN1E4ILTNRE2B58R4N",
    "workerid": "AIWEXPJAU66D9",
    "probid": "987A",
    "subid": "48530458"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new integer called n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "inp is a new array of strings with size 6",
      "code": "string inp [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 0 to n exclusive , read inp [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> inp [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create string array s1 with elements \" purple \" , \" green \" , \" blue \" , \" orange \" , \" red \" , \" yellow \"",
      "code": "string s1 [ 6 ] = { \" purple \" , \" green \" , \" blue \" , \" orange \" , \" red \" , \" yellow \" } ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create string array s2 filled with values \" Power \" , \" Time \" , \" Space \" , \" Soul \" , \" Reality \" , \" Mind \"",
      "code": "string s2 [ 6 ] = { \" Power \" , \" Time \" , \" Space \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print 6 - n",
      "code": "cout << 6 - n << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "start for loop from i = 0 to 6 exclusive incrementing i",
      "code": "for ( int i = 0 ; i < 6 ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create new boolean mark = true",
      "code": "bool mark = true ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "in a loop from j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if s1 [ i ] is equal to inp [ j ] , change mark to false",
      "code": "if ( s1 [ i ] == inp [ j ] ) mark = false ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if mark is true , print s2 [ i ] to the standard output",
      "code": "if ( mark == true ) cout << s2 [ i ] << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n = s . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char inp [ 6 ] ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' ) mark = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        11
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        9
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        2
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        6,
        11
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        9
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        2
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        2
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "char inp [ 6 ] ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        3,
        11
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        3,
        11,
        9
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        11,
        2
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        3,
        9
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "char inp [ 6 ] ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        9,
        2
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "char inp [ 6 ] ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "char inp [ 6 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        11,
        9
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        9,
        2
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        2
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "string s1 [ ] = { \" purple \" , \" green \" , \" blue \" , \" red \" , \" red \" , \" yellow \" } ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        3,
        11
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        3,
        11,
        9
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        11,
        2
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        9,
        2
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "char inp [ 6 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        11,
        9
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        9,
        2
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        2
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "string s2 [ ] = { \" Power \" , \" Time \" , \" Time \" , \" Soul \" , \" Reality \" , \" Mind \" } ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        3,
        11,
        9
      ],
      "mod_code": [
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        9,
        2
      ],
      "mod_code": [
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "char inp [ 6 ] ;",
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "char inp [ 6 ] ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "char inp [ 6 ] ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "char inp [ 6 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9,
        2
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' [ ' ) mark = false ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "mark = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘mark’ was not declared in this scope"
    }
  ]
}