{
  "meta": {
    "index": 2396,
    "hitid": "3K2CEDRACBV3US3CEBQK90WKKUQMTF",
    "workerid": "A1APYLD4DUK33J",
    "probid": "472A",
    "subid": "48560915"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare isprime with integer x as argument , return boolean",
      "code": "bool isprime ( int x )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for i = 2 to i * i is less or equal to x , incrementing i",
      "code": "for ( int i = 2 ; i * i <= x ; ++ i )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for x % i is 0 , return false from function",
      "code": "if ( x % i == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "return true from function",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 4 , incrementing i by 2",
      "code": "for ( int i = 4 ; ; i += 2 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if result of run isprime with n - 1 as argument is false",
      "code": "if ( ! isprime ( n - i ) )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print i print ' ' print n - 1 print newline",
      "code": "cout << i << ' ' << ( n - i ) << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool isprime ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i * i <= x ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( ; x % i == 0 ) return false ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "if ( ! isprime ( n - 1 ) )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        10
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "if ( ! isprime ( n - 1 ) )",
        "cout << i << ' ' << n - 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        7
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "if ( ! isprime ( n - 1 ) )",
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        8
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "if ( ! isprime ( n - 1 ) )",
        "cout << i << ' ' << n - 1 << endl ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        7
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "if ( ! isprime ( n - 1 ) )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        7,
        8
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "if ( ! isprime ( n - 1 ) )",
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        8
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "if ( ! isprime ( n - 1 ) )",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cout << i << ' ' << n - 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        10,
        7
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        10,
        7,
        8
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        10,
        7,
        9
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        10,
        8
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cout << i << ' ' << n - 1 << endl ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        10,
        8,
        9
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cout << i << ' ' << n - 1 << endl ;",
        "for ( i = 4 ; ; i += 2 )",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        10,
        9
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cout << i << ' ' << n - 1 << endl ;",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        9
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "cin >> N ;",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        8,
        9
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "for ( i = 4 ; ; i += 2 )",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "for ( x ; x % i == 0 ; return i )",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        9,
        10,
        7
      ],
      "mod_code": [
        "if ( ! isprime ( n - 1 ) )",
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        7,
        8
      ],
      "mod_code": [
        "if ( ! isprime ( n - 1 ) )",
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        8
      ],
      "mod_code": [
        "if ( ! isprime ( n - 1 ) )",
        "cout << i << ' ' << n - 1 << endl ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "if ( ! isprime ( n - 1 ) )",
        "cin >> N ;"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        8
      ],
      "mod_code": [
        "if ( ! isprime ( n - 1 ) )",
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "if ( ! isprime ( n - 1 ) )",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        8
      ],
      "mod_code": [
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        8,
        9
      ],
      "mod_code": [
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        9
      ],
      "mod_code": [
        "cout << i << ' ' << n - 1 << endl ;",
        "cin >> N ;",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "cout << i << ' ' << n - 1 << endl ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        9
      ],
      "mod_code": [
        "cout << i << ' ' << n - 1 << endl ;",
        "for ( i = 4 ; ; i += 2 )",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( i = 4 ; ; i += 2 )",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( i = 4 ; ; i += 2 )",
        "if ( isprime ( n - 1 ) )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}