{
  "meta": {
    "index": 2324,
    "hitid": "3IH9TRB0FBTGPP1CRD8IB168B2I1I8",
    "workerid": "AIWEXPJAU66D9",
    "probid": "117A",
    "subid": "39771872"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs n , m , s , f and t",
      "code": "long long n , m , s , f , t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare long long k = 0",
      "code": "long long k = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s , f and t",
      "code": "cin >> s >> f >> t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s = f",
      "code": "if ( s == f )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "go to the start of the loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "k = t - t % ( ( m - 1 ) * 2 )",
      "code": "k = t - t % ( ( m - 1 ) * 2 ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "t = t % ( ( m - 1 ) * 2 )",
      "code": "t = t % ( ( m - 1 ) * 2 ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if f is greater than s",
      "code": "if ( f > s )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if t is greater than s - 1",
      "code": "if ( t > s - 1 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increase k by ( m - 1 ) * 2 + ( f - 1 )",
      "code": "k += ( m - 1 ) * 2 + ( f - 1 ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increase k by f - 1",
      "code": "k += f - 1 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else if f is less than s",
      "code": "else if ( f < s )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if t is greater than m - 1 + m - s",
      "code": "if ( t > m - 1 + m - s )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "increase k by ( m - 1 ) * 2 + m - 1 + m - f",
      "code": "k += ( m - 1 ) * 2 + m - 1 + m - f ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 22,
      "text": "increase k by m - 1 + m - f",
      "code": "k += m - 1 + m - f ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if k is greater than 1e7",
      "code": "if ( k > 1e7 )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "set decimal precision of the output stream to 8 and print k and fixed",
      "code": "cout << setprecision ( 8 ) << k << fixed << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print k",
      "code": "cout << k << endl ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "to ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "cout . precision ( 8 , fixed ) ;"
      ],
      "err_line": 26,
      "err_msg": "no matching function for call to ‘std::basic_ostream<char>::precision(int, std::ios_base& (&)(std::ios_base&))’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        26
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        20,
        26,
        21
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        26,
        21,
        28
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do",
        "cout << k ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        26,
        21,
        5
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        26,
        21,
        11
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        26,
        28
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "cout << k ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        5
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "cout << k ;",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        11
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "cout << k ;",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        20,
        26,
        5
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        20,
        26,
        5,
        11
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "while ( cin >> s >> f >> t )",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        20,
        26,
        11
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        21,
        28
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "do",
        "cout << k ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        21,
        28,
        5
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "do",
        "cout << k ;",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        21,
        28,
        11
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "do",
        "cout << k ;",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        21,
        5
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "do",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        21,
        5,
        11
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "do",
        "while ( cin >> s >> f >> t )",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        21,
        11
      ],
      "mod_code": [
        "k += ( m - 1 ) * 2 + m - m - f - f ;",
        "do",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        21
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        21,
        28
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do",
        "cout << k ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        21,
        28,
        5
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do",
        "cout << k ;",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        21,
        28,
        11
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do",
        "cout << k ;",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        21,
        5
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        21,
        5,
        11
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do",
        "while ( cin >> s >> f >> t )",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        21,
        11
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "do",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        28
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "cout << k ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        26,
        28,
        5
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "cout << k ;",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        26,
        28,
        5,
        11
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "cout << k ;",
        "while ( cin >> s >> f >> t )",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        26,
        28,
        11
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "cout << k ;",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        26,
        5
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        26,
        5,
        11
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "while ( cin >> s >> f >> t )",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        26,
        11
      ],
      "mod_code": [
        "cout . precision ( 8 ) << \" \" << k << endl ;",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘std::streamsize {aka long int}’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        21,
        28
      ],
      "mod_code": [
        "do",
        "cout << k ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        28,
        5
      ],
      "mod_code": [
        "do",
        "cout << k ;",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        28,
        5,
        11
      ],
      "mod_code": [
        "do",
        "cout << k ;",
        "while ( cin >> s >> f >> t )",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        28,
        11
      ],
      "mod_code": [
        "do",
        "cout << k ;",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        5
      ],
      "mod_code": [
        "do",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        5,
        11
      ],
      "mod_code": [
        "do",
        "while ( cin >> s >> f >> t )",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        11
      ],
      "mod_code": [
        "do",
        "t += ( ( m - 1 ) * 2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}