{
  "meta": {
    "index": 2481,
    "hitid": "3VDVA3ILID92TYVH1P8FQPTSXCMG12",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "574A",
    "subid": "47660397"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "pq = int priority_queue",
      "code": "priority_queue < int > pq ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "k = int",
      "code": "int k ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if k > = m push k to pq",
      "code": "if ( k >= m ) pq . push ( k ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "cnt = int with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "loop while pq is not empty",
      "code": "while ( ! pq . empty ( ) )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "k = int with k = top of pq",
      "code": "int k = pq . top ( ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "pop pq",
      "code": "pq . pop ( ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if k > = m",
      "code": "if ( k >= m )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increment m",
      "code": "m ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if m < = k push k to pq",
      "code": "if ( m <= k ) pq . push ( k ) ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "inline int pq ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( m ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( k >= m ) pq . push_back ( k ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::priority_queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( ! pq . length ( ) )"
      ],
      "err_line": 11,
      "err_msg": "‘class std::priority_queue<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "pq . pop_back ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::priority_queue<int>’ has no member named ‘pop_back’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else if ( k >= m )"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        10,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        4,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;",
        "inline int pq ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        10,
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int cnt = ' 0 ' ;",
        "inline int pq ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        10,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int cnt = ' 0 ' ;",
        "inline int pq ;",
        "cin >> N ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        10,
        1,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int cnt = ' 0 ' ;",
        "inline int pq ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int cnt = ' 0 ' ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        3,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int cnt = ' 0 ' ;",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "gets ( m ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "gets ( m ) ;",
        "inline int pq ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        4,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "gets ( m ) ;",
        "inline int pq ;",
        "cin >> N ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        4,
        1,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "gets ( m ) ;",
        "inline int pq ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "gets ( m ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        3,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "gets ( m ) ;",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "gets ( m ) ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "inline int pq ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "inline int pq ;",
        "cin >> N ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        1,
        3,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "inline int pq ;",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        1,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "inline int pq ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        4,
        1
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;",
        "inline int pq ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        10,
        4,
        1,
        3
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;",
        "inline int pq ;",
        "cin >> N ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        10,
        4,
        1,
        12
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;",
        "inline int pq ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        10,
        4,
        3
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        3,
        12
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        12
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "gets ( m ) ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "inline int pq ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        10,
        1,
        3
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "inline int pq ;",
        "cin >> N ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        10,
        1,
        3,
        12
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "inline int pq ;",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        10,
        1,
        12
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "inline int pq ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        12
      ],
      "mod_code": [
        "int cnt = ' 0 ' ;",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "gets ( m ) ;",
        "inline int pq ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        1,
        3
      ],
      "mod_code": [
        "gets ( m ) ;",
        "inline int pq ;",
        "cin >> N ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        1,
        3,
        12
      ],
      "mod_code": [
        "gets ( m ) ;",
        "inline int pq ;",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        1,
        12
      ],
      "mod_code": [
        "gets ( m ) ;",
        "inline int pq ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "gets ( m ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        12
      ],
      "mod_code": [
        "gets ( m ) ;",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "gets ( m ) ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "inline int pq ;",
        "cin >> N ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        1,
        3,
        12
      ],
      "mod_code": [
        "inline int pq ;",
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "inline int pq ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘pq’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "int k = pq . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}