{
  "meta": {
    "index": 1232,
    "hitid": "3Z33IC0JC0G300O7UXMU5WELH1KV9W",
    "workerid": "AIWEXPJAU66D9",
    "probid": "44A",
    "subid": "48200765"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set integer n , cnt to 0",
      "code": "int n , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "mp = map of string to bool",
      "code": "map < string , bool > mp ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "str = string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "invoke function getchar",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while can decrement n",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "call function getline with result of the input and str",
      "code": "getline ( cin , str ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if there is no element str in mp",
      "code": "if ( ! mp . count ( str ) )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increase cnt by one",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set mp [ str ] to 1",
      "code": "mp [ str ] = 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "getline ( input , str ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( can -- )"
      ],
      "err_line": 6,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "getline ( ( input , str ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( mp . find ( str ) )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘mp.std::map<_Key, _Tp, _Compare, _Alloc>::find<std::__cxx11::basic_string<char>, bool, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >(str)’ from ‘std::map<std::__cxx11::basic_string<char>, bool>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, bool> >}’ to ‘bool’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "if ( mp . count ( str ) )"
      ],
      "err_line": 7,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "if ( mp . count ( str ) )",
        "while ( can -- )"
      ],
      "err_line": 6,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        5
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "if ( mp . count ( str ) )",
        "while ( can -- )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        5
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "if ( mp . count ( str ) )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "while ( can -- )"
      ],
      "err_line": 6,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        8
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "while ( can -- )",
        "if ( mp . find ( str ) )"
      ],
      "err_line": 6,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        8,
        5
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "while ( can -- )",
        "if ( mp . find ( str ) )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "while ( can -- )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "if ( mp . find ( str ) )"
      ],
      "err_line": 7,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        5
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "if ( mp . find ( str ) )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "getline ( input , str ) ;",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( mp . count ( str ) )",
        "while ( can -- )"
      ],
      "err_line": 6,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        7
      ],
      "mod_code": [
        "if ( mp . count ( str ) )",
        "while ( can -- )",
        "getline ( ( input , str ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        7,
        5
      ],
      "mod_code": [
        "if ( mp . count ( str ) )",
        "while ( can -- )",
        "getline ( ( input , str ) ) ;",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        5
      ],
      "mod_code": [
        "if ( mp . count ( str ) )",
        "while ( can -- )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( mp . count ( str ) )",
        "getline ( ( input , str ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        5
      ],
      "mod_code": [
        "if ( mp . count ( str ) )",
        "getline ( ( input , str ) ) ;",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "if ( mp . count ( str ) )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "while ( can -- )",
        "if ( mp . find ( str ) )"
      ],
      "err_line": 6,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        7
      ],
      "mod_code": [
        "while ( can -- )",
        "if ( mp . find ( str ) )",
        "getline ( ( input , str ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        7,
        5
      ],
      "mod_code": [
        "while ( can -- )",
        "if ( mp . find ( str ) )",
        "getline ( ( input , str ) ) ;",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "while ( can -- )",
        "if ( mp . find ( str ) )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "while ( can -- )",
        "getline ( ( input , str ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "while ( can -- )",
        "getline ( ( input , str ) ) ;",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "while ( can -- )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( mp . find ( str ) )",
        "getline ( ( input , str ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        5
      ],
      "mod_code": [
        "if ( mp . find ( str ) )",
        "getline ( ( input , str ) ) ;",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "if ( mp . find ( str ) )",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "getline ( ( input , str ) ) ;",
        "getchar ( function ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘function’ was not declared in this scope"
    }
  ]
}