{
  "meta": {
    "index": 2107,
    "hitid": "3909MD9T2ZBVZZTY2TXCFOCAL6SFEN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "961A",
    "subid": "37684720"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "i , n , k and temp are new integers with i = 0 , n = 0 , k = 0 and temp = 0 ; * m is an integer pointer",
      "code": "int i = 0 , n = 0 , k = 0 , temp = 0 , * m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and k from the user input",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "point m to the new array of integers with n elements",
      "code": "m = new int [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set n first elements of m to 0",
      "code": "for ( i = 0 ; i < n ; ++ i ) { m [ i ] = 0 ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "start for loop from i = 0 to k exclusive incrementing i",
      "code": "for ( i = 0 ; i < k ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read from the input to temp",
      "code": "cin >> temp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment m [ temp - 1 ]",
      "code": "++ m [ temp - 1 ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "change the value of temp to m [ 0 ]",
      "code": "temp = m [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "in a for loop , change i from 1 to n exclusive , setting temp to min of temp and m [ i ] on each iteration",
      "code": "for ( i = 1 ; i < n ; ++ i ) { temp = min ( temp , m [ i ] ) ; }",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print temp",
      "code": "cout << temp << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "m = m [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( temp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        4,
        10
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        4,
        10,
        3
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "m = m [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        4,
        10,
        6
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "m = m [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        4,
        3,
        6
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        10,
        3
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "m = m [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        10,
        3,
        6
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        10,
        6
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "m = m [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int i = 0 , n = 0 , k = 0 , k = 0 , temp = 0 ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        10,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "m = m [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        10,
        1,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "m = m [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "gets ( temp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "m = m [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        1,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "m = m [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { m = 0 ; }",
        "gets ( temp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        10,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "m = m [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        10,
        1,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        10,
        1,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "m = m [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ ) { temp [ i ] = min ( temp , m [ i ] ) ; }",
        "gets ( temp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "m = m [ n ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int i = 0 , n , k = 0 , k = 0 , temp = 0 , temp = 0 ;",
        "gets ( temp ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "m = m [ n ] ;",
        "gets ( temp ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    }
  ]
}