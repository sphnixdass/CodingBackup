{
  "meta": {
    "index": 2684,
    "hitid": "3SA4EMRVJVW8ZM3Y8PU26TOATB90PT",
    "workerid": "AIWEXPJAU66D9",
    "probid": "785A",
    "subid": "48891241"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n is a new integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare new integer called a = 0",
      "code": "int a = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create new string called s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read from the input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "start for loop from i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read user input to s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ 0 ] = ' I '",
      "code": "if ( s [ 0 ] == ' I ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "change a to the sum of a and 20",
      "code": "a += 20 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if s [ 0 ] is equal to ' D '",
      "code": "else if ( s [ 0 ] == ' D ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "change a to a + 12",
      "code": "a += 12 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if s [ 0 ] = ' O '",
      "code": "else if ( s [ 0 ] == ' O ' )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "add 8 to a",
      "code": "a += 8 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if s [ 0 ] = ' C '",
      "code": "else if ( s [ 0 ] == ' C ' )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "add 6 to a",
      "code": "a += 6 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if s [ 0 ] is equal to ' T '",
      "code": "else if ( s [ 0 ] == ' T ' )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "add 4 to a",
      "code": "a += 4 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print a and \" \\ n \" to the standard output",
      "code": "cout << a << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s called ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘called’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" I ' )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "a . push_back ( 6 ) ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘push_back’ in ‘a’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        6,
        15,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "cin >> s >> s ;",
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9,
        6,
        15,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "cin >> s >> s ;",
        "else if ( ! s [ 0 ] == ' T ' )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        6,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "cin >> s >> s ;",
        "{ cin >> n ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9,
        6,
        4,
        13
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "cin >> s >> s ;",
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9,
        6,
        4,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "cin >> s >> s ;",
        "{ cin >> n ;",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        6,
        13,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "cin >> s >> s ;",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        6,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "cin >> s >> s ;",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        15,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9,
        15,
        4,
        13
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9,
        15,
        4,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        15,
        13,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "else if ( ! s [ 0 ] == ' T ' )",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        15,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "else if ( ! s [ 0 ] == ' T ' )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "{ cin >> n ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9,
        4,
        13
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9,
        4,
        13,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        4,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "{ cin >> n ;",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        13,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' D ' )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        15,
        4
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        15,
        4,
        13
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        15,
        4,
        8
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        15,
        13,
        8
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "else if ( ! s [ 0 ] == ' T ' )",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        15,
        8
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "else if ( ! s [ 0 ] == ' T ' )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "{ cin >> n ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        4,
        13
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        4,
        13,
        8
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        4,
        8
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "{ cin >> n ;",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        13,
        8
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        15,
        4,
        13
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        15,
        4,
        13,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        4,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' T ' )",
        "{ cin >> n ;",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        13,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' T ' )",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' T ' )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        13,
        8
      ],
      "mod_code": [
        "{ cin >> n ;",
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "{ cin >> n ;",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] )",
        "a to 20 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    }
  ]
}