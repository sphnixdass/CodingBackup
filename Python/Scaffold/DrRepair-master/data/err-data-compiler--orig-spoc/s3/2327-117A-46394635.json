{
  "meta": {
    "index": 2327,
    "hitid": "3J9L0X0VDFGGFPOCK7RQRYXZOP3W9I",
    "workerid": "AIWEXPJAU66D9",
    "probid": "117A",
    "subid": "46394635"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer variables n and m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer variables s , f and t",
      "code": "int s , f , t ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read s , f and t",
      "code": "cin >> s >> f >> t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s = f",
      "code": "if ( s == f )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "continue the loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "declare integer variables mod and dist",
      "code": "int mod , dist ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if s is less than f",
      "code": "if ( s < f )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set mod to s - 1",
      "code": "mod = s - 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "assign value of f - s to dist",
      "code": "dist = f - s ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "mod = m * 2 - 1 - s",
      "code": "mod = m * 2 - 1 - s ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set dist to s - f",
      "code": "dist = s - f ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "declare integer a = t mod ( 2 * m - 2 )",
      "code": "int a = t % ( 2 * m - 2 ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if a < = mod",
      "code": "if ( a <= mod )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print t - a + mod + dist",
      "code": "cout << t - a + mod + dist << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "skip the rest of the loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print t - a + mod + dist + 2 * m - 2",
      "code": "cout << t - a + mod + dist + 2 * m - 2 << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘a’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int a = t mod ( 2 * m - 2 ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘,’ or ‘;’ before ‘mod’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "rest ;"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "do",
        "cout << t ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        5
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        5,
        16
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "while ( cin >> s >> f >> t )",
        "dist -= f ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        5,
        21
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "while ( cin >> s >> f >> t )",
        "rest ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        5,
        6
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "while ( cin >> s >> f >> t )",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        16
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "dist -= f ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        16,
        21
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "dist -= f ;",
        "rest ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        16,
        6
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "dist -= f ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        21
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "rest ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        21,
        6
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        6
      ],
      "mod_code": [
        "do",
        "cout << t ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "do",
        "while ( cin >> s >> f >> t )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5,
        16
      ],
      "mod_code": [
        "do",
        "while ( cin >> s >> f >> t )",
        "dist -= f ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5,
        16,
        21
      ],
      "mod_code": [
        "do",
        "while ( cin >> s >> f >> t )",
        "dist -= f ;",
        "rest ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5,
        16,
        6
      ],
      "mod_code": [
        "do",
        "while ( cin >> s >> f >> t )",
        "dist -= f ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5,
        21
      ],
      "mod_code": [
        "do",
        "while ( cin >> s >> f >> t )",
        "rest ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5,
        21,
        6
      ],
      "mod_code": [
        "do",
        "while ( cin >> s >> f >> t )",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5,
        6
      ],
      "mod_code": [
        "do",
        "while ( cin >> s >> f >> t )",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "do",
        "dist -= f ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        16,
        21
      ],
      "mod_code": [
        "do",
        "dist -= f ;",
        "rest ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        16,
        21,
        6
      ],
      "mod_code": [
        "do",
        "dist -= f ;",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        16,
        6
      ],
      "mod_code": [
        "do",
        "dist -= f ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "do",
        "rest ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        21,
        6
      ],
      "mod_code": [
        "do",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "do",
        "if ( s == ' f ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        5,
        16,
        21
      ],
      "mod_code": [
        "cout << t ;",
        "while ( cin >> s >> f >> t )",
        "dist -= f ;",
        "rest ;"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        21
      ],
      "mod_code": [
        "cout << t ;",
        "while ( cin >> s >> f >> t )",
        "rest ;"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        21,
        6
      ],
      "mod_code": [
        "cout << t ;",
        "while ( cin >> s >> f >> t )",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16,
        21
      ],
      "mod_code": [
        "cout << t ;",
        "dist -= f ;",
        "rest ;"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16,
        21,
        6
      ],
      "mod_code": [
        "cout << t ;",
        "dist -= f ;",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "cout << t ;",
        "rest ;"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        6
      ],
      "mod_code": [
        "cout << t ;",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        21
      ],
      "mod_code": [
        "while ( cin >> s >> f >> t )",
        "dist -= f ;",
        "rest ;"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        21,
        6
      ],
      "mod_code": [
        "while ( cin >> s >> f >> t )",
        "dist -= f ;",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "while ( cin >> s >> f >> t )",
        "rest ;"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21,
        6
      ],
      "mod_code": [
        "while ( cin >> s >> f >> t )",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "dist -= f ;",
        "rest ;"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        21,
        6
      ],
      "mod_code": [
        "dist -= f ;",
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "rest ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 21,
      "err_msg": "‘rest’ was not declared in this scope"
    }
  ]
}