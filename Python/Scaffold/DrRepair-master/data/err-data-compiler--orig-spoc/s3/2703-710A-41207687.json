{
  "meta": {
    "index": 2703,
    "hitid": "3FI30CQHVKD193O3R9SIKATCPAB6BA",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "710A",
    "subid": "41207687"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "ans = integer",
      "code": "int ans ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "c = string",
      "code": "string c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while reading c",
      "code": "while ( cin >> c )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set ans to 8",
      "code": "ans = 8 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if c [ 0 ] is a OR c [ 0 ] is h",
      "code": "if ( c [ 0 ] == ' a ' || c [ 0 ] == ' h ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if c [ 1 ] is 1 OR c [ 1 ] is 8",
      "code": "if ( c [ 1 ] == ' 1 ' || c [ 1 ] == ' 8 ' )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "set ans to 3",
      "code": "ans = 3 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set ans to 5",
      "code": "ans = 5 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else if c [ 1 ] is 1 OR c [ 1 ] is 8",
      "code": "else if ( c [ 1 ] == ' 1 ' || c [ 1 ] == ' 8 ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set ans to 5",
      "code": "ans = 5 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( c >> c )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( c >> c )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        8,
        7
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "int ans = 3 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        8,
        7,
        5
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        8,
        7,
        2
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "int ans = 3 ;",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8,
        7,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "int ans = 3 ;",
        "int ans = 5 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        8,
        5
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        8,
        5,
        2
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8,
        5,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "int ans = 5 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        8,
        2
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8,
        2,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "do",
        "int ans = 5 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while ( c >> c )",
        "int ans = 3 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        7,
        5
      ],
      "mod_code": [
        "while ( c >> c )",
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        7,
        5,
        2
      ],
      "mod_code": [
        "while ( c >> c )",
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        7,
        5,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "int ans = 5 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        7,
        2
      ],
      "mod_code": [
        "while ( c >> c )",
        "int ans = 3 ;",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        7,
        2,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "int ans = 3 ;",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "int ans = 3 ;",
        "int ans = 5 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( c >> c )",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "while ( c >> c )",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "int ans = 5 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( c >> c )",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        2,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( c >> c )",
        "int ans = 5 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "do",
        "int ans = 3 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        5
      ],
      "mod_code": [
        "do",
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        5,
        2
      ],
      "mod_code": [
        "do",
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        7,
        5,
        9
      ],
      "mod_code": [
        "do",
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        2
      ],
      "mod_code": [
        "do",
        "int ans = 3 ;",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        7,
        2,
        9
      ],
      "mod_code": [
        "do",
        "int ans = 3 ;",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        7,
        9
      ],
      "mod_code": [
        "do",
        "int ans = 3 ;",
        "int ans = 5 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "do",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        2
      ],
      "mod_code": [
        "do",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        5,
        2,
        9
      ],
      "mod_code": [
        "do",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        5,
        9
      ],
      "mod_code": [
        "do",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "do",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        2,
        9
      ],
      "mod_code": [
        "do",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "do",
        "int ans = 5 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        2
      ],
      "mod_code": [
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        5,
        2,
        9
      ],
      "mod_code": [
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        5,
        9
      ],
      "mod_code": [
        "int ans = 3 ;",
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "int ans = 3 ;",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        2,
        9
      ],
      "mod_code": [
        "int ans = 3 ;",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2,
        9
      ],
      "mod_code": [
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "if ( c [ 0 ] == a || c [ 0 ] == ' h ' )",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "char c ;",
        "int ans = 5 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}