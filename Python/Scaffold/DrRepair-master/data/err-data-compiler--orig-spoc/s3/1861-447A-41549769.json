{
  "meta": {
    "index": 1861,
    "hitid": "3NBFJK3IOHCNPQ2I7R6Q2L60P01GOJ",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "447A",
    "subid": "41549769"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "p , n = integer",
      "code": "int p , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read p and n",
      "code": "cin >> p >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "arr = array of p + 7 bool",
      "code": "bool arr [ p + 7 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set all contents of arr to false",
      "code": "memset ( arr , false , sizeof ( arr ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "x = integer",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if arr [ x modulo p ] is true",
      "code": "if ( arr [ x % p ] == true )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print i + 1",
      "code": "cout << i + 1 << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if arr [ x modulo p ] is false",
      "code": "else if ( arr [ x % p ] == false )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "arr [ x modulo p ] = true",
      "code": "arr [ x % p ] = true ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print - 1",
      "code": "cout << - 1 << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> p >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( arr [ x modulo p ] )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "arr [ x modulo p ] = true ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "arr [ x modulo p ] = true ;",
        "while ( cin >> p >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        7
      ],
      "mod_code": [
        "arr [ x modulo p ] = true ;",
        "while ( cin >> p >> n )",
        "x >> x ;"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        7,
        8
      ],
      "mod_code": [
        "arr [ x modulo p ] = true ;",
        "while ( cin >> p >> n )",
        "x >> x ;",
        "if ( arr [ x modulo p ] )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        8
      ],
      "mod_code": [
        "arr [ x modulo p ] = true ;",
        "while ( cin >> p >> n )",
        "if ( arr [ x modulo p ] )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "arr [ x modulo p ] = true ;",
        "x >> x ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        12,
        7,
        8
      ],
      "mod_code": [
        "arr [ x modulo p ] = true ;",
        "x >> x ;",
        "if ( arr [ x modulo p ] )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "arr [ x modulo p ] = true ;",
        "if ( arr [ x modulo p ] )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "x >> x ;"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "x >> x ;",
        "if ( arr [ x modulo p ] )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "if ( arr [ x modulo p ] )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "x >> x ;",
        "if ( arr [ x modulo p ] )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    }
  ]
}