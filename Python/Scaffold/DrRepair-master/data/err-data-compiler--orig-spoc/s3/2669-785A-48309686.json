{
  "meta": {
    "index": 2669,
    "hitid": "3EPG8DX9LKK7UTPZ5V0ENOK1AJJP52",
    "workerid": "AIWEXPJAU66D9",
    "probid": "785A",
    "subid": "48309686"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create a map from strings to integers with name m",
      "code": "map < string , int > m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set the value of m [ \" Tetrahedron \" ] to 4",
      "code": "m [ \" Tetrahedron \" ] = 4 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign the new value = 6 to m [ \" Cube \" ]",
      "code": "m [ \" Cube \" ] = 6 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set the value of m [ \" Octahedron \" ] to 8",
      "code": "m [ \" Octahedron \" ] = 8 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set m [ \" Dodecahedron \" ] to 12",
      "code": "m [ \" Dodecahedron \" ] = 12 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "assign 20 to m [ \" Icosahedron \" ]",
      "code": "m [ \" Icosahedron \" ] = 20 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare new string called s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "define integers n and sum where sum = 0",
      "code": "int n , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read standard input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i from 1 to n inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read s from the user input",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "change sum to sum + m [ s ]",
      "code": "sum += m [ s ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < map < string > m ;"
      ],
      "err_line": 1,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "m [ \" Tetrahedron ' ] = 4 ;"
      ],
      "err_line": 2,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "m [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "m [ \" Icosahedron ' ] = 20 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "string s called ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘called’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        6
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        6,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        6,
        4
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        6,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        3,
        4
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        3,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Cube ' ] = 6 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        4
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        4,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Dodecahedron ' ] = 12 ;",
        "cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Icosahedron ' ] = 20 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        6,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        6,
        3,
        4
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        6,
        3,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        6,
        4
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        6,
        4,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        6,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "cin >> n )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        3,
        4
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        3,
        4,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        3,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Cube ' ] = 6 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        4,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "cout << sum ;",
        "cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        4
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        9
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        4,
        9
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Icosahedron ' ] = 20 ;",
        "cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        3,
        4,
        9
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        3,
        9
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Cube ' ] = 6 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        4,
        9
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "m [ \" Dodecahedron ' ] = 12 ;",
        "cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        9
      ],
      "mod_code": [
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Cube ' ] = 6 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        4,
        9
      ],
      "mod_code": [
        "m [ \" Icosahedron ' ] = 20 ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "m [ \" Icosahedron ' ] = 20 ;",
        "cin >> n )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "m [ \" Cube ' ] = 6 ;",
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "m [ \" Cube ' ] = 6 ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "m [ \" Octahedron ' ] = 8 ;",
        "cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    }
  ]
}