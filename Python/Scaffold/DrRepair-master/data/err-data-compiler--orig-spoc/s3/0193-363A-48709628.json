{
  "meta": {
    "index": 193,
    "hitid": "3T8DUCXY0N0ON8KIP2MF4EQ0LIFT9U",
    "workerid": "AIWEXPJAU66D9",
    "probid": "363A",
    "subid": "48709628"
  },
  "lines": [
    {
      "line": 0,
      "text": "function getNum with long long int argument n that returns string",
      "code": "string getNum ( long long int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if n = 0",
      "code": "if ( n == 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return \" O - | - OOOO \"",
      "code": "return \" O-|-OOOO \" ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else if n = 1",
      "code": "else if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return \" O - | O - OOO \"",
      "code": "return \" O-|O-OOO \" ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else if n is equal to 2",
      "code": "else if ( n == 2 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return \" O - | OO - OO \"",
      "code": "return \" O-|OO-OO \" ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else if n is equal to 3",
      "code": "else if ( n == 3 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return \" O - | OOO - O \"",
      "code": "return \" O-|OOO-O \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else if n is equal to 4",
      "code": "else if ( n == 4 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "return \" O - | OOOO - \"",
      "code": "return \" O-|OOOO- \" ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else if n = 5",
      "code": "else if ( n == 5 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return \" - O | - OOOO \"",
      "code": "return \" -O|-OOOO \" ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else if n is equal to 6",
      "code": "else if ( n == 6 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return \" - O | O - OOO \"",
      "code": "return \" -O|O-OOO \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else if n is equal to 7",
      "code": "else if ( n == 7 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "return \" - O | OO - OO \"",
      "code": "return \" -O|OO-OO \" ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if n = 8",
      "code": "else if ( n == 8 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "return \" - O | OOO - O \"",
      "code": "return \" -O|OOO-O \" ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else if n = 9",
      "code": "else if ( n == 9 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "return \" - O | OOOO - \"",
      "code": "return \" -O|OOOO- \" ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 24,
      "text": "declare string variable ans with value \" \"",
      "code": "string ans = \" \" ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "create long long integer n",
      "code": "long long int n ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "read standard input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if n = 0",
      "code": "if ( n == 0 )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print the result of getNum ( 0 ) to the standard output",
      "code": "cout << getNum ( 0 ) << endl ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "while n > 0",
      "code": "while ( n > 0 )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "create new long long integer called r with value n modulo 10",
      "code": "long long int r = n % 10 ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "print getNum ( r )",
      "code": "cout << getNum ( r ) << endl ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "assign n / 10 to n",
      "code": "n = n / 10 ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "else if ( n == l )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "return \" +------------------------+ \""
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "string ans with \" \" ;"
      ],
      "err_line": 24,
      "err_msg": "expected initializer before ‘with’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "cin >> n )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4,
        16,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \" ;",
        "return \" |= \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        6,
        16,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \" ;",
        "return \" |= \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        6,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        16,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" |= \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \" ;",
        "return \" |= \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        16,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" |= \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        16,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" |= \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "return \" +------------------------+ \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "return \" |= \" ;",
        "return \" +------------------------+ \""
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘}’ token"
    }
  ]
}