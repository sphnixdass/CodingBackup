{
  "meta": {
    "index": 510,
    "hitid": "3N7PQ0KLI5J0JND5IYWAEFNDIGPE3F",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "967A",
    "subid": "40645175"
  },
  "lines": [
    {
      "line": 0,
      "text": "MAXT = 1500",
      "code": "const int MAXT = 1500 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n and s",
      "code": "int n , s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create bool ok [ MAXT + 1 ]",
      "code": "bool ok [ MAXT + 1 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "set ok to all true",
      "code": "memset ( ok , true , sizeof ok ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n and s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create int h and m",
      "code": "int h , m ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read h and m",
      "code": "cin >> h >> m ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set t = h * 60 + m",
      "code": "int t = h * 60 + m ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = max ( 0 , t - s ) to t + s inclusive , set ok [ i ] = false",
      "code": "for ( int i = max ( 0 , t - s ) ; i <= t + s ; ++ i ) ok [ i ] = false ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to MAXT inclusive",
      "code": "for ( int i = 0 ; i <= MAXT ; ++ i )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if ok [ i ] different from 0",
      "code": "if ( ok [ i ] )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set h = i / 60 , m = i % 60",
      "code": "int h = i / 60 , m = i % 60 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print h , \" \" , n",
      "code": "cout << h << \" \" << m << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool MAXT = 1500 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "ok = true ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1501]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "t = h * 60 + m ;"
      ],
      "err_line": 9,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "h = i / 60 , m = i % 60 ;"
      ],
      "err_line": 14,
      "err_msg": "‘h’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int MAXT = 1500 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n create s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool ok [ MAXT + l ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool ok = true ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int h and m ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( cin >> h >> m )"
      ],
      "err_line": 10,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "t -= 60 + m ;"
      ],
      "err_line": 9,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "h -= 60 , m = i % 60 ;"
      ],
      "err_line": 14,
      "err_msg": "‘h’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "ok = true ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "ok = true ;",
        "t = h * 60 + m ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        14
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "ok = true ;",
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        15
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "ok = true ;",
        "t = h * 60 + m ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        4,
        14
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "ok = true ;",
        "h = i / 60 , m = i % 60 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        4,
        14,
        15
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "ok = true ;",
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        4,
        15
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "ok = true ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "t = h * 60 + m ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        9,
        14
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        9,
        14,
        15
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        9,
        14,
        4
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;",
        "bool ok = true ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        9,
        15
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "t = h * 60 + m ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        9,
        15,
        4
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "t = h * 60 + m ;",
        "cout << h << \" \" << n << endl ;",
        "bool ok = true ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        9,
        4
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "t = h * 60 + m ;",
        "bool ok = true ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "h = i / 60 , m = i % 60 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        14,
        15
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        14,
        15,
        4
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;",
        "bool ok = true ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        14,
        4
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "h = i / 60 , m = i % 60 ;",
        "bool ok = true ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        15,
        4
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "cout << h << \" \" << n << endl ;",
        "bool ok = true ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "bool MAXT = 1500 ;",
        "bool ok = true ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "ok = true ;",
        "t = h * 60 + m ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1501]’"
    },
    {
      "mod_line": [
        4,
        9,
        14
      ],
      "mod_code": [
        "ok = true ;",
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1501]’"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        15
      ],
      "mod_code": [
        "ok = true ;",
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1501]’"
    },
    {
      "mod_line": [
        4,
        9,
        15
      ],
      "mod_code": [
        "ok = true ;",
        "t = h * 60 + m ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1501]’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "ok = true ;",
        "h = i / 60 , m = i % 60 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1501]’"
    },
    {
      "mod_line": [
        4,
        14,
        15
      ],
      "mod_code": [
        "ok = true ;",
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1501]’"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "ok = true ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1501]’"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;"
      ],
      "err_line": 9,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        15
      ],
      "mod_code": [
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        4
      ],
      "mod_code": [
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;",
        "bool ok = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        4
      ],
      "mod_code": [
        "t = h * 60 + m ;",
        "h = i / 60 , m = i % 60 ;",
        "bool ok = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "t = h * 60 + m ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        4
      ],
      "mod_code": [
        "t = h * 60 + m ;",
        "cout << h << \" \" << n << endl ;",
        "bool ok = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "t = h * 60 + m ;",
        "bool ok = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘h’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        4
      ],
      "mod_code": [
        "h = i / 60 , m = i % 60 ;",
        "cout << h << \" \" << n << endl ;",
        "bool ok = true ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "h = i / 60 , m = i % 60 ;",
        "bool ok = true ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "cout << h << \" \" << n << endl ;",
        "bool ok = true ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    }
  ]
}