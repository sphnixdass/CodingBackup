{
  "meta": {
    "index": 2279,
    "hitid": "3KVQ0UJWPXFXE2M0HHE9FISX3GMW54",
    "workerid": "AIWEXPJAU66D9",
    "probid": "58A",
    "subid": "48949115"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "new string a = \" hello \"",
      "code": "string a = \" hello \" ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare integer variable c with value 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read from the input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "change i in a loop from 0 to length of s exclusive , incrementing by 1",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ c ] is equal to s [ i ] , increment c",
      "code": "if ( a [ c ] == s [ i ] ) c ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if c is equal to 5",
      "code": "if ( c == 5 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "bool s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        8,
        0,
        1
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "bool s ;",
        "string a = \" () \" ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        8,
        0,
        1,
        4
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "bool s ;",
        "string a = \" () \" ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        0,
        1,
        10
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "bool s ;",
        "string a = \" () \" ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        8,
        0,
        4
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "bool s ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        0,
        4,
        10
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "bool s ;",
        "gets ( s ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        0,
        10
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "bool s ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        8,
        1,
        4
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "string a = \" () \" ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        1,
        4,
        10
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "string a = \" () \" ;",
        "gets ( s ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        1,
        10
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "string a = \" () \" ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        4,
        10
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "gets ( s ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( c == ' 5 ' )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "bool s ;",
        "string a = \" () \" ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        0,
        1,
        4
      ],
      "mod_code": [
        "bool s ;",
        "string a = \" () \" ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        10
      ],
      "mod_code": [
        "bool s ;",
        "string a = \" () \" ;",
        "gets ( s ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "bool s ;",
        "string a = \" () \" ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "bool s ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        4,
        10
      ],
      "mod_code": [
        "bool s ;",
        "gets ( s ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "bool s ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "string a = \" () \" ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        10
      ],
      "mod_code": [
        "string a = \" () \" ;",
        "gets ( s ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "string a = \" () \" ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "gets ( s ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}