{
  "meta": {
    "index": 399,
    "hitid": "3EQPA8A374Q9FW6QH62AFW5K2JFJZX",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "813A",
    "subid": "29188761"
  },
  "lines": [
    {
      "line": 0,
      "text": "maxn = constant integer = 1005",
      "code": "const int maxn = 1000 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = integer array of size 1005 , l = integer array of size 1005 , r = integer array of size 1005",
      "code": "int a [ maxn ] , l [ maxn ] , r [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while n is read with a valid integer",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "t = integer",
      "code": "int t ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 0 to t exclusive , then read l [ i ] , r [ i ]",
      "code": "for ( int i = 0 ; i < t ; i ++ ) cin >> l [ i ] >> r [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "time = integer = 0",
      "code": "int time = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive , then time = time + a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { time += a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 11,
      "text": "yes = boolean = false",
      "code": "bool yes = false ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for j = 0 to t exclusive",
      "code": "for ( int j = 0 ; j < t ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if time > = l [ j ] and time < = r [ j ]",
      "code": "if ( time >= l [ j ] && time <= r [ j ] )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "yes = true",
      "code": "yes = true ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "exit the for loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if time > r [ t - 1 ]",
      "code": "if ( time > r [ t - 1 ] )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print - 1",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else if yes is true",
      "code": "else if ( yes )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print time",
      "code": "cout << time << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 23,
      "text": "for i = t - 1 to 0 , decrease i by 1 after every loop",
      "code": "for ( int i = t - 1 ; i >= 0 ; i -- )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if l [ i ] < time",
      "code": "if ( l [ i ] < time )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "yes = true",
      "code": "yes = true ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "print l [ i + 1 ]",
      "code": "cout << l [ i + 1 ] << endl ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "exit the for loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "if yes is false , then print l [ 0 ]",
      "code": "if ( ! yes ) cout << l [ 0 ] << endl ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < t ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        12
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        12,
        22
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        12,
        14
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "bool yes = true ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        12,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        22
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        22,
        14
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "do",
        "bool yes = true ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        22,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        14
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "bool yes = true ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        14,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        21,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "cout << time ;",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "for ( j = 0 ; j < t ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        12,
        22
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        12,
        22,
        14
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "do",
        "bool yes = true ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        12,
        22,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        12,
        14
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "bool yes = true ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        12,
        14,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        12,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        22,
        14
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "do",
        "bool yes = true ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        22,
        14,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "do",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        22,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "bool yes = true ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        14,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int a [ 1005 ] , l [ 1005 ] , l [ 1005 ] ;",
        "gets ( t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int l [1005]’"
    },
    {
      "mod_line": [
        21,
        12
      ],
      "mod_code": [
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        12,
        22
      ],
      "mod_code": [
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        12,
        22,
        14
      ],
      "mod_code": [
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "do",
        "bool yes = true ;"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        12,
        22,
        7
      ],
      "mod_code": [
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        12,
        14
      ],
      "mod_code": [
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "bool yes = true ;"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        12,
        14,
        7
      ],
      "mod_code": [
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        12,
        7
      ],
      "mod_code": [
        "cout << time ;",
        "for ( j = 0 ; j < t ; j ++ )",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "cout << time ;",
        "do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        22,
        14
      ],
      "mod_code": [
        "cout << time ;",
        "do",
        "bool yes = true ;"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        22,
        14,
        7
      ],
      "mod_code": [
        "cout << time ;",
        "do",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        7
      ],
      "mod_code": [
        "cout << time ;",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        14,
        7
      ],
      "mod_code": [
        "cout << time ;",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        7
      ],
      "mod_code": [
        "cout << time ;",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        22
      ],
      "mod_code": [
        "for ( j = 0 ; j < t ; j ++ )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        22,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < t ; j ++ )",
        "do",
        "bool yes = true ;"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        22,
        14,
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < t ; j ++ )",
        "do",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        22,
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < t ; j ++ )",
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < t ; j ++ )",
        "bool yes = true ;"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < t ; j ++ )",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < t ; j ++ )",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        14
      ],
      "mod_code": [
        "do",
        "bool yes = true ;"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        14,
        7
      ],
      "mod_code": [
        "do",
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        7
      ],
      "mod_code": [
        "do",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "bool yes = true ;",
        "gets ( t ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}