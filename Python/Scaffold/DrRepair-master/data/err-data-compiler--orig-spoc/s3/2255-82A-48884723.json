{
  "meta": {
    "index": 2255,
    "hitid": "3U74KRR67MF9CAOCQC5KMFLKQ7XTNU",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "82A",
    "subid": "48884723"
  },
  "lines": [
    {
      "line": 0,
      "text": "let name be a string array of length 5 = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \"",
      "code": "const string name [ 5 ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n be an integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let x = 5 be an int",
      "code": "int x = 5 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let cur = 0 be a long",
      "code": "long cur = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while cur + x is less than n",
      "code": "while ( cur + x < n )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "increment cur by x",
      "code": "cur += x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "double x",
      "code": "x *= 2 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "id = n - cur = long",
      "code": "long id = n - cur ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set id to ( id - 1 ) / ( x / 5 )",
      "code": "id = ( id - 1 ) / ( x / 5 ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print name at id",
      "code": "cout << name [ id ] << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << name [ i ] << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int x , 5 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "double x ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8,
        12
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "double x ;",
        "cout << name [ i ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        4
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "double x ;",
        "cout << name [ i ] << endl ;",
        "int x , 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "double x ;",
        "cout << name [ i ] << endl ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8,
        4
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "double x ;",
        "int x , 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8,
        4,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "double x ;",
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "double x ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << name [ i ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        12,
        8
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << name [ i ] << endl ;",
        "char x ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        12,
        8,
        4
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << name [ i ] << endl ;",
        "char x ;",
        "int x , 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        12,
        8,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << name [ i ] << endl ;",
        "char x ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        12,
        4
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << name [ i ] << endl ;",
        "int x , 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        12,
        4,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << name [ i ] << endl ;",
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        12,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << name [ i ] << endl ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "char x ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8,
        4
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "char x ;",
        "int x , 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8,
        4,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "char x ;",
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        8,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "char x ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int x , 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        4,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "string name [ 5 ] = \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "double x ;",
        "cout << name [ i ] << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        4
      ],
      "mod_code": [
        "double x ;",
        "cout << name [ i ] << endl ;",
        "int x , 5 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        12,
        4,
        3
      ],
      "mod_code": [
        "double x ;",
        "cout << name [ i ] << endl ;",
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        3
      ],
      "mod_code": [
        "double x ;",
        "cout << name [ i ] << endl ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "double x ;",
        "int x , 5 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        4,
        3
      ],
      "mod_code": [
        "double x ;",
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "double x ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "cout << name [ i ] << endl ;",
        "char x ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8,
        4
      ],
      "mod_code": [
        "cout << name [ i ] << endl ;",
        "char x ;",
        "int x , 5 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        12,
        8,
        4,
        3
      ],
      "mod_code": [
        "cout << name [ i ] << endl ;",
        "char x ;",
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8,
        3
      ],
      "mod_code": [
        "cout << name [ i ] << endl ;",
        "char x ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "cout << name [ i ] << endl ;",
        "int x , 5 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        12,
        4,
        3
      ],
      "mod_code": [
        "cout << name [ i ] << endl ;",
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << name [ i ] << endl ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "char x ;",
        "int x , 5 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        4,
        3
      ],
      "mod_code": [
        "char x ;",
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "char x ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "int x , 5 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}