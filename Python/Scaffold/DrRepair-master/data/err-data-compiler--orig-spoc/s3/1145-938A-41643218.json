{
  "meta": {
    "index": 1145,
    "hitid": "3RQVKZ7ZRKDQPQ2CRQ4ZPVQ4PSM27W",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "938A",
    "subid": "41643218"
  },
  "lines": [
    {
      "line": 0,
      "text": "INF = 3f3f3f3f in exadecimal",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function check , get char x , return int",
      "code": "int check ( char x )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if x is a vowel",
      "code": "if ( x == ' a ' || x == ' e ' || x == ' i ' || x == ' o ' || x == ' u ' || x == ' y ' )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "i , j , k = int",
      "code": "int i , j , k ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "s = array of 1005 char",
      "code": "char s [ 1005 ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n - 1 exclusive",
      "code": "for ( i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if check ( s [ i ] ) and check ( s [ i + 1 ] ) swap s [ i ] and s [ i + 1 ] and set s [ i ] to ' 0 '",
      "code": "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i ] , s [ i + 1 ] ) , s [ i ] = ' 0 ' ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if s [ i ] not equal ' 0 ' print s [ i ]",
      "code": "if ( s [ i ] != ' 0 ' ) cout << s [ i ] ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "if ( x == a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘swap(char&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "if ( x == a || x == a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int i , j , n ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 11,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘char [1005]’ and ‘char [1005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) , s [ i + 1 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘swap(char&)’"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "if ( x == a )",
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14,
        4
      ],
      "mod_code": [
        "if ( x == a )",
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14,
        4,
        12
      ],
      "mod_code": [
        "if ( x == a )",
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "do",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14,
        4,
        9
      ],
      "mod_code": [
        "if ( x == a )",
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "do",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14,
        12
      ],
      "mod_code": [
        "if ( x == a )",
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14,
        12,
        9
      ],
      "mod_code": [
        "if ( x == a )",
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14,
        9
      ],
      "mod_code": [
        "if ( x == a )",
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "if ( x == a )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        12
      ],
      "mod_code": [
        "if ( x == a )",
        "do",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        12,
        9
      ],
      "mod_code": [
        "if ( x == a )",
        "do",
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "if ( x == a )",
        "do",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "if ( x == a )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        9
      ],
      "mod_code": [
        "if ( x == a )",
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "if ( x == a )",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "if ( x == a || x == a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        4
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "if ( x == a || x == a )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        4,
        12
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "if ( x == a || x == a )",
        "do",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        4,
        9
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "if ( x == a || x == a )",
        "do",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        12
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "if ( x == a || x == a )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        12,
        9
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "if ( x == a || x == a )",
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        9
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "if ( x == a || x == a )",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        4,
        12
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "do",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        4,
        12,
        9
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "do",
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        4,
        9
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "do",
        "char n , m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "s >> s ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘char [1005]’ and ‘char [1005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14,
        12,
        9
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘char [1005]’ and ‘char [1005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "if ( check ( s [ i ] ) && check ( s [ i + 1 ] ) ) swap ( s [ i + 1 ] ) = ' 0 ' && s [ i ] = ' 0 ' ;",
        "char n , m ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘swap(char&)’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "if ( x == a || x == a )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        12
      ],
      "mod_code": [
        "if ( x == a || x == a )",
        "do",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        12,
        9
      ],
      "mod_code": [
        "if ( x == a || x == a )",
        "do",
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "if ( x == a || x == a )",
        "do",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "if ( x == a || x == a )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        9
      ],
      "mod_code": [
        "if ( x == a || x == a )",
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "if ( x == a || x == a )",
        "char n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "do",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        12,
        9
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "do",
        "char n , m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "char n , m ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘char [1005]’ and ‘char [1005]’ to binary ‘operator>>’"
    }
  ]
}