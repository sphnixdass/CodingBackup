{
  "meta": {
    "index": 836,
    "hitid": "3MQY1YVHS3EDR25247GFUXC0959B2Y",
    "workerid": "A1APYLD4DUK33J",
    "probid": "987A",
    "subid": "48714820"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare boolean array a size 6 = { 1 , 1 , 1 , 1 , 1 , 1 }",
      "code": "bool a [ 6 ] = { 1 , 1 , 1 , 1 , 1 , 1 } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s is \" purple \" let a [ 0 ] be 0",
      "code": "if ( s == \" purple \" ) a [ 0 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s is \" green \" let a [ 1 ] be 0",
      "code": "if ( s == \" green \" ) a [ 1 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s is \" blue \" let a [ 2 ] be 0",
      "code": "if ( s == \" blue \" ) a [ 2 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if s is \" orange \" let a [ 3 ] be 0",
      "code": "if ( s == \" orange \" ) a [ 3 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if s is \" red \" let a [ 4 ] be 0",
      "code": "if ( s == \" red \" ) a [ 4 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if s is \" yellow \" let a [ 5 ] be 0",
      "code": "if ( s == \" yellow \" ) a [ 5 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print 6 - n and newline",
      "code": "cout << 6 - n << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to 6 - n exclusive",
      "code": "for ( int i = 0 ; i < 6 - n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if a [ 0 ] is true",
      "code": "if ( a [ 0 ] )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" Power \" and newline",
      "code": "cout << \" Power \" << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "let a [ 0 ] be 0",
      "code": "a [ 0 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if a [ 1 ] is true",
      "code": "if ( a [ 1 ] )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print \" Time \" and newline",
      "code": "cout << \" Time \" << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "let a [ 1 ] be 0",
      "code": "a [ 1 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if a [ 2 ] is true",
      "code": "if ( a [ 2 ] )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "print \" Space \" and newline",
      "code": "cout << \" Space \" << endl ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "let a [ 2 ] be 0",
      "code": "a [ 2 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "if a [ 3 ] is true",
      "code": "if ( a [ 3 ] )",
      "indent": 2
    },
    {
      "line": 29,
      "text": "print \" Soul \" and newline",
      "code": "cout << \" Soul \" << endl ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "let a [ 3 ] be 0",
      "code": "a [ 3 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 32,
      "text": "if a [ 4 ] is true",
      "code": "if ( a [ 4 ] )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "print \" Reality \" and newline",
      "code": "cout << \" Reality \" << endl ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "let a [ 4 ] be 0",
      "code": "a [ 4 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "if a [ 5 ] is true",
      "code": "if ( a [ 5 ] )",
      "indent": 2
    },
    {
      "line": 37,
      "text": "print \" Mind \" and newline",
      "code": "cout << \" Mind \" << endl ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "let a [ 5 ] be 0",
      "code": "a [ 5 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool a [ 6 ] = { 1 , 1 , 1 , 1 , 1 , 1 , 1 } ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘bool [6]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        38,
        4
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        6
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        6,
        22
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        6,
        36
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "s >> s ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        6,
        34
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "s >> s ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        22
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "a [ 1 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        22,
        36
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "a [ 1 ] = ' 0 ' ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        22,
        34
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "a [ 1 ] = ' 0 ' ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        36
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        36,
        34
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "if ( ! a [ 5 ] )",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        4,
        34
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "cin >> N ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        6
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        38,
        6,
        22
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        38,
        6,
        22,
        36
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        38,
        6,
        22,
        34
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        38,
        6,
        36
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "s >> s ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        38,
        6,
        36,
        34
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "s >> s ;",
        "if ( ! a [ 5 ] )",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        38,
        6,
        34
      ],
      "mod_code": [
        "a [ 5 ] = ' 0 ' ;",
        "s >> s ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        22
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        22,
        36
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        22,
        34
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        36
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        36,
        34
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "if ( ! a [ 5 ] )",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        34
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "cin >> N ;",
        "a [ 1 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        36
      ],
      "mod_code": [
        "cin >> N ;",
        "a [ 1 ] = ' 0 ' ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        36,
        34
      ],
      "mod_code": [
        "cin >> N ;",
        "a [ 1 ] = ' 0 ' ;",
        "if ( ! a [ 5 ] )",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        34
      ],
      "mod_code": [
        "cin >> N ;",
        "a [ 1 ] = ' 0 ' ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        36
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        36,
        34
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( ! a [ 5 ] )",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        34
      ],
      "mod_code": [
        "cin >> N ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        22,
        36
      ],
      "mod_code": [
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        22,
        36,
        34
      ],
      "mod_code": [
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;",
        "if ( ! a [ 5 ] )",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        22,
        34
      ],
      "mod_code": [
        "s >> s ;",
        "a [ 1 ] = ' 0 ' ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        36
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! a [ 5 ] )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        36,
        34
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! a [ 5 ] )",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        34
      ],
      "mod_code": [
        "s >> s ;",
        "a [ 4 ] = ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}