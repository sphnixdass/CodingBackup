{
  "meta": {
    "index": 55,
    "hitid": "3HUR21WDDUJA5Q1A2OFSSY4X7NTXYB",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1077A",
    "subid": "49100134"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long ints x , * * p , and y",
      "code": "long long int x , * * p , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set p to new long long int * [ x ]",
      "code": "p = new long long int * [ x ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to x exclusive , set p [ i ] to new long long int [ 3 ]",
      "code": "for ( int i = 0 ; i < x ; i ++ ) { p [ i ] = new long long int [ 3 ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to x exclusive",
      "code": "for ( int i = 0 ; i < x ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to 3 exclusive , read p [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) { cin >> p [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to x exclusive",
      "code": "for ( int i = 0 ; i < x ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if p [ i ] [ 2 ] modulo 2 is 0",
      "code": "if ( p [ i ] [ 2 ] % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set y to p [ i ] [ 2 ] / 2",
      "code": "y = p [ i ] [ 2 ] / 2 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "display the result of ( p [ i ] [ 0 ] * y ) - y * p [ i ] [ 1 ]",
      "code": "cout << ( p [ i ] [ 0 ] * y ) - y * p [ i ] [ 1 ] << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if p [ i ] [ 2 ] % 2 is not equal to 0",
      "code": "if ( p [ i ] [ 2 ] % 2 != 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set y to ( p [ i ] [ 2 ] / 2 )",
      "code": "y = ( p [ i ] [ 2 ] / 2 ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "display ( p [ i ] [ 0 ] * ( y + 1 ) ) - y * p [ i ] [ 1 ]",
      "code": "cout << ( p [ i ] [ 0 ] * ( y + 1 ) ) - y * p [ i ] [ 1 ] << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int x , * p , y ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "p = new long * * x ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘long int*’ to ‘long long int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long x , * p , y ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "p = new long int * [ x ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘long int**’ to ‘long long int**’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( long long int i = 0 ; i < x ; i ++ ) p [ i ] = new long int [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘long int*’ to ‘long long int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "y /= 2 [ 2 ] / 2 ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        5
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        5
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;",
        "for ( i = 0 ; i < x ; i ++ )",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "p = new long * * x ;",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        4,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        5
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "for ( i = 0 ; i < x ; i ++ )",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        4,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        11,
        5
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        5,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "for ( i = 0 ; i < x ; i ++ )",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "long long int x , * p , y ;",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long long int**’ to ‘long long int*’ in assignment"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        5
      ],
      "mod_code": [
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        11
      ],
      "mod_code": [
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "for ( i = 0 ; i < x ; i ++ )",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "p = new long * * x ;",
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "p = new long * * x ;",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        11,
        5
      ],
      "mod_code": [
        "p = new long * * x ;",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "p = new long * * x ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "p = new long * * x ;",
        "for ( i = 0 ; i < x ; i ++ )",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "p = new long * * x ;",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘long int***’ to ‘long long int**’ in assignment"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘long int*’ to ‘long long int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        11,
        5
      ],
      "mod_code": [
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘long int*’ to ‘long long int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘long int*’ to ‘long long int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "for ( i = 0 ; i < x ; i ++ )",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘long int*’ to ‘long long int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( long long int i = 0 ; i < x ; i ++ ) { p [ i ] = new long int [ 3 ] ; }",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘long int*’ to ‘long long int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "cout << ( p [ i ] [ 0 ] - y ) - y * p [ i ] [ 1 ] << endl ;",
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < x ; i ++ )",
        "cout << ( p [ i ] [ 0 ] - y ) - y [ i ] [ 1 ] << endl ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}