{
  "meta": {
    "index": 434,
    "hitid": "3TRB893CSJ4G4KAJQ5PORZK50YJ7GN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "715A",
    "subid": "36659962"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare long long variable level = 1",
      "code": "long long level = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while level < n + 1",
      "code": "while ( level < n + 1 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if level is equal to 1",
      "code": "if ( level == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print 2",
      "code": "cout << 2 << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "increment level by one",
      "code": "level ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "go to the start of the loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "declare long long y = ( level + 1 ) * ( level )",
      "code": "long long y = ( level + 1 ) * ( level ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "multiply y by level + 1",
      "code": "y *= level + 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "create long long cnt = y - ( level - 1 )",
      "code": "long long cnt = y - ( level - 1 ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment level by one",
      "code": "level ++ ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "to ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "long long cnt = y - ( level - l ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        8
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "bool n ;",
        "to ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        8,
        12
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "bool n ;",
        "to ;",
        "long long cnt = y - ( level - l ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        8,
        13
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "bool n ;",
        "to ;",
        "cout << cnt ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        12
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "bool n ;",
        "long long cnt = y - ( level - l ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        12,
        13
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "bool n ;",
        "long long cnt = y - ( level - l ) ;",
        "cout << cnt ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "to ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        12
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "to ;",
        "long long cnt = y - ( level - l ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        13
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "to ;",
        "long long cnt = y - ( level - l ) ;",
        "cout << cnt ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        13
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "to ;",
        "cout << cnt ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "long long cnt = y - ( level - l ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "if ( level == ' 1 ' )",
        "long long cnt = y - ( level - l ) ;",
        "cout << cnt ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "bool n ;",
        "to ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "bool n ;",
        "to ;",
        "long long cnt = y - ( level - l ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        13
      ],
      "mod_code": [
        "bool n ;",
        "to ;",
        "long long cnt = y - ( level - l ) ;",
        "cout << cnt ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        13
      ],
      "mod_code": [
        "bool n ;",
        "to ;",
        "cout << cnt ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "bool n ;",
        "long long cnt = y - ( level - l ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        13
      ],
      "mod_code": [
        "bool n ;",
        "long long cnt = y - ( level - l ) ;",
        "cout << cnt ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "to ;",
        "long long cnt = y - ( level - l ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        13
      ],
      "mod_code": [
        "to ;",
        "long long cnt = y - ( level - l ) ;",
        "cout << cnt ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "to ;",
        "cout << cnt ;"
      ],
      "err_line": 8,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "long long cnt = y - ( level - l ) ;",
        "cout << cnt ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}