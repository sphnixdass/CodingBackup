{
  "meta": {
    "index": 2318,
    "hitid": "31JUPBOORNY0QQT3B1EAIRL86CI8LD",
    "workerid": "A2UFGZT4QUY5ON",
    "probid": "117A",
    "subid": "16856180"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m , s , f , t , now , ans and i be long long int with ans set to 0",
      "code": "long long int n , m , s , f , t , now , ans = 0 , i ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "asc = boolean set to true",
      "code": "bool asc = true ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while n is true do the following and decrease n by 1",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s , f and t",
      "code": "cin >> s >> f >> t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set i to m",
      "code": "i = m ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s is f",
      "code": "if ( s == f )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if ( t / ( m - 1 ) ) modulo 2 is equal to 1",
      "code": "if ( ( t / ( m - 1 ) ) % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set asc to false",
      "code": "asc = false ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "assign m - ( t % ( m - 1 ) ) to now",
      "code": "now = m - ( t % ( m - 1 ) ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set now to ( t % ( m - 1 ) ) + 1",
      "code": "now = ( t % ( m - 1 ) ) + 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "decrease now , f , s , i by 1",
      "code": "now -- , f -- , s -- , i -- ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if now is equal to s",
      "code": "if ( now == s )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if ( asc is true and f is greater than s ) or ( not asc and f is less than s )",
      "code": "if ( ( asc && f > s ) || ( ! asc && f < s ) )",
      "indent": 4
    },
    {
      "line": 18,
      "text": "set ans to the abs of f - now",
      "code": "ans = abs ( f - now ) ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "else if asc is true and f is less than s",
      "code": "else if ( asc && f < s )",
      "indent": 4
    },
    {
      "line": 20,
      "text": "set ans to ( i - now ) + ( i - f )",
      "code": "ans = ( i - now ) + ( i - f ) ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 22,
      "text": "set ans to now + f",
      "code": "ans = now + f ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "else if now is greater than s",
      "code": "else if ( now > s )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if asc is true",
      "code": "if ( asc )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "assign i - now to ans",
      "code": "ans = i - now ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "if f is less than s",
      "code": "if ( f < s )",
      "indent": 5
    },
    {
      "line": 27,
      "text": "increase ans by i - f",
      "code": "ans += ( i - f ) ;",
      "indent": 6
    },
    {
      "line": 28,
      "text": "else do the following",
      "code": "else",
      "indent": 5
    },
    {
      "line": 29,
      "text": "increase ans by i + f",
      "code": "ans += ( i + f ) ;",
      "indent": 6
    },
    {
      "line": 30,
      "text": "else if f is less than s",
      "code": "else if ( f < s )",
      "indent": 4
    },
    {
      "line": 31,
      "text": "set ans to now - f",
      "code": "ans = now - f ;",
      "indent": 5
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 33,
      "text": "set ans to now + f",
      "code": "ans = now + f ;",
      "indent": 5
    },
    {
      "line": 34,
      "text": "else if asc is true",
      "code": "else if ( asc )",
      "indent": 3
    },
    {
      "line": 35,
      "text": "if f is greater than s",
      "code": "if ( f > s )",
      "indent": 4
    },
    {
      "line": 36,
      "text": "assign f - now to ans",
      "code": "ans = f - now ;",
      "indent": 5
    },
    {
      "line": 37,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 38,
      "text": "assign ( i - now ) + ( i - f ) to ans",
      "code": "ans = ( i - now ) + ( i - f ) ;",
      "indent": 5
    },
    {
      "line": 39,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 40,
      "text": "set ans to now",
      "code": "ans = now ;",
      "indent": 4
    },
    {
      "line": 41,
      "text": "if f is greater than s",
      "code": "if ( f > s )",
      "indent": 4
    },
    {
      "line": 42,
      "text": "increase ans by f",
      "code": "ans += f ;",
      "indent": 5
    },
    {
      "line": 43,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 44,
      "text": "increase ans by ( i + ( i - f ) )",
      "code": "ans += ( i + ( i - f ) ) ;",
      "indent": 5
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 46,
      "text": "print ans + t",
      "code": "cout << ans + t << endl ;",
      "indent": 3
    },
    {
      "line": 47,
      "text": "set asc to true",
      "code": "asc = true ;",
      "indent": 3
    },
    {
      "line": 48,
      "text": "set ans to 0",
      "code": "ans = 0 ;",
      "indent": 3
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int n , m , s , f , t , now , ans , ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < bool > asc ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<bool>’ and ‘bool’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( -- n -- )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 50,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘now’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 34,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 39,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 46,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "ans to ;"
      ],
      "err_line": 40,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 45,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}