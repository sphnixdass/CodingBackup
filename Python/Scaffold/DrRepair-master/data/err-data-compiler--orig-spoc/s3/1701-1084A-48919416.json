{
  "meta": {
    "index": 1701,
    "hitid": "363A7XIFV4GH5JYCM30U1RP5OLHAVA",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1084A",
    "subid": "48919416"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare gcd with long long integers a , b as arguments , returning long long integer",
      "code": "long long int gcd ( long long int a , long long int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is 0 , return b",
      "code": "if ( a == 0 ) return b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return result of run gcd with b % a , a as arguments from function",
      "code": "return gcd ( b % a , a ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare factorial with unsigned long long integer n as argument , returning unsigned long long integer",
      "code": "unsigned long long int factorial ( unsigned long long int n )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "if n is 0 , return 1",
      "code": "if ( n == 0 ) return 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return n * result of run factorial ( n - 1 )",
      "code": "return n * factorial ( n - 1 ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "declare long long integer array nCr size 1001 by 1001",
      "code": "long long int nCr [ 1001 ] [ 1001 ] ;",
      "indent": 0
    },
    {
      "line": 9,
      "text": "declare combi with no arguments , returning void",
      "code": "void combi ( )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "for i = 1 to 1000 inclusive",
      "code": "for ( int i = 1 ; i <= 1000 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let nCr [ 0 ] [ i ] be 0",
      "code": "nCr [ 0 ] [ i ] = 0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "let nCr [ i ] [ 0 ] be 1",
      "code": "nCr [ i ] [ 0 ] = 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 1 to 1000 inclusive",
      "code": "for ( int i = 1 ; i <= 1000 ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for j = 1 to 1000 inclusive",
      "code": "for ( int j = 1 ; j <= 1000 ; j ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if i is less than j",
      "code": "if ( i < j )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "end loop iteration",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else if i is j",
      "code": "else if ( i == j )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "let nCr [ i ] [ j ] be 1",
      "code": "nCr [ i ] [ j ] = 1 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 21,
      "text": "let nCr [ i ] [ j ] be nCr [ i - 1 ] [ j ] + nCr [ i - 1 ] [ j - 1 ]",
      "code": "nCr [ i ] [ j ] = nCr [ i - 1 ] [ j ] + nCr [ i - 1 ] [ j - 1 ] ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 27,
      "text": "declare long long integer n",
      "code": "long long int n ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "declare long long integer array arr size n",
      "code": "long long int arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for i = 0 to n exclusive , read arr [ i ]",
      "code": "for ( long long int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 31,
      "text": "declare long long integer min = LONG_MAX",
      "code": "long long int min = LONG_MAX ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for i = 0 to n exclusive",
      "code": "for ( long long int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "declare long long integer cost = 0",
      "code": "long long int cost = 0 ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "for j = 0 to n exclusive , increment cost by arr [ j ] * ( absolute value of ( i - j ) + j + i + i + j + absolute value of ( j - 1 ) )",
      "code": "for ( long long int j = 0 ; j < n ; j ++ ) { cost += ( arr [ j ] * ( abs ( i - j ) + j + i + i + j + abs ( j - i ) ) ) ; }",
      "indent": 2
    },
    {
      "line": 35,
      "text": "if cost is less than min , let min be cost",
      "code": "if ( cost < min ) min = cost ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "print min and newline",
      "code": "cout << min << endl ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }"
      ],
      "err_line": 34,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return gcd ( b % a ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "nCr [ 0 ] [ j ] = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "nCr [ i ] [ j ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 28,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + j + i ) ) ; }"
      ],
      "err_line": 34,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        34,
        28
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;"
      ],
      "err_line": 28,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        28,
        11
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        28,
        11,
        12
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        28,
        11,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        28,
        11,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        28,
        12
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "nCr [ i ] [ j ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        28,
        12,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        28,
        12,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "nCr [ i ] [ j ] = 1 ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        28,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        28,
        9,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        28,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "cin >> N ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        34,
        11
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ 0 ] [ j ] = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        11,
        12
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        11,
        12,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        11,
        12,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        11,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ 0 ] [ j ] = 0 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        11,
        9,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ 0 ] [ j ] = 0 ;",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        11,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ 0 ] [ j ] = 0 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        12
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ i ] [ j ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        12,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        12,
        9,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        12,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "nCr [ i ] [ j ] = 1 ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        9,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        34,
        20
      ],
      "mod_code": [
        "for ( int j = 0 ; j < n ; j ++ ) { cost += arr [ j ] * ( abs ( i - j ) + j + i + i + i + i ) ) ; }",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        28,
        11
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        11,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        11,
        12,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        11,
        12,
        20
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        11,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        11,
        9,
        20
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        11,
        20
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ 0 ] [ j ] = 0 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        12
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ i ] [ j ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        12,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        12,
        9,
        20
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        12,
        20
      ],
      "mod_code": [
        "cin >> N ;",
        "nCr [ i ] [ j ] = 1 ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        9,
        20
      ],
      "mod_code": [
        "cin >> N ;",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        20
      ],
      "mod_code": [
        "cin >> N ;",
        "do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        9
      ],
      "mod_code": [
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        12,
        9,
        20
      ],
      "mod_code": [
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        12,
        20
      ],
      "mod_code": [
        "nCr [ 0 ] [ j ] = 0 ;",
        "nCr [ i ] [ j ] = 1 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "nCr [ 0 ] [ j ] = 0 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        9,
        20
      ],
      "mod_code": [
        "nCr [ 0 ] [ j ] = 0 ;",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "nCr [ 0 ] [ j ] = 0 ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        9,
        20
      ],
      "mod_code": [
        "nCr [ i ] [ j ] = 1 ;",
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "nCr [ i ] [ j ] = 1 ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "void combi ( ) { }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}