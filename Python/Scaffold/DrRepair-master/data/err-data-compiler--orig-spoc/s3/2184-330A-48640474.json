{
  "meta": {
    "index": 2184,
    "hitid": "3Q2T3FD0ON2YVB5IZWKTRNSMQVEM3Z",
    "workerid": "AIWEXPJAU66D9",
    "probid": "330A",
    "subid": "48640474"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long long variables n , m , d , cnt , ans , sum , rem , x , z , b and c where rem = 0",
      "code": "long long n , m , d , cnt , ans , sum , rem = 0 , x , z , b , c ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare vectors of long long called v , v1 , v2 and v3",
      "code": "vector < long long > v , v1 , v2 , v3 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create a map from long longs to long longs called make_pair",
      "code": "map < long long , long long > make_pair ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create a set of long longs called se",
      "code": "set < long long > se ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare characters h and r",
      "code": "char h , r ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create character array a with 20 by 20 elements",
      "code": "char a [ 20 ] [ 20 ] ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "create integer array ro with 20 elements",
      "code": "int ro [ 20 ] ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create integer array co with 20 elements",
      "code": "int co [ 20 ] ;",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare integer variables r and c",
      "code": "int r , c ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read r and c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for integer i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for integer j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if a [ i ] [ j ] = ' S '",
      "code": "if ( a [ i ] [ j ] == ' S ' )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set ro [ i ] to - 1",
      "code": "ro [ i ] = - 1 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "co [ j ] = - 1",
      "code": "co [ j ] = - 1 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "declare integer sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if ro [ i ] is not equal to - 1",
      "code": "if ( ro [ i ] != - 1 )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "for integer j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increase sum",
      "code": "sum ++ ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "a [ i ] [ j ] = ' n '",
      "code": "a [ i ] [ j ] = ' n ' ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for integer i = 0 to c exclusive",
      "code": "for ( int i = 0 ; i < c ; i ++ )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if co [ i ] is not equal to - 1",
      "code": "if ( co [ i ] != - 1 )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "for j = 0 to r exclusive",
      "code": "for ( int j = 0 ; j < r ; j ++ )",
      "indent": 3
    },
    {
      "line": 33,
      "text": "increment sum if a [ j ] [ i ] ! = ' n '",
      "code": "if ( a [ j ] [ i ] != ' n ' ) sum ++ ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < long long > v , v1 , v2 , v3 , v3 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘std::vector<long long int> v3’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < long long longs ;"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "set < long long se ;"
      ],
      "err_line": 4,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char h and r ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char a [ 20 ] = { 0 } ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int r and c ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "a [ i ] [ j ] = \" n ' ;"
      ],
      "err_line": 26,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 32,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        37
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "cout << sum ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        37,
        15
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "cout << sum ;",
        "if ( ! a [ i ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        37,
        15,
        3
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "cout << sum ;",
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        37,
        15,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "cout << sum ;",
        "if ( ! a [ i ] [ j ] )",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        37,
        3
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "cout << sum ;",
        "map < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        37,
        3,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "cout << sum ;",
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        37,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "cout << sum ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "if ( ! a [ i ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        15,
        3
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        15,
        3,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        15,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "if ( ! a [ i ] [ j ] )",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "map < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        3,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        37,
        0
      ],
      "mod_code": [
        "cout << sum ;",
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        37,
        0,
        15
      ],
      "mod_code": [
        "cout << sum ;",
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "if ( ! a [ i ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        37,
        0,
        15,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        37,
        0,
        15,
        32
      ],
      "mod_code": [
        "cout << sum ;",
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "if ( ! a [ i ] [ j ] )",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        37,
        0,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "map < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        37,
        0,
        3,
        32
      ],
      "mod_code": [
        "cout << sum ;",
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        37,
        0,
        32
      ],
      "mod_code": [
        "cout << sum ;",
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        37,
        15,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        37,
        15,
        3,
        32
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        37,
        15,
        32
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( ! a [ i ] [ j ] )",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 32,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "map < long long longs ;"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        37,
        3,
        32
      ],
      "mod_code": [
        "cout << sum ;",
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        37,
        32
      ],
      "mod_code": [
        "cout << sum ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 32,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "if ( ! a [ i ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        15,
        3
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        15,
        3,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        15,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "if ( ! a [ i ] [ j ] )",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "map < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        3,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        0,
        32
      ],
      "mod_code": [
        "long long n , m , d , cnt , ans , sum , x , z , x , z , b , c = 0 ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int x’"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        15,
        3,
        32
      ],
      "mod_code": [
        "if ( ! a [ i ] [ j ] )",
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        15,
        32
      ],
      "mod_code": [
        "if ( ! a [ i ] [ j ] )",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 32,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        32
      ],
      "mod_code": [
        "map < long long longs ;",
        "for ( j = 0 ; j < r ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    }
  ]
}