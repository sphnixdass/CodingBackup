{
  "meta": {
    "index": 327,
    "hitid": "3JHB4BPSFK3BVSSQ8YSKZ9FD1BM9Q2",
    "workerid": "AIWEXPJAU66D9",
    "probid": "544A",
    "subid": "41977578"
  },
  "lines": [
    {
      "line": 0,
      "text": "create new integer constant N = 1e6 + 5",
      "code": "const int N = 1e6 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create new integer variable k",
      "code": "int k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare string variable with name s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read k and s from the input",
      "code": "cin >> k >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create new set of unique characters called S",
      "code": "set < char > S ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "insert all characters from s into set S",
      "code": "S . insert ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if length of S is less than k",
      "code": "if ( ( int ) S . size ( ) < k )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" NO \\ n \" to the stdou",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "F is a new array of integers with size 26 filled with 0",
      "code": "int F [ 26 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "create integer p = 0",
      "code": "int p = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "start infinite loop",
      "code": "while ( 1 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if k = 1",
      "code": "if ( k == 1 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print the substring of s with length p , and \" \\ n \"",
      "code": "cout << s . substr ( p ) << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "F [ s [ p ] - ' a ' ] = 1",
      "code": "F [ s [ p ] - ' a ' ] = 1 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "create new integer called c with value p",
      "code": "int c = p ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increment c while F [ s [ c ] - ' a ' ] ! = 0",
      "code": "while ( F [ s [ c ] - ' a ' ] ) c ++ ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print the substring of s from position p with length c - p , and \" \\ n \"",
      "code": "cout << s . substr ( p , c - p ) << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "set p to c",
      "code": "p = c ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "S . insert ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int k = s . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s = s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> k >> s )"
      ],
      "err_line": 6,
      "err_msg": "‘S’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( S . length ( ) < k )"
      ],
      "err_line": 7,
      "err_msg": "‘class std::set<char>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int F [ 26 ] = { 0 0 } ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ before numeric constant"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "F [ s [ p ] - ' a ' ] = 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "p to ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        22,
        23
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        22,
        23,
        17
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "p to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        22,
        23,
        15
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "p to ;",
        "if ( ! k )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        22,
        17
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        22,
        17,
        15
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "do",
        "if ( ! k )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        22,
        15
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "if ( ! k )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        23
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        23,
        17
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "p to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        23,
        17,
        15
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "p to ;",
        "do",
        "if ( ! k )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        23,
        17,
        22
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "p to ;",
        "do",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        23,
        15
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "p to ;",
        "if ( ! k )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        23,
        15,
        22
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "p to ;",
        "if ( ! k )",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        23,
        22
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "p to ;",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        17,
        15
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "do",
        "if ( ! k )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        17,
        15,
        22
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "do",
        "if ( ! k )",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        17,
        22
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "do",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "if ( ! k )"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        15,
        22
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "if ( ! k )",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "S . insert ( s ) ;",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "p to ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        22,
        23,
        17
      ],
      "mod_code": [
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "p to ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        23,
        17,
        15
      ],
      "mod_code": [
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "p to ;",
        "do",
        "if ( ! k )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        23,
        15
      ],
      "mod_code": [
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "p to ;",
        "if ( ! k )"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        22,
        17
      ],
      "mod_code": [
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        17,
        15
      ],
      "mod_code": [
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "do",
        "if ( ! k )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        15
      ],
      "mod_code": [
        "cout << s . substr ( p , c - p ) - p << \" \\n \" ;",
        "if ( ! k )"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        23,
        17
      ],
      "mod_code": [
        "p to ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        17,
        15
      ],
      "mod_code": [
        "p to ;",
        "do",
        "if ( ! k )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        17,
        15,
        22
      ],
      "mod_code": [
        "p to ;",
        "do",
        "if ( ! k )",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        17,
        22
      ],
      "mod_code": [
        "p to ;",
        "do",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        15
      ],
      "mod_code": [
        "p to ;",
        "if ( ! k )"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        23,
        15,
        22
      ],
      "mod_code": [
        "p to ;",
        "if ( ! k )",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        23,
        22
      ],
      "mod_code": [
        "p to ;",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        15
      ],
      "mod_code": [
        "do",
        "if ( ! k )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        15,
        22
      ],
      "mod_code": [
        "do",
        "if ( ! k )",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        22
      ],
      "mod_code": [
        "do",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        22
      ],
      "mod_code": [
        "if ( ! k )",
        "cout << s . substr ( p , c ) - c - p << \" \\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)"
    }
  ]
}