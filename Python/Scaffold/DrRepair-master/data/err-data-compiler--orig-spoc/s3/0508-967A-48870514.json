{
  "meta": {
    "index": 508,
    "hitid": "3MVY4USGB6HGJ9064WN272TH2PVSIU",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "967A",
    "subid": "48870514"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , s , and batas",
      "code": "int n , s , batas ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make int array t of size 105 with array of size 2",
      "code": "int t [ 105 ] [ 2 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n and s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n , read t [ i ] [ 0 ] and t [ i ] [ 1 ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> t [ i ] [ 0 ] >> t [ i ] [ 1 ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set t [ 0 ] [ 0 ] to 0",
      "code": "t [ 0 ] [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set t [ 0 ] [ 1 ] to - s - 1",
      "code": "t [ 0 ] [ 1 ] = - s - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set t [ n + 1 ] [ 0 ] to 100",
      "code": "t [ n + 1 ] [ 0 ] = 100 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set t [ n + 1 ] [ 1 ] to 0",
      "code": "t [ n + 1 ] [ 1 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set batas to 2 * s + 2",
      "code": "batas = 2 * s + 2 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer mnt",
      "code": "int mnt ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "make ints ah and am",
      "code": "int ah , am ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set mnt to ( t [ i + 1 ] [ 1 ] + 60 - t [ i ] [ 1 ] ) + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60",
      "code": "mnt = ( t [ i + 1 ] [ 1 ] + 60 - t [ i ] [ 1 ] ) + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if mnt is greater than or equal to batas",
      "code": "if ( mnt >= batas )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set am to t [ i ] [ 1 ] + s + 1",
      "code": "am = t [ i ] [ 1 ] + s + 1 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set ah to t [ i ] [ 0 ]",
      "code": "ah = t [ i ] [ 0 ] ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "while am is greater than or equal to 60",
      "code": "while ( am >= 60 )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "set am to am - 60",
      "code": "am -= 60 ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "increment ah",
      "code": "ah ++ ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "show ah , ' ' , and am",
      "code": "cout << ah << ' ' << am << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "t [ ' 0 ' ] = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [2]’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << ah << ' \" << am << endl ;"
      ],
      "err_line": 21,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        12,
        6,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        6,
        13,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        6,
        13,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        13,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        13,
        17,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        13,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        13,
        17
      ],
      "mod_code": [
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        7
      ],
      "mod_code": [
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        12
      ],
      "mod_code": [
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        13,
        7
      ],
      "mod_code": [
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        13,
        7,
        12
      ],
      "mod_code": [
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        13,
        12
      ],
      "mod_code": [
        "t [ 0 ] [ 1 ] = - s - ' 1 ' ;",
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        7
      ],
      "mod_code": [
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        7,
        12
      ],
      "mod_code": [
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        12
      ],
      "mod_code": [
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "while ( am >= ' 60 ' )",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        7,
        12
      ],
      "mod_code": [
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "t [ n + 1 ] [ ' 0 ' ] = 100 ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "mnt = ( t [ i + 1 ] [ 1 ] ) - 60 [ i ] [ 1 ] + ( t [ i + 1 ] [ 0 ] - 1 - t [ i ] [ 0 ] ) * 60 ;",
        "for ( int i = 0 ; i < n ; ++ i )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}