{
  "meta": {
    "index": 1579,
    "hitid": "3U74KRR67MF9CAOCQC5KMFLKQ70TNX",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "1080A",
    "subid": "48532603"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , red , green , blue = integers",
      "code": "int n , k , red , green , blue ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set red to 2 * n",
      "code": "red = 2 * n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set green to 5 * n",
      "code": "green = 5 * n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set blue to 8 * n",
      "code": "blue = 8 * n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if red modulo k is 0",
      "code": "if ( red % k == 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set red to red / k",
      "code": "red = red / k ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set red to red / k + 1",
      "code": "red = red / k + 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if green modulo k is 0",
      "code": "if ( green % k == 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set green to green / k",
      "code": "green = green / k ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set green to green / k + 1",
      "code": "green = green / k + 1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if blue modulo k is 0",
      "code": "if ( blue % k == 0 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set blue to blue / k",
      "code": "blue = blue / k ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set blue to blue / k + 1",
      "code": "blue = blue / k + 1 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print red + green + blue and a new line",
      "code": "cout << red + green + blue << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        6
      ],
      "mod_code": [
        "do",
        "do",
        "if ( ! red % k == 0 )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        6,
        3
      ],
      "mod_code": [
        "do",
        "do",
        "if ( ! red % k == 0 )",
        "red *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        6,
        16
      ],
      "mod_code": [
        "do",
        "do",
        "if ( ! red % k == 0 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        6,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "if ( ! red % k == 0 )",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        3
      ],
      "mod_code": [
        "do",
        "do",
        "red *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        3,
        16
      ],
      "mod_code": [
        "do",
        "do",
        "red *= n ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        3,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "red *= n ;",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        16
      ],
      "mod_code": [
        "do",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "do",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        12,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        6,
        3
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "red *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        6,
        3,
        16
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "red *= n ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        6,
        3,
        5
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "red *= n ;",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        6,
        16
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        6,
        16,
        5
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "do",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        6,
        5
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "do",
        "red *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        3,
        16
      ],
      "mod_code": [
        "do",
        "red *= n ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        3,
        16,
        5
      ],
      "mod_code": [
        "do",
        "red *= n ;",
        "do",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        3,
        5
      ],
      "mod_code": [
        "do",
        "red *= n ;",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        16,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "do",
        "blue *= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        6,
        3
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "red *= n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        6,
        3,
        16
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "red *= n ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        6,
        3,
        5
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "red *= n ;",
        "blue *= n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        6,
        16
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        6,
        16,
        5
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "do",
        "blue *= n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        6,
        5
      ],
      "mod_code": [
        "do",
        "if ( ! red % k == 0 )",
        "blue *= n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "do",
        "red *= n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        3,
        16
      ],
      "mod_code": [
        "do",
        "red *= n ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        3,
        16,
        5
      ],
      "mod_code": [
        "do",
        "red *= n ;",
        "do",
        "blue *= n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        3,
        5
      ],
      "mod_code": [
        "do",
        "red *= n ;",
        "blue *= n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        16,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "blue *= n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "do",
        "blue *= n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        6,
        3,
        16
      ],
      "mod_code": [
        "if ( ! red % k == 0 )",
        "red *= n ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        3,
        16,
        5
      ],
      "mod_code": [
        "if ( ! red % k == 0 )",
        "red *= n ;",
        "do",
        "blue *= n ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "if ( ! red % k == 0 )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        5
      ],
      "mod_code": [
        "if ( ! red % k == 0 )",
        "do",
        "blue *= n ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "red *= n ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        16,
        5
      ],
      "mod_code": [
        "red *= n ;",
        "do",
        "blue *= n ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "do",
        "blue *= n ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘cout’"
    }
  ]
}