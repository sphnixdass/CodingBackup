{
  "meta": {
    "index": 381,
    "hitid": "3VGET1QSZ0TC160J5AT6D26TUMEW7G",
    "workerid": "A1AYVATMT88U1W",
    "probid": "950A",
    "subid": "41439144"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let l , r , a be integers",
      "code": "int l , r , a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read l , r , a",
      "code": "while ( cin >> l >> r >> a )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if l is equal to 0 and a is equal to 0 or r is equal to 0 and a is equal to 0",
      "code": "if ( l == 0 && a == 0 || r == 0 && a == 0 )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "print 0 and newline",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "proceed to next",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if l is equal to 0 and r l is equal to 0 and a l is equal to 1",
      "code": "else if ( l == 0 && r == 0 && a == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print 0 and newline",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if l is equal to 0 and r is equal to 0",
      "code": "else if ( l == 0 && r == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print a and newline",
      "code": "cout << a << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if is equal to 0",
      "code": "else if ( l == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if r is less than a",
      "code": "if ( r < a )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if r is equal to 1",
      "code": "if ( r == 1 )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "print 2 * ( r * r ) and newline",
      "code": "cout << 2 * ( r * r ) << endl ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "else if r modulo 2 is equal to 0 and a modulo 2 is equal to 0",
      "code": "else if ( r % 2 == 0 && a % 2 == 0 )",
      "indent": 4
    },
    {
      "line": 15,
      "text": "print r + a and newline",
      "code": "cout << r + a << endl ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "else if r modulo 2 is equal to 1 and a modulo 2 is equal to 0",
      "code": "else if ( r % 2 == 1 && a % 2 == 0 )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "print r + a - 1 and newline",
      "code": "cout << r + a - 1 << endl ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "else if r modulo 2 is equal to 0 and a modulo 2 is equal to 1",
      "code": "else if ( r % 2 == 0 && a % 2 == 1 )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "print a + r - 1 and newline",
      "code": "cout << a + r - 1 << endl ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "else if r modulo 2 is equal to 1 and a modulo 2 is equal to 1",
      "code": "else if ( r % 2 == 1 && a % 2 == 1 )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "print r + a and newline",
      "code": "cout << r + a << endl ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "else if r is greater than a",
      "code": "else if ( r > a )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if a is equal to 1",
      "code": "if ( a == 1 )",
      "indent": 4
    },
    {
      "line": 24,
      "text": "print 2 * ( a * a ) and newline",
      "code": "cout << 2 * ( a * a ) << endl ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 26,
      "text": "print a + a and newline",
      "code": "cout << a + a << endl ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "else if r is equal to a",
      "code": "else if ( r == a )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "print a + a and newline",
      "code": "cout << a + a << endl ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "else if r is equal to 0",
      "code": "else if ( r == 0 )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if l is less than a",
      "code": "if ( l < a )",
      "indent": 3
    },
    {
      "line": 31,
      "text": "if l is equal to 1",
      "code": "if ( l == 1 )",
      "indent": 4
    },
    {
      "line": 32,
      "text": "print 2 * ( l * l ) and newline",
      "code": "cout << 2 * ( l * l ) << endl ;",
      "indent": 5
    },
    {
      "line": 33,
      "text": "else if l modulo 2 is equal to 0 and a modulo 2 is equal to 0",
      "code": "else if ( l % 2 == 0 && a % 2 == 0 )",
      "indent": 4
    },
    {
      "line": 34,
      "text": "print l + a and newline",
      "code": "cout << l + a << endl ;",
      "indent": 5
    },
    {
      "line": 35,
      "text": "else if l modulo 2 is equal to 1 and a modulo 2 is equal to 0",
      "code": "else if ( l % 2 == 1 && a % 2 == 0 )",
      "indent": 4
    },
    {
      "line": 36,
      "text": "print l + a - 1 and newline",
      "code": "cout << l + a - 1 << endl ;",
      "indent": 5
    },
    {
      "line": 37,
      "text": "else if l modulo 2 is equal to 0 and a modulo 2 is equal to 1",
      "code": "else if ( l % 2 == 0 && a % 2 == 1 )",
      "indent": 4
    },
    {
      "line": 38,
      "text": "print a + l - 1 and newline",
      "code": "cout << a + l - 1 << endl ;",
      "indent": 5
    },
    {
      "line": 39,
      "text": "else if l modulo 2 is equal to 1 and a modulo 2 is equal to 1",
      "code": "else if ( l % 2 == 1 && a % 2 == 1 )",
      "indent": 4
    },
    {
      "line": 40,
      "text": "print l + a and newline",
      "code": "cout << l + a << endl ;",
      "indent": 5
    },
    {
      "line": 41,
      "text": "else if l is greater than a",
      "code": "else if ( l > a )",
      "indent": 3
    },
    {
      "line": 42,
      "text": "if a is equal to 1",
      "code": "if ( a == 1 )",
      "indent": 4
    },
    {
      "line": 43,
      "text": "print 2 * ( a * a ) and newline",
      "code": "cout << 2 * ( a * a ) << endl ;",
      "indent": 5
    },
    {
      "line": 44,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 45,
      "text": "print a + a and newline",
      "code": "cout << a + a << endl ;",
      "indent": 5
    },
    {
      "line": 46,
      "text": "else if l is equal to a",
      "code": "else if ( l == a )",
      "indent": 3
    },
    {
      "line": 47,
      "text": "print a + a and newline",
      "code": "cout << a + a << endl ;",
      "indent": 4
    },
    {
      "line": 48,
      "text": "else if a is equal to 0",
      "code": "else if ( a == 0 )",
      "indent": 2
    },
    {
      "line": 49,
      "text": "if r is less than l",
      "code": "if ( r < l )",
      "indent": 3
    },
    {
      "line": 50,
      "text": "if r is equal to 1",
      "code": "if ( r == 1 )",
      "indent": 4
    },
    {
      "line": 51,
      "text": "print 2 * ( r * r ) and newline",
      "code": "cout << 2 * ( r * r ) << endl ;",
      "indent": 5
    },
    {
      "line": 52,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 53,
      "text": "print r + r and newline",
      "code": "cout << r + r << endl ;",
      "indent": 5
    },
    {
      "line": 54,
      "text": "else if r is greater than l",
      "code": "else if ( r > l )",
      "indent": 3
    },
    {
      "line": 55,
      "text": "if l is equal to 1",
      "code": "if ( l == 1 )",
      "indent": 4
    },
    {
      "line": 56,
      "text": "print 2 * ( l * l ) and newline",
      "code": "cout << 2 * ( l * l ) << endl ;",
      "indent": 5
    },
    {
      "line": 57,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 58,
      "text": "print l + l and newline",
      "code": "cout << l + l << endl ;",
      "indent": 5
    },
    {
      "line": 59,
      "text": "else if r is equal to l",
      "code": "else if ( r == l )",
      "indent": 3
    },
    {
      "line": 60,
      "text": "print l + l and newline",
      "code": "cout << l + l << endl ;",
      "indent": 4
    },
    {
      "line": 61,
      "text": "else if l < = a and ( l + a ) is less than r",
      "code": "else if ( l <= a && ( l + a ) < r )",
      "indent": 2
    },
    {
      "line": 62,
      "text": "print 2 * ( l + a ) and newline",
      "code": "cout << 2 * ( l + a ) << endl ;",
      "indent": 3
    },
    {
      "line": 63,
      "text": "else if r < = a and ( r + a ) is less than l",
      "code": "else if ( r <= a && ( r + a ) < l )",
      "indent": 2
    },
    {
      "line": 64,
      "text": "print 2 * ( r + a ) and newline",
      "code": "cout << 2 * ( r + a ) << endl ;",
      "indent": 3
    },
    {
      "line": 65,
      "text": "else if ( l + a ) is less than r",
      "code": "else if ( ( l + a ) < r )",
      "indent": 2
    },
    {
      "line": 66,
      "text": "print 2 * ( l + a ) and newline",
      "code": "cout << 2 * ( l + a ) << endl ;",
      "indent": 3
    },
    {
      "line": 67,
      "text": "else if ( r + a ) is less than l",
      "code": "else if ( ( r + a ) < l )",
      "indent": 2
    },
    {
      "line": 68,
      "text": "print 2 * ( r + a ) and newline",
      "code": "cout << 2 * ( r + a ) << endl ;",
      "indent": 3
    },
    {
      "line": 69,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 70,
      "text": "let ans , ex1 , ex2 be integers with ex1 = 0 , ex2 = 0",
      "code": "int ans , ex1 = 0 , ex2 = 0 ;",
      "indent": 3
    },
    {
      "line": 71,
      "text": "let add be a integer with add = l + r",
      "code": "int add = l + r ;",
      "indent": 3
    },
    {
      "line": 72,
      "text": "if add modulo 2 is equal to 1",
      "code": "if ( add % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 73,
      "text": "decrement add by 1",
      "code": "add = add - 1 ;",
      "indent": 4
    },
    {
      "line": 74,
      "text": "ex1 is equal to 1",
      "code": "ex1 = 1 ;",
      "indent": 4
    },
    {
      "line": 75,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 76,
      "text": "if a modulo 2 is equal to 0",
      "code": "if ( a % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 77,
      "text": "ans is equal to add + a",
      "code": "ans = add + a ;",
      "indent": 4
    },
    {
      "line": 78,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 79,
      "text": "ans is equal to add + a - 1",
      "code": "ans = add + a - 1 ;",
      "indent": 4
    },
    {
      "line": 80,
      "text": "ex2 is equal to 1",
      "code": "ex2 = 1 ;",
      "indent": 4
    },
    {
      "line": 81,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 82,
      "text": "if ex1 + ex2 is equal to 2",
      "code": "if ( ex1 + ex2 == 2 )",
      "indent": 3
    },
    {
      "line": 83,
      "text": "print ans + 2 and newline",
      "code": "cout << ans + 2 << endl ;",
      "indent": 4
    },
    {
      "line": 84,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 85,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 4
    },
    {
      "line": 86,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 87,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 88,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 89,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else if ( == 0 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "proceed = next ;"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else if ( ' == 0 )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else if ( ( r % 2 == 0 && a % 2 == 1 )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘)’ before ‘{’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "else if ( r == n )"
      ],
      "err_line": 27,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "else if ( ( l % 2 == 0 && a % 2 == 1 )"
      ],
      "err_line": 38,
      "err_msg": "expected ‘)’ before ‘{’ token"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 46,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        52
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        57
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 59,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        59
      ],
      "mod_code": [
        "else if ( r == n )"
      ],
      "err_line": 59,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        61
      ],
      "mod_code": [
        "else if ( l <= a && ( l + a ) = r )"
      ],
      "err_line": 61,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        69
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 87,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        71
      ],
      "mod_code": [
        "int add += r ;"
      ],
      "err_line": 71,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        74
      ],
      "mod_code": [
        "if ( ex1 == 1 )"
      ],
      "err_line": 75,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        78
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 82,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        80
      ],
      "mod_code": [
        "if ( ex2 == 1 )"
      ],
      "err_line": 81,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        84
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 86,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        79
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        79,
        5
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "proceed = next ;"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        79,
        5,
        59
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "proceed = next ;",
        "else if ( r == n )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        79,
        5,
        57
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "proceed = next ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        79,
        5,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "proceed = next ;",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        79,
        59
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "else if ( r == n )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        79,
        59,
        57
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "else if ( r == n )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        79,
        59,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "else if ( r == n )",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        79,
        57
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        79,
        57,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        79,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "ans += a - 1 ;",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "else if ( == 0 )",
        "proceed = next ;"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        59
      ],
      "mod_code": [
        "else if ( == 0 )",
        "proceed = next ;",
        "else if ( r == n )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        59,
        57
      ],
      "mod_code": [
        "else if ( == 0 )",
        "proceed = next ;",
        "else if ( r == n )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        59,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "proceed = next ;",
        "else if ( r == n )",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        57
      ],
      "mod_code": [
        "else if ( == 0 )",
        "proceed = next ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        57,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "proceed = next ;",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "proceed = next ;",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        59
      ],
      "mod_code": [
        "else if ( == 0 )",
        "else if ( r == n )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        59,
        57
      ],
      "mod_code": [
        "else if ( == 0 )",
        "else if ( r == n )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        59,
        57,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "else if ( r == n )",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        59,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "else if ( r == n )",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        57
      ],
      "mod_code": [
        "else if ( == 0 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        57,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        67
      ],
      "mod_code": [
        "else if ( == 0 )",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        79,
        5
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "proceed = next ;"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        79,
        5,
        59
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "proceed = next ;",
        "else if ( r == n )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        79,
        5,
        59,
        57
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "proceed = next ;",
        "else if ( r == n )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        79,
        5,
        59,
        67
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "proceed = next ;",
        "else if ( r == n )",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        79,
        5,
        57
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "proceed = next ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        79,
        5,
        57,
        67
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "proceed = next ;",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        79,
        5,
        67
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "proceed = next ;",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        79,
        59
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "else if ( r == n )"
      ],
      "err_line": 59,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        79,
        59,
        57
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "else if ( r == n )",
        "do"
      ],
      "err_line": 59,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        79,
        59,
        57,
        67
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "else if ( r == n )",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 59,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        79,
        59,
        67
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "else if ( r == n )",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 59,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        79,
        57
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "do"
      ],
      "err_line": 59,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        79,
        57,
        67
      ],
      "mod_code": [
        "ans += a - 1 ;",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 59,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        59
      ],
      "mod_code": [
        "proceed = next ;",
        "else if ( r == n )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        59,
        57
      ],
      "mod_code": [
        "proceed = next ;",
        "else if ( r == n )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        59,
        57,
        67
      ],
      "mod_code": [
        "proceed = next ;",
        "else if ( r == n )",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        59,
        67
      ],
      "mod_code": [
        "proceed = next ;",
        "else if ( r == n )",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        57
      ],
      "mod_code": [
        "proceed = next ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        57,
        67
      ],
      "mod_code": [
        "proceed = next ;",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        67
      ],
      "mod_code": [
        "proceed = next ;",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        59,
        57
      ],
      "mod_code": [
        "else if ( r == n )",
        "do"
      ],
      "err_line": 59,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        59,
        57,
        67
      ],
      "mod_code": [
        "else if ( r == n )",
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 59,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        59,
        67
      ],
      "mod_code": [
        "else if ( r == n )",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 59,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        57,
        67
      ],
      "mod_code": [
        "do",
        "else if ( ( r + a ) < ' l ' )"
      ],
      "err_line": 59,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}