{
  "meta": {
    "index": 1437,
    "hitid": "34R3P23QHSV9UV6VIJFI4FVN8P6HWZ",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "873A",
    "subid": "44690279"
  },
  "lines": [
    {
      "line": 0,
      "text": "create long long int array dx that contains { 1 , 0 , - 1 , 0 }",
      "code": "long long dx [ ] = { 1 , 0 , - 1 , 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let long long integer array dy that contains { 0 , 1 , 0 , - 1 }",
      "code": "long long dy [ ] = { 0 , 1 , 0 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare gcd taking in long long ints x and y and returning long long integer",
      "code": "long long gcd ( long long x , long long y )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "if y is equal to 0",
      "code": "if ( y == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return x",
      "code": "return x ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return gcd ( y , x % y )",
      "code": "return gcd ( y , x % y ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "declare expo taking in long long ints n , m , and p and returning long long int",
      "code": "long long expo ( long long n , long long m , long long p )",
      "indent": 0
    },
    {
      "line": 9,
      "text": "let long long r = 1",
      "code": "long long r = 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set n to n % p",
      "code": "n = n % p ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "while m is greater than 0",
      "code": "while ( m > 0 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if m % 2 is truthy , set r to ( r * n ) % p",
      "code": "if ( m % 2 ) r = ( r * n ) % p ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set n to ( n * n ) % p",
      "code": "n = ( n * n ) % p ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set m to m / 2",
      "code": "m = m / 2 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "return r % p",
      "code": "return r % p ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "declare isPrime taking in long long n and returning bool",
      "code": "bool isPrime ( long long n )",
      "indent": 0
    },
    {
      "line": 19,
      "text": "if n is less than or equal to 1 , return false",
      "code": "if ( n <= 1 ) return false ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if n is less than of equal to 3 , return true",
      "code": "if ( n <= 3 ) return true ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if n modulo 2 is equal to 0 or n modulo 3 is equal to 0 , return false",
      "code": "if ( n % 2 == 0 || n % 3 == 0 ) return false ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 5 until i * i < = n by incrementing by 6",
      "code": "for ( long long i = 5 ; i * i <= n ; i = i + 6 )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if n modulo i is equal to 0 or n % ( i + 2 ) is equal to 0 , return false",
      "code": "if ( n % i == 0 || n % ( i + 2 ) == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 26,
      "text": "create long long vector z_function of size string s",
      "code": "vector < long long > z_function ( string s )",
      "indent": 0
    },
    {
      "line": 27,
      "text": "create long long n = ( long long ) s . length ( )",
      "code": "long long n = ( long long ) s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "create long long vector z of size n",
      "code": "vector < long long > z ( n ) ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "for i = 1 , l = 0 , and r = 0 to n exclusive",
      "code": "for ( long long i = 1 , l = 0 , r = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if i is less than or equal to r , set z [ i ] to min ( r - i + 1 , z [ i - l ] )",
      "code": "if ( i <= r ) z [ i ] = min ( r - i + 1 , z [ i - l ] ) ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "while i + z [ i ] is less than n and s [ z [ i ] ] is equal to s [ i + z [ i ] ] , increment + + z [ i ]",
      "code": "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z [ i ] ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "if i + z [ i ] - 1 is greater than r , set l to i and r to i + z [ i ] - 1",
      "code": "if ( i + z [ i ] - 1 > r ) l = i , r = i + z [ i ] - 1 ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "return z",
      "code": "return z ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 36,
      "text": "create long long integer set s",
      "code": "set < long long > s ;",
      "indent": 0
    },
    {
      "line": 37,
      "text": "let bool array vis of size 200005",
      "code": "bool vis [ 200005 ] ;",
      "indent": 0
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 39,
      "text": "create long long ints n , k , and x",
      "code": "long long n , k , x ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "read n , k , and x",
      "code": "cin >> n >> k >> x ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "make long long vector a of size n",
      "code": "vector < long long > a ( n ) ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( long long i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 43,
      "text": "sort vector a",
      "code": "sort ( a . begin ( ) , a . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 44,
      "text": "create long long int ans = 0 and c = 0",
      "code": "long long ans = 0 , c = 0 ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "for i = n - 1 to 0",
      "code": "for ( long long i = n - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 46,
      "text": "if k is greater than 0",
      "code": "if ( k > 0 )",
      "indent": 2
    },
    {
      "line": 47,
      "text": "reduce k by 1 and increase c by 1",
      "code": "k -- , c ++ ;",
      "indent": 3
    },
    {
      "line": 48,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 49,
      "text": "set ans to ans + a [ i ]",
      "code": "ans = ans + a [ i ] ;",
      "indent": 3
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 52,
      "text": "set ans to ans + c * x",
      "code": "ans = ans + c * x ;",
      "indent": 1
    },
    {
      "line": 53,
      "text": "print ans",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "sort ( a , a + n ) ;"
      ],
      "err_line": 43,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "return gcd ( y , x % y ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "long long int expo ( long long int m , long long int m , long long int p )"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "bool isPrime ( long long n ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= n ; i += 6 )"
      ],
      "err_line": 22,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "vector < long > z ( n ) ;"
      ],
      "err_line": 30,
      "err_msg": "no matching function for call to ‘min(long long int, long int&)’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "for ( i = 1 , l = 0 ; i < n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator++’ (operand type is ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "while ( cin >> n >> k >> x )"
      ],
      "err_line": 42,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 45,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 51,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        29
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        31
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        31,
        43
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "sort ( a , a + n ) ;"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        31,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        29,
        43
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "sort ( a , a + n ) ;"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        43,
        31
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "sort ( a , a + n ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        43,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "sort ( a , a + n ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        29,
        31
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        31,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        29,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        31
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        43
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "sort ( a , a + n ) ;"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        43,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "sort ( a , a + n ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        31,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        43
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "sort ( a , a + n ) ;"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        43,
        31
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "sort ( a , a + n ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        43,
        31,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "sort ( a , a + n ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        43,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "sort ( a , a + n ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        31
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;"
      ],
      "err_line": 26,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        5
      ],
      "mod_code": [
        "vector < long long > z_function ( s ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        31
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }"
      ],
      "err_line": 30,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        31,
        43
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "sort ( a , a + n ) ;"
      ],
      "err_line": 30,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        31,
        43,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "sort ( a , a + n ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        31,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        43
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "sort ( a , a + n ) ;"
      ],
      "err_line": 30,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        43,
        31
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "sort ( a , a + n ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;"
      ],
      "err_line": 30,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        43,
        31,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "sort ( a , a + n ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        43,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "sort ( a , a + n ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        31
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;"
      ],
      "err_line": 30,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        31,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , l = 0 ; i < n ; i ++ )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        31,
        43
      ],
      "mod_code": [
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "sort ( a , a + n ) ;"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        31,
        43,
        5
      ],
      "mod_code": [
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "sort ( a , a + n ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        31,
        5
      ],
      "mod_code": [
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) { ] ++ ; }",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        43,
        31
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator++’ (operand type is ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        43,
        31,
        5
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        43,
        5
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        31,
        5
      ],
      "mod_code": [
        "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}