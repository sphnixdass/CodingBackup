{
  "meta": {
    "index": 2041,
    "hitid": "371Q3BEXDH32EZPG40BO7XW7XFXZSN",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "633A",
    "subid": "45568049"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b , c , sum , temp , flag = int with sum = 0 and temp = 0 and flag = 0",
      "code": "int a , b , c , sum = 0 , temp = 0 , flag = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a then b then c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 10000",
      "code": "for ( int i = 0 ; i < 10000 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to 10000",
      "code": "for ( int j = 0 ; j < 10000 ; j ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set sum to a * i + b * j",
      "code": "sum = a * i + b * j ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "if sum is greater than c",
      "code": "if ( sum > c )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "break the inner loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "else if sum is c",
      "code": "else if ( sum == c )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" No \"",
      "code": "cout << \" No \" << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        6,
        15,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "if ( sum >= c )",
        "cout << \" NO\\n \" ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        6,
        8,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "if ( sum >= c )",
        "else if ( c == c )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        6,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "if ( sum >= c )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        15,
        8,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "cout << \" NO\\n \" ;",
        "else if ( c == c )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        15,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "cout << \" NO\\n \" ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        8,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "else if ( c == c )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        8,
        7
      ],
      "mod_code": [
        "if ( sum >= c )",
        "cout << \" NO\\n \" ;",
        "else if ( c == c )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        7
      ],
      "mod_code": [
        "if ( sum >= c )",
        "cout << \" NO\\n \" ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        7
      ],
      "mod_code": [
        "if ( sum >= c )",
        "else if ( c == c )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( sum >= c )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        8,
        7
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "else if ( c == c )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "else if ( c == c )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}