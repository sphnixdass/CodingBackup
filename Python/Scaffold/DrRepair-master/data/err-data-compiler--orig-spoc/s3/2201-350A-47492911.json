{
  "meta": {
    "index": 2201,
    "hitid": "359AP8GAGGE3N8UEOJT518ZQ26T7CF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "350A",
    "subid": "47492911"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare new integers n and m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare an arrays of integers a and b with size 200025",
      "code": "int a [ 200025 ] , b [ 200025 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare int variables v , p and c with value of v and c = 0x3f3f3f3f",
      "code": "int v = 0x3f3f3f3f , p , c = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read user input to n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i from 1 to n inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read from the input to a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set v to min of v and a [ i ]",
      "code": "v = min ( v , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "assign max of p and a [ i ] to p",
      "code": "p = max ( p , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 1 to m inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= m ; ++ i )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read standard input to b [ i ]",
      "code": "cin >> b [ i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "change c to min of c and b [ i ]",
      "code": "c = min ( c , b [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if max of 2 * v and p is less than c",
      "code": "if ( max ( 2 * v , p ) < c )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print max of 2 * v and p and ' \\ n '",
      "code": "cout << max ( 2 * v , p ) << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" - 1 \\ n \" to the standard output",
      "code": "cout << \" -1\\n \" ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [200025]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "c = min ( c and b [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( max ( 2 * v ) && p < c )"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << max ( 2 * v and p ) << ' \\n ' ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        15
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        15,
        6
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        15,
        11
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        15,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        6
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        6,
        11
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        6,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        11
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        11,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        17,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << \" 1\\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        15,
        6
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        15,
        6,
        11
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        15,
        6,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        15,
        11
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        15,
        11,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        15,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        6,
        11
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        6,
        11,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        11,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int v , p , c = 0x3f3f3f3f , c = 0x3f3f3f3f ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        17,
        15
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        17,
        15,
        6
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [200025]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        17,
        15,
        6,
        11
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [200025]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        17,
        15,
        6,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        15,
        11
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        17,
        15,
        11,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        15,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [200025]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        17,
        6,
        11
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [200025]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        17,
        6,
        11,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        6,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        17,
        11,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [200025]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        15,
        6,
        11
      ],
      "mod_code": [
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [200025]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        15,
        6,
        11,
        5
      ],
      "mod_code": [
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6,
        5
      ],
      "mod_code": [
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        15,
        11,
        5
      ],
      "mod_code": [
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "cout << max ( 2 * v and p ) << ' \\n ' ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [200025]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        11,
        5
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "getline ( cin , b [ i ] ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}