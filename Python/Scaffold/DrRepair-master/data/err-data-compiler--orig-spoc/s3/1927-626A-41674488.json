{
  "meta": {
    "index": 1927,
    "hitid": "3S829FDFT2V77F6J6SSEFDUWOCNDX8",
    "workerid": "A1APYLD4DUK33J",
    "probid": "626A",
    "subid": "41674488"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , res",
      "code": "int n , res ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings s , t",
      "code": "string s , t ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare is_return with string str as argument , returning boolean",
      "code": "bool is_return ( string str )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers x , y",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer len with len = length of str",
      "code": "int len = str . length ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set x to y to 0",
      "code": "x = y = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if str [ i ] is ' U '",
      "code": "if ( str [ i ] == ' U ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if str [ i ] is ' D '",
      "code": "else if ( str [ i ] == ' D ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if str [ i ] is ' L '",
      "code": "else if ( str [ i ] == ' L ' )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment x",
      "code": "x -- ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if str [ i ] is ' R '",
      "code": "else if ( str [ i ] == ' R ' )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if x or y , return false from function",
      "code": "if ( x || y ) return false ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "return true from function",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "read n read s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to n - 1 exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for j = 2 to i + j is less than or equal to n , incrementing j",
      "code": "for ( int j = 2 ; i + j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "set t to substring of s from i to j",
      "code": "t = s . substr ( i , j ) ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if result of run is_return with t as argument is true , increment res",
      "code": "if ( is_return ( t ) ) res ++ ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print res print newline",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string is_return ( string str )"
      ],
      "err_line": 17,
      "err_msg": "could not convert ‘true’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        6
      ],
      "mod_code": [
        "x ++ ;",
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        6,
        11
      ],
      "mod_code": [
        "x ++ ;",
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        6,
        1
      ],
      "mod_code": [
        "x ++ ;",
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        7,
        11,
        1
      ],
      "mod_code": [
        "x ++ ;",
        "if ( ! str [ i ] == ' U ' )",
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        7,
        1
      ],
      "mod_code": [
        "x ++ ;",
        "if ( ! str [ i ] == ' U ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "x ++ ;",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        11
      ],
      "mod_code": [
        "x ++ ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        11,
        1
      ],
      "mod_code": [
        "x ++ ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        6,
        1
      ],
      "mod_code": [
        "x ++ ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        11,
        1
      ],
      "mod_code": [
        "x ++ ;",
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "x ++ ;",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        7,
        6
      ],
      "mod_code": [
        "++ x ;",
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        6,
        11
      ],
      "mod_code": [
        "++ x ;",
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        6,
        1
      ],
      "mod_code": [
        "++ x ;",
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        7,
        11,
        1
      ],
      "mod_code": [
        "++ x ;",
        "if ( ! str [ i ] == ' U ' )",
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        7,
        1
      ],
      "mod_code": [
        "++ x ;",
        "if ( ! str [ i ] == ' U ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "++ x ;",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        11
      ],
      "mod_code": [
        "++ x ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        11,
        1
      ],
      "mod_code": [
        "++ x ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        6,
        1
      ],
      "mod_code": [
        "++ x ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        11,
        1
      ],
      "mod_code": [
        "++ x ;",
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "++ x ;",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        11
      ],
      "mod_code": [
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        11,
        1
      ],
      "mod_code": [
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        7,
        6,
        1
      ],
      "mod_code": [
        "if ( ! str [ i ] == ' U ' )",
        "for ( i = 0 ; i < len ; i ++ )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        7,
        11,
        1
      ],
      "mod_code": [
        "if ( ! str [ i ] == ' U ' )",
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( ! str [ i ] == ' U ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "else if ( ! str [ i ] == ' L ' )",
        "s , t ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ does not name a type"
    }
  ]
}