{
  "meta": {
    "index": 2395,
    "hitid": "3JMNNNO3B1Y5F53DZYCBHBPLIJS2WV",
    "workerid": "A1APYLD4DUK33J",
    "probid": "472A",
    "subid": "48620290"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer vis with size 1000010",
      "code": "int vis [ 1000010 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare init with no arguments , returning void",
      "code": "void init ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "for i = 2 to 1000010 inclusive",
      "code": "for ( int i = 2 ; i <= 1000010 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for j = 2 to i * j is less than or equal to 1000010 , incrementing j , set vis [ i * j ] to 1",
      "code": "for ( int j = 2 ; i * j <= 1000010 ; j ++ ) vis [ i * j ] = 1 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "run init",
      "code": "init ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 2 to n / 2 inclusive",
      "code": "for ( int i = 2 ; i <= n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if vis [ i ] and vis [ n - 1 ]",
      "code": "if ( vis [ i ] && vis [ n - i ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print i print \" \" print n - 1 print newline",
      "code": "cout << i << \" \" << n - i << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int vis . size ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘.’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void init ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "init ( )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        11,
        1
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        1,
        12
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        1,
        2
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        1,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        12
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        2
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "do",
        "init ( )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        10,
        11,
        2
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "cout << i << \" \" << n - 1 << endl ;",
        "init ( )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "void init ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        12
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "void init ( ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        12,
        2
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "void init ( ) ;",
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        12,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "void init ( ) ;",
        "do",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        2
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "void init ( ) ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        2,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "void init ( ) ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "void init ( ) ;",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        12,
        2
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        2,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "do",
        "init ( )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "if ( vis [ i ] && vis [ n - 1 ] )",
        "init ( )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        12
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        12,
        2
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;",
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        12,
        6
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;",
        "do",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        2
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        2,
        6
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        6
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "void init ( ) ;",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12,
        2
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        2,
        6
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        6
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "do",
        "init ( )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        6
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "cout << i << \" \" << n - 1 << endl ;",
        "init ( )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "void init ( ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        2
      ],
      "mod_code": [
        "void init ( ) ;",
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        2,
        6
      ],
      "mod_code": [
        "void init ( ) ;",
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        6
      ],
      "mod_code": [
        "void init ( ) ;",
        "do",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "void init ( ) ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "void init ( ) ;",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "void init ( ) ;",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        6
      ],
      "mod_code": [
        "do",
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "do",
        "init ( )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 1000010 ; i ++ )",
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}