{
  "meta": {
    "index": 2262,
    "hitid": "30IRMPJWDZDVOPQHPA89U83Y8R2RKH",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "58A",
    "subid": "49040521"
  },
  "lines": [
    {
      "line": 0,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function check taking int i , int v and returning int",
      "code": "int check ( int i , int v )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "for j = i to length of s",
      "code": "for ( int j = i ; j < s . length ( ) ; j ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if v is 0 and s [ j ] is ' h ' return check of j + 1 , v + 1",
      "code": "if ( v == 0 && s [ j ] == ' h ' ) return check ( j + 1 , v + 1 ) ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if v is 1 and s [ j ] is ' e ' return check of j + 1 , v + 1",
      "code": "if ( v == 1 && s [ j ] == ' e ' ) return check ( j + 1 , v + 1 ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if v is 2 and s [ j ] is ' l ' return check of j + 1 , v + 1",
      "code": "if ( v == 2 && s [ j ] == ' l ' ) return check ( j + 1 , v + 1 ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if v is 3 and s [ j ] is ' l ' return check of j + 1 , v + 1",
      "code": "if ( v == 3 && s [ j ] == ' l ' ) return check ( j + 1 , v + 1 ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if v is 4 and s [ j ] is ' o ' return 1",
      "code": "if ( v == 4 && s [ j ] == ' o ' ) return 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if check of 0 , 0",
      "code": "if ( check ( 0 , 0 ) )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        13,
        5,
        12
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        5,
        12,
        15
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        5,
        12,
        0
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        5,
        12,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        5,
        15
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "do"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        13,
        5,
        15,
        0
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "do",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        5,
        15,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "do",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        13,
        5,
        0
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        5,
        0,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        5,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "s >> s ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        12,
        15
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "s >> s ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        12,
        15,
        0
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "s >> s ;",
        "do",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        12,
        15,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "s >> s ;",
        "do",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        12,
        0
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        12,
        0,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "s >> s ;",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        12,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "s >> s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "do"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        13,
        15,
        0
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "do",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        15,
        0,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "do",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        15,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "do",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        0,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "if ( check ( 0 ) , 0 )",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        12,
        15
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        0
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;",
        "do",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        6
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;",
        "do",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        12,
        0
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        12,
        0,
        6
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        12,
        6
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "s >> s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        15,
        0
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "do",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        15,
        0,
        6
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "do",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        15,
        6
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "do",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        0,
        6
      ],
      "mod_code": [
        "return v == 2 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        15,
        0
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        15,
        0,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        15,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "do",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        0,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "do",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        15,
        0,
        6
      ],
      "mod_code": [
        "do",
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "do",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "char s ;",
        "return v == 3 && s [ j ] == ' l ' , check ( j + 1 , v + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    }
  ]
}