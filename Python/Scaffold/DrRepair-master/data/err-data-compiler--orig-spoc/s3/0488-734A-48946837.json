{
  "meta": {
    "index": 488,
    "hitid": "3WRKFXQBOB1DFVCF32FRPOHIINQYI2",
    "workerid": "A2UFGZT4QUY5ON",
    "probid": "734A",
    "subid": "48946837"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , cnt1 , cnt2 be integers and set cnt1 , cnt2 to 0",
      "code": "int n , cnt1 = 0 , cnt2 = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "c = character",
      "code": "char c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if c is character A",
      "code": "if ( c == ' A ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "add 1 to cnt1",
      "code": "cnt1 ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add 1 to cnt2",
      "code": "cnt2 ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if cnt1 is greater than cnt2",
      "code": "if ( cnt1 > cnt2 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print Anton",
      "code": "cout << \" Anton \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else if cnt1 is less than cnt2",
      "code": "else if ( cnt1 < cnt2 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print Danik",
      "code": "cout << \" Danik \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print Friendship",
      "code": "cout << \" Friendship \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( c == A )"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << Anton << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << Danik << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , cnt1 , cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "gets ( c ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << Anton ;"
      ],
      "err_line": 12,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << Danik ;"
      ],
      "err_line": 14,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;",
        "cout << Danik << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        11
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;",
        "cout << Danik ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        11
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;",
        "cout << Danik ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;",
        "cout << Danik ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        12,
        11
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        11,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;",
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        12,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Anton << endl ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Danik << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        11
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Danik << endl ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        11,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Danik << endl ;",
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        14,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Danik << endl ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Danik ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        11
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Danik ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        11,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Danik ;",
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        14,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "cout << Danik ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( c == A )",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( c == A )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        11
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 12,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        11,
        3
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        14,
        3
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik ;"
      ],
      "err_line": 12,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        11
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 12,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        11,
        3
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik ;",
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        14,
        3
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 12,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        3
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 14,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        3
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "cout << Danik ;",
        "if ( cnt1 >= cnt2 )"
      ],
      "err_line": 14,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        3
      ],
      "mod_code": [
        "cout << Danik ;",
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "cout << Danik ;",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "if ( cnt1 >= cnt2 )",
        "set < char > c ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    }
  ]
}