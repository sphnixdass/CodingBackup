{
  "meta": {
    "index": 2175,
    "hitid": "3HFWPF5AK9D1T6INJTGF3WRSIKWS3H",
    "workerid": "AIWEXPJAU66D9",
    "probid": "330A",
    "subid": "49049420"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long integer variables r , c , i , j , count and ans , with count and ans = 0",
      "code": "long long int r , c , i , j , count = 0 , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "freq is an long long integer array with size 15 filled with 0",
      "code": "long long int freq [ 15 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "freq1 is an long long integer array filled with 15 zeroes",
      "code": "long long int freq1 [ 15 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read r and c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "a is an array of characters with size r by c",
      "code": "char a [ r ] [ c ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to r exclusive",
      "code": "for ( i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to c exclusive",
      "code": "for ( j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if a [ i ] [ j ] = ' S '",
      "code": "if ( a [ i ] [ j ] == ' S ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increase freq [ i ]",
      "code": "freq [ i ] ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "increment freq1 [ j ]",
      "code": "freq1 [ j ] ++ ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to c exclusive",
      "code": "for ( i = 0 ; i < c ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if freq1 [ i ] = 0",
      "code": "if ( freq1 [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "ans = ans + r",
      "code": "ans = ans + r ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to r exclusive",
      "code": "for ( i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if freq [ i ] = 0 , increment ans by ans + c - count",
      "code": "if ( freq [ i ] == 0 ) { ans = ans + c - count ; }",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> r >> c )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char a [ r ] by c ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        3,
        22,
        9,
        5
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        3,
        22,
        9,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "if ( ! a [ i ] [ j ] )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        22,
        5
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "char a [ r ] by c ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        3,
        22,
        5,
        16
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        3,
        22,
        5,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "char a [ r ] by c ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        22,
        16,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        22,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        3,
        9,
        5,
        16
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        3,
        9,
        5,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( ! a [ i ] [ j ] )",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        9,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( ! a [ i ] [ j ] )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "char a [ r ] by c ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        3,
        5,
        16
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        3,
        5,
        16,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "char a [ r ] by c ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        16,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "long long int freq1 [ 2 ] = { 0 } ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        22,
        9,
        5
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        22,
        9,
        5,
        16
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        22,
        9,
        5,
        1
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        22,
        9,
        16,
        1
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "if ( ! a [ i ] [ j ] )",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        22,
        9,
        1
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "if ( ! a [ i ] [ j ] )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        22,
        5
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "char a [ r ] by c ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        22,
        5,
        16
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        22,
        5,
        16,
        1
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        22,
        5,
        1
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "char a [ r ] by c ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        22,
        16,
        1
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        22,
        1
      ],
      "mod_code": [
        "if ( freq [ i ] == ' 0 ' ) ans += ans + c - count ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        9,
        5,
        16
      ],
      "mod_code": [
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        9,
        5,
        16,
        1
      ],
      "mod_code": [
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        9,
        5,
        1
      ],
      "mod_code": [
        "if ( ! a [ i ] [ j ] )",
        "char a [ r ] by c ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        9,
        16,
        1
      ],
      "mod_code": [
        "if ( ! a [ i ] [ j ] )",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( ! a [ i ] [ j ] )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘by’"
    },
    {
      "mod_line": [
        5,
        16,
        1
      ],
      "mod_code": [
        "char a [ r ] by c ;",
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "char a [ r ] by c ;",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "if ( freq1 [ i ] == ' 0 ' )",
        "long long int r , c , i , j , count = 0 , ans = 0 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int ans’"
    }
  ]
}