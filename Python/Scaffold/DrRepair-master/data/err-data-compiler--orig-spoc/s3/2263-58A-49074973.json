{
  "meta": {
    "index": 2263,
    "hitid": "33BFF6QPI15U0NZW3YQG0LUDPKVW3E",
    "workerid": "A1AYVATMT88U1W",
    "probid": "58A",
    "subid": "49074973"
  },
  "lines": [
    {
      "line": 0,
      "text": "let str be a string",
      "code": "string str ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let ans be a string",
      "code": "string ans ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let h , e , l , l_ , o be boolean values with h = true , e = false , l = false , l_ = false , o = false",
      "code": "bool h = true , e = false , l = false , l_ = false , o = false ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 , i is less than length of str , increment i by 1",
      "code": "for ( int i = 0 ; i < str . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if str . at ( i ) equals h and h",
      "code": "if ( str . at ( i ) == ' h ' && h )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment ans by h",
      "code": "ans += ' h ' ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "e is equal to true",
      "code": "e = true ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "h is equal to false",
      "code": "h = false ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "proceed to next",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if str . at ( i ) equals e and e",
      "code": "if ( str . at ( i ) == ' e ' && e )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment ans by e",
      "code": "ans += ' e ' ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "l is equal to true",
      "code": "l = true ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "e is equal to false",
      "code": "e = false ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "proceed to next",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if str . at ( i ) equals l and l",
      "code": "if ( str . at ( i ) == ' l ' && l )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increment ans by l",
      "code": "ans += ' l ' ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "l_ is equal to true",
      "code": "l_ = true ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "l is equal to false",
      "code": "l = false ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "proceed to next",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if str . at ( i ) equals l and l_",
      "code": "if ( str . at ( i ) == ' l ' && l_ )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "increment ans by l",
      "code": "ans += ' l ' ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "o is equal to true",
      "code": "o = true ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "l_ is equal to false",
      "code": "l_ = false ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "proceed to next",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if str . at ( i ) equals o and o",
      "code": "if ( str . at ( i ) == ' o ' && o )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "increment ans by o",
      "code": "ans += ' o ' ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "stop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "if ans equals hello",
      "code": "if ( ans == \" hello \" )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 38,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char ans ;"
      ],
      "err_line": 35,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool h = true , l = false , l = false , l_ = false , o = false ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool l’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 , i < str . length ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘<’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ans = ans + h ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘bool’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "proceed = next ;"
      ],
      "err_line": 10,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "ans = ans + e ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘bool’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "proceed = next ;"
      ],
      "err_line": 16,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "ans = ans + l ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘bool’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "proceed = next ;"
      ],
      "err_line": 22,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "ans = ans + l ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘bool’)"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "proceed = next ;"
      ],
      "err_line": 28,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 32,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "if ( ans == ' hello ' )"
      ],
      "err_line": 35,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 39,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        12
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        13
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        18
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        13
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += e ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        18
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += e ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += e ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        18
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        19,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        19,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += l ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        19,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        19,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        7,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += h ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        18
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        18
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        12,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        18
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += l ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        13,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += e ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        19,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        19,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        18,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        19,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += o ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        6,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == h && h . at ( i ) == h )",
        "if ( ans == hello )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        13
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        18
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        19
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        24
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        25
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        31
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        18
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        19
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        24
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        25
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        31
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        19
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        19,
        24
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        19,
        25
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        19,
        31
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        19,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        24
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        24,
        25
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        24,
        31
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        24,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        25
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        25,
        31
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        25,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        31
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        31,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        12,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        19,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += e ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        24,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        25,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += e ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        31,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += e ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += e ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        24,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        25,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        31,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        24,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        25,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += l ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        31,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        25,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        31,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25,
        31,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        31,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        35
      ],
      "mod_code": [
        "ans += h ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        18
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        13,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += e ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        18,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        19,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        24
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        24,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        24,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        25
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        25,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        31
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += o ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        12,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' e ' && e . at ( i ) == ' e ' )",
        "if ( ans == hello )"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘e’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        31,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "ans += l ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        31,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        31,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        31,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        31,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        35
      ],
      "mod_code": [
        "ans += e ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        25,
        35
      ],
      "mod_code": [
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        31,
        35
      ],
      "mod_code": [
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        35
      ],
      "mod_code": [
        "ans += l ;",
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        31,
        35
      ],
      "mod_code": [
        "ans += l ;",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25,
        35
      ],
      "mod_code": [
        "ans += l ;",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        31,
        35
      ],
      "mod_code": [
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        35
      ],
      "mod_code": [
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        31,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        35
      ],
      "mod_code": [
        "if ( str . at ( i ) == ' l ' )",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        31,
        35
      ],
      "mod_code": [
        "ans += l ;",
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        35
      ],
      "mod_code": [
        "ans += l ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        35
      ],
      "mod_code": [
        "ans += o ;",
        "if ( ans == hello )"
      ],
      "err_line": 35,
      "err_msg": "‘hello’ was not declared in this scope"
    }
  ]
}