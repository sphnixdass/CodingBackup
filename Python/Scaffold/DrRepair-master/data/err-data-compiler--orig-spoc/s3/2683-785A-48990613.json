{
  "meta": {
    "index": 2683,
    "hitid": "3RZS0FBRWK4STEYEK5NM1UQB205PCA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "785A",
    "subid": "48990613"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new int variables n and cnt with cnt = 0",
      "code": "int n , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n ! = 0 , decrement it and continue the loop",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "str is a new array of characters with size 20",
      "code": "char str [ 20 ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read variable str from the input",
      "code": "cin >> str ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if str [ 0 ] is equal to ' T '",
      "code": "if ( str [ 0 ] == ' T ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increase cnt by 4",
      "code": "cnt += 4 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if str [ 0 ] is equal to ' C '",
      "code": "else if ( str [ 0 ] == ' C ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "change cnt to the sum of cnt and 6",
      "code": "cnt += 6 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if str [ 0 ] is equal to ' O '",
      "code": "else if ( str [ 0 ] == ' O ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "change cnt to the sum of cnt and 8",
      "code": "cnt += 8 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if str [ 0 ] = ' D '",
      "code": "else if ( str [ 0 ] == ' D ' )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increase cnt by 12",
      "code": "cnt += 12 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if str [ 0 ] = ' I '",
      "code": "else if ( str [ 0 ] == ' I ' )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "change cnt to cnt + 20",
      "code": "cnt += 20 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n declare cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( -- n -- )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "str = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [20]’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        8
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        8,
        3
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        8,
        6
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        8,
        17
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        3
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "while ( -- n -- )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        3,
        6
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        3,
        17
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "while ( -- n -- )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        6
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        6,
        17
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "if ( str [ 0 ] == ' 0 ' )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        14,
        17
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( str [ 0 ] == \" I ' )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        8,
        3
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        12,
        8,
        3,
        6
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        12,
        8,
        3,
        17
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )",
        "cout << cnt ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "while ( -- n -- )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        12,
        3,
        6
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        12,
        3,
        6,
        17
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )",
        "cout << cnt ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        12,
        3,
        17
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] )",
        "while ( -- n -- )",
        "cout << cnt ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        8,
        3
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        8,
        3,
        6
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        8,
        3,
        17
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        8,
        6
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        8,
        6,
        17
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "if ( str [ 0 ] == ' 0 ' )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        8,
        17
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "else if ( ! str [ 0 ] == ' C ' )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "while ( -- n -- )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        3,
        6
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        3,
        6,
        17
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        3,
        17
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "while ( -- n -- )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        6,
        17
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "if ( str [ 0 ] == ' 0 ' )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "else if ( str [ 0 ] == \" I ' )",
        "cout << cnt ;"
      ],
      "err_line": 14,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        8,
        3,
        6
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        8,
        3,
        6,
        17
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )",
        "cout << cnt ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        8,
        3,
        17
      ],
      "mod_code": [
        "else if ( ! str [ 0 ] == ' C ' )",
        "while ( -- n -- )",
        "cout << cnt ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        3,
        6,
        17
      ],
      "mod_code": [
        "while ( -- n -- )",
        "if ( str [ 0 ] == ' 0 ' )",
        "cout << cnt ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "while ( -- n -- )",
        "cout << cnt ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    }
  ]
}