{
  "meta": {
    "index": 447,
    "hitid": "31GECDVA9JGV3R78VIBA9U7KAM366H",
    "workerid": "A1APYLD4DUK33J",
    "probid": "734A",
    "subid": "42277140"
  },
  "lines": [
    {
      "line": 0,
      "text": "create character array a with size",
      "code": "char a [ 100000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers n , sum1 , sum2 , with sum1 = 0 , sum2 = 0",
      "code": "int n , sum1 = 0 , sum2 = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set a [ i ] to ' A '",
      "code": "if ( a [ i ] == ' A ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment sum1",
      "code": "sum1 ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment sum2",
      "code": "sum2 ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if sum1 is greater than sum2",
      "code": "if ( sum1 > sum2 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" Anton \" print newline",
      "code": "cout << \" Anton \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else if sum1 is less than sum2",
      "code": "else if ( sum1 < sum2 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" Danik \" print newline",
      "code": "cout << \" Danik \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" Friendship \" print newline",
      "code": "cout << \" Friendship \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char a [ size ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , sum1 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> a . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘char [100000]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "a [ i ] = ( ' A ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        12
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        12,
        15
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        12,
        3
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        12,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        15
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        15,
        3
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        15,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "do",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        3
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        3,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "a [ i ] = ' A ' ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "char a [ size ] ;",
        "cout << \" Anton \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        15
      ],
      "mod_code": [
        "char a [ size ] ;",
        "cout << \" Anton \" ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        15,
        3
      ],
      "mod_code": [
        "char a [ size ] ;",
        "cout << \" Anton \" ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        15,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "cout << \" Anton \" ;",
        "do",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        3
      ],
      "mod_code": [
        "char a [ size ] ;",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        3,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "cout << \" Anton \" ;",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "cout << \" Anton \" ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "char a [ size ] ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        3
      ],
      "mod_code": [
        "char a [ size ] ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        3,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "do",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "do",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "char a [ size ] ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "char a [ size ] ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        12,
        15
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        3
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        13
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;",
        "do",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        12,
        3
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        3,
        13
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "cout << \" Anton \" ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        15,
        3
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15,
        3,
        13
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "do",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15,
        13
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "do",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        13
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "a [ i ] = ' A ' ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "cout << \" Anton \" ;",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        15,
        3
      ],
      "mod_code": [
        "cout << \" Anton \" ;",
        "do",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15,
        3,
        13
      ],
      "mod_code": [
        "cout << \" Anton \" ;",
        "do",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15,
        13
      ],
      "mod_code": [
        "cout << \" Anton \" ;",
        "do",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << \" Anton \" ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        13
      ],
      "mod_code": [
        "cout << \" Anton \" ;",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "do",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        3,
        13
      ],
      "mod_code": [
        "do",
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "do",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "cin >> N ;",
        "else if ( sum1 <= sum2 )"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}