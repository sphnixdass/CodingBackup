{
  "meta": {
    "index": 101,
    "hitid": "37SOB9Z0SSREPTNXZKJERADXRDIL31",
    "workerid": "AIWEXPJAU66D9",
    "probid": "391A",
    "subid": "45445139"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare strings s and check",
      "code": "string s , check ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "append \" 0 \" to s",
      "code": "s . append ( \" 0 \" ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "append character at position 0 of s to check",
      "code": "check += s . at ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i from 1 to length of s exclusive",
      "code": "for ( int i = 1 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if character at position i of s = last character of check",
      "code": "if ( s . at ( i ) == check . at ( check . size ( ) - 1 ) )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "append character at position i of s to check",
      "code": "check += s . at ( i ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if character at position i of s is \" 0 \"",
      "code": "else if ( s . at ( i ) == ' 0 ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if lengh of check is even",
      "code": "if ( check . size ( ) % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment count by one",
      "code": "count ++ ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "clear check",
      "code": "check . clear ( ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "append character at position i of s to check",
      "code": "check += s . at ( i ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 15,
      "text": "clear check",
      "code": "check . clear ( ) ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "append character at position i of s to check",
      "code": "check += s . at ( i ) ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if lengh of check is even",
      "code": "if ( check . size ( ) % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "increment count by one",
      "code": "count ++ ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "clear check",
      "code": "check . clear ( ) ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "append character at position i of s to check",
      "code": "check += s . at ( i ) ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 24,
      "text": "clear check",
      "code": "check . clear ( ) ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "append character at position i of s to check",
      "code": "check += s . at ( i ) ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 19,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 22,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 25,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s , check ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "check . push_back ( 0 , check ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s [ i ] . at ( i ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "check . push_back ( i , i ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, int&)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( s [ i ] == \" 0 \" )"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( check ( check ) % 2 == 0 )"
      ],
      "err_line": 10,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "check . pop_back ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop_back’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "check . push_back ( i , i ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, int&)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "check . pop_back ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop_back’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "check . push_back ( i , i ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, int&)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 28,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( check ( check ) % 2 == 0 )"
      ],
      "err_line": 19,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "check . pop_back ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop_back’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "check . push_back ( i , i ) ;"
      ],
      "err_line": 22,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, int&)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "check . pop_back ( ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop_back’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "check . push_back ( i , i ) ;"
      ],
      "err_line": 25,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, int&)’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        8
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        9
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        9
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        22,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        9
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        19,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        19,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        22,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        22,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        22,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        22,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        22,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16,
        22,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        19,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        19,
        22,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        19,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        22,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        25
      ],
      "mod_code": [
        "s . push_back ( \" 0 \" ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        9
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        10
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        10
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        10
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        7,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        10
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        8,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        9,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        10,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        13,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        16,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        19,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        22
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        25
      ],
      "mod_code": [
        "check . push_back ( 0 , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        10
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        13
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        13
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        13
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        19,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        19,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        22,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        10
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        13
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        13
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        19,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        19,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        22,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        9,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        19,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        19,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        22,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        16,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        16,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        16,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        19,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        19,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        22,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        13,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        16,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        16,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        16,
        22,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        16,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        19,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        19,
        22,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        19,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        22
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        22,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        25
      ],
      "mod_code": [
        "if ( check [ i ] . at ( i ) == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘check.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        10
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        13
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        16
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        13
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        16
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        16
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        16
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        16
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        10,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        16
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        13,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        16,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        19,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        13
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        16
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        19
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        19
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        19
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        10,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        16
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        19
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        19
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        13,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        16,
        19
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        16,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        16,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        16,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        19,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        19,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        19,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] . at ( i ) == \" 0 \" )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        16
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        19
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        22
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        19
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        22
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        22
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        22,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        19
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        22
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        22
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        22,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        22
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        16,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        19,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        16,
        19,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        16,
        19,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        16,
        19,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        16,
        22
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        16,
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        16,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        19,
        22
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        22,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        25
      ],
      "mod_code": [
        "if ( lengh % 2 == 0 )",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        25
      ],
      "mod_code": [
        "check . push_back ( i , s ) ;",
        "check . push_back ( i , s ) ;"
      ],
      "err_line": 22,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::push_back(int&, std::__cxx11::string&)’"
    }
  ]
}