{
  "meta": {
    "index": 1328,
    "hitid": "38O9DZ0A62H7LQO78GZ7JHQ8V4Z629",
    "workerid": "A1APYLD4DUK33J",
    "probid": "731A",
    "subid": "48522220"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare character temp = ' a '",
      "code": "char temp = ' a ' ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to size of str exclusive",
      "code": "for ( int i = 0 ; i < str . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "increment sum by minimum of ( absolute value of ( temp - str [ i ] ) and 26 - absolute value of ( temp - str [ i ] ) )",
      "code": "sum += min ( fabs ( temp - str [ i ] ) , 26 - fabs ( temp - str [ i ] ) ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let temp be str [ i ]",
      "code": "temp = str [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print sum and newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘string’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool str ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘:’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "bool str ;",
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "bool str ;",
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "int temp = str [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        4
      ],
      "mod_code": [
        "bool str ;",
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "int temp = str [ i ] ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        2
      ],
      "mod_code": [
        "bool str ;",
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "int temp = str [ i ] ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘bool’"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "bool str ;",
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        6,
        4,
        2
      ],
      "mod_code": [
        "bool str ;",
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "gets ( str ) ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘bool’"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "bool str ;",
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘bool’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "bool str ;",
        "int temp = str [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "bool str ;",
        "int temp = str [ i ] ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        2
      ],
      "mod_code": [
        "bool str ;",
        "int temp = str [ i ] ;",
        "gets ( str ) ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘bool’"
    },
    {
      "mod_line": [
        3,
        7,
        2
      ],
      "mod_code": [
        "bool str ;",
        "int temp = str [ i ] ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘bool’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "bool str ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "bool str ;",
        "gets ( str ) ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘bool’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "bool str ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘bool’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "int temp = str [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘:’ token"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "int temp = str [ i ] ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7,
        4,
        2
      ],
      "mod_code": [
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "int temp = str [ i ] ;",
        "gets ( str ) ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘string’"
    },
    {
      "mod_line": [
        6,
        7,
        2
      ],
      "mod_code": [
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "int temp = str [ i ] ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘string’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "gets ( str ) ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘string’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "sum += min ( abs ( temp - str [ i ] ) , 26 : abs ( temp - str [ i ] ) ) ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘string’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "int temp = str [ i ] ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "int temp = str [ i ] ;",
        "gets ( str ) ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘string’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "int temp = str [ i ] ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘string’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "gets ( str ) ;",
        "char temp = ' a '"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘string’"
    }
  ]
}