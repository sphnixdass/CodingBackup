{
  "meta": {
    "index": 2342,
    "hitid": "3X52SWXE0XZIDNVFWR1HTOY7UA6WCZ",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "117A",
    "subid": "36345825"
  },
  "lines": [
    {
      "line": 0,
      "text": "maxn = const int with maxn = 100010",
      "code": "const int maxn = 100010 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , m = integer",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s , f , t = integer",
      "code": "int s , f , t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s , f , t",
      "code": "cin >> s >> f >> t ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "st , up = integers with up = 1",
      "code": "int st , up = 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "st = t modulo ( ( m - 1 ) * 2 ) + 1",
      "code": "st = t % ( ( m - 1 ) * 2 ) + 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if st > m",
      "code": "if ( st > m )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "st = m * 2 - st",
      "code": "st = m * 2 - st ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "up = 0",
      "code": "up = 0 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if st is 0 then st = 1",
      "code": "if ( st == 0 ) st = 1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if f > s",
      "code": "if ( f > s )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if up is 1 and st < = s",
      "code": "if ( up == 1 && st <= s )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print t + f - st",
      "code": "cout << t + f - st << endl ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "else if up is 1 and st > s",
      "code": "else if ( up == 1 && st > s )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "print t + 2 * m - st + f - 2",
      "code": "cout << t + 2 * m - st + f - 2 << endl ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else if up is 0 and st < = s",
      "code": "else if ( up == 0 && st <= s )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "print t + st + f - 2",
      "code": "cout << t + st + f - 2 << endl ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "else if up is 0 and st > s",
      "code": "else if ( up == 0 && st > s )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "print t + st + f - 2",
      "code": "cout << t + st + f - 2 << endl ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else if f < s",
      "code": "else if ( f < s )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if up is 1 and st < s",
      "code": "if ( up == 1 && st < s )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "print t + 2 * m - st - f",
      "code": "cout << t + 2 * m - st - f << endl ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "else if up is 1 and st > = s",
      "code": "else if ( up == 1 && st >= s )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "print t + 2 * m - st - f",
      "code": "cout << t + 2 * m - st - f << endl ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "else if up is 0 and st < s",
      "code": "else if ( up == 0 && st < s )",
      "indent": 3
    },
    {
      "line": 30,
      "text": "print t + 2 * m + st - f - 2",
      "code": "cout << t + 2 * m + st - f - 2 << endl ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "else if up is 0 and st > = s",
      "code": "else if ( up == 0 && st >= s )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "print t + st - f",
      "code": "cout << t + st - f << endl ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 35,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        31
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        31,
        30
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        31,
        10
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )",
        "int st = m * 2 - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        31,
        16
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        30
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        30,
        10
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;",
        "int st = m * 2 - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        30,
        16
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        10
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "int st = m * 2 - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        10,
        16
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "int st = m * 2 - st ;",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        11,
        8,
        16
      ],
      "mod_code": [
        "bool up = 0 ;",
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        31
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        31,
        30
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        31,
        30,
        10
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;",
        "int st = m * 2 - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        31,
        30,
        16
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        31,
        10
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )",
        "int st = m * 2 - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        31,
        10,
        16
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )",
        "int st = m * 2 - st ;",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        31,
        16
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "else if ( st == 0 && st >= s )",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        30
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        30,
        10
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;",
        "int st = m * 2 - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        30,
        10,
        16
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;",
        "int st = m * 2 - st ;",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        30,
        16
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "cout << t + 2 * m + st - ( f - 2 ) << endl ;",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "int st = m * 2 - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        10,
        16
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "int st = m * 2 - st ;",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "int st = t % ( ( m - 1 ) * 2 ) + 1 ;",
        "cout << t + f - st ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int st’"
    }
  ]
}