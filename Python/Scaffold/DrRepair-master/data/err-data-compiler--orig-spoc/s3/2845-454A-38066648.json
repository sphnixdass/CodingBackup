{
  "meta": {
    "index": 2845,
    "hitid": "3V7ICJJAZAANUGKP8LZ3NC9YTJ74BP",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "454A",
    "subid": "38066648"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make integer mid = n / 2",
      "code": "int mid = n / 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set char array s of size mid + 1 with array of size n",
      "code": "char s [ mid + 1 ] [ n ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to mid",
      "code": "for ( int i = 0 ; i <= mid ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if j is greater than or equal to ( mid - i ) and j is less than or equal to ( mid + i )",
      "code": "if ( j >= ( mid - i ) && j <= ( mid + i ) )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set s [ i ] [ j ] to ' D '",
      "code": "s [ i ] [ j ] = ' D ' ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else do",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set s [ i ] [ j ] to ' * '",
      "code": "s [ i ] [ j ] = ' * ' ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to mid",
      "code": "for ( int i = 0 ; i <= mid ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for j = 0 to n exclusive , print s [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { cout << s [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = mid - 1 to 0",
      "code": "for ( int i = mid - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for j = 0 to n exclusive , display s [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { cout << s [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "mid = n / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘mid’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char s [ mid + 1 ] = { 0 } ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < mid ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "s [ i ] [ j ] = \" * ' ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < mid ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = mid - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        14,
        4,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        14,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" * ' ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" * ' ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        4,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        4,
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" * ' ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" * ' ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        4,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        4,
        10,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;",
        "for ( i = 0 ; i < mid ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        4,
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "for ( i = 0 ; i < mid ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "for ( i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" * ' ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        10,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" * ' ;",
        "for ( i = 0 ; i < mid ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        10,
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" * ' ;",
        "for ( i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" * ' ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "for ( i = 0 ; i < mid ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "for ( i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        5
      ],
      "mod_code": [
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;",
        "for ( i = 0 ; i < mid ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        5,
        8
      ],
      "mod_code": [
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;",
        "for ( i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        8
      ],
      "mod_code": [
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" * ' ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "char s [ mid + 1 ] = { 0 } ;",
        "for ( i = 0 ; i < mid ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "char s [ mid + 1 ] = { 0 } ;",
        "for ( i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "char s [ mid + 1 ] = { 0 } ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "s [ i ] [ j ] = \" * ' ;",
        "for ( i = 0 ; i < mid ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        5,
        8
      ],
      "mod_code": [
        "s [ i ] [ j ] = \" * ' ;",
        "for ( i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "s [ i ] [ j ] = \" * ' ;",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < mid ; i ++ )",
        "s [ i ] [ j ] = \" D \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}