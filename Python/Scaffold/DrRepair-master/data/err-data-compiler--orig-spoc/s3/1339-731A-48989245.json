{
  "meta": {
    "index": 1339,
    "hitid": "3KLL7H3EGDVWF66QS9AMIDC91G7VH6",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "731A",
    "subid": "48989245"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str = string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "counter , n = integers with counter = 0 , n = str . size ( )",
      "code": "int counter = 0 , n = str . size ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "pointer = character with pointer = a",
      "code": "char pointer = ' a ' ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "counter = counter + ( min ( abs ( pointer - str [ i ] ) , 26 - ( abs ( pointer - str [ i ] ) ) ) )",
      "code": "counter += ( min ( abs ( pointer - str [ i ] ) , 26 - ( abs ( pointer - str [ i ] ) ) ) ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "pointer = str [ i ]",
      "code": "pointer = str [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print counter",
      "code": "cout << counter << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char * * a = a ;"
      ],
      "err_line": 6,
      "err_msg": "‘pointer’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char * = str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char * * a ;"
      ],
      "err_line": 6,
      "err_msg": "‘pointer’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( pointer [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char str = str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "char * * a = a ;",
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "char * * a = a ;",
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        9
      ],
      "mod_code": [
        "char * * a = a ;",
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        2
      ],
      "mod_code": [
        "char * * a = a ;",
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "char * * a = a ;",
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        2
      ],
      "mod_code": [
        "char * * a = a ;",
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "char * * a = a ;",
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "char * * a = a ;",
        "char * = str [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘pointer’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "char * * a = a ;",
        "char * = str [ i ] ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "‘pointer’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        2
      ],
      "mod_code": [
        "char * * a = a ;",
        "char * = str [ i ] ;",
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "char * * a = a ;",
        "char * = str [ i ] ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "char * * a = a ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "‘pointer’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        2
      ],
      "mod_code": [
        "char * * a = a ;",
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "char * * a = a ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;",
        "char * * a ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        7,
        4,
        9
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;",
        "char * * a ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        7,
        4,
        2
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;",
        "char * * a ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        2
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;",
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7,
        2
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * = str [ i ] ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * * a ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        4,
        9
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * * a ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        4,
        9,
        2
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * * a ;",
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "char * * a ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "counter = counter + ( min ( abs ( str [ i ] ) , 26 - ( abs ( str - str [ i ] ) ) ) ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "char * = str [ i ] ;",
        "char * * a ;"
      ],
      "err_line": 6,
      "err_msg": "‘pointer’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        9
      ],
      "mod_code": [
        "char * = str [ i ] ;",
        "char * * a ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "‘pointer’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        9,
        2
      ],
      "mod_code": [
        "char * = str [ i ] ;",
        "char * * a ;",
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "char * = str [ i ] ;",
        "char * * a ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "char * = str [ i ] ;",
        "cout << counter ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "char * = str [ i ] ;",
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "char * = str [ i ] ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "char * * a ;",
        "cout << counter ;"
      ],
      "err_line": 6,
      "err_msg": "‘pointer’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        2
      ],
      "mod_code": [
        "char * * a ;",
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "char * * a ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "cout << counter ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}