{
  "meta": {
    "index": 881,
    "hitid": "3RZS0FBRWK4STEYEK5NM1UQB1D5CPM",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "620A",
    "subid": "47506216"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the function max1 that takes long long int x , y and returns long long int",
      "code": "long long int max1 ( long long int x , long long int y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if x > = y",
      "code": "if ( x >= y )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return x",
      "code": "return x ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return y",
      "code": "return y ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "x1 , y1 , x2 , y2 = long long int",
      "code": "long long int x1 , y1 , x2 , y2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read x1 , y1 , x2 , y2",
      "code": "cin >> x1 >> y1 >> x2 >> y2 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "maxi = long long int with maxi = max1 on abs ( x2 - x1 ) and abs ( y2 - y1 )",
      "code": "long long int maxi = max1 ( abs ( x2 - x1 ) , abs ( y2 - y1 ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print maxi",
      "code": "cout << maxi << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "else if ( x >= y )"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘long long int x2’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "long long int maxi = max1 ( x2 - x1 ) , abs ( y2 - y1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘long long int max1(long long int, long long int)’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        8
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        8,
        1
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        8,
        3
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        8,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        1
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "else if ( x >= y )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        1,
        3
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "else if ( x >= y )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        1,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "else if ( x >= y )",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        3,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        7,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "long long int x1 , x2 , x2 , y2 ;",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "cin >> x1 >> x1 >> x2 >> y2 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        8,
        1
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        8,
        1,
        3
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        8,
        1,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        8,
        3
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        8,
        3,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        8,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "else if ( x >= y )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        1,
        3
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "else if ( x >= y )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        1,
        3,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "else if ( x >= y )",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "else if ( x >= y )",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        3,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "long long int max1 ( long long int y , long long int y )",
        "cout << maxi ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘long long int x2’"
    },
    {
      "mod_line": [
        7,
        8,
        1
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        8,
        1,
        3
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        8,
        1,
        10
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )",
        "cout << maxi ;"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        8,
        3
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8,
        3,
        10
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "cout << maxi ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘long long int x2’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "else if ( x >= y )"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        1,
        3
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "else if ( x >= y )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        1,
        3,
        10
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "else if ( x >= y )",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        1,
        10
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "else if ( x >= y )",
        "cout << maxi ;"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        3,
        10
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "long long int x1 , x2 , x2 , y2 ;",
        "cout << maxi ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘long long int x2’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        1,
        3
      ],
      "mod_code": [
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        1,
        3,
        10
      ],
      "mod_code": [
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        1,
        10
      ],
      "mod_code": [
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "else if ( x >= y )",
        "cout << maxi ;"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        3,
        10
      ],
      "mod_code": [
        "cin >> x1 >> x1 >> x2 >> y2 ;",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "else if ( x >= y )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "else if ( x >= y )",
        "do",
        "cout << maxi ;"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "else if ( x >= y )",
        "cout << maxi ;"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "do",
        "cout << maxi ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}