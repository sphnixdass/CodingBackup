{
  "meta": {
    "index": 475,
    "hitid": "3PCPFX4U40KKW2J3BKSC951O3MHQF0",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "734A",
    "subid": "48851843"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , i , a , d = integers",
      "code": "int n , i , a , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "ch = character",
      "code": "char ch ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set a to 0",
      "code": "a = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set d to 0",
      "code": "d = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "Read ch",
      "code": "cin >> ch ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if ch is equal to A",
      "code": "if ( ch == ' A ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set a to a + 1",
      "code": "a = a + 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set d to d + 1",
      "code": "d = d + 1 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a is greater than d",
      "code": "if ( a > d )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print Anton and a new line",
      "code": "cout << \" Anton \" << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if d is greater than a",
      "code": "else if ( d > a )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print Danik and a new line",
      "code": "cout << \" Danik \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print Friendship and a new line",
      "code": "cout << \" Friendship \" << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << Anton << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << Danik << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < char > ch ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( ch == A )"
      ],
      "err_line": 8,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "a = a + l ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << Anton << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        10
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        16,
        10,
        2
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "do",
        "set < char > ch ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        16,
        10,
        13
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "do",
        "if ( a >= d )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        16,
        2
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "set < char > ch ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        16,
        2,
        13
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "set < char > ch ;",
        "if ( a >= d )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        16,
        13
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "if ( a >= d )"
      ],
      "err_line": 14,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        10,
        2
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "do",
        "set < char > ch ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        10,
        2,
        13
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "do",
        "set < char > ch ;",
        "if ( a >= d )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        10,
        2,
        16
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "do",
        "set < char > ch ;",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        10,
        13
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "do",
        "if ( a >= d )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "do",
        "if ( a >= d )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        10,
        16
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "do",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "set < char > ch ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        2,
        13
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "set < char > ch ;",
        "if ( a >= d )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        2,
        13,
        16
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "set < char > ch ;",
        "if ( a >= d )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        2,
        16
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "set < char > ch ;",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "if ( a >= d )"
      ],
      "err_line": 14,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13,
        16
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "if ( a >= d )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        10,
        2
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "do",
        "set < char > ch ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        16,
        10,
        2,
        13
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "do",
        "set < char > ch ;",
        "if ( a >= d )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        16,
        10,
        13
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "do",
        "if ( a >= d )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "set < char > ch ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        16,
        2,
        13
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "set < char > ch ;",
        "if ( a >= d )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "if ( a >= d )"
      ],
      "err_line": 16,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "do",
        "set < char > ch ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        10,
        2,
        13
      ],
      "mod_code": [
        "do",
        "set < char > ch ;",
        "if ( a >= d )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        10,
        2,
        13,
        16
      ],
      "mod_code": [
        "do",
        "set < char > ch ;",
        "if ( a >= d )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        10,
        2,
        16
      ],
      "mod_code": [
        "do",
        "set < char > ch ;",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "do",
        "if ( a >= d )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        13,
        16
      ],
      "mod_code": [
        "do",
        "if ( a >= d )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "do",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "set < char > ch ;",
        "if ( a >= d )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        2,
        13,
        16
      ],
      "mod_code": [
        "set < char > ch ;",
        "if ( a >= d )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "set < char > ch ;",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "if ( a >= d )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "‘Danik’ was not declared in this scope"
    }
  ]
}