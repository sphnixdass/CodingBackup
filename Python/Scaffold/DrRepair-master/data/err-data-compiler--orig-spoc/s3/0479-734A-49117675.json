{
  "meta": {
    "index": 479,
    "hitid": "3QQUBC64ZE8GTRXWVM6HBI6Q2GQNX1",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "734A",
    "subid": "49117675"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , ca , cd with ca = 0 and cd = 0",
      "code": "int n , ca = 0 , cd = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character s",
      "code": "char s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "get n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 till i < n with increment i do the following",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "get s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s is equal to ' A '",
      "code": "if ( s == ' A ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment ca",
      "code": "ca ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if s is equal to ' D '",
      "code": "else if ( s == ' D ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment cd",
      "code": "cd ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if ca greater than cd",
      "code": "if ( ca > cd )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" Anton \" and a new line",
      "code": "cout << \" Anton \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else if cd greater than ca",
      "code": "else if ( cd > ca )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" Danik \" and a new line",
      "code": "cout << \" Danik \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" Friendship \" and a new line",
      "code": "cout << \" Friendship \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , ca , cd = 0 , cd ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cd’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        13,
        2
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "char a ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13,
        2,
        5
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "char a ;",
        "gets ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13,
        2,
        3
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "char a ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        2,
        11
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "char a ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13,
        5
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "gets ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        5,
        3
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "gets ( s ) ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        5,
        11
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "gets ( s ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        3
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        3,
        11
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        11
      ],
      "mod_code": [
        "do",
        "else if ( cd >= ca )",
        "if ( ca > 0 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "do",
        "char a ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        5
      ],
      "mod_code": [
        "do",
        "char a ;",
        "gets ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        5,
        3
      ],
      "mod_code": [
        "do",
        "char a ;",
        "gets ( s ) ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        2,
        5,
        11
      ],
      "mod_code": [
        "do",
        "char a ;",
        "gets ( s ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        3
      ],
      "mod_code": [
        "do",
        "char a ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        2,
        3,
        11
      ],
      "mod_code": [
        "do",
        "char a ;",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        2,
        11
      ],
      "mod_code": [
        "do",
        "char a ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "do",
        "gets ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        5,
        3
      ],
      "mod_code": [
        "do",
        "gets ( s ) ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        5,
        3,
        11
      ],
      "mod_code": [
        "do",
        "gets ( s ) ;",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        5,
        11
      ],
      "mod_code": [
        "do",
        "gets ( s ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "do",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        3,
        11
      ],
      "mod_code": [
        "do",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "do",
        "if ( ca > 0 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "char a ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        5
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "char a ;",
        "gets ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        5,
        3
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "char a ;",
        "gets ( s ) ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        2,
        5,
        11
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "char a ;",
        "gets ( s ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        3
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "char a ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        2,
        3,
        11
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "char a ;",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        2,
        11
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "char a ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "gets ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        3
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "gets ( s ) ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        3,
        11
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "gets ( s ) ;",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        11
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "gets ( s ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3,
        11
      ],
      "mod_code": [
        "else if ( cd >= ca )",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char a ;",
        "gets ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "char a ;",
        "gets ( s ) ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        3,
        11
      ],
      "mod_code": [
        "char a ;",
        "gets ( s ) ;",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        11
      ],
      "mod_code": [
        "char a ;",
        "gets ( s ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "char a ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "char a ;",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "char a ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "gets ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3,
        11
      ],
      "mod_code": [
        "gets ( s ) ;",
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "gets ( s ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "gets ( n ) ;",
        "if ( ca > 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}