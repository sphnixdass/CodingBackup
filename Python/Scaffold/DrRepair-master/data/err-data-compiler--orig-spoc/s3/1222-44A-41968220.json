{
  "meta": {
    "index": 1222,
    "hitid": "30QQTY5GMKEZ92BEAAE5VELW84O7U8",
    "workerid": "AIWEXPJAU66D9",
    "probid": "44A",
    "subid": "41968220"
  },
  "lines": [
    {
      "line": 0,
      "text": "long long constant mx = 1e3",
      "code": "long long const mx = 1e3 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long longs called x , y and p",
      "code": "long long x , y , p ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "st = set of strings",
      "code": "set < string > st ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "t = integer",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "get character from the input",
      "code": "cin . get ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while t - -",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read line from input into s",
      "code": "getline ( cin , s ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "insert s into set st",
      "code": "st . insert ( s ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print length of st and a new line",
      "code": "cout << st . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "set < st > st ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "st . push ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << st . length ( ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘length’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        12
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "cout << st . length ( ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        12,
        5
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        12,
        6
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "cout << st . length ( ) << endl ;",
        "gets ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        12,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "cout << st . length ( ) << endl ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        5
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        5,
        6
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "gets ( t ) ;",
        "gets ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        5,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "gets ( t ) ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        6
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "gets ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        6,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "set < st > st ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << st . length ( ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘length’"
    },
    {
      "mod_line": [
        9,
        12,
        5
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        5,
        6
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;",
        "gets ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        5,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;",
        "while ( -- t )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        6
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << st . length ( ) << endl ;",
        "gets ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        12,
        6,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << st . length ( ) << endl ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        12,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << st . length ( ) << endl ;",
        "while ( -- t )"
      ],
      "err_line": 12,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘length’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        6
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "gets ( t ) ;",
        "gets ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        6,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "gets ( t ) ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "gets ( t ) ;",
        "while ( -- t )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "gets ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        6,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "set < st > st ;",
        "cout << st . length ( ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        5
      ],
      "mod_code": [
        "set < st > st ;",
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        5,
        6
      ],
      "mod_code": [
        "set < st > st ;",
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;",
        "gets ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        5,
        7
      ],
      "mod_code": [
        "set < st > st ;",
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        6
      ],
      "mod_code": [
        "set < st > st ;",
        "cout << st . length ( ) << endl ;",
        "gets ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        6,
        7
      ],
      "mod_code": [
        "set < st > st ;",
        "cout << st . length ( ) << endl ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        7
      ],
      "mod_code": [
        "set < st > st ;",
        "cout << st . length ( ) << endl ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "set < st > st ;",
        "gets ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "set < st > st ;",
        "gets ( t ) ;",
        "gets ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        7
      ],
      "mod_code": [
        "set < st > st ;",
        "gets ( t ) ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "set < st > st ;",
        "gets ( t ) ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "set < st > st ;",
        "gets ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "set < st > st ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "set < st > st ;",
        "while ( -- t )"
      ],
      "err_line": 3,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        6
      ],
      "mod_code": [
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;",
        "gets ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        6,
        7
      ],
      "mod_code": [
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        7
      ],
      "mod_code": [
        "cout << st . length ( ) << endl ;",
        "gets ( t ) ;",
        "while ( -- t )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "cout << st . length ( ) << endl ;",
        "gets ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        6,
        7
      ],
      "mod_code": [
        "cout << st . length ( ) << endl ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cout << st . length ( ) << endl ;",
        "while ( -- t )"
      ],
      "err_line": 12,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "gets ( t ) ;",
        "gets ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "gets ( t ) ;",
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "gets ( t ) ;",
        "while ( -- t )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "gets ( ) ;",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    }
  ]
}