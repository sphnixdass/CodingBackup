{
  "meta": {
    "index": 2259,
    "hitid": "3Z3R5YC0P3HXOIBVSOM7EACBOGBTFN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "82A",
    "subid": "48534616"
  },
  "lines": [
    {
      "line": 0,
      "text": "let nama be a new map from integers to strings",
      "code": "map < int , string > nama ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "assign \" Sheldon \" to nama [ 1 ]",
      "code": "nama [ 1 ] = \" Sheldon \" ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign \" Leonard \" to nama [ 2 ]",
      "code": "nama [ 2 ] = \" Leonard \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set nama [ 3 ] to \" Penny \"",
      "code": "nama [ 3 ] = \" Penny \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set nama [ 4 ] to \" Rajesh \"",
      "code": "nama [ 4 ] = \" Rajesh \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "assign \" Howard \" to nama [ 5 ]",
      "code": "nama [ 5 ] = \" Howard \" ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare integer variable temp = 5",
      "code": "int temp = 5 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare new integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while n > temp",
      "code": "while ( n > temp )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "subtract temp from n",
      "code": "n -= temp ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "change temp to the sum of temp and temp",
      "code": "temp += temp ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "divide temp by 5",
      "code": "temp /= 5 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if temp = 5",
      "code": "if ( temp == 5 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print nama [ n ] to the standard output",
      "code": "cout << nama [ n ] << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "decrement n by one",
      "code": "n -- ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print nama [ ( n / temp ) + 1 ]",
      "code": "cout << nama [ ( n / temp ) + 1 ] << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < string , string > nama ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < string , string nama ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "nama [ 2 ] [ 2 ] = \" Leonard \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char nama [ 5 ] = \" Howard \" ;"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 9,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        2
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        2,
        6
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        2,
        10
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        2,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        6
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "char nama [ 5 ] = \" Howard \" ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        6,
        10
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        6,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        10
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        10,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        9,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "cin >> N ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "nama [ 1 ] = \" 0\\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        2,
        6
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        10
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        2,
        10
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        2,
        10,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        2,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "char nama [ 5 ] = \" Howard \" ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        6,
        10
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        6,
        10,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        6,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        10,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "map < string , string > nama ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        6
      ],
      "mod_code": [
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2,
        6,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2,
        6,
        17
      ],
      "mod_code": [
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "while ( n -- )"
      ],
      "err_line": 9,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        10,
        17
      ],
      "mod_code": [
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        17
      ],
      "mod_code": [
        "cin >> N ;",
        "nama [ 1 ] = \" 0\\n \" ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cin >> N ;",
        "char nama [ 5 ] = \" Howard \" ;"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6,
        10,
        17
      ],
      "mod_code": [
        "cin >> N ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6,
        17
      ],
      "mod_code": [
        "cin >> N ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "while ( n -- )"
      ],
      "err_line": 9,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        17
      ],
      "mod_code": [
        "cin >> N ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "cin >> N ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        10
      ],
      "mod_code": [
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        10,
        17
      ],
      "mod_code": [
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        17
      ],
      "mod_code": [
        "nama [ 1 ] = \" 0\\n \" ;",
        "char nama [ 5 ] = \" Howard \" ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        17
      ],
      "mod_code": [
        "nama [ 1 ] = \" 0\\n \" ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "nama [ 1 ] = \" 0\\n \" ;",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10,
        17
      ],
      "mod_code": [
        "char nama [ 5 ] = \" Howard \" ;",
        "while ( n -- )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "char nama [ 5 ] = \" Howard \" ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "initializer-string for array of chars is too long [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "while ( n -- )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}