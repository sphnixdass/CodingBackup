{
  "meta": {
    "index": 838,
    "hitid": "3OCZWXS7ZO1H38A1D37767BH59E5LG",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "987A",
    "subid": "41649838"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , i , q , w , e , r , t , y = int",
      "code": "int n , i , q , w , e , r , t , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s = string array of length 6",
      "code": "string s [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set q = w = e = r = t = y = 0",
      "code": "q = w = e = r = t = y = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read the first n elements of s",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> s [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s at i = purple",
      "code": "if ( s [ i ] == \" purple \" )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set q = 1",
      "code": "q = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if s at i = green",
      "code": "else if ( s [ i ] == \" green \" )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set w = 1",
      "code": "w = 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if s at i = blue",
      "code": "else if ( s [ i ] == \" blue \" )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set e to 1",
      "code": "e = 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if s at i = orange",
      "code": "else if ( s [ i ] == \" orange \" )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set r to 1",
      "code": "r = 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if s at i = red",
      "code": "else if ( s [ i ] == \" red \" )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set t to 1",
      "code": "t = 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else if s at i si yellow",
      "code": "else if ( s [ i ] == \" yellow \" )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set y at 1",
      "code": "y = 1 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print 6 - n",
      "code": "cout << 6 - n << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if q = 0 then print Power",
      "code": "if ( q == 0 ) cout << \" Power \" << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if w = 0 then print Time",
      "code": "if ( w == 0 ) cout << \" Time \" << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if e = 0 then print Space",
      "code": "if ( e == 0 ) cout << \" Space \" << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if r = 0 then print Soul",
      "code": "if ( r == 0 ) cout << \" Soul \" << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if t = 0 then print Reality",
      "code": "if ( t == 0 ) cout << \" Reality \" << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if y = 0 then print Mind",
      "code": "if ( y == 0 ) cout << \" Mind \" << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( s [ i ] == green )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "y [ 1 ] = y ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 24,
      "err_msg": "‘Soul’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘Reality’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 26,
      "err_msg": "‘Mind’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i , q , w , e , t , t , y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s [ i ] == purple )"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( s [ i ] == ' green ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( s [ i ] == blue )"
      ],
      "err_line": 11,
      "err_msg": "‘blue’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( s [ i ] == ' orange ' )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( s [ i ] == ' red ' )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( q == 0 ) { cout << Power << endl ; }"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "if ( w == 0 ) { cout << Time << endl ; }"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( e == 0 ) cout << Space << \" \\n \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( ! r ) cout << Soul << endl ;"
      ],
      "err_line": 24,
      "err_msg": "‘Soul’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( t == 0 ) cout << Reality << \" \\n \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘Reality’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( y == 0 ) cout << Mind << \" \\n \" ;"
      ],
      "err_line": 26,
      "err_msg": "‘Mind’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        11
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        13
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        13
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        21,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        21,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        21,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        21,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        21,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        22,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        22,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        22,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        22,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( s [ i ] == ' purple ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        13
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        22,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        22,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        22,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        22,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == green )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        22,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        22,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        22,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        22,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' blue ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        22,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        22,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        22,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        22,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        21,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        21,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        21,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        21,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        21,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        22,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        22,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        22,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        22,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        15,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        18,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        18,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        18,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        18,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        18,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        18,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        21,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        21,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        21,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        21,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        21,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        22,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        22,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        22,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        22,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        17,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        21,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        21,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        21,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        21,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        21,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        22,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        22,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        22,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        22,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        18,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 24,
      "err_msg": "‘Soul’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 24,
      "err_msg": "‘Soul’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 24,
      "err_msg": "‘Soul’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 24,
      "err_msg": "‘Soul’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘Reality’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘Reality’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        26
      ],
      "mod_code": [
        "q = w = r = r = t = 0 ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 26,
      "err_msg": "‘Mind’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        15
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        15
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        15
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        21,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        21,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        21,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        21,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        21,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        22,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        22,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        22,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        22,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        23,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        23,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        23,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == green )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        15
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        15
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        21,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        21,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        21,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        21,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        21,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        22,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        22,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        22,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        22,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        23,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        23,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        23,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        11,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        15
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        21,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        21,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        21,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        21,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        21,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        22,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        22,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        22,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        22,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        23,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        23,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        23,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        13,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        21,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        21,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        21,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        21,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        21,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        22,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        22,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        22,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        22,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        23,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        23,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        23,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        15,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        18,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        18,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        18,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        18,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        18,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        18,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        21,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        21,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        21,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        21,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        21,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        22,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        22,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        22,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        22,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        23,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        23,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        23,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        17,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        21,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        21,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        21,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        21,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        21,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        22,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        22,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        22,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        22,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        23,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        23,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        23,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        22,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        22,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        22,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        22,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        23,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        23,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        23,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        21,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        23,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        23,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        23,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        24
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        24,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        24,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        25
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        25,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        26
      ],
      "mod_code": [
        "if ( s [ i ] == ' purple ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        15
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' blue ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        24,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == green )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘green’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        15
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        13,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        23,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        23,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        23,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        24,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' blue ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == orange )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘orange’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        23,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        23,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        23,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        24,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' i ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        21,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        22,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        23,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        23,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        23,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        23,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        23,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        24
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        24,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        24,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        25
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        25,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        26
      ],
      "mod_code": [
        "else if ( s [ i ] == ' yellow ' )",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        18,
        21
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        22
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        22,
        23
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        22,
        24
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        22,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        22,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        23
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        23,
        24
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        23,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        23,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        24
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        24,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        24,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        25,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        23
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        23,
        24
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        23,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        23,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        24
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        24,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        24,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        25,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        23
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        23,
        24
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        23,
        24,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        23,
        24,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        23,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        23,
        25,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        23,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        24
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        24,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        24,
        25,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        24,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        25
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        25,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        26
      ],
      "mod_code": [
        "y [ 1 ] = y ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        23
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        24
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        25
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        24
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        24,
        25
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        24,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        25
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        25,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        24
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        24,
        25
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        24,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        25
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        25,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24,
        25
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        26
      ],
      "mod_code": [
        "if ( q == 0 ) cout << Power << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Power’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        24
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        24,
        25
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        24,
        26
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        25
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        25,
        26
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        26
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        24
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        24,
        25
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        24,
        26
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        25
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        25,
        26
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        26
      ],
      "mod_code": [
        "if ( w == 0 ) cout << Time << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘Time’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        24
      ],
      "mod_code": [
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        24,
        25
      ],
      "mod_code": [
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        24,
        26
      ],
      "mod_code": [
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25
      ],
      "mod_code": [
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        26
      ],
      "mod_code": [
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        26
      ],
      "mod_code": [
        "if ( e == 0 ) cout << Space << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Space’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25
      ],
      "mod_code": [
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;"
      ],
      "err_line": 24,
      "err_msg": "‘Soul’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        26
      ],
      "mod_code": [
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 24,
      "err_msg": "‘Soul’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26
      ],
      "mod_code": [
        "if ( r == 0 ) cout << Soul << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 24,
      "err_msg": "‘Soul’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26
      ],
      "mod_code": [
        "if ( t == 0 ) cout << Reality << endl ;",
        "if ( y == 0 ) cout << Mind << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘Reality’ was not declared in this scope"
    }
  ]
}