{
  "meta": {
    "index": 1628,
    "hitid": "3JMNNNO3B1Y5F53DZYCBHBPLJ6OW2W",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "224A",
    "subid": "48438570"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function fatora taking int factor , int n and returning pointer to int",
      "code": "int * fatora ( int factor , int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "f = pointer to int with f = new int of size 2",
      "code": "int * f = new int [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "loop while n mod factor is not 0 increment factor",
      "code": "while ( n % factor != 0 ) { factor ++ ; }",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set f [ 0 ] to factor",
      "code": "f [ 0 ] = factor ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set f [ 1 ] to n / factor",
      "code": "f [ 1 ] = n / factor ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return f",
      "code": "return f ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "area = int vector",
      "code": "vector < int > area ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "a , f3_1 , f3_2 , edges_sum = int",
      "code": "int a , f3_1 , f3_2 , edges_sum ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "factor = pointer to int",
      "code": "int * factor ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to 3",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "append a to area",
      "code": "area . push_back ( a ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to area [ 0 ] / 2 + 1",
      "code": "for ( int i = 0 ; i < ( area [ 0 ] / 2 ) + 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set factor to fatora of i + 1 , area [ 0 ]",
      "code": "factor = fatora ( i + 1 , area [ 0 ] ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if area [ 1 ] mod factor [ 0 ] is 0 and area [ 2 ] mod factor [ 1 ] is 0",
      "code": "if ( area [ 1 ] % factor [ 0 ] == 0 && area [ 2 ] % factor [ 1 ] == 0 )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set f3_1 to area [ 1 ] / factor [ 0 ]",
      "code": "f3_1 = area [ 1 ] / factor [ 0 ] ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "set f3_2 to area [ 2 ] / factor [ 1 ]",
      "code": "f3_2 = area [ 2 ] / factor [ 1 ] ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if f3_1 is f3_2 break",
      "code": "if ( f3_1 == f3_2 ) break ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else if area [ 2 ] mod factor [ 0 ] is 0 and area [ 1 ] mod factor [ 1 ] is 0",
      "code": "else if ( area [ 2 ] % factor [ 0 ] == 0 && area [ 1 ] % factor [ 1 ] == 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set f3_1 to area [ 1 ] / factor [ 1 ]",
      "code": "f3_1 = area [ 1 ] / factor [ 1 ] ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "set f3_2 to area [ 2 ] / factor [ 0 ]",
      "code": "f3_2 = area [ 2 ] / factor [ 0 ] ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if f3_1 is f3_2 break",
      "code": "if ( f3_1 == f3_2 ) break ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "set edges_sum to 4 * ( factor [ 0 ] + factor [ 1 ] + f3_1 )",
      "code": "edges_sum = 4 * ( factor [ 0 ] + factor [ 1 ] + f3_1 ) ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print edges_sum",
      "code": "cout << edges_sum << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int fatora ( int factor , int n )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int f = new int [ 2 ] ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "priority_queue < int > area ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::priority_queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 18,
      "err_msg": "‘f3_1’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int factor = * 1 ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "area . append ( a ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "factor = fatora . substr ( i + 1 , area [ 0 ] ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘substr’ in ‘fatora’, which is of non-class type ‘int*(int, int)’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "int edges_sum = 4 * ( factor [ 0 ] + factor [ 1 ] + f3_1 ) ;"
      ],
      "err_line": 27,
      "err_msg": "redeclaration of ‘int edges_sum’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        10
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "int factor = * 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        13
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "int factor = * 1 ;",
        "area . append ( a ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        12
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "int factor = * 1 ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "int factor = * 1 ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        13
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "area . append ( a ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        12
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "area . append ( a ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "area . append ( a ) ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        12
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "priority_queue < int > area ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "int factor = * 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        13
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "int factor = * 1 ;",
        "area . append ( a ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        13,
        12
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "int factor = * 1 ;",
        "area . append ( a ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        13,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "int factor = * 1 ;",
        "area . append ( a ) ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        12
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "int factor = * 1 ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        12,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "int factor = * 1 ;",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "int factor = * 1 ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "area . append ( a ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13,
        12
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "area . append ( a ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13,
        12,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "area . append ( a ) ;",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "area . append ( a ) ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        12,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int fatora ( int factor , int n )",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "int factor = * 1 ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "int factor = * 1 ;",
        "area . append ( a ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        12
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "int factor = * 1 ;",
        "area . append ( a ) ;",
        "cin >> N ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        9
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "int factor = * 1 ;",
        "area . append ( a ) ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "int factor = * 1 ;",
        "cin >> N ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        9
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "int factor = * 1 ;",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        10,
        9
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "int factor = * 1 ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "area . append ( a ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::priority_queue<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        8,
        13,
        12
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "area . append ( a ) ;",
        "cin >> N ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        12,
        9
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "area . append ( a ) ;",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        9
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "area . append ( a ) ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::priority_queue<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "cin >> N ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        9
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "priority_queue < int > area ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::priority_queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "int factor = * 1 ;",
        "area . append ( a ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        13,
        12
      ],
      "mod_code": [
        "int factor = * 1 ;",
        "area . append ( a ) ;",
        "cin >> N ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        13,
        12,
        9
      ],
      "mod_code": [
        "int factor = * 1 ;",
        "area . append ( a ) ;",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        13,
        9
      ],
      "mod_code": [
        "int factor = * 1 ;",
        "area . append ( a ) ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "int factor = * 1 ;",
        "cin >> N ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        12,
        9
      ],
      "mod_code": [
        "int factor = * 1 ;",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "int factor = * 1 ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "area . append ( a ) ;",
        "cin >> N ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        9
      ],
      "mod_code": [
        "area . append ( a ) ;",
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "area . append ( a ) ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "cin >> N ;",
        "int a , b , f3_2 , edges_sum ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}