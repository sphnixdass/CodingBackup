{
  "meta": {
    "index": 1277,
    "hitid": "3D1UCPY6GG3JAM3E5VAAM5RR7DO837",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1011A",
    "subid": "47282245"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer maxn = 2e5 + 10",
      "code": "const int maxn = 2e5 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , k",
      "code": "int n , k ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare integer array a size 155",
      "code": "int a [ 155 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive , let a [ i ] be s [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = s [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort from a to a + n",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare ans = 0 as integer",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "increment ans by a [ 0 ] - ' a ' + 1",
      "code": "ans += a [ 0 ] - ' a ' + 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "declare pre = a [ 0 ] as integer",
      "code": "int pre = a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if a [ i ] is greater than pre + 1 and k is greater than 0",
      "code": "if ( a [ i ] > pre + 1 && k > 0 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "let pre = a [ i ]",
      "code": "pre = a [ i ] ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment ans by a [ i ] - ' a ' + 1",
      "code": "ans += a [ i ] - ' a ' + 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if k is greater than 0",
      "code": "if ( k > 0 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print - 1 and newline",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        6
      ],
      "mod_code": [
        "do",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        6,
        20
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "if ( k >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        6,
        20,
        8
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "if ( k >= 0 )",
        "sort ( a , a + n + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        6,
        20,
        2
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "if ( k >= 0 )",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        6,
        20,
        15
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "if ( k >= 0 )",
        "int pre = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        6,
        8
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "sort ( a , a + n + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        6,
        8,
        2
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "sort ( a , a + n + n ) ;",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        6,
        8,
        15
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "sort ( a , a + n + n ) ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        6,
        2
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        6,
        2,
        15
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        6,
        15
      ],
      "mod_code": [
        "do",
        "s >> s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        20
      ],
      "mod_code": [
        "do",
        "if ( k >= 0 )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        20,
        8
      ],
      "mod_code": [
        "do",
        "if ( k >= 0 )",
        "sort ( a , a + n + n ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        20,
        8,
        2
      ],
      "mod_code": [
        "do",
        "if ( k >= 0 )",
        "sort ( a , a + n + n ) ;",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        20,
        8,
        15
      ],
      "mod_code": [
        "do",
        "if ( k >= 0 )",
        "sort ( a , a + n + n ) ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        20,
        2
      ],
      "mod_code": [
        "do",
        "if ( k >= 0 )",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        20,
        2,
        15
      ],
      "mod_code": [
        "do",
        "if ( k >= 0 )",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        20,
        15
      ],
      "mod_code": [
        "do",
        "if ( k >= 0 )",
        "int pre = a [ i ] ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        8
      ],
      "mod_code": [
        "do",
        "sort ( a , a + n + n ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        8,
        2
      ],
      "mod_code": [
        "do",
        "sort ( a , a + n + n ) ;",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        8,
        2,
        15
      ],
      "mod_code": [
        "do",
        "sort ( a , a + n + n ) ;",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        8,
        15
      ],
      "mod_code": [
        "do",
        "sort ( a , a + n + n ) ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        2
      ],
      "mod_code": [
        "do",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        2,
        15
      ],
      "mod_code": [
        "do",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        15
      ],
      "mod_code": [
        "do",
        "int pre = a [ i ] ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "s >> s ;",
        "if ( k >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        20,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "if ( k >= 0 )",
        "sort ( a , a + n + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        20,
        8,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "if ( k >= 0 )",
        "sort ( a , a + n + n ) ;",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        20,
        8,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "if ( k >= 0 )",
        "sort ( a , a + n + n ) ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        20,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "if ( k >= 0 )",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        20,
        2,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "if ( k >= 0 )",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        20,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "if ( k >= 0 )",
        "int pre = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "sort ( a , a + n + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "sort ( a , a + n + n ) ;",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "sort ( a , a + n + n ) ;",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        8,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "sort ( a , a + n + n ) ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        2,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        8,
        2
      ],
      "mod_code": [
        "if ( k >= 0 )",
        "sort ( a , a + n + n ) ;",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        8,
        2,
        15
      ],
      "mod_code": [
        "if ( k >= 0 )",
        "sort ( a , a + n + n ) ;",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        2
      ],
      "mod_code": [
        "if ( k >= 0 )",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        2,
        15
      ],
      "mod_code": [
        "if ( k >= 0 )",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "sort ( a , a + n + n ) ;",
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        2,
        15
      ],
      "mod_code": [
        "sort ( a , a + n + n ) ;",
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "bool s ;",
        "int pre = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    }
  ]
}