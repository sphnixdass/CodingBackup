{
  "meta": {
    "index": 1392,
    "hitid": "367O8HRHKG2MB21RJ7LYD1JYWKR4SD",
    "workerid": "A1APYLD4DUK33J",
    "probid": "266A",
    "subid": "48919658"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , r , g , b , with r = 0 , g = 0 , b = 0",
      "code": "int n , r = 0 , g = 0 , b = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer p with p = length of s",
      "code": "int p = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to p exclusive",
      "code": "for ( int i = 0 ; i < p ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is s [ i + 1 ]",
      "code": "if ( s [ i ] == s [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment r",
      "code": "r ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if s [ i ] is s [ i + 1 ]",
      "code": "else if ( s [ i ] == s [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment g",
      "code": "g ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if s [ i ] is s [ i + 1 ]",
      "code": "else if ( s [ i ] == s [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment b",
      "code": "b ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print r + g + b print newline",
      "code": "cout << r + g + b << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        11
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        4
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        11
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        11,
        4
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        11,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        4,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        9,
        11
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        4
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        9,
        4,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        11,
        4
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        11,
        4,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        11,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , r = 0 , g = 0 , b = 0 , b ;",
        "int s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        9,
        4,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        11,
        4,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        11,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        3
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        11,
        3
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        4,
        3
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        4,
        3
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "else if ( s [ i ] == ' s ' [ i + 1 ] )",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "int s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘int’"
    }
  ]
}