{
  "meta": {
    "index": 2191,
    "hitid": "3VGET1QSZ0TC160J5AT6D26TTZE7WG",
    "workerid": "AIWEXPJAU66D9",
    "probid": "330A",
    "subid": "48888655"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables r and c",
      "code": "int r , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read r and c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer array rows with 11 elements filled with 0",
      "code": "int rows [ 11 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer array col with 11 elements filled with 0",
      "code": "int col [ 11 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for integer j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s [ j ] = ' S '",
      "code": "if ( s [ j ] == ' S ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set rows [ i ] to 1",
      "code": "rows [ i ] = 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set value of col [ j ] to 1",
      "code": "col [ j ] = 1 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "create integer count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for integer j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "increment count if rows [ i ] = 0 or col [ j ] = 0",
      "code": "if ( rows [ i ] == 0 || col [ j ] == 0 ) { count ++ ; }",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print count and a new line",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int r and c ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> r >> c )"
      ],
      "err_line": 10,
      "err_msg": "‘rows’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        9
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        9,
        7
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        9,
        16
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        9,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        7
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        7,
        16
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        7,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        16
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        16,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        4,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "int col [ 11 ] filled 0 ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        10,
        9,
        7
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        9,
        7,
        16
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "if ( ! s [ j ] )",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        9,
        7,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "if ( ! s [ j ] )",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        16
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9,
        16,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        16
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        16,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        16,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "rows [ ' i ' ] = 1 ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        9,
        7
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        9,
        7,
        16
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        9,
        7,
        6
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        9,
        16
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        6
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        9,
        6
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        7,
        16
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        6
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        16,
        6
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int col [ 11 ] filled 0 ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘filled’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        7,
        16
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        7,
        16,
        6
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        6
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        16,
        6
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        16,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}