{
  "meta": {
    "index": 1708,
    "hitid": "3IYI9285WSUW73VGPSI24Y4ZT1UJCZ",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1084A",
    "subid": "48491310"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints n and max1 and int array a of size 1000",
      "code": "int n , a [ 1000 ] , max1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "make integer sum = 0",
      "code": "int sum = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 1 to n , add ( fabs ( i * 1 . 0 - j * 1 . 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] to sum",
      "code": "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - j * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if i is equal to 1",
      "code": "if ( i == 1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set max1 to sum",
      "code": "max1 = sum ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set max1 to min of max1 and sum",
      "code": "max1 = min ( max1 , sum ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print max1",
      "code": "cout << max1 << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max1 [1000]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "long long sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        9
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "long long sum = 0 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "long long sum = 0 ;",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "long long sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "long long sum = 0 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        9
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "long long sum = 0 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "long long sum = 0 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "long long sum = 0 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        5,
        9,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "long long sum = 0 ;",
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "long long sum = 0 ;",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        6,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        9,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , max1 [ 1000 ] , max1 ;",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int max1’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "long long sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        9
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "long long sum = 0 ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "long long sum = 0 ;",
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        6,
        5,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "long long sum = 0 ;",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        9,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "long long sum = 0 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "long long sum = 0 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        7
      ],
      "mod_code": [
        "long long sum = 0 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "long long sum = 0 ;",
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "long long sum = 0 ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        5,
        9,
        7
      ],
      "mod_code": [
        "long long sum = 0 ;",
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "long long sum = 0 ;",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        9,
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= n ; j ++ ) { sum += ( fabs ( i * 1.0 - 0 ) + j - 1 + i - 1 ) * 2 * a [ j ] * 2 * a [ j ] ; }",
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "do",
        "if ( i == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}