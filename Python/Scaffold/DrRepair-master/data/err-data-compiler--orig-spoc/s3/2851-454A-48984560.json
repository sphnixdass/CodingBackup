{
  "meta": {
    "index": 2851,
    "hitid": "3W5PY7V3UP19A6WLLK0R1PWIWPFJYA",
    "workerid": "A1HC0MVEW0VTB7",
    "probid": "454A",
    "subid": "48984560"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n and y be integers",
      "code": "int n , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "get value of n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let x = int = n / 2",
      "code": "int x = n / 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to x exclusive",
      "code": "for ( int i = 0 ; i < x ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if j greater than or equal to x - i and j less than or equal to x + i",
      "code": "if ( j >= ( x - i ) && j <= ( x + i ) )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print \" * \"",
      "code": "cout << \" * \" ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive , print \" D \"",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cout << \" D \" ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = x - 1 to 0 inclusive",
      "code": "for ( int i = x - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if j greater than or equal to x - i and j less than or equal to x + i",
      "code": "if ( j >= ( x - i ) && j <= ( x + i ) )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 20,
      "text": "print \" * \"",
      "code": "cout << \" * \" ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << \" * \""
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << \" * \""
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        17
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        17,
        6
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "if ( j <= x - i && j <= x + i )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        17,
        6,
        9
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \""
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        17,
        6,
        2
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        17,
        6,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "if ( j <= x - i && j <= x + i )",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        17,
        9
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \""
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        17,
        9,
        2
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        17,
        9,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        17,
        2
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        17,
        2,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        17,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        6
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        6,
        9
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \""
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        6,
        9,
        2
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        6,
        9,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        6,
        2
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        6,
        2,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        6,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( j <= x - i && j <= x + i )",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        9
      ],
      "mod_code": [
        "cout << \" * \"",
        "cout << \" * \""
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        9,
        2
      ],
      "mod_code": [
        "cout << \" * \"",
        "cout << \" * \"",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        9,
        2,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "cout << \" * \"",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        9,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "cout << \" * \"",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        2
      ],
      "mod_code": [
        "cout << \" * \"",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        2,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        6,
        9
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \""
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        6,
        9,
        2
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        6,
        9,
        15
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        6,
        2
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        6,
        2,
        15
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \""
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        9,
        2
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        9,
        2,
        15
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        9,
        15
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        2
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        2,
        15
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \""
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        2,
        15
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        15
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "cout << \" * \"",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2,
        15
      ],
      "mod_code": [
        "if ( j <= x - i && j <= x + i )",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "cout << \" * \"",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "gets ( n ) ;",
        "for ( int i = x - 1 ; i <= 0 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}