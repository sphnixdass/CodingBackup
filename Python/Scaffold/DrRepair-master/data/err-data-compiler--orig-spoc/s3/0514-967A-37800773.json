{
  "meta": {
    "index": 514,
    "hitid": "3SBNLSTU6UZWCA6Y7AGZCYA7XZNDZI",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "967A",
    "subid": "37800773"
  },
  "lines": [
    {
      "line": 0,
      "text": "vec = int vector",
      "code": "vector < int > vec ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function Main returning int",
      "code": "int Main ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , s = int",
      "code": "int n , s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read then s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "h , m = int",
      "code": "int h , m ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read h then m",
      "code": "cin >> h >> m ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "append h * 60 + m to vec",
      "code": "vec . push_back ( h * 60 + m ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "tm = int with tm = vec [ n - 1 ] + 1 + s",
      "code": "int tm = vec [ n - 1 ] + 1 + s ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if vec [ 0 ] > = s + 1",
      "code": "if ( vec [ 0 ] >= s + 1 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set tm to 0",
      "code": "tm = 0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n - 1",
      "code": "for ( int i = 0 ; i < n - 1 ; ++ i )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if vec [ i ] + 2 + 2 * s < = vec [ i + 1 ]",
      "code": "if ( vec [ i ] + 2 + 2 * s <= vec [ i + 1 ] )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set tm tp vec [ i ] + 1 + s",
      "code": "tm = vec [ i ] + 1 + s ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print tm / 60 and tm mod 60",
      "code": "cout << tm / 60 << \" \" << tm % 60 << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 24,
      "text": "call Main",
      "code": "Main ( ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "priority_queue < int > vec ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::priority_queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int Main ( ) { }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int h , m"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "return Main ;"
      ],
      "err_line": 24,
      "err_msg": "invalid conversion from ‘int (*)()’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        20,
        12
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "cout << tm / 60 << \" \" << tm << endl ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        14,
        6,
        12
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        14,
        12
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        20,
        6,
        12
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << tm / 60 << \" \" << tm << endl ;",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        20,
        12
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << tm / 60 << \" \" << tm << endl ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        20,
        12,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cout << tm / 60 << \" \" << tm << endl ;",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        6,
        12
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "cin >> m >> m ;",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        12,
        7
      ],
      "mod_code": [
        "cin >> s >> s ;",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        20,
        6,
        12
      ],
      "mod_code": [
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "cout << tm / 60 << \" \" << tm << endl ;",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        20,
        12
      ],
      "mod_code": [
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "cout << tm / 60 << \" \" << tm << endl ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        20,
        12,
        7
      ],
      "mod_code": [
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "cout << tm / 60 << \" \" << tm << endl ;",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        6,
        12
      ],
      "mod_code": [
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        6,
        12,
        7
      ],
      "mod_code": [
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "cin >> m >> m ;",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        12,
        7
      ],
      "mod_code": [
        "if ( vec [ i ] + 2 + 2 <= vec [ i + 1 ] )",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        20,
        6,
        12
      ],
      "mod_code": [
        "cout << tm / 60 << \" \" << tm << endl ;",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        20,
        6,
        12,
        7
      ],
      "mod_code": [
        "cout << tm / 60 << \" \" << tm << endl ;",
        "cin >> m >> m ;",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "cout << tm / 60 << \" \" << tm << endl ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        20,
        12,
        7
      ],
      "mod_code": [
        "cout << tm / 60 << \" \" << tm << endl ;",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        7
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "do",
        "vec . push_back ( 60 * 60 + m ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    }
  ]
}