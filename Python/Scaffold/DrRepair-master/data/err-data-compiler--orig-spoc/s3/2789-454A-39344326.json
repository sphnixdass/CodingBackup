{
  "meta": {
    "index": 2789,
    "hitid": "3DFYDSXB2WUSTXCGBJ32Y4Q5014JUC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "454A",
    "subid": "39344326"
  },
  "lines": [
    {
      "line": 0,
      "text": "new integer variable n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n from the user input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "start for loop from i = 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "in a for loop , change j from 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if abs ( i - n / 2 ) + abs ( j - n / 2 ) < = n / 2",
      "code": "if ( abs ( i - n / 2 ) + abs ( j - n / 2 ) <= n / 2 )",
      "indent": 3
    },
    {
      "line": 6,
      "text": "write ' D ' to the standard output",
      "code": "putchar ( ' D ' ) ;",
      "indent": 4
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print character ' * ' to the standard output",
      "code": "putchar ( ' * ' ) ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" \"",
      "code": "puts ( \" \" ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "<< \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "<< \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        2
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "<< \" \" ;",
        "{ cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        2,
        7
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "<< \" \" ;",
        "{ cin >> n ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        7
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "<< \" \" ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "{ cin >> n ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        8,
        2,
        7
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "{ cin >> n ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        2,
        7,
        10
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "{ cin >> n ;",
        "do",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        2,
        10
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "{ cin >> n ;",
        "cout << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7,
        10
      ],
      "mod_code": [
        "cout << ' * ' << endl ;",
        "do",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "<< \" \" ;",
        "{ cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        2,
        7
      ],
      "mod_code": [
        "<< \" \" ;",
        "{ cin >> n ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "<< \" \" ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "{ cin >> n ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        7,
        10
      ],
      "mod_code": [
        "{ cin >> n ;",
        "do",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "{ cin >> n ;",
        "cout << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "do",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}