{
  "meta": {
    "index": 716,
    "hitid": "3OREP8RUT2536WD93M14W161JODBGG",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "764A",
    "subid": "41236111"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int gcs of x and y",
      "code": "int gcd ( int x , int y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int m",
      "code": "int m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while y different from 0",
      "code": "while ( y != 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set m = x",
      "code": "m = x ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "assign y to x",
      "code": "x = y ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set y to m mod y",
      "code": "y = m % y ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return x",
      "code": "return x ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "let n , m and z be int",
      "code": "int n , m , z ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n , m and z",
      "code": "while ( cin >> n >> m >> z )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set lcm to n * m / gcd of n and m",
      "code": "int lcm = n * m / gcd ( n , m ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print z / lcm",
      "code": "cout << z / lcm << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int gcs ( int x , int y )"
      ],
      "err_line": 12,
      "err_msg": "‘gcd’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "lcm = n * m / gcd ( n , m ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘lcm’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int gcs [ x ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "lcm = ( n * m ) / gcd ( n , m ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘lcm’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "lcm = n * m / gcd ( n , m ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘lcm’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        5
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "lcm = n * m / gcd ( n , m ) ;",
        "y %= y ;"
      ],
      "err_line": 12,
      "err_msg": "‘lcm’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        5,
        10
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "lcm = n * m / gcd ( n , m ) ;",
        "y %= y ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        0,
        12,
        10
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "lcm = n * m / gcd ( n , m ) ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "y %= y ;"
      ],
      "err_line": 12,
      "err_msg": "‘gcd’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        12
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "y %= y ;",
        "lcm = ( n * m ) / gcd ( n , m ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘lcm’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        12,
        10
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "y %= y ;",
        "lcm = ( n * m ) / gcd ( n , m ) ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        0,
        5,
        10
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "y %= y ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "lcm = ( n * m ) / gcd ( n , m ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘lcm’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        10
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "lcm = ( n * m ) / gcd ( n , m ) ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int gcs ( int x , int y )",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "lcm = n * m / gcd ( n , m ) ;",
        "y %= y ;"
      ],
      "err_line": 12,
      "err_msg": "‘lcm’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        0
      ],
      "mod_code": [
        "lcm = n * m / gcd ( n , m ) ;",
        "y %= y ;",
        "int gcs [ x ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        0,
        10
      ],
      "mod_code": [
        "lcm = n * m / gcd ( n , m ) ;",
        "y %= y ;",
        "int gcs [ x ] ;",
        "int n , m , n ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        10
      ],
      "mod_code": [
        "lcm = n * m / gcd ( n , m ) ;",
        "y %= y ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "lcm = n * m / gcd ( n , m ) ;",
        "int gcs [ x ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        0,
        10
      ],
      "mod_code": [
        "lcm = n * m / gcd ( n , m ) ;",
        "int gcs [ x ] ;",
        "int n , m , n ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "lcm = n * m / gcd ( n , m ) ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "y %= y ;",
        "int gcs [ x ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        12
      ],
      "mod_code": [
        "y %= y ;",
        "int gcs [ x ] ;",
        "lcm = ( n * m ) / gcd ( n , m ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        12,
        10
      ],
      "mod_code": [
        "y %= y ;",
        "int gcs [ x ] ;",
        "lcm = ( n * m ) / gcd ( n , m ) ;",
        "int n , m , n ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        10
      ],
      "mod_code": [
        "y %= y ;",
        "int gcs [ x ] ;",
        "int n , m , n ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "y %= y ;",
        "lcm = ( n * m ) / gcd ( n , m ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘lcm’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        10
      ],
      "mod_code": [
        "y %= y ;",
        "lcm = ( n * m ) / gcd ( n , m ) ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "y %= y ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int gcs [ x ] ;",
        "lcm = ( n * m ) / gcd ( n , m ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        10
      ],
      "mod_code": [
        "int gcs [ x ] ;",
        "lcm = ( n * m ) / gcd ( n , m ) ;",
        "int n , m , n ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int gcs [ x ] ;",
        "int n , m , n ;"
      ],
      "err_line": 0,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "lcm = ( n * m ) / gcd ( n , m ) ;",
        "int n , m , n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    }
  ]
}