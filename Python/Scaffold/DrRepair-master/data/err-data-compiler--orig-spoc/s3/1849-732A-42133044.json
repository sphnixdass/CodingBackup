{
  "meta": {
    "index": 1849,
    "hitid": "3XJOUITW8ULUF71464X1Q9GPVIQQTK",
    "workerid": "A59A6LMCQRBL3",
    "probid": "732A",
    "subid": "42133044"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "K , R , i = int",
      "code": "int K , R , i ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read K , R",
      "code": "cin >> K >> R ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1",
      "code": "for ( i = 1 ; ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if K * i % 10 = 0 , exit for loop",
      "code": "if ( K * i % 10 == 0 ) break ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if ( K * i ) - R ) % 10 = 0 , exit for loop",
      "code": "if ( ( ( K * i ) - R ) % 10 == 0 ) break ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print i",
      "code": "cout << i << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( ( K * i ) - R ) break == 0 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int K , R ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i ++ )",
        "if ( ( K * i ) - R ) break == 0 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i ++ )",
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "int K , R ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        3,
        5,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i ++ )",
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "int K , R ;",
        "cout << i ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i ++ )",
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "cout << i ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i ++ )",
        "int K , R ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i ++ )",
        "int K , R ;",
        "if ( ( K * i ) - R == 0 ) break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i ++ )",
        "int K , R ;",
        "if ( ( K * i ) - R == 0 ) break ;",
        "cout << i ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i ++ )",
        "int K , R ;",
        "cout << i ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "for ( int i = 1 ; ; i -- )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "for ( int i = 1 ; ; i -- )",
        "int K , R ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        5,
        3,
        1,
        7
      ],
      "mod_code": [
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "for ( int i = 1 ; ; i -- )",
        "int K , R ;",
        "cout << i ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "for ( int i = 1 ; ; i -- )",
        "cout << i ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "int K , R ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        7
      ],
      "mod_code": [
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "int K , R ;",
        "cout << i ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( ( K * i ) - R ) break == 0 ) break ;",
        "cout << i ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘==’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i -- )",
        "int K , R ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i -- )",
        "int K , R ;",
        "if ( ( K * i ) - R == 0 ) break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i -- )",
        "int K , R ;",
        "if ( ( K * i ) - R == 0 ) break ;",
        "cout << i ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; ; i -- )",
        "int K , R ;",
        "cout << i ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int K , R ;",
        "if ( ( K * i ) - R == 0 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "int K , R ;",
        "if ( ( K * i ) - R == 0 ) break ;",
        "cout << i ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int K , R ;",
        "cout << i ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}