{
  "meta": {
    "index": 2211,
    "hitid": "3H781YYV6TC5I4BZXD21WSRBCFXETR",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "350A",
    "subid": "40682211"
  },
  "lines": [
    {
      "line": 0,
      "text": "a , b = int array of size 10000 each",
      "code": "int a [ 10000 ] , b [ 10000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "m , n , i , j = int",
      "code": "int m , n , i , j ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n then m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n values into a",
      "code": "for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sort a from position 0 to n",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read m values into b",
      "code": "for ( i = 0 ; i < m ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sort b from position 0 to m",
      "code": "sort ( b , b + m ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set a [ 0 ] to 2 * a [ 0 ]",
      "code": "a [ 0 ] = 2 * a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if a [ 0 ] < = a [ n - 1 ]",
      "code": "if ( a [ 0 ] <= a [ n - 1 ] )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a [ n - 1 ] < b [ 0 ]",
      "code": "if ( a [ n - 1 ] < b [ 0 ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print a [ n - 1 ]",
      "code": "cout << a [ n - 1 ] << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if a [ 0 ] < b [ 0 ]",
      "code": "if ( a [ 0 ] < b [ 0 ] )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print a [ 0 ]",
      "code": "cout << a [ 0 ] << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sort ( a a a , a + n ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        17
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        17,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "do",
        "sort ( a a a , a + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        17,
        11
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "do",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        17,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "do",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "sort ( a a a , a + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        5,
        11
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        5,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "sort ( a a a , a + n ) ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        11
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        11,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "cout << a [ n - 1 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        0,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int a [ 10000 ] [ 10000 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        17,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "do",
        "sort ( a a a , a + n ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        3,
        17,
        5,
        11
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "do",
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        3,
        17,
        5,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "do",
        "sort ( a a a , a + n ) ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        3,
        17,
        11
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "do",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        17,
        11,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "do",
        "cout << a [ n - 1 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        17,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "do",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "sort ( a a a , a + n ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        3,
        5,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "sort ( a a a , a + n ) ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        17,
        5
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "do",
        "sort ( a a a , a + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        17,
        5,
        11
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "do",
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        17,
        5,
        15
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "do",
        "sort ( a a a , a + n ) ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        17,
        11
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "do",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        17,
        11,
        15
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "do",
        "cout << a [ n - 1 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        17,
        15
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "do",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "sort ( a a a , a + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        5,
        11
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        5,
        11,
        15
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        5,
        15
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "sort ( a a a , a + n ) ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        11,
        15
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "cout << a [ n - 1 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "int a [ 10000 ] [ 10000 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10000]’)"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "do",
        "sort ( a a a , a + n ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        17,
        5,
        11
      ],
      "mod_code": [
        "do",
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        17,
        5,
        11,
        15
      ],
      "mod_code": [
        "do",
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        17,
        5,
        15
      ],
      "mod_code": [
        "do",
        "sort ( a a a , a + n ) ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "do",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        11,
        15
      ],
      "mod_code": [
        "do",
        "cout << a [ n - 1 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        15
      ],
      "mod_code": [
        "do",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        11,
        15
      ],
      "mod_code": [
        "sort ( a a a , a + n ) ;",
        "cout << a [ n - 1 ] ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "sort ( a a a , a + n ) ;",
        "if ( ! a [ 0 ] < b [ 0 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘a’"
    }
  ]
}