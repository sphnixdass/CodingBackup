{
  "meta": {
    "index": 1986,
    "hitid": "36MUZ9VAE6WY1FF2BN2MRO9P9T8ED7",
    "workerid": "AIWEXPJAU66D9",
    "probid": "276A",
    "subid": "35669135"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare long longs k , f , t and maxi",
      "code": "long long k , f , t , maxi ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "loop , reading n and k from the input",
      "code": "while ( cin >> n >> k )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign - 1000000000 to maxi",
      "code": "maxi = - 1000000000 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "loop , decrementing n , while it is not 0",
      "code": "while ( n -- )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read f and t",
      "code": "cin >> f >> t ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if f is greater than maxi",
      "code": "if ( f > maxi )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if t < = k",
      "code": "if ( t <= k )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "assign f to maxi",
      "code": "maxi = f ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "else if maxi is less than ( f + k - t )",
      "code": "else if ( maxi < ( f + k - t ) )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set maxi to f + k - t",
      "code": "maxi = f + k - t ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print maxi",
      "code": "cout << maxi << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else if ( t <= k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        5,
        8
      ],
      "mod_code": [
        "maxi += k - t ;",
        "while ( -- n )",
        "else if ( t <= k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        5,
        8,
        9
      ],
      "mod_code": [
        "maxi += k - t ;",
        "while ( -- n )",
        "else if ( t <= k )",
        "int maxi = f ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        5,
        8,
        3
      ],
      "mod_code": [
        "maxi += k - t ;",
        "while ( -- n )",
        "else if ( t <= k )",
        "while ( n >> n >> k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        5,
        8,
        14
      ],
      "mod_code": [
        "maxi += k - t ;",
        "while ( -- n )",
        "else if ( t <= k )",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "maxi += k - t ;",
        "else if ( t <= k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        8,
        9
      ],
      "mod_code": [
        "maxi += k - t ;",
        "else if ( t <= k )",
        "int maxi = f ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        8,
        9,
        3
      ],
      "mod_code": [
        "maxi += k - t ;",
        "else if ( t <= k )",
        "int maxi = f ;",
        "while ( n >> n >> k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        8,
        9,
        14
      ],
      "mod_code": [
        "maxi += k - t ;",
        "else if ( t <= k )",
        "int maxi = f ;",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        8,
        3
      ],
      "mod_code": [
        "maxi += k - t ;",
        "else if ( t <= k )",
        "while ( n >> n >> k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        8,
        3,
        14
      ],
      "mod_code": [
        "maxi += k - t ;",
        "else if ( t <= k )",
        "while ( n >> n >> k )",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        8,
        14
      ],
      "mod_code": [
        "maxi += k - t ;",
        "else if ( t <= k )",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "while ( -- n )",
        "else if ( t <= k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "while ( -- n )",
        "else if ( t <= k )",
        "int maxi = f ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        3
      ],
      "mod_code": [
        "while ( -- n )",
        "else if ( t <= k )",
        "int maxi = f ;",
        "while ( n >> n >> k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        14
      ],
      "mod_code": [
        "while ( -- n )",
        "else if ( t <= k )",
        "int maxi = f ;",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "while ( -- n )",
        "else if ( t <= k )",
        "while ( n >> n >> k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        14
      ],
      "mod_code": [
        "while ( -- n )",
        "else if ( t <= k )",
        "while ( n >> n >> k )",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        5,
        8,
        14
      ],
      "mod_code": [
        "while ( -- n )",
        "else if ( t <= k )",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "else if ( t <= k )",
        "int maxi = f ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        8,
        9,
        3
      ],
      "mod_code": [
        "else if ( t <= k )",
        "int maxi = f ;",
        "while ( n >> n >> k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        8,
        9,
        3,
        14
      ],
      "mod_code": [
        "else if ( t <= k )",
        "int maxi = f ;",
        "while ( n >> n >> k )",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        8,
        9,
        14
      ],
      "mod_code": [
        "else if ( t <= k )",
        "int maxi = f ;",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "else if ( t <= k )",
        "while ( n >> n >> k )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        8,
        3,
        14
      ],
      "mod_code": [
        "else if ( t <= k )",
        "while ( n >> n >> k )",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "else if ( t <= k )",
        "cout << maxi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘}’ before ‘else’"
    }
  ]
}