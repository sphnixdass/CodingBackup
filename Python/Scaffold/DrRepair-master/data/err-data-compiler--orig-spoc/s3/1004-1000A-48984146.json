{
  "meta": {
    "index": 1004,
    "hitid": "3JYPJ2TAYI2ZWQIOB7DN90BEZDTPFH",
    "workerid": "A1AYVATMT88U1W",
    "probid": "1000A",
    "subid": "48984146"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "m = map from string to int",
      "code": "map < string , int > m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let a , b be two string arrays of length n + 1 respectively",
      "code": "string a [ n + 1 ] , b [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = ( 0 ) ; i < ( n ) ; i += ( 1 ) )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment m [ a [ i ] ] by 1",
      "code": "m [ a [ i ] ] ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let c be a integer with c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = ( 0 ) ; i < ( n ) ; i += ( 1 ) )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read b [ i ]",
      "code": "cin >> b [ i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if m [ b [ i ] ] is equal to 0",
      "code": "if ( m [ b [ i ] ] == 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment c by 1",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "decrement m [ b [ i ] ] by 1",
      "code": "m [ b [ i ] ] -- ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print c and newline",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string a [ n + 1 ] [ n + 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "c = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cin >> b . size ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘size’ in ‘b’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’)"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        14
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’)"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)][(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)][(n + 1)]}’"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "do",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "do",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        9,
        11,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        11,
        3,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        11,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> b . size ( ) ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "c = 0 ;",
        "string a [ n + 1 ] [ n + 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’)"
    },
    {
      "mod_line": [
        9,
        4,
        14
      ],
      "mod_code": [
        "c = 0 ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’)"
    },
    {
      "mod_line": [
        9,
        4,
        14,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        4,
        14,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)][(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)][(n + 1)]}’"
    },
    {
      "mod_line": [
        9,
        4,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        4,
        3,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)][(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)][(n + 1)]}’"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "c = 0 ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "do",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        14,
        3,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "do",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        14,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "do",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        3,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "c = 0 ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’)"
    },
    {
      "mod_line": [
        11,
        4,
        14
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’)"
    },
    {
      "mod_line": [
        11,
        4,
        14,
        3
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        11,
        4,
        14,
        6
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)][(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)][(n + 1)]}’"
    },
    {
      "mod_line": [
        11,
        4,
        3
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        11,
        4,
        3,
        6
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        11,
        4,
        6
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "string a [ n + 1 ] [ n + 1 ] ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)][(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)][(n + 1)]}’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘size’ in ‘b’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        11,
        14,
        3
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "do",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        11,
        14,
        3,
        6
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "do",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        11,
        14,
        6
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "do",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        11,
        3,
        6
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "cin >> b . size ( ) ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’)"
    },
    {
      "mod_line": [
        4,
        14,
        3
      ],
      "mod_code": [
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        4,
        14,
        3,
        6
      ],
      "mod_code": [
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        4,
        14,
        6
      ],
      "mod_code": [
        "string a [ n + 1 ] [ n + 1 ] ;",
        "do",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)][(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)][(n + 1)]}’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "string a [ n + 1 ] [ n + 1 ] ;",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "string a [ n + 1 ] [ n + 1 ] ;",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "string a [ n + 1 ] [ n + 1 ] ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)][(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)][(n + 1)]}’"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "do",
        "map < string = int > m ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        14,
        3,
        6
      ],
      "mod_code": [
        "do",
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "do",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘std::__cxx11::string [(n + 1)] {aka std::__cxx11::basic_string<char> [(n + 1)]}’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cin >> a . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    }
  ]
}