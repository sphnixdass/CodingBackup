{
  "meta": {
    "index": 2134,
    "hitid": "3ABAOCJ4R8YQ2CBKX7WP4VLX0NVQM9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "145A",
    "subid": "42149795"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare strings s1 and s2",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s1 and s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer variables c1 and c2",
      "code": "int c1 , c2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set value of c1 and c2 to 0",
      "code": "c1 = c2 = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to length of s1 exclusive",
      "code": "for ( int i = 0 ; i < s1 . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s1 [ i ] ! = s2 [ i ]",
      "code": "if ( s1 [ i ] != s2 [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s1 [ i ] = ' 4 '",
      "code": "if ( s1 [ i ] == ' 4 ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increase c1",
      "code": "c1 ++ ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increase c2",
      "code": "c2 ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print min of c1 and c2 + absolute value of c1 - c2",
      "code": "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "s1 , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )"
      ],
      "err_line": 4,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int c1 and c2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )"
      ],
      "err_line": 4,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        6
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        6,
        1
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        6,
        3
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )",
        "int c1 and c2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        13,
        2,
        6,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        1
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "s1 , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        1,
        3
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "s1 , s2 ;",
        "int c1 and c2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        1,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "s1 , s2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        3
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "int c1 and c2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        13,
        2,
        3,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        13,
        2,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "while ( cin >> s1 >> s2 )",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "if ( s1 [ i ] != ' [ ' )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        6,
        1
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        1,
        3
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;",
        "int c1 and c2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        1,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        3
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "if ( s1 [ i ] != ' [ ' )",
        "int c1 and c2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        13,
        6,
        3,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "if ( s1 [ i ] != ' [ ' )",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        13,
        6,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "if ( s1 [ i ] != ' [ ' )",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "s1 , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        1,
        3
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "s1 , s2 ;",
        "int c1 and c2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        1,
        3,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "s1 , s2 ;",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        1,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "s1 , s2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "int c1 and c2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        13,
        3,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "cout << min ( c1 , c2 ) + abs ( c1 - c2 ) ) << endl ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )"
      ],
      "err_line": 4,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        1,
        3
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;",
        "int c1 and c2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        1,
        7
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        3
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )",
        "int c1 and c2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        6,
        3,
        7
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        6,
        7
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "if ( s1 [ i ] != ' [ ' )",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "s1 , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        3
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "s1 , s2 ;",
        "int c1 and c2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        3,
        7
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "s1 , s2 ;",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        7
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "s1 , s2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "int c1 and c2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "while ( cin >> s1 >> s2 )",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;",
        "int c1 and c2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        7
      ],
      "mod_code": [
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        7
      ],
      "mod_code": [
        "if ( s1 [ i ] != ' [ ' )",
        "s1 , s2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( s1 [ i ] != ' [ ' )",
        "int c1 and c2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        3,
        7
      ],
      "mod_code": [
        "if ( s1 [ i ] != ' [ ' )",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "s1 , s2 ;",
        "int c1 and c2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "s1 , s2 ;",
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "s1 , s2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int c1 and c2 ;",
        "if ( ! s1 [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}