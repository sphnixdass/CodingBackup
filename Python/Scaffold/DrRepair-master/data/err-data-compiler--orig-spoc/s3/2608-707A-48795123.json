{
  "meta": {
    "index": 2608,
    "hitid": "3GL25Y6843OAB9CWJLRHY3HQXQFXMA",
    "workerid": "A1AYVATMT88U1W",
    "probid": "707A",
    "subid": "48795123"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let m , n , f , i , j , q be integers",
      "code": "int m , n , f , i , j , q ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let ch be a character",
      "code": "char ch ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "f is equal to 0",
      "code": "f = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n ( exclusive )",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to m exclusive",
      "code": "for ( j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read ch",
      "code": "cin >> ch ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if ( ch is not equal to B and ch is not equal to W and ch is not equal to G ) , f is equal to 1",
      "code": "if ( ch != ' B ' && ch != ' W ' && ch != ' G ' ) f = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if ( f is equal to 0 )",
      "code": "if ( f == 0 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print # Black & White and newline",
      "code": "cout << \" #Black&White \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print # Color and newline",
      "code": "cout << \" #Color \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "set < char > ch ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( ch != B && ch != ' W ' && ch != ' G ' ) f = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        14,
        13
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        14,
        13,
        4
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" ;",
        "do",
        "int f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        14,
        13,
        3
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" ;",
        "do",
        "set < char > ch ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        14,
        4
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" ;",
        "int f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        14,
        4,
        3
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" ;",
        "int f = 0 ;",
        "set < char > ch ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        14,
        3
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" ;",
        "set < char > ch ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        13,
        4
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "do",
        "int f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        13,
        4,
        3
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "do",
        "int f = 0 ;",
        "set < char > ch ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        13,
        4,
        14
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "do",
        "int f = 0 ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        13,
        3
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "do",
        "set < char > ch ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        13,
        3,
        14
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "do",
        "set < char > ch ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "do",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "int f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        4,
        3
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "int f = 0 ;",
        "set < char > ch ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        4,
        3,
        14
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "int f = 0 ;",
        "set < char > ch ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        4,
        14
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "int f = 0 ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "set < char > ch ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        12,
        3,
        14
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "set < char > ch ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        13,
        4
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "do",
        "int f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        14,
        13,
        4,
        3
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "do",
        "int f = 0 ;",
        "set < char > ch ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        14,
        13,
        3
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "do",
        "set < char > ch ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "int f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        14,
        4,
        3
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "int f = 0 ;",
        "set < char > ch ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "set < char > ch ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "do",
        "int f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        13,
        4,
        3
      ],
      "mod_code": [
        "do",
        "int f = 0 ;",
        "set < char > ch ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        13,
        4,
        3,
        14
      ],
      "mod_code": [
        "do",
        "int f = 0 ;",
        "set < char > ch ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        13,
        4,
        14
      ],
      "mod_code": [
        "do",
        "int f = 0 ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "do",
        "set < char > ch ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        13,
        3,
        14
      ],
      "mod_code": [
        "do",
        "set < char > ch ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "do",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "int f = 0 ;",
        "set < char > ch ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        4,
        3,
        14
      ],
      "mod_code": [
        "int f = 0 ;",
        "set < char > ch ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "int f = 0 ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int f’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "set < char > ch ;",
        "cout << \" # \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    }
  ]
}