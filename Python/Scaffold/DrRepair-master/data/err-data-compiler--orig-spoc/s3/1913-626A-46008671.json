{
  "meta": {
    "index": 1913,
    "hitid": "3A520CCNWNU038CQRDBK1N1JN3FEAY",
    "workerid": "AIWEXPJAU66D9",
    "probid": "626A",
    "subid": "46008671"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer x",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer y",
      "code": "int y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n and s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer i = 0 to n - 1 exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set value of x to 0",
      "code": "x = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set value of y to 0",
      "code": "y = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if s [ i ] = ' U '",
      "code": "if ( s [ i ] == ' U ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increase y by one",
      "code": "y ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if s [ i ] = ' D '",
      "code": "else if ( s [ i ] == ' D ' )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if s [ i ] = ' R '",
      "code": "else if ( s [ i ] == ' R ' )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increase x",
      "code": "x ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "decrease x",
      "code": "x -- ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for integer j = i + 1 to n exclusive",
      "code": "for ( int j = i + 1 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if s [ j ] = ' U '",
      "code": "if ( s [ j ] == ' U ' )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "else if s [ j ] = ' D '",
      "code": "else if ( s [ j ] == ' D ' )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "else if s [ j ] = ' R '",
      "code": "else if ( s [ j ] == ' R ' )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increase x",
      "code": "x ++ ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 27,
      "text": "decrease x",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "if x = 0 & & x = y , add 1 to ans",
      "code": "if ( x == 0 && x == y ) { ans ++ ; }",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "* x = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "* y = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        20,
        5
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        20,
        5,
        26
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "if ( ! s [ j ] )",
        "int s ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        20,
        5,
        24
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "if ( ! s [ j ] )",
        "int s ;",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        20,
        5,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "if ( ! s [ j ] )",
        "int s ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        20,
        26
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        24
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "if ( ! s [ j ] )",
        "do",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "if ( ! s [ j ] )",
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        20,
        24,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "if ( ! s [ j ] )",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        20,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        5,
        26
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "int s ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        5,
        26,
        24
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "int s ;",
        "do",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        5,
        26,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "int s ;",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        5,
        24
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "int s ;",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        5,
        24,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "int s ;",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        5,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "int s ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        26
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        26,
        24
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "do",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        26,
        24,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "do",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        26,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        24,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "else if ( ! s [ i ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        20,
        5
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "int s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        5,
        26
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "int s ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        5,
        26,
        24
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "int s ;",
        "do",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        5,
        26,
        16
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "int s ;",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        5,
        24
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "int s ;",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        5,
        24,
        16
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "int s ;",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        5,
        16
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "int s ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        26
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        20,
        26,
        24
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "do",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        20,
        26,
        24,
        16
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "do",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        20,
        26,
        16
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        20,
        24,
        16
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        20,
        16
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        26
      ],
      "mod_code": [
        "int s ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        26,
        24
      ],
      "mod_code": [
        "int s ;",
        "do",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        26,
        24,
        16
      ],
      "mod_code": [
        "int s ;",
        "do",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        26,
        16
      ],
      "mod_code": [
        "int s ;",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        24
      ],
      "mod_code": [
        "int s ;",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        24,
        16
      ],
      "mod_code": [
        "int s ;",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "int s ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        26,
        24
      ],
      "mod_code": [
        "do",
        "else if ( ! s [ j ] )"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        26,
        24,
        16
      ],
      "mod_code": [
        "do",
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        26,
        16
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        24,
        16
      ],
      "mod_code": [
        "else if ( ! s [ j ] )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘(’ token"
    }
  ]
}