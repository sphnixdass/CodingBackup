{
  "meta": {
    "index": 2844,
    "hitid": "3UV0D2KX1MDD7XW5DNLZ620J8HZF4I",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "454A",
    "subid": "41606984"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n / 2",
      "code": "for ( int i = 1 ; i <= n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 1 to ( n / 2 - i + 1 ) , print *",
      "code": "for ( int j = 1 ; j <= ( n / 2 - i + 1 ) ; j ++ ) cout << \" * \" ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for j = 1 to i * 2 - 1 , print D",
      "code": "for ( int j = 1 ; j <= i * 2 - 1 ; j ++ ) cout << ' D ' ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 1 to ( n / 2 - i + 1 ) , print *",
      "code": "for ( int j = 1 ; j <= ( n / 2 - i + 1 ) ; j ++ ) cout << \" * \" ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to n , print D",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cout << \" D \" ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = n / 2 down to 1",
      "code": "for ( int i = n / 2 ; i >= 1 ; i -- )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 1 to ( n / 2 - i + 1 ) , print *",
      "code": "for ( int j = 1 ; j <= ( n / 2 - i + 1 ) ; j ++ ) cout << \" * \" ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for j = 1 to i * 2 - 1 , print D",
      "code": "for ( int j = 1 ; j <= i * 2 - 1 ; j ++ ) cout << ' D ' ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for j = 1 to ( n / 2 - i + 1 ) , print *",
      "code": "for ( int j = 1 ; j <= ( n / 2 - i + 1 ) ; j ++ ) cout << \" * \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ ) cout << \" D \" ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = n / 2 ; i >= 1 ; i -- )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12,
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12,
        4,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        14,
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        4,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        14,
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        4,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "for ( int j = 1 ; j / i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j - i + 1 )",
        "for ( int j = 1 ; j - i + 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}