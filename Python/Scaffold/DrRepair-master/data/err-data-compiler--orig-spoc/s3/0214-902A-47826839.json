{
  "meta": {
    "index": 214,
    "hitid": "3MGHRFQY2LJ280VZZCQLJKHMXG8Y0H",
    "workerid": "A59A6LMCQRBL3",
    "probid": "902A",
    "subid": "47826839"
  },
  "lines": [
    {
      "line": 0,
      "text": "let freq be an integer array of size 10000005",
      "code": "int freq [ 10000005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m , x , to be integers",
      "code": "int n , m , x , to ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for int i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x , to",
      "code": "cin >> x >> to ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for int j = x + 1 to to inclusive ,",
      "code": "for ( int j = x + 1 ; j <= to ; j ++ ) freq [ j ] = 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for int i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if freq [ i ] = 0",
      "code": "if ( ! freq [ i ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print out NO",
      "code": "puts ( \" NO \" ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print out YES",
      "code": "puts ( \" YES \" ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = x + 1 ; j <= to ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , x ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = x + 1 ; j <= to ; ++ j )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "for ( int j = x + 1 ; j <= to ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "for ( int j = x + 1 ; j <= to ; j ++ )",
        "int n , m , x ;"
      ],
      "err_line": 6,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        1,
        9
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "for ( int j = x + 1 ; j <= to ; j ++ )",
        "int n , m , x ;",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "for ( int j = x + 1 ; j <= to ; j ++ )",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "int n , m , x ;"
      ],
      "err_line": 6,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        6
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "int n , m , x ;",
        "for ( int j = x + 1 ; j <= to ; ++ j )"
      ],
      "err_line": 6,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        6,
        9
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "int n , m , x ;",
        "for ( int j = x + 1 ; j <= to ; ++ j )",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        9
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "int n , m , x ;",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "for ( int j = x + 1 ; j <= to ; ++ j )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "for ( int j = x + 1 ; j <= to ; ++ j )",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( int j = x + 1 ; j <= to ; j ++ )",
        "int n , m , x ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        9
      ],
      "mod_code": [
        "for ( int j = x + 1 ; j <= to ; j ++ )",
        "int n , m , x ;",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( int j = x + 1 ; j <= to ; j ++ )",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , m , x ;",
        "for ( int j = x + 1 ; j <= to ; ++ j )"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "int n , m , x ;",
        "for ( int j = x + 1 ; j <= to ; ++ j )",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , m , x ;",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( int j = x + 1 ; j <= to ; ++ j )",
        "if ( freq [ i ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}