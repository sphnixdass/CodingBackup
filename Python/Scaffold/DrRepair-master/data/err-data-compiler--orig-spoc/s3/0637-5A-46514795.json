{
  "meta": {
    "index": 637,
    "hitid": "351S7I5UG9QFY7S7EIRGK9YBR3UNJ2",
    "workerid": "AIWEXPJAU66D9",
    "probid": "5A",
    "subid": "46514795"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let and res be integers with values = 0",
      "code": "int num = 0 , res = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while call to getline with input result and s is true",
      "code": "while ( getline ( cin , s ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if s [ 0 ] = = +",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment num",
      "code": "num ++ ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if s [ 0 ] is equal to character -",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement num",
      "code": "num -- ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let idx be integer with value = 1",
      "code": "int idx = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "while s [ idx - 1 ] is not character :",
      "code": "while ( s [ idx - 1 ] != ' : ' ) idx ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increase res by num * ( ( int ) s . size ( ) - idx )",
      "code": "res += num * ( ( int ) s . size ( ) - idx ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int res = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> result >> s )"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> input >> s )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "idx = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘idx’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( cin >> result >> s )"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        10
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        10,
        4
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        10,
        14
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )",
        "cout << res ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( cin >> result >> s )",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        14
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( cin >> result >> s )",
        "if ( ! s [ 0 ] )",
        "cout << res ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        14
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( cin >> result >> s )",
        "cout << res ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( s [ idx - 1 ] != ' : ' )"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        4
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( s [ idx - 1 ] != ' : ' )",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        4,
        14
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( s [ idx - 1 ] != ' : ' )",
        "if ( ! s [ 0 ] )",
        "cout << res ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        14
      ],
      "mod_code": [
        "int res = 0 ;",
        "while ( s [ idx - 1 ] != ' : ' )",
        "cout << res ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int res = 0 ;",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        14
      ],
      "mod_code": [
        "int res = 0 ;",
        "if ( ! s [ 0 ] )",
        "cout << res ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "int res = 0 ;",
        "cout << res ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        4
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        14
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )",
        "if ( ! s [ 0 ] )",
        "cout << res ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        2
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )",
        "if ( ! s [ 0 ] )",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        3,
        10,
        14
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )",
        "cout << res ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        14,
        2
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )",
        "cout << res ;",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "while ( s [ idx - 1 ] != ' : ' )",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "if ( ! s [ 0 ] )",
        "cout << res ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        2
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "if ( ! s [ 0 ] )",
        "cout << res ;",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "if ( ! s [ 0 ] )",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "cout << res ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        2
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "cout << res ;",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( cin >> result >> s )",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        10,
        4,
        14,
        2
      ],
      "mod_code": [
        "while ( s [ idx - 1 ] != ' : ' )",
        "if ( ! s [ 0 ] )",
        "cout << res ;",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        10,
        4,
        2
      ],
      "mod_code": [
        "while ( s [ idx - 1 ] != ' : ' )",
        "if ( ! s [ 0 ] )",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        10,
        14,
        2
      ],
      "mod_code": [
        "while ( s [ idx - 1 ] != ' : ' )",
        "cout << res ;",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "while ( s [ idx - 1 ] != ' : ' )",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        4,
        14,
        2
      ],
      "mod_code": [
        "if ( ! s [ 0 ] )",
        "cout << res ;",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "if ( ! s [ 0 ] )",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "cout << res ;",
        "int res = 0 , res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    }
  ]
}