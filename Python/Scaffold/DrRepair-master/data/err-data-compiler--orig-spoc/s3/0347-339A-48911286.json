{
  "meta": {
    "index": 347,
    "hitid": "3I7SHAD35MQGWU6518NJ4442WKZ7MZ",
    "workerid": "A1AYVATMT88U1W",
    "probid": "339A",
    "subid": "48911286"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let c , len be integers with c = 0 , len = 0",
      "code": "int c = 0 , len = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "len is equal to length of s / 2",
      "code": "len = ( s . length ( ) ) / 2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to length of s exclusive , i is incremented by 2",
      "code": "for ( int i = 1 ; i < s . length ( ) ; i += 2 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "s [ i ] is equal to s [ i + 1 ]",
      "code": "s [ i ] = s [ i + 1 ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "s [ i + 1 ] is equal to a",
      "code": "s [ i + 1 ] = ' a ' ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment c by 1",
      "code": "c ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "sort the values of the string s from beginning to end",
      "code": "sort ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "delete ( length of s ) - c from string s",
      "code": "s . erase ( s . length ( ) - c ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to length of s exclusive , i is incremented by 2 , s . insert ( i , \" + \" )",
      "code": "for ( int i = 1 ; i < s . length ( ) ; i += 2 ) { s . insert ( i , \" + \" ) ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print s and newline",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "len = strlen ( s ) / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "string s ( s . length ( ) ) - c ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        6
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        6,
        4
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        11,
        6,
        2
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        11,
        6,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        4
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "len = strlen ( s ) / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        11,
        4,
        2
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "len = strlen ( s ) / 2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        11,
        4,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "len = strlen ( s ) / 2 ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        11,
        2
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        11,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "string s ( s . size ( ) ) - c ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "s [ i ] += s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        4
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        6,
        4,
        2
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        4,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        6,
        2
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "s [ i ] += s [ i ] ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        6,
        2,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "s [ i ] += s [ i ] ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "s [ i ] += s [ i ] ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "len = strlen ( s ) / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "len = strlen ( s ) / 2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        2,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "len = strlen ( s ) / 2 ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "len = strlen ( s ) / 2 ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        2,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "s [ i + 1 ] = a ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        11,
        6,
        4
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        11,
        6,
        4,
        2
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        6,
        4,
        10
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        11,
        6,
        2
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        6,
        2,
        10
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        6,
        10
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "s [ i ] += s [ i ] ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "len = strlen ( s ) / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        11,
        4,
        2
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "len = strlen ( s ) / 2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        4,
        2,
        10
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "len = strlen ( s ) / 2 ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        4,
        10
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "len = strlen ( s ) / 2 ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        2,
        10
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "string s ( s . size ( ) ) - c ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        10
      ],
      "mod_code": [
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4,
        10
      ],
      "mod_code": [
        "s [ i ] += s [ i ] ;",
        "len = strlen ( s ) / 2 ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "s [ i ] += s [ i ] ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        6,
        2,
        10
      ],
      "mod_code": [
        "s [ i ] += s [ i ] ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "s [ i ] += s [ i ] ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "len = strlen ( s ) / 2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        10
      ],
      "mod_code": [
        "len = strlen ( s ) / 2 ;",
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "len = strlen ( s ) / 2 ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "char s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    }
  ]
}