{
  "meta": {
    "index": 2628,
    "hitid": "3ZLW647WALP8O71PPE19CEEOKQY32Q",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "707A",
    "subid": "48533756"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , f = integers with f = 0",
      "code": "int n , m , f = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "ch = character",
      "code": "char ch ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "Read n , m , f",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n * m exclusive",
      "code": "for ( int i = 1 ; i <= n * m ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "Read ch",
      "code": "cin >> ch ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ch is not B and ch is not W and ch is not G , then set f to 1",
      "code": "if ( ch != ' B ' && ch != ' W ' && ch != ' G ' ) f = 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if f is equal to 1",
      "code": "if ( f == 1 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print # Color and a new line",
      "code": "cout << \" #Color\\n \" ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print # Black & White and a new line",
      "code": "cout << \" #Black&White\\n \" ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "gets ( ch ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        2
      ],
      "mod_code": [
        "cin >> n >> m >> f ;",
        "cout << \" # \" ;",
        "cout << \" # \" << \" \\n \" ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "cin >> n >> m >> f ;",
        "cout << \" # \" ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        3,
        11,
        9,
        2
      ],
      "mod_code": [
        "cin >> n >> m >> f ;",
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" << ' \\n ' ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "cin >> n >> m >> f ;",
        "cout << \" # \" << \" \\n \" ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "cin >> n >> m >> f ;",
        "cout << \" # \" << ' \\n ' ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> n >> m >> f ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        9,
        11,
        3,
        2
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "cout << \" # \" << \" \\n \" ;",
        "cin >> n >> n >> f ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "cout << \" # \" << \" \\n \" ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        9,
        3,
        2
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "cin >> n >> n >> f ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        11,
        9,
        3,
        2
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" << ' \\n ' ;",
        "cin >> n >> n >> f ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        11,
        9,
        2
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "cout << \" # \" << ' \\n ' ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        11,
        3,
        2
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "cin >> n >> n >> f ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        9,
        3,
        2
      ],
      "mod_code": [
        "cout << \" # \" << ' \\n ' ;",
        "cin >> n >> n >> f ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "cout << \" # \" << ' \\n ' ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> n >> n >> f ;",
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    }
  ]
}