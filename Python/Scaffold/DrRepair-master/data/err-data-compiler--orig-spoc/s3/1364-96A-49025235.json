{
  "meta": {
    "index": 1364,
    "hitid": "391JB9X4ZY24R9DPK2CS899O1H0MKA",
    "workerid": "A1APYLD4DUK33J",
    "probid": "96A",
    "subid": "49025235"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string p",
      "code": "string p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create character z with z = ' 0 '",
      "code": "char z = ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create character o with o = ' 1 '",
      "code": "char o = ' 1 ' ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integers sumo , sumz , with sumo = 0 , sumz = 0",
      "code": "int sumo = 0 , sumz = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to 100 exclusive",
      "code": "for ( int i = 0 ; i < 100 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if p [ i ] is o",
      "code": "if ( p [ i ] == o )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment sumo",
      "code": "sumo ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set sumz to 0",
      "code": "sumz = 0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if p [ i ] is z",
      "code": "else if ( p [ i ] == z )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment sumz",
      "code": "sumz ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set sumz to 0",
      "code": "sumo = 0 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if sumo is 7 or sumz is 7 , break loop",
      "code": "if ( sumo == 7 || sumz == 7 ) break ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if sumo is greater than or equal to 7 or sumz is greater than or equal to 7",
      "code": "if ( sumo >= 7 || sumz >= 7 )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int p ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "z = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "o = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘o’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int sumo , sumz = 0 , sumz = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumz’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        2
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "else if ( p [ i ] == ' z ' )",
        "sumz = 0 ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        3
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "else if ( p [ i ] == ' z ' )",
        "sumz = 0 ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "else if ( p [ i ] == ' z ' )",
        "sumz = 0 ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        10,
        2
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "else if ( p [ i ] == ' z ' )",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        10,
        2,
        3
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "else if ( p [ i ] == ' z ' )",
        "gets ( p ) ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        10,
        2,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "else if ( p [ i ] == ' z ' )",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        10,
        3
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "else if ( p [ i ] == ' z ' )",
        "z = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        3,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "else if ( p [ i ] == ' z ' )",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "else if ( p [ i ] == ' z ' )",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        12,
        2
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "sumz = 0 ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        12,
        2,
        3
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "sumz = 0 ;",
        "gets ( p ) ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        12,
        2,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "sumz = 0 ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        12,
        3
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "sumz = 0 ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12,
        3,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "sumz = 0 ;",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "sumz = 0 ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "gets ( p ) ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2,
        3,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "gets ( p ) ;",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "z = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "if ( p [ i ] == ' o ' )",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        12,
        2
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "sumz = 0 ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        12,
        2,
        3
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "sumz = 0 ;",
        "gets ( p ) ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        12,
        2,
        18
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "sumz = 0 ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        12,
        3
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "sumz = 0 ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        3,
        18
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "sumz = 0 ;",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        18
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "sumz = 0 ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        2,
        3
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "gets ( p ) ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        2,
        3,
        18
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "gets ( p ) ;",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        2,
        18
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "z = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        18
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "else if ( p [ i ] == ' z ' )",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "sumz = 0 ;",
        "gets ( p ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        2,
        3
      ],
      "mod_code": [
        "sumz = 0 ;",
        "gets ( p ) ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        2,
        3,
        18
      ],
      "mod_code": [
        "sumz = 0 ;",
        "gets ( p ) ;",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        2,
        18
      ],
      "mod_code": [
        "sumz = 0 ;",
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "sumz = 0 ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        18
      ],
      "mod_code": [
        "sumz = 0 ;",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "sumz = 0 ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "gets ( p ) ;",
        "z = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        3,
        18
      ],
      "mod_code": [
        "gets ( p ) ;",
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "gets ( p ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "z = ' 0 ' ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘z’ was not declared in this scope"
    }
  ]
}