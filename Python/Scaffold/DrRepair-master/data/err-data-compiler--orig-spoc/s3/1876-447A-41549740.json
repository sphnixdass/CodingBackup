{
  "meta": {
    "index": 1876,
    "hitid": "3A520CCNWNU038CQRDBK1N1JOQ9EA3",
    "workerid": "A1AYVATMT88U1W",
    "probid": "447A",
    "subid": "41549740"
  },
  "lines": [
    {
      "line": 0,
      "text": "arr = array of boolean values of size 310",
      "code": "bool arr [ 310 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "memset of arr , 0 , sizeof ( arr )",
      "code": "memset ( arr , 0 , sizeof ( arr ) ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let m , p , x be integers",
      "code": "int m , p , x ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m and p",
      "code": "cin >> m >> p ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let integer value ans is equal to - 1",
      "code": "int ans = - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to p inclusive",
      "code": "for ( int i = 1 ; i <= p ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if arr [ x modulo m ] is equal to 0",
      "code": "if ( arr [ x % m ] == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let arr [ x modulo m ] is equal to 1",
      "code": "arr [ x % m ] = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "the value of ans is equal to i",
      "code": "ans = i ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "stop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "= int arr [ 310 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "memset ( arr , 0 , sizeof ( arr ) )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> m >> p )"
      ],
      "err_line": 11,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int ans = \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( arr [ x modulo m ] == 0 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "arr [ x % l2 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘l2’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ans is i ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 12,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        0
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        7
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )",
        "while ( cin >> x )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        0
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "= int arr [ 310 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        6,
        0,
        7
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "= int arr [ 310 ] ;",
        "while ( cin >> x )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        6,
        0,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "= int arr [ 310 ] ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "while ( cin >> x )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "for ( i = 1 ; i <= p ; i ++ )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "if ( arr [ x modulo m ] == 0 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        4,
        8,
        0
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        8,
        0,
        7
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;",
        "while ( cin >> x )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        8,
        0,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        8,
        7
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "if ( arr [ x modulo m ] == 0 )",
        "while ( cin >> x )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        4,
        8,
        7,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "if ( arr [ x modulo m ] == 0 )",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "if ( arr [ x modulo m ] == 0 )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "= int arr [ 310 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        0,
        7
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "= int arr [ 310 ] ;",
        "while ( cin >> x )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        0,
        7,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "= int arr [ 310 ] ;",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        0,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "= int arr [ 310 ] ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "while ( cin >> x )"
      ],
      "err_line": 11,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "while ( cin >> m >> p )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        0
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        8,
        0,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;",
        "while ( cin >> x )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        8,
        0,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        8,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )",
        "while ( cin >> x )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        7,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "if ( arr [ x modulo m ] == 0 )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "= int arr [ 310 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        0,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "= int arr [ 310 ] ;",
        "while ( cin >> x )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        0,
        7,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "= int arr [ 310 ] ;",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        0,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "= int arr [ 310 ] ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "while ( cin >> x )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        8,
        0,
        7
      ],
      "mod_code": [
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;",
        "while ( cin >> x )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        8,
        0,
        7,
        10
      ],
      "mod_code": [
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        8,
        0,
        10
      ],
      "mod_code": [
        "if ( arr [ x modulo m ] == 0 )",
        "= int arr [ 310 ] ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( arr [ x modulo m ] == 0 )",
        "while ( cin >> x )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        8,
        7,
        10
      ],
      "mod_code": [
        "if ( arr [ x modulo m ] == 0 )",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( arr [ x modulo m ] == 0 )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘modulo’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "= int arr [ 310 ] ;",
        "while ( cin >> x )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        0,
        7,
        10
      ],
      "mod_code": [
        "= int arr [ 310 ] ;",
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "= int arr [ 310 ] ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "while ( cin >> x )",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}