{
  "meta": {
    "index": 2620,
    "hitid": "3S8APUMBJXDXSWHES2VMEG6PHMGBF9",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "707A",
    "subid": "42300373"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "count = int with count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = two dimensional char array of sizes 101 and 101",
      "code": "char s [ 101 ] [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n then m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read s [ i ] [ j ]",
      "code": "cin >> s [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if s [ i ] [ j ] equals ' C ' or ' M ' or ' Y ' then increment count",
      "code": "if ( s [ i ] [ j ] == ' C ' || s [ i ] [ j ] == ' M ' || s [ i ] [ j ] == ' Y ' ) { count ++ ; }",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if count is greater than 0",
      "code": "if ( count > 0 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" # Color \"",
      "code": "cout << \" #Color \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" # Black & White \"",
      "code": "cout << \" #Black&White \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" # Black ( \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        14,
        6
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        6,
        3
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        6,
        11
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( count >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        3
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        3,
        11
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;",
        "if ( count >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        11
      ],
      "mod_code": [
        "cout << \" #. \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( count >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        3
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        3,
        11
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;",
        "if ( count >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        3,
        12
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        11
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( count >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        11,
        12
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( count >= 0 )",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        12
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;",
        "if ( count >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        11,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;",
        "if ( count >= 0 )",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int s [ 101 ] [ 101 ] ;",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( count >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( count >= 0 )",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" # \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}