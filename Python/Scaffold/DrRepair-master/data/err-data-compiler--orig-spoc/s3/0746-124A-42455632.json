{
  "meta": {
    "index": 746,
    "hitid": "34XASH8KLQG520A5XUH04QVNWE5PMO",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "124A",
    "subid": "42455632"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n , i , j , x , y , z",
      "code": "int n , i , j , x , y , z ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , x and y",
      "code": "cin >> n >> x >> y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set z to x + y",
      "code": "z = ( x + y ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n - x = 1 and n differenf from z",
      "code": "if ( n - x == 1 && n != z )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print 1",
      "code": "cout << 1 << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if n > z",
      "code": "else if ( n > z )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print y + 1",
      "code": "cout << y + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else if z > n and n - x > 1",
      "code": "else if ( z > n && ( n - x ) > 1 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print n - x",
      "code": "cout << ( n - x ) << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else if n equal to z",
      "code": "else if ( n == z )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print y",
      "code": "cout << y << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        3,
        10,
        1
      ],
      "mod_code": [
        "if ( ( n - x ) == 1 && n == 1 )",
        "z += y ;",
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "if ( ( n - x ) == 1 && n == 1 )",
        "z += y ;",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        11
      ],
      "mod_code": [
        "if ( ( n - x ) == 1 && n == 1 )",
        "z += y ;",
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        10,
        1
      ],
      "mod_code": [
        "if ( ( n - x ) == 1 && n == 1 )",
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        10,
        1,
        11
      ],
      "mod_code": [
        "if ( ( n - x ) == 1 && n == 1 )",
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( ( n - x ) == 1 && n == 1 )",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        1,
        11
      ],
      "mod_code": [
        "if ( ( n - x ) == 1 && n == 1 )",
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        3,
        10,
        1
      ],
      "mod_code": [
        "if ( n - x == 1 && n == 1 )",
        "z += y ;",
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "if ( n - x == 1 && n == 1 )",
        "z += y ;",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        11
      ],
      "mod_code": [
        "if ( n - x == 1 && n == 1 )",
        "z += y ;",
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        10,
        1
      ],
      "mod_code": [
        "if ( n - x == 1 && n == 1 )",
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        10,
        1,
        11
      ],
      "mod_code": [
        "if ( n - x == 1 && n == 1 )",
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( n - x == 1 && n == 1 )",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        1,
        11
      ],
      "mod_code": [
        "if ( n - x == 1 && n == 1 )",
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        3,
        10,
        1
      ],
      "mod_code": [
        "z += y ;",
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        3,
        10,
        1,
        11
      ],
      "mod_code": [
        "z += y ;",
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "z += y ;",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        3,
        1,
        11
      ],
      "mod_code": [
        "z += y ;",
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        10,
        1,
        11
      ],
      "mod_code": [
        "else if ( n == ' z ' )",
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , i , j , y , y , z ;",
        "cout << y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    }
  ]
}