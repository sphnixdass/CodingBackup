{
  "meta": {
    "index": 1179,
    "hitid": "3UQVX1UPFSBC7F2S6RJQAGGHHZY02I",
    "workerid": "A1APYLD4DUK33J",
    "probid": "44A",
    "subid": "36341322"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string set set1",
      "code": "set < string > set1 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string set set2",
      "code": "set < string > set2 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create map map1 from string to integer",
      "code": "map < string , int > map1 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create map map2 from string to integer",
      "code": "map < string , int > map2 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create 2d integer array cp with size 101 by 101",
      "code": "int cp [ 101 ] [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create integers mc1",
      "code": "int mc1 ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create integers mc2",
      "code": "int mc2 ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare malloc_1 with string a as argument , returning integer",
      "code": "int malloc_1 ( string a )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "if count of a in set1 is not 0",
      "code": "if ( set1 . count ( a ) != 0 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return map1 [ a ] from function",
      "code": "return map1 [ a ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "insert a into set1",
      "code": "set1 . insert ( a ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set map1 [ a ] to incremented mc1",
      "code": "map1 [ a ] = mc1 ++ ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "return map1 [ a ] from function",
      "code": "return map1 [ a ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "declare malloc_2 with string a as argument , returning integer",
      "code": "int malloc_2 ( string a )",
      "indent": 0
    },
    {
      "line": 17,
      "text": "if count of a in set2 is not 0",
      "code": "if ( set2 . count ( a ) != 0 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "return map2 [ a ] from function",
      "code": "return map2 [ a ] ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "insert a into set2",
      "code": "set2 . insert ( a ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set map2 [ a ] to incremented mc2",
      "code": "map2 [ a ] = mc2 ++ ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "return map2 [ a ] from function",
      "code": "return map2 [ a ] ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 26,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "create integer cnt with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "while read n is true",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "set cnt to 0",
      "code": "cnt = 0 ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "remove all elements from set1",
      "code": "set1 . clear ( ) ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "remove all elements from set2",
      "code": "set2 . clear ( ) ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "set mc1 to mc2 to 0",
      "code": "mc1 = mc2 = 0 ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "remove all elements from map1",
      "code": "map1 . clear ( ) ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "set bytes from cp to size of cp to 0",
      "code": "memset ( cp , 0 , sizeof ( cp ) ) ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "remove all elements from map2",
      "code": "map2 . clear ( ) ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "create strings a , b",
      "code": "string a , b ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "create integers c , d",
      "code": "int c , d ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "read a read b",
      "code": "cin >> a >> b ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "set c to result of run malloc_1 with a as argument",
      "code": "c = malloc_1 ( a ) ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "set d to result of run malloc_2 with b as argument",
      "code": "d = malloc_2 ( b ) ;",
      "indent": 3
    },
    {
      "line": 42,
      "text": "if cp [ c ] [ d ] is 0",
      "code": "if ( cp [ c ] [ d ] == 0 )",
      "indent": 3
    },
    {
      "line": 43,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "set cp [ c ] [ d ] to 1",
      "code": "cp [ c ] [ d ] = 1 ;",
      "indent": 4
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 47,
      "text": "print cnt print newline",
      "code": "cout << cnt << endl ;",
      "indent": 2
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "set < int > set1 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::set<int>::count(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "set < int > set2 ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘std::set<int>::count(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "map < string , int map1 ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < int , int > map2 ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "string malloc_1 ( string a )"
      ],
      "err_line": 9,
      "err_msg": "could not convert ‘map1.std::map<_Key, _Tp, _Compare, _Alloc>::operator[]<std::__cxx11::basic_string<char>, int, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >(a)’ from ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "return map1 [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "set1 . push_back ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "return map1 [ i ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "string malloc_2 ( string a )"
      ],
      "err_line": 18,
      "err_msg": "could not convert ‘map2.std::map<_Key, _Tp, _Compare, _Alloc>::operator[]<std::__cxx11::basic_string<char>, int, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >(a)’ from ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "set2 . push_back ( a ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "map2 [ a ++ ] = ++ mc2 ;"
      ],
      "err_line": 21,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "v . clear ( ) ;"
      ],
      "err_line": 30,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "v . clear ( ) ;"
      ],
      "err_line": 31,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "v . clear ( ) ;"
      ],
      "err_line": 33,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "v . clear ( ) ;"
      ],
      "err_line": 35,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "a , b ;"
      ],
      "err_line": 36,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "c = ( malloc_1 ) ;"
      ],
      "err_line": 40,
      "err_msg": "invalid conversion from ‘int (*)(std::__cxx11::string) {aka int (*)(std::__cxx11::basic_string<char>)}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 41,
      "err_msg": "invalid conversion from ‘int (*)(std::__cxx11::string) {aka int (*)(std::__cxx11::basic_string<char>)}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "cp [ c ] [ j ] = 1 ;"
      ],
      "err_line": 44,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        42
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        42,
        1
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        42,
        12
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        42,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        1
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "set < int > set2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        1,
        12
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        1,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "set < int > set2 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        12
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        12,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        17,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( set2 . compare ( a ) != 0 )",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        42
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        42,
        1
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        42,
        1,
        12
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        42,
        1,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        42,
        12
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        42,
        12,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        42,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "set < int > set2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        1,
        12
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        1,
        12,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        1,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "set < int > set2 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        12,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        8,
        41
      ],
      "mod_code": [
        "if ( set1 . compare ( a ) != 0 )",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        17,
        42
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )"
      ],
      "err_line": 17,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        17,
        42,
        1
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;"
      ],
      "err_line": 17,
      "err_msg": "‘class std::set<int>’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        17,
        42,
        1,
        12
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        42,
        1,
        41
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘class std::set<int>’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        17,
        42,
        12
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        42,
        12,
        41
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        42,
        41
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        17,
        1
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "set < int > set2 ;"
      ],
      "err_line": 17,
      "err_msg": "‘class std::set<int>’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        17,
        1,
        12
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        1,
        12,
        41
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        1,
        41
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "set < int > set2 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘class std::set<int>’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        17,
        12
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        12,
        41
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        41
      ],
      "mod_code": [
        "if ( set2 . compare ( a ) != 0 )",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        42,
        1
      ],
      "mod_code": [
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘std::set<int>::count(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        42,
        1,
        12
      ],
      "mod_code": [
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        42,
        1,
        12,
        41
      ],
      "mod_code": [
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        42,
        1,
        41
      ],
      "mod_code": [
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "set < int > set2 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘std::set<int>::count(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        42,
        12
      ],
      "mod_code": [
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        42,
        12,
        41
      ],
      "mod_code": [
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        42,
        41
      ],
      "mod_code": [
        "if ( cp [ c ] [ d ] == ' 0 ' )",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 41,
      "err_msg": "invalid conversion from ‘int (*)(std::__cxx11::string) {aka int (*)(std::__cxx11::basic_string<char>)}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        12,
        41
      ],
      "mod_code": [
        "set < int > set2 ;",
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        41
      ],
      "mod_code": [
        "set < int > set2 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘std::set<int>::count(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        12,
        41
      ],
      "mod_code": [
        "map1 [ a ++ ] = ++ mc1 ;",
        "d = ( malloc_2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    }
  ]
}