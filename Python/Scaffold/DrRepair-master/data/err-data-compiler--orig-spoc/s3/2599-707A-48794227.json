{
  "meta": {
    "index": 2599,
    "hitid": "34R3P23QHSV9UV6VIJFI4FVN72AWH7",
    "workerid": "A1APYLD4DUK33J",
    "probid": "707A",
    "subid": "48794227"
  },
  "lines": [
    {
      "line": 0,
      "text": "create 2d character array a with size 101 by 101",
      "code": "char a [ 101 ] [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers n , m , i , j , flag with flag = 0",
      "code": "int n , m , i , j , flag = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to m exclusive",
      "code": "for ( j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if a [ i ] [ j ] is ' C ' or a [ i ] [ j ] is ' M ' or a [ i ] [ j ] is ' Y ' , set flag to 1",
      "code": "if ( a [ i ] [ j ] == ' C ' || a [ i ] [ j ] == ' M ' || a [ i ] [ j ] == ' Y ' ) flag = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if flag is 1 , print \" # Color \" print newline",
      "code": "if ( flag == 1 ) cout << \" #Color \" << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if flag is 0 , print \" # Black & White \" print newline",
      "code": "if ( flag == 0 ) cout << \" #Black&White \" << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , m , i , j , flag , flag ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        10,
        11,
        2
      ],
      "mod_code": [
        "if ( flag == 1 ) cout << \" # \" << endl ;",
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        0
      ],
      "mod_code": [
        "if ( flag == 1 ) cout << \" # \" << endl ;",
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        6
      ],
      "mod_code": [
        "if ( flag == 1 ) cout << \" # \" << endl ;",
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( flag == 1 ) cout << \" # \" << endl ;",
        "int n , m , i , j , flag , flag ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        10,
        2,
        0
      ],
      "mod_code": [
        "if ( flag == 1 ) cout << \" # \" << endl ;",
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        10,
        2,
        0,
        6
      ],
      "mod_code": [
        "if ( flag == 1 ) cout << \" # \" << endl ;",
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        10,
        2,
        6
      ],
      "mod_code": [
        "if ( flag == 1 ) cout << \" # \" << endl ;",
        "int n , m , i , j , flag , flag ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        2,
        0
      ],
      "mod_code": [
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        2,
        0,
        6
      ],
      "mod_code": [
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        2,
        0,
        10
      ],
      "mod_code": [
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;",
        "if ( flag == 1 ) cout << \" # \" ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        2,
        6
      ],
      "mod_code": [
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        2,
        6,
        10
      ],
      "mod_code": [
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;",
        "cout << a [ i ] [ j ] ;",
        "if ( flag == 1 ) cout << \" # \" ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        2,
        10
      ],
      "mod_code": [
        "if ( flag == 0 ) cout << \" # \" << \" \\n \" ;",
        "int n , m , i , j , flag , flag ;",
        "if ( flag == 1 ) cout << \" # \" ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        2,
        0,
        6
      ],
      "mod_code": [
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        2,
        0,
        6,
        10
      ],
      "mod_code": [
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;",
        "cout << a [ i ] [ j ] ;",
        "if ( flag == 1 ) cout << \" # \" ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        2,
        0,
        10
      ],
      "mod_code": [
        "int n , m , i , j , flag , flag ;",
        "int a [ 101 ] [ 101 ] ;",
        "if ( flag == 1 ) cout << \" # \" ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int n , m , i , j , flag , flag ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        2,
        6,
        10
      ],
      "mod_code": [
        "int n , m , i , j , flag , flag ;",
        "cout << a [ i ] [ j ] ;",
        "if ( flag == 1 ) cout << \" # \" ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int n , m , i , j , flag , flag ;",
        "if ( flag == 1 ) cout << \" # \" ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    }
  ]
}