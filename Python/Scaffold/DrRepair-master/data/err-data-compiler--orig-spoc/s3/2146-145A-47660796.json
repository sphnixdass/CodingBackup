{
  "meta": {
    "index": 2146,
    "hitid": "3PR3LXCWSFTV4PT2UCNCTHB6YE19XR",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "145A",
    "subid": "47660796"
  },
  "lines": [
    {
      "line": 0,
      "text": "make long long integers = ng nxt ( )",
      "code": "inline long long nxt ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set long long _x to 0 , _tmp",
      "code": "long long _x = 0 , _tmp = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set char _tc to getchar ( )",
      "code": "char _tc = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set while ( ( _tc < 0 | | _tc > 9 ) & & _tc ! = - ) _tc to getchar ( )",
      "code": "while ( ( _tc < ' 0 ' || _tc > ' 9 ' ) && _tc != ' - ' ) _tc = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set if ( _tc = - ) then _tc equals getchar ( ) , _tmp = - 1",
      "code": "if ( _tc == ' - ' ) _tc = getchar ( ) , _tmp = - 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set while ( _tc > = 0 & & _tc < = 9 ) then _x * = 10 , _x + = ( _tc - ' 0 ' ) , _tc = getchar ( )",
      "code": "while ( _tc >= ' 0 ' && _tc <= ' 9 ' ) _x *= 10 , _x += ( _tc - ' 0 ' ) , _tc = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return _x * _tmp",
      "code": "return _x * _tmp ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 9,
      "text": "a = string",
      "code": "string a ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "b = string",
      "code": "string b ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set int cur to 0",
      "code": "int cur = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set int last to - 1",
      "code": "int last = - 1 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to less than a . size ( ) do the following",
      "code": "for ( int i = 0 ; i < a . size ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if a [ i ] is not equal to b [ i ] then do",
      "code": "if ( a [ i ] != b [ i ] )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set if ( last = - 1 ) then last = i + 1",
      "code": "if ( last == - 1 ) last = i + 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "for j = last to j is less than a . size ( ) do the following",
      "code": "for ( int j = last ; j < a . size ( ) ; ++ j , ++ last )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if a [ j ] is not equal to b [ j ] & & b [ j ] = = a [ i ] then do {",
      "code": "if ( a [ j ] != b [ j ] && b [ j ] == a [ i ] )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "swap ( a [ i ] , a [ j ] )",
      "code": "swap ( a [ i ] , a [ j ] ) ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "add one to cur",
      "code": "++ cur ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "break",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if a [ i ] is not equal to b [ i ] then increment cur by 1",
      "code": "if ( a [ i ] != b [ i ] ) ++ cur ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "output cur",
      "code": "cout << cur << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long ng = nxt ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char b ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( cin >> a >> b )"
      ],
      "err_line": 20,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int cur to ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int last to ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "swap ( ! a [ i ] , a [ j ] ) ;"
      ],
      "err_line": 19,
      "err_msg": "no matching function for call to ‘swap(bool, char&)’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        15
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        15,
        9
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )",
        "char a ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        15,
        13
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )",
        "int last to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        15,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        9
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "char a ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        13
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "char a ;",
        "int last to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "char a ;",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        13
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "int last to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        13,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( a [ i ] != b [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        9
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( a [ i ] != b [ i ] )",
        "char a ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        9,
        13
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( a [ i ] != b [ i ] )",
        "char a ;",
        "int last to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        9,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( a [ i ] != b [ i ] )",
        "char a ;",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        13
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( a [ i ] != b [ i ] )",
        "int last to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        13,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( a [ i ] != b [ i ] )",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "while ( a [ i ] != b [ i ] )",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "char a ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "char a ;",
        "int last to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "char a ;",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "char a ;",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "int last to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "long long nxt ( nxt ) ;",
        "int cur to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        15,
        9
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )",
        "char a ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        15,
        9,
        13
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )",
        "char a ;",
        "int last to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        15,
        9,
        12
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )",
        "char a ;",
        "int cur to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        15,
        13
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )",
        "int last to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        15,
        13,
        12
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        15,
        12
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "while ( a [ i ] != b [ i ] )",
        "int cur to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "char a ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "char a ;",
        "int last to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        12
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "char a ;",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        9,
        12
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "char a ;",
        "int cur to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "int last to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        13,
        12
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "while ( ( _tc < 0 || _tc > 9 ) && _tc = getchar ( ) )",
        "int cur to ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "while ( a [ i ] != b [ i ] )",
        "char a ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        15,
        9,
        13
      ],
      "mod_code": [
        "while ( a [ i ] != b [ i ] )",
        "char a ;",
        "int last to ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        15,
        9,
        13,
        12
      ],
      "mod_code": [
        "while ( a [ i ] != b [ i ] )",
        "char a ;",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        15,
        9,
        12
      ],
      "mod_code": [
        "while ( a [ i ] != b [ i ] )",
        "char a ;",
        "int cur to ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "while ( a [ i ] != b [ i ] )",
        "int last to ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        15,
        13,
        12
      ],
      "mod_code": [
        "while ( a [ i ] != b [ i ] )",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "while ( a [ i ] != b [ i ] )",
        "int cur to ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "char a ;",
        "int last to ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        9,
        13,
        12
      ],
      "mod_code": [
        "char a ;",
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "char a ;",
        "int cur to ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "int last to ;",
        "int cur to ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘to’"
    }
  ]
}