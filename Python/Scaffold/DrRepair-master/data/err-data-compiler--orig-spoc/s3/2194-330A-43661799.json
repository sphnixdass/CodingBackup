{
  "meta": {
    "index": 2194,
    "hitid": "3W5PY7V3UP19A6WLLK0R1PWIV2EJYY",
    "workerid": "AIWEXPJAU66D9",
    "probid": "330A",
    "subid": "43661799"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers r and c and integer arrays row and col with size 11 filled with 0",
      "code": "int r , c , row [ 11 ] = { 0 } , col [ 11 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read r and c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for integer j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; ++ j )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ j ] = ' S '",
      "code": "if ( s [ j ] == ' S ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set value of row [ i ] to 1",
      "code": "row [ i ] = 1 ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "col [ j ] = 1",
      "code": "col [ j ] = 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "declare integer function cakes",
      "code": "int cakes ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for integer i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; ++ i )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for integer j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; ++ j )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if row [ i ] or col [ j ] = 0 , increment cakes",
      "code": "if ( row [ i ] == 0 || col [ j ] == 0 ) { cakes += 1 ; }",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print cakes",
      "code": "cout << cakes << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int cakes ( )"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘for’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , col [ 11 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int col [11]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int cakes ( integer )"
      ],
      "err_line": 13,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "int cakes ( )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        16
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "int cakes ( )",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        16,
        7
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "int cakes ( )",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "if ( ! s [ j ] )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        16,
        5
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "int cakes ( )",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        7
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "int cakes ( )",
        "if ( ! s [ j ] )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        7,
        5
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "int cakes ( )",
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        5
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "int cakes ( )",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        7
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "if ( ! s [ j ] )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        7,
        5
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        7,
        13
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "if ( ! s [ j ] )",
        "int cakes ( integer )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        5
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        5,
        13
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "s >> s ;",
        "int cakes ( integer )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        13
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "int cakes ( integer )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( ! s [ j ] )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        5
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        5,
        13
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( ! s [ j ] )",
        "s >> s ;",
        "int cakes ( integer )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        13
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "if ( ! s [ j ] )",
        "int cakes ( integer )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        13
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "s >> s ;",
        "int cakes ( integer )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int row [ 11 ] , col [ 11 ] , c [ 11 ] ;",
        "int cakes ( integer )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "int cakes ( )",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘for’"
    },
    {
      "mod_line": [
        13,
        16,
        7
      ],
      "mod_code": [
        "int cakes ( )",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "if ( ! s [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘for’"
    },
    {
      "mod_line": [
        13,
        16,
        7,
        5
      ],
      "mod_code": [
        "int cakes ( )",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        16,
        5
      ],
      "mod_code": [
        "int cakes ( )",
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "int cakes ( )",
        "if ( ! s [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘for’"
    },
    {
      "mod_line": [
        13,
        7,
        5
      ],
      "mod_code": [
        "int cakes ( )",
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "int cakes ( )",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        7,
        5
      ],
      "mod_code": [
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        7,
        5,
        13
      ],
      "mod_code": [
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "if ( ! s [ j ] )",
        "s >> s ;",
        "int cakes ( integer )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        7,
        13
      ],
      "mod_code": [
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "if ( ! s [ j ] )",
        "int cakes ( integer )"
      ],
      "err_line": 13,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        5,
        13
      ],
      "mod_code": [
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "s >> s ;",
        "int cakes ( integer )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "if ( row [ i ] || col [ j ] == 0 ) cakes ++ ;",
        "int cakes ( integer )"
      ],
      "err_line": 13,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        13
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "s >> s ;",
        "int cakes ( integer )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "if ( ! s [ j ] )",
        "int cakes ( integer )"
      ],
      "err_line": 13,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "s >> s ;",
        "int cakes ( integer )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}