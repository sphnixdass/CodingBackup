{
  "meta": {
    "index": 601,
    "hitid": "3S8APUMBJXDXSWHES2VMEG6PH7ZFB2",
    "workerid": "A1APYLD4DUK33J",
    "probid": "5A",
    "subid": "45169027"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer maxs with maxs = 100 + 10",
      "code": "const int maxs = 100 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character array s with size maxs",
      "code": "char s [ maxs ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers k , ans",
      "code": "int k , ans ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "while read string into s",
      "code": "while ( gets ( s ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ 0 ] is ' + '",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if s [ 0 ] is ' - '",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "create integer t with t = 0",
      "code": "int t = 0 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "while s [ t ] is not ' : ' , increment t",
      "code": "while ( s [ t ] != ' : ' ) { t ++ ; }",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment ans by k * ( length of s - t - 1 )",
      "code": "ans += k * ( strlen ( s ) - t - 1 ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "ans += k * ( s . size ( ) - t - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int maxs += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s [ maxs ] [ maxs ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘char (*)[110]’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "ans += k * ( s . length ( ) - t - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . size ( ) - t - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        12,
        1
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "char s [ maxs ] [ maxs ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [110][110]’)"
    },
    {
      "mod_line": [
        4,
        12,
        1,
        5
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "char s [ maxs ] [ maxs ] ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        12,
        1,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "char s [ maxs ] [ maxs ] ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [110][110]’)"
    },
    {
      "mod_line": [
        4,
        12,
        5
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        12,
        5,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        12,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s [ maxs ] [ maxs ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [110][110]’)"
    },
    {
      "mod_line": [
        4,
        1,
        12
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s [ maxs ] [ maxs ] ;",
        "ans += k * ( s . length ( ) - t - 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [110][110]’)"
    },
    {
      "mod_line": [
        4,
        1,
        12,
        5
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s [ maxs ] [ maxs ] ;",
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        12,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s [ maxs ] [ maxs ] ;",
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [110][110]’)"
    },
    {
      "mod_line": [
        4,
        1,
        5
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s [ maxs ] [ maxs ] ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        5,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s [ maxs ] [ maxs ] ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "char s [ maxs ] [ maxs ] ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [110][110]’)"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . length ( ) - t - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        12,
        5
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        12,
        5,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        12,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> s )",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "char s [ maxs ] [ maxs ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘char (*)[110]’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        1,
        5
      ],
      "mod_code": [
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "char s [ maxs ] [ maxs ] ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        1,
        5,
        9
      ],
      "mod_code": [
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "char s [ maxs ] [ maxs ] ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        1,
        9
      ],
      "mod_code": [
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "char s [ maxs ] [ maxs ] ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘char (*)[110]’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        5,
        9
      ],
      "mod_code": [
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "ans += k * ( s . size ( ) - t - 1 ) ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "char s [ maxs ] [ maxs ] ;",
        "ans += k * ( s . length ( ) - t - 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘char (*)[110]’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        12,
        5
      ],
      "mod_code": [
        "char s [ maxs ] [ maxs ] ;",
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        12,
        5,
        9
      ],
      "mod_code": [
        "char s [ maxs ] [ maxs ] ;",
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        12,
        9
      ],
      "mod_code": [
        "char s [ maxs ] [ maxs ] ;",
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘char (*)[110]’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "char s [ maxs ] [ maxs ] ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "char s [ maxs ] [ maxs ] ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "char s [ maxs ] [ maxs ] ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘char (*)[110]’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        5,
        9
      ],
      "mod_code": [
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "ans += k * ( s . length ( ) - t - 1 ) ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    }
  ]
}