{
  "meta": {
    "index": 950,
    "hitid": "3NOEP8XAU4WGWC99B1J9F7BL3IKXPB",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "557A",
    "subid": "48571677"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , i , j = long long integers",
      "code": "long long int n , i , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "p1 , q1 , p2 , q2 , p3 , q3 = long long integers",
      "code": "long long int p1 , q1 , p2 , q2 , p3 , q3 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read p1 , q1 , p2 , q2 , p3 , q3",
      "code": "cin >> p1 >> q1 >> p2 >> q2 >> p3 >> q3 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "a = p1 , b = p2 , c = p3 = long long integers",
      "code": "long long int a = p1 , b = p2 , c = p3 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a + 1 is less than or equal to q1 then do the following",
      "code": "while ( a + 1 <= q1 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a + b + c + 1 is less than or equal to n then do the following",
      "code": "if ( a + b + c + 1 <= n )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "add one to a",
      "code": "a ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if b + 1 is less than or equal to q2 then do the following",
      "code": "while ( b + 1 <= q2 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if a + b + c + 1 is less than or equal to n then do the following",
      "code": "if ( a + b + c + 1 <= n )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "add one to b",
      "code": "b ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if c + 1 is less than or equal to q3 then do the following",
      "code": "while ( c + 1 <= q3 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if a + b + c + 1 is less than or equal to n then do the following",
      "code": "if ( a + b + c + 1 <= n )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "add one to c",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "output a and b and c",
      "code": "cout << a << \" \" << b << \" \" << c << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( c + 1 <= q3 )"
      ],
      "err_line": 24,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        13,
        20
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        9
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        16
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        13,
        9
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        9,
        16
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        9,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        16
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        13,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( b + 1 <= q2 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( c + 1 <= q3 )"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        20,
        9
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        20,
        9,
        16
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( c + 1 <= q3 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        20,
        9,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( c + 1 <= q3 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        20,
        16
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        20,
        16,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( c + 1 <= q3 )",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        20,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        9,
        16
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "do",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        9,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        16,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "do",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "if ( a + 1 <= q1 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        13,
        20,
        9
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        20,
        9,
        16
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        20,
        9,
        24
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        20,
        16
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        20,
        16,
        24
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )",
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        20,
        24
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        9,
        16
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        9,
        16,
        24
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "do",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        9,
        24
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        16,
        24
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "if ( b + 1 <= q2 )",
        "do"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        9
      ],
      "mod_code": [
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        9,
        16
      ],
      "mod_code": [
        "if ( c + 1 <= q3 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        9,
        16,
        24
      ],
      "mod_code": [
        "if ( c + 1 <= q3 )",
        "do",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        9,
        24
      ],
      "mod_code": [
        "if ( c + 1 <= q3 )",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        16
      ],
      "mod_code": [
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        16,
        24
      ],
      "mod_code": [
        "if ( c + 1 <= q3 )",
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "if ( c + 1 <= q3 )",
        "do"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        16,
        24
      ],
      "mod_code": [
        "do",
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        24
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        24
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}