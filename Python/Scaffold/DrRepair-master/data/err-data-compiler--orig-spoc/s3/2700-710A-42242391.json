{
  "meta": {
    "index": 2700,
    "hitid": "3BC9H1KCYU6VGQWKSJJ6QFQQYLLYWH",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "710A",
    "subid": "42242391"
  },
  "lines": [
    {
      "line": 0,
      "text": "create char c",
      "code": "char c ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints x , y , and kol",
      "code": "int x , y , kol ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare Found taking in ints x and y",
      "code": "void Found ( int x , int y )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "if x is greater than or equal to 1 , x is less than or equal to 8 , y is greater than or equal to 1 , and y is less than or equal to 8 , increment kol",
      "code": "if ( ( x >= 1 ) && ( x <= 8 ) && ( y >= 1 ) && ( y <= 8 ) ) kol ++ ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read y",
      "code": "cin >> y ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set x to c - 96",
      "code": "x = c - 96 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "call Found ( x + 1 , y )",
      "code": "Found ( x + 1 , y ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "call Found ( x , y + 1 )",
      "code": "Found ( x , y + 1 ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "call Found ( x - 1 , y )",
      "code": "Found ( x - 1 , y ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "call Found with arguments x and y - 1",
      "code": "Found ( x , y - 1 ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "call Found ( x + 1 , y + 1 )",
      "code": "Found ( x + 1 , y + 1 ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "call Found ( x - 1 , y - 1 )",
      "code": "Found ( x - 1 , y - 1 ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "call Found with arguments x + 1 and y - 1",
      "code": "Found ( x + 1 , y - 1 ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "call Found with arguments x - 1 and y + 1",
      "code": "Found ( x - 1 , y + 1 ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print kol",
      "code": "cout << kol << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char c ="
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x , y , y ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "Found ( x + l , y ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "void Found ( x , y + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "variable or field ‘Found’ declared void"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "Found ( x - l , y ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "Found ( x , y ) - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘void’ and ‘int’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "Found ( ( x + 1 , y + 1 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void Found(int, int)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "void Found ( x + 1 , y - 1 ) ;"
      ],
      "err_line": 15,
      "err_msg": "variable or field ‘Found’ declared void"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "void Found ( x - 1 , y + 1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "variable or field ‘Found’ declared void"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        12
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘void’ and ‘int’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        8
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘void’ and ‘int’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        6
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        8
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "x -= 96 ;"
      ],
      "err_line": 14,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        8,
        6
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "x -= 96 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        8,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "x -= 96 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        6
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        6,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x - l , y - 1 ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x , y ) - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘void’ and ‘int’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        3,
        12,
        8
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘void’ and ‘int’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        3,
        12,
        8,
        6
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12,
        8,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12,
        6
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x , y ) - 1 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12,
        6,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x , y ) - 1 ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "Found ( x , y ) - 1 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "x -= 96 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8,
        6,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "x -= 96 ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "x -= 96 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "if ( x >= 1 && x <= 8 && y <= 1 && y <= 8 ) kol ++ ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘void’ and ‘int’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        14,
        12,
        8
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘void’ and ‘int’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        14,
        12,
        8,
        6
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        12,
        8,
        7
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        12,
        6
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        12,
        6,
        7
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        12,
        7
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "Found ( x , y ) - 1 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "x -= 96 ;"
      ],
      "err_line": 14,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        6
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "x -= 96 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        8,
        6,
        7
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "x -= 96 ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        8,
        7
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "x -= 96 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        6,
        7
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "Found ( x - l , y - 1 ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘void’ and ‘int’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        12,
        8,
        6
      ],
      "mod_code": [
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8,
        6,
        7
      ],
      "mod_code": [
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8,
        7
      ],
      "mod_code": [
        "Found ( x , y ) - 1 ;",
        "x -= 96 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "Found ( x , y ) - 1 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6,
        7
      ],
      "mod_code": [
        "Found ( x , y ) - 1 ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "Found ( x , y ) - 1 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "x -= 96 ;",
        "gets ( c ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6,
        7
      ],
      "mod_code": [
        "x -= 96 ;",
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "x -= 96 ;",
        "gets ( y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "gets ( c ) ;",
        "gets ( y ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    }
  ]
}