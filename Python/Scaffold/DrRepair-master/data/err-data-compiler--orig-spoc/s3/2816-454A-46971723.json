{
  "meta": {
    "index": 2816,
    "hitid": "3MNJFORX8BYV3G05RS49BU6X8DUF5N",
    "workerid": "A1AYVATMT88U1W",
    "probid": "454A",
    "subid": "46971723"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x = 2d array of characters with 102 rows and 102 columns",
      "code": "char x [ 102 ] [ 102 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "memset of x , * , length of x",
      "code": "memset ( x , ' * ' , sizeof ( x ) ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let flag be a integer",
      "code": "int flag ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for a = 0 to n exclusive",
      "code": "for ( int a = 0 ; a < n ; a ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "x [ a ] [ n / 2 ] is equal to D",
      "code": "x [ a ] [ n / 2 ] = ' D ' ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if a < = n / 2",
      "code": "if ( a <= n / 2 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for b = 1 to a inclusive",
      "code": "for ( int b = 1 ; b <= a ; b ++ )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "x [ a ] [ n / 2 + b ] is equal to D",
      "code": "x [ a ] [ n / 2 + b ] = ' D ' ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "x [ a ] [ n / 2 - b ] is equal to D",
      "code": "x [ a ] [ n / 2 - b ] = ' D ' ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for integer b is equal to n / 2 - ( a - n / 2 ) , b > = 0 , decrement b by 1",
      "code": "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 ; b -- )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "x [ a ] [ n / 2 + b ] is equal to D",
      "code": "x [ a ] [ n / 2 + b ] = ' D ' ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "x [ a ] [ n / 2 - b ] is equal to D",
      "code": "x [ a ] [ n / 2 - b ] = ' D ' ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for j = 0 to n exclusive , print x [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { cout << x [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "memset ( x , * * x ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "x [ a ] [ n / 2 ] = \" D \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( b = 1 ; b <= a ; b ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 ) b -- ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        11
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        14
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        15
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        14
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        14,
        15
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        14,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        15
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        15,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        14
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        14,
        15
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        14,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        15
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        15,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "memset ( x , x , sizeof ( x ) ) ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char (*)[102]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        15
      ],
      "mod_code": [
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        16
      ],
      "mod_code": [
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15
      ],
      "mod_code": [
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        16
      ],
      "mod_code": [
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        14,
        16
      ],
      "mod_code": [
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        14,
        15
      ],
      "mod_code": [
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        16
      ],
      "mod_code": [
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        14,
        16
      ],
      "mod_code": [
        "x [ a ] [ n / b ] = ' D ' ;",
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        15,
        16
      ],
      "mod_code": [
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / 2 ] = ' D ' ;",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "for ( int b = n / 2 - ( a - n / 2 ) ; b >= 0 )",
        "x [ a ] [ n / b ] = ' D ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}