{
  "meta": {
    "index": 2167,
    "hitid": "3B0MCRZMBROBN37IPA9SLUPI0WHPPA",
    "workerid": "A1APYLD4DUK33J",
    "probid": "330A",
    "subid": "49075685"
  },
  "lines": [
    {
      "line": 0,
      "text": "create character command",
      "code": "char commamd ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer array row with size 20",
      "code": "int row [ 20 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer array col with size 20",
      "code": "int col [ 20 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integers a , b , with a = 0 , b = 0",
      "code": "int a = 0 , b = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; ++ j )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read command",
      "code": "cin >> commamd ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if command is ' S '",
      "code": "if ( commamd == ' S ' )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if row [ i ] is 0 , increment a",
      "code": "if ( row [ i ] == 0 ) { a ++ ; }",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increment row [ i ]",
      "code": "row [ i ] ++ ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if col [ j ] is 0 , increment b",
      "code": "if ( col [ j ] == 0 ) { b ++ ; }",
      "indent": 4
    },
    {
      "line": 14,
      "text": "increment col [ j ]",
      "code": "col [ j ] ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print n * m - a * b print newline",
      "code": "cout << n * m - a * b << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char command ;"
      ],
      "err_line": 9,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cin >> command ;"
      ],
      "err_line": 9,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( command == ' S ' )"
      ],
      "err_line": 10,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 11,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int a = 0 , b = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( ! command )"
      ],
      "err_line": 10,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "char command ;",
        "cin >> command ;"
      ],
      "err_line": 10,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        10,
        6
      ],
      "mod_code": [
        "char command ;",
        "cin >> command ;",
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        9,
        6
      ],
      "mod_code": [
        "char command ;",
        "cin >> command ;",
        "int a = 0 , b = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        9,
        6,
        13
      ],
      "mod_code": [
        "char command ;",
        "cin >> command ;",
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "char command ;",
        "cin >> command ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "char command ;",
        "if ( command == ' S ' )"
      ],
      "err_line": 9,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        10,
        6
      ],
      "mod_code": [
        "char command ;",
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        10,
        6,
        13
      ],
      "mod_code": [
        "char command ;",
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        10,
        6,
        9
      ],
      "mod_code": [
        "char command ;",
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;",
        "cin . get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        10,
        13
      ],
      "mod_code": [
        "char command ;",
        "if ( command == ' S ' )",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "char command ;",
        "int a = 0 , b = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        6,
        13
      ],
      "mod_code": [
        "char command ;",
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        6,
        13,
        9
      ],
      "mod_code": [
        "char command ;",
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;",
        "cin . get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        6,
        9
      ],
      "mod_code": [
        "char command ;",
        "int a = 0 , b = 0 , b ;",
        "cin . get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "char command ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        13,
        9
      ],
      "mod_code": [
        "char command ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;",
        "cin . get ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "char command ;",
        "cin . get ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "cin >> command ;",
        "if ( command == ' S ' )"
      ],
      "err_line": 9,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        6
      ],
      "mod_code": [
        "cin >> command ;",
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        9,
        10,
        6,
        13
      ],
      "mod_code": [
        "cin >> command ;",
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        9,
        10,
        13
      ],
      "mod_code": [
        "cin >> command ;",
        "if ( command == ' S ' )",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cin >> command ;",
        "int a = 0 , b = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        9,
        6,
        13
      ],
      "mod_code": [
        "cin >> command ;",
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "cin >> command ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        10,
        6,
        13
      ],
      "mod_code": [
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        10,
        6,
        13,
        9
      ],
      "mod_code": [
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;",
        "cin . get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        10,
        6,
        9
      ],
      "mod_code": [
        "if ( command == ' S ' )",
        "int a = 0 , b = 0 , b ;",
        "cin . get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "if ( command == ' S ' )",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        9
      ],
      "mod_code": [
        "if ( command == ' S ' )",
        "if ( col [ j ] == ' 0 ' ) b ++ ;",
        "cin . get ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "if ( command == ' S ' )",
        "cin . get ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        6,
        13,
        9
      ],
      "mod_code": [
        "int a = 0 , b = 0 , b ;",
        "if ( col [ j ] == ' 0 ' ) b ++ ;",
        "cin . get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "int a = 0 , b = 0 , b ;",
        "cin . get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int b’"
    }
  ]
}