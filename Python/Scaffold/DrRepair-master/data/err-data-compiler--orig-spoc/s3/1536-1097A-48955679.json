{
  "meta": {
    "index": 1536,
    "hitid": "3TCFMTM8HEICE4NA2ANQOLZRNTE121",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1097A",
    "subid": "48955679"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare const int maxn = 1000010",
      "code": "const int maxn = 1000010 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create const int MAXM = 500000",
      "code": "const int MAXM = 500000 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create string t",
      "code": "string t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare an array of strings in with size 5",
      "code": "string in [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare boolean variable flag = false",
      "code": "bool flag = false ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read input to in [ i ]",
      "code": "cin >> in [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if in [ i ] [ 0 ] = t [ 0 ] or in [ i ] [ 1 ] = t [ 1 ] , assign true to flag",
      "code": "if ( in [ i ] [ 0 ] == t [ 0 ] || in [ i ] [ 1 ] == t [ 1 ] ) flag = true ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" YES \" if flag is true , or \" NO \" if it is not",
      "code": "flag ? cout << \" YES \" << endl : cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int t ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char in [ 5 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int t ;",
        "getline ( cin , in [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "int t ;",
        "getline ( cin , in [ i ] ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8,
        4,
        5
      ],
      "mod_code": [
        "int t ;",
        "getline ( cin , in [ i ] ) ;",
        "gets ( t ) ;",
        "char in [ 5 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8,
        5
      ],
      "mod_code": [
        "int t ;",
        "getline ( cin , in [ i ] ) ;",
        "char in [ 5 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int t ;",
        "gets ( t ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "int t ;",
        "gets ( t ) ;",
        "char in [ 5 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int t ;",
        "char in [ 5 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "getline ( cin , in [ i ] ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        4,
        5
      ],
      "mod_code": [
        "getline ( cin , in [ i ] ) ;",
        "gets ( t ) ;",
        "char in [ 5 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "getline ( cin , in [ i ] ) ;",
        "char in [ 5 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "gets ( t ) ;",
        "char in [ 5 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}