{
  "meta": {
    "index": 137,
    "hitid": "371DNNCG44WO9318KAG14IVP1C38TQ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "686A",
    "subid": "48168917"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long longs n , x , cnt = 0",
      "code": "long long n , x , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , x",
      "code": "cin >> n >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare character s",
      "code": "char s ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "declare long long d",
      "code": "long long d ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read s and d",
      "code": "cin >> s >> d ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s is ' + '",
      "code": "if ( s == ' + ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment x by d",
      "code": "x += d ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if x - d is greater than or equal to 0",
      "code": "if ( x - d >= 0 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "decrement x by d",
      "code": "x -= d ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print x , \" \" , cnt , newline",
      "code": "cout << x << \" \" << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "set < char > s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        16
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "cout << x << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        16,
        12
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "cout << x << \" \\n \" ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        16,
        9
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "cout << x << \" \\n \" ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        16,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "cout << x << \" \\n \" ;",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        12
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        12,
        9
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "do",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        12,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        9
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        9,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "set < char > s ;",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "cout << x << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        16,
        12
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "cout << x << \" \\n \" ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        16,
        12,
        9
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "cout << x << \" \\n \" ;",
        "do",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        16,
        12,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "cout << x << \" \\n \" ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        16,
        9
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "cout << x << \" \\n \" ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        16,
        9,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "cout << x << \" \\n \" ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        16,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "cout << x << \" \\n \" ;",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        9
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "do",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        9,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "do",
        "do",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        9,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "long long n , x , cnt , 0 ;",
        "long long d , d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "set < char > s ;",
        "cout << x << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4,
        16,
        12
      ],
      "mod_code": [
        "set < char > s ;",
        "cout << x << \" \\n \" ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4,
        16,
        12,
        9
      ],
      "mod_code": [
        "set < char > s ;",
        "cout << x << \" \\n \" ;",
        "do",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4,
        16,
        12,
        5
      ],
      "mod_code": [
        "set < char > s ;",
        "cout << x << \" \\n \" ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        4,
        16,
        9
      ],
      "mod_code": [
        "set < char > s ;",
        "cout << x << \" \\n \" ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4,
        16,
        9,
        5
      ],
      "mod_code": [
        "set < char > s ;",
        "cout << x << \" \\n \" ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        4,
        16,
        5
      ],
      "mod_code": [
        "set < char > s ;",
        "cout << x << \" \\n \" ;",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "set < char > s ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4,
        12,
        9
      ],
      "mod_code": [
        "set < char > s ;",
        "do",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4,
        12,
        9,
        5
      ],
      "mod_code": [
        "set < char > s ;",
        "do",
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        4,
        12,
        5
      ],
      "mod_code": [
        "set < char > s ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "set < char > s ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4,
        9,
        5
      ],
      "mod_code": [
        "set < char > s ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "set < char > s ;",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "cout << x << \" \\n \" ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        12,
        9
      ],
      "mod_code": [
        "cout << x << \" \\n \" ;",
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        12,
        9,
        5
      ],
      "mod_code": [
        "cout << x << \" \\n \" ;",
        "do",
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        16,
        12,
        5
      ],
      "mod_code": [
        "cout << x << \" \\n \" ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "cout << x << \" \\n \" ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        9,
        5
      ],
      "mod_code": [
        "cout << x << \" \\n \" ;",
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "cout << x << \" \\n \" ;",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        9,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "do",
        "long long d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int d’"
    }
  ]
}