{
  "meta": {
    "index": 249,
    "hitid": "3B6F54KMR265J348WP2WF3CVLNDS1V",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "799A",
    "subid": "47513499"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , t , k , d , r = integers",
      "code": "int n , t , k , d , r ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "print n and t and k and d",
      "code": "cin >> n >> t >> k >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if ( n - k ) modulo k is 0",
      "code": "if ( ( n - k ) % k == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set r to ( n - k ) / k",
      "code": "r = ( n - k ) / k ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set r to ( ( n - k ) / k ) + 1",
      "code": "r = ( ( n - k ) / k ) + 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if r is 0 or n < k",
      "code": "if ( r == 0 || n < k )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print NO and new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else if r is 1",
      "code": "else if ( r == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if t > d",
      "code": "if ( t > d )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print YES and new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print NO and new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if r * t > d",
      "code": "if ( r * t > d )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print YES and new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( r == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        17,
        4
      ],
      "mod_code": [
        "do",
        "do",
        "int r = ( n - k ) / k ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        17,
        4,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "int r = ( n - k ) / k ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        17,
        4,
        9
      ],
      "mod_code": [
        "do",
        "do",
        "int r = ( n - k ) / k ;",
        "else if ( r == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        4,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "int r = ( n - k ) / k ;",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        17,
        5
      ],
      "mod_code": [
        "do",
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        17,
        5,
        9
      ],
      "mod_code": [
        "do",
        "do",
        "do",
        "else if ( r == l )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        17,
        5,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        17,
        9
      ],
      "mod_code": [
        "do",
        "do",
        "else if ( r == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        9,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        4,
        5
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        4,
        5,
        9
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "do",
        "else if ( r == l )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        4,
        5,
        2
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        4,
        9
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "else if ( r == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        9,
        2
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        2
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        5,
        9
      ],
      "mod_code": [
        "do",
        "do",
        "else if ( r == l )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        5,
        9,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        5,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "do",
        "else if ( r == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        9,
        2
      ],
      "mod_code": [
        "do",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        4,
        5
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        17,
        4,
        5,
        9
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "do",
        "else if ( r == l )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        17,
        4,
        5,
        2
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        17,
        4,
        9
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "else if ( r == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        4,
        9,
        2
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        4,
        2
      ],
      "mod_code": [
        "do",
        "int r = ( n - k ) / k ;",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        17,
        5,
        9
      ],
      "mod_code": [
        "do",
        "do",
        "else if ( r == l )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        17,
        5,
        9,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        17,
        5,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "do",
        "else if ( r == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        9,
        2
      ],
      "mod_code": [
        "do",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        2
      ],
      "mod_code": [
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int r = ( n - k ) / k ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "int r = ( n - k ) / k ;",
        "do",
        "else if ( r == l )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        2
      ],
      "mod_code": [
        "int r = ( n - k ) / k ;",
        "do",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        5,
        2
      ],
      "mod_code": [
        "int r = ( n - k ) / k ;",
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "int r = ( n - k ) / k ;",
        "else if ( r == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        2
      ],
      "mod_code": [
        "int r = ( n - k ) / k ;",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "do",
        "else if ( r == l )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "do",
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "do",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "else if ( r == l )",
        "cout << n << \" \" << t << \" \" << k << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}