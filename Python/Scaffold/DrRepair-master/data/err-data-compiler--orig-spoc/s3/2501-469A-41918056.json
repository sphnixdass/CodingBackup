{
  "meta": {
    "index": 2501,
    "hitid": "39I4RL8QGJBXLTNB8D9Z9NCWOWEH4K",
    "workerid": "AIWEXPJAU66D9",
    "probid": "469A",
    "subid": "41918056"
  },
  "lines": [
    {
      "line": 0,
      "text": "create new array of integers a with 111 elements",
      "code": "int a [ 111 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read standard input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "define integers n1 and n2",
      "code": "int n1 , n2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read from the input to n1",
      "code": "cin >> n1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "start for loop from i = 1 to n1 inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare integer variable with name x",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read x from the input",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set the value of a [ x ] to 1",
      "code": "a [ x ] = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read variable n2 from the input",
      "code": "cin >> n2 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "in a for loop , change i from 0 to n2 exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "create integer variable with name x",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "assign the new value = 1 to a [ x ]",
      "code": "a [ x ] = 1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "define integer flag with value 1",
      "code": "int flag = 1 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "start for loop from i = 1 to n inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if a [ i ] = 0",
      "code": "if ( a [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "assign the new value = 0 to flag",
      "code": "flag = 0 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if flag is true",
      "code": "if ( flag )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print \" I become the guy . \" to the standard output",
      "code": "cout << \" I become the guy. \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" Oh , my keyboard ! \"",
      "code": "cout << \" Oh, my keyboard! \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n1 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int x = s . size ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n2 ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 28,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "cout << \" Oh \" << my << \" \\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘my’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cout << \" Oh \" << endl ;"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        27,
        3
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cout << \" Oh \" << endl ;",
        "cin >> n )"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        27,
        3,
        19
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cout << \" Oh \" << endl ;",
        "cin >> n )",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        27,
        19
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cout << \" Oh \" << endl ;",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        3
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cin >> n )"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        3,
        27
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cin >> n )",
        "cout << \" Oh \" << my << \" \\n \" ;"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        3,
        27,
        19
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cin >> n )",
        "cout << \" Oh \" << my << \" \\n \" ;",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        3,
        19
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cin >> n )",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        27
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cout << \" Oh \" << my << \" \\n \" ;"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        27,
        19
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "cout << \" Oh \" << my << \" \\n \" ;",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        25,
        19
      ],
      "mod_code": [
        "cout << \" I become << \" \\n \" ;",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        27,
        3
      ],
      "mod_code": [
        "cout << \" Oh \" << endl ;",
        "cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        3,
        19
      ],
      "mod_code": [
        "cout << \" Oh \" << endl ;",
        "cin >> n )",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        3,
        19,
        25
      ],
      "mod_code": [
        "cout << \" Oh \" << endl ;",
        "cin >> n )",
        "if ( a [ i ] == ' 0 ' )",
        "cout << \" I become it\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        3,
        25
      ],
      "mod_code": [
        "cout << \" Oh \" << endl ;",
        "cin >> n )",
        "cout << \" I become it\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        27
      ],
      "mod_code": [
        "cin >> n )",
        "cout << \" Oh \" << my << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        27,
        19
      ],
      "mod_code": [
        "cin >> n )",
        "cout << \" Oh \" << my << \" \\n \" ;",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        27,
        19,
        25
      ],
      "mod_code": [
        "cin >> n )",
        "cout << \" Oh \" << my << \" \\n \" ;",
        "if ( a [ i ] == ' 0 ' )",
        "cout << \" I become it\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        27,
        25
      ],
      "mod_code": [
        "cin >> n )",
        "cout << \" Oh \" << my << \" \\n \" ;",
        "cout << \" I become it\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "cin >> n )",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        19,
        25
      ],
      "mod_code": [
        "cin >> n )",
        "if ( a [ i ] == ' 0 ' )",
        "cout << \" I become it\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "cin >> n )",
        "cout << \" I become it\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        19
      ],
      "mod_code": [
        "cout << \" Oh \" << my << \" \\n \" ;",
        "if ( a [ i ] == ' 0 ' )"
      ],
      "err_line": 27,
      "err_msg": "‘my’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        19,
        25
      ],
      "mod_code": [
        "cout << \" Oh \" << my << \" \\n \" ;",
        "if ( a [ i ] == ' 0 ' )",
        "cout << \" I become it\\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘my’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        25
      ],
      "mod_code": [
        "cout << \" Oh \" << my << \" \\n \" ;",
        "cout << \" I become it\\n \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘my’ was not declared in this scope"
    }
  ]
}