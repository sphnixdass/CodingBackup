{
  "meta": {
    "index": 612,
    "hitid": "3IJ95K7NDX6575266C6DNW6VZBDNGY",
    "workerid": "AIWEXPJAU66D9",
    "probid": "5A",
    "subid": "36786647"
  },
  "lines": [
    {
      "line": 0,
      "text": "let ch be an array of characters of size 105",
      "code": "char ch [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "set integer ans to 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set integer sum to 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while can read input into ch",
      "code": "while ( gets ( ch ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "byte and flag are integers with byte = 0 and flag = 0",
      "code": "int byte = 0 , flag = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ch [ 0 ] is equal to ' + '",
      "code": "if ( ch [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment sum",
      "code": "sum ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if ch [ 0 ] is equal to ' - '",
      "code": "else if ( ch [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrease sum by one",
      "code": "sum -- ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set integer len to length of ch",
      "code": "int len = strlen ( ch ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "for i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if flag is 1 , increment byte",
      "code": "if ( flag ) byte ++ ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "if ch [ i ] is equal to ' : ' set flag to 1",
      "code": "if ( ch [ i ] == ' : ' ) flag = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increase ans by byte * sum",
      "code": "ans += byte * sum ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int len = ch . length ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( can cin >> ch )"
      ],
      "err_line": 4,
      "err_msg": "‘can’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int byte = 0 = 0 , flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘ans’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        5
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        5,
        8
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        5,
        10
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        5,
        6
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        8
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "else if ( ! ch [ 0 ] == ' - ' )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        8,
        10
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        8,
        6
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        10
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        10,
        6
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        6
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int len = ch . length ( ) ;",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int byte = 0 = 0 , flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        10
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        6
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int byte = 0 = 0 , flag = 0 ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        6
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int byte = 0 = 0 , flag = 0 ;",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "int byte = 0 = 0 , flag = 0 ;",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘ans’"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        6
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘ans’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘ans’"
    },
    {
      "mod_line": [
        4,
        10,
        6
      ],
      "mod_code": [
        "while ( cin >> ch )",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘ans’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        5,
        8
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        5,
        8,
        10
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        5,
        8,
        6
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        5,
        10
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        5,
        10,
        6
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        5,
        6
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "int byte = 0 = 0 , flag = 0 ;",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "else if ( ! ch [ 0 ] == ' - ' )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        8,
        10
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        8,
        10,
        6
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        8,
        6
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        10,
        6
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "int len = ch . length ( ) ;",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘length’ in ‘ch’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        6
      ],
      "mod_code": [
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "int byte = 0 = 0 , flag = 0 ;",
        "else if ( ! ch [ 0 ] == ' - ' )",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int byte = 0 = 0 , flag = 0 ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        10,
        6
      ],
      "mod_code": [
        "int byte = 0 = 0 , flag = 0 ;",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int byte = 0 = 0 , flag = 0 ;",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘ans’"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "else if ( ! ch [ 0 ] == ' - ' )",
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘ans’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "do",
        "if ( ! ch [ 0 ] == ' + ' )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘ans’"
    }
  ]
}