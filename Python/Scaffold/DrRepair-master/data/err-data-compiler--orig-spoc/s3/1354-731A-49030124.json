{
  "meta": {
    "index": 1354,
    "hitid": "3SD15I2WD2OW68KQCGDC2RV01IZ63K",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "731A",
    "subid": "49030124"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "ctr = int with ctr = 0",
      "code": "int ctr = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "pointer = char with pointer = ' a '",
      "code": "char pointer = ' a ' ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to length of s",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "n = int with n = absolute of ( pointer - s [ i ] ) as int",
      "code": "int n = abs ( ( int ) ( pointer - s [ i ] ) ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if n > = 14 set n to 26 - n",
      "code": "if ( n >= 14 ) n = 26 - n ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment ctr by n",
      "code": "ctr += n ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set pointer to s [ i ]",
      "code": "pointer = s [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print ctr",
      "code": "cout << ctr << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "* * i = s [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char * = char ( * a ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char * i = s [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char* i’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "* * i = s [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "* * i = s [ i ] ;",
        "cout << ctr ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        2
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "* * i = s [ i ] ;",
        "cout << ctr ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        4
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "* * i = s [ i ] ;",
        "cout << ctr ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "* * i = s [ i ] ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        9,
        2,
        4
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "* * i = s [ i ] ;",
        "s >> s ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "* * i = s [ i ] ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "cout << ctr ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        11,
        2
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "cout << ctr ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        11,
        2,
        4
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "cout << ctr ;",
        "s >> s ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        11,
        2,
        9
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "cout << ctr ;",
        "s >> s ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        11,
        4
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "cout << ctr ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        11,
        4,
        9
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "cout << ctr ;",
        "char * = char ( * a ) ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        11,
        9
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "cout << ctr ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "s >> s ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        9
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "s >> s ;",
        "char * = char ( * a ) ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        9
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "s >> s ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        4,
        9
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "char * = char ( * a ) ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "int n = abs ( int ( s - s [ i ] ) ) ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "* * i = s [ i ] ;",
        "cout << ctr ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "* * i = s [ i ] ;",
        "cout << ctr ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        11,
        2,
        4
      ],
      "mod_code": [
        "* * i = s [ i ] ;",
        "cout << ctr ;",
        "s >> s ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "* * i = s [ i ] ;",
        "cout << ctr ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "* * i = s [ i ] ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        2,
        4
      ],
      "mod_code": [
        "* * i = s [ i ] ;",
        "s >> s ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "* * i = s [ i ] ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "cout << ctr ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        2,
        4
      ],
      "mod_code": [
        "cout << ctr ;",
        "s >> s ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        2,
        4,
        9
      ],
      "mod_code": [
        "cout << ctr ;",
        "s >> s ;",
        "char * = char ( * a ) ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        2,
        9
      ],
      "mod_code": [
        "cout << ctr ;",
        "s >> s ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "cout << ctr ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "cout << ctr ;",
        "char * = char ( * a ) ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "cout << ctr ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char* i’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "char * = char ( * a ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "char * = char ( * a ) ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "char * = char ( * a ) ;",
        "char * i = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘=’ token"
    }
  ]
}