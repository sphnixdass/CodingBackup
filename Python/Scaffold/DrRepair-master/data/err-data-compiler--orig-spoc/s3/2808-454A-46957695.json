{
  "meta": {
    "index": 2808,
    "hitid": "3JTPR5MTZS66J2SJS3V6R7Y2G9BK5U",
    "workerid": "AIWEXPJAU66D9",
    "probid": "454A",
    "subid": "46957695"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "new integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n from the user input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "in a for loop , change i from 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop through j from 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "define new integer called p with value i",
      "code": "int p = i ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "if p > = n / 2 + 1",
      "code": "if ( p >= n / 2 + 1 )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "assign p - n / 2 to p",
      "code": "p = p - n / 2 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "change p to n / 2 - p",
      "code": "p = n / 2 - p ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if j > = n / 2 - p and j < = n / 2 + p",
      "code": "if ( j >= n / 2 - p && j <= n / 2 + p )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print \" * \"",
      "code": "cout << \" * \" ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if j is equal to n - 1 , print \" \\ n \"",
      "code": "if ( j == n - 1 ) { cout << \" \\n \" ; }",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        2,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        2,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        11,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "puts ( \" D \" ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        11,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "puts ( \" D \" ) ;",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        12,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "do",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j == n - 1 ) continue ;",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        11,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;",
        "puts ( \" D \" ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        11,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;",
        "puts ( \" D \" ) ;",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        12,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;",
        "do",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "puts ( \" D \" ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "puts ( \" D \" ) ;",
        "do",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "puts ( \" D \" ) ;",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "do",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" * \""
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        15,
        2,
        11
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        15,
        2,
        11,
        12
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;",
        "puts ( \" D \" ) ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        15,
        2,
        11,
        13
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;",
        "puts ( \" D \" ) ;",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        2,
        12
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        15,
        2,
        12,
        13
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;",
        "do",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        2,
        13
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "{ cin >> n ;",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        11,
        12
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "puts ( \" D \" ) ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        15,
        11,
        12,
        13
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "puts ( \" D \" ) ;",
        "do",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        11,
        13
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "puts ( \" D \" ) ;",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        15,
        12,
        13
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "do",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "if ( j == n - 1 ) continue ;",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "{ cin >> n ;",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        11,
        12
      ],
      "mod_code": [
        "{ cin >> n ;",
        "puts ( \" D \" ) ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        2,
        11,
        12,
        13
      ],
      "mod_code": [
        "{ cin >> n ;",
        "puts ( \" D \" ) ;",
        "do",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        11,
        13
      ],
      "mod_code": [
        "{ cin >> n ;",
        "puts ( \" D \" ) ;",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "{ cin >> n ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        2,
        12,
        13
      ],
      "mod_code": [
        "{ cin >> n ;",
        "do",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "{ cin >> n ;",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "puts ( \" D \" ) ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        11,
        12,
        13
      ],
      "mod_code": [
        "puts ( \" D \" ) ;",
        "do",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "puts ( \" D \" ) ;",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "do",
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    }
  ]
}