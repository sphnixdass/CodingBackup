{
  "meta": {
    "index": 2179,
    "hitid": "3LN50BUKPV5LWISKXIGL4DGYVMGPLC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "330A",
    "subid": "49075113"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let vis be boolean array with size 2 by 16 filled with 0",
      "code": "bool vis [ 2 ] [ 16 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer variables n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare character variable ch",
      "code": "char ch ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read ch",
      "code": "cin >> ch ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if ch = ' S ' , set vis [ 0 ] [ i ] and vis [ 1 ] [ j ] to 1",
      "code": "if ( ch == ' S ' ) vis [ 0 ] [ i ] = 1 , vis [ 1 ] [ j ] = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let chn , chm and ans be integers with chn = n and chm = m",
      "code": "int chn = n , chm = m , ans ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if vis [ 0 ] [ i ] = 1 decrement chn",
      "code": "if ( vis [ 0 ] [ i ] == 1 ) chn -- ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if vis [ 1 ] [ i ] = 1 decrement chm",
      "code": "if ( vis [ 1 ] [ i ] == 1 ) chm -- ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "ans = ( chn * m ) + ( chm * n ) - ( chn * chm )",
      "code": "ans = ( chn * m ) + ( chm * n ) - ( chn * chm ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool vis [ 2 ] = { 0 } ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char ch )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        7
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        7,
        8
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        7,
        3
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        7,
        15
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        8
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        8,
        3
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        8,
        15
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        3
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        3,
        15
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15
      ],
      "mod_code": [
        "char ch )",
        "for ( i = 0 ; i < m ; i ++ )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "char ch )",
        "ch = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "char ch )",
        "ch = getchar ( ) ;",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        3
      ],
      "mod_code": [
        "char ch )",
        "ch = getchar ( ) ;",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        15
      ],
      "mod_code": [
        "char ch )",
        "ch = getchar ( ) ;",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "char ch )",
        "ch = getchar ( ) ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        15
      ],
      "mod_code": [
        "char ch )",
        "ch = getchar ( ) ;",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        7,
        15
      ],
      "mod_code": [
        "char ch )",
        "ch = getchar ( ) ;",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "char ch )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        8,
        3
      ],
      "mod_code": [
        "char ch )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        8,
        3,
        15
      ],
      "mod_code": [
        "char ch )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15
      ],
      "mod_code": [
        "char ch )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "char ch )",
        "while ( cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        3,
        15
      ],
      "mod_code": [
        "char ch )",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "char ch )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        8,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        8,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        3,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "ch = getchar ( ) ;",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        8,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        3,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        3
      ],
      "mod_code": [
        "ch = getchar ( ) ;",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        3,
        15
      ],
      "mod_code": [
        "ch = getchar ( ) ;",
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "ch = getchar ( ) ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        15
      ],
      "mod_code": [
        "ch = getchar ( ) ;",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        15
      ],
      "mod_code": [
        "if ( ch == ' S ' ) vis [ 0 ] [ i ] = vis [ 0 ] [ j ] = 1 ;",
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "ans = ( chn * m ) + ( chm * n ) - ( chm * chm ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘ch’ was not declared in this scope"
    }
  ]
}