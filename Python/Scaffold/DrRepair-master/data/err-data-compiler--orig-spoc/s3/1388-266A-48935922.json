{
  "meta": {
    "index": 1388,
    "hitid": "34R3P23QHSV9UV6VIJFI4FVN728WH5",
    "workerid": "A1APYLD4DUK33J",
    "probid": "266A",
    "subid": "48935922"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers c , leg with c = 0",
      "code": "int c = 0 , leg ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read leg",
      "code": "cin >> leg ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to leg - 1 exclusive",
      "code": "for ( int i = 0 ; i < leg - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if character at position i in str is character at position i + 1 in str , increment c",
      "code": "if ( str . at ( i ) == str . at ( i + 1 ) ) c ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print c print newline",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’)"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "cin . get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’)"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        4
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "cin . get ( ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "cin . get ( ) ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        6,
        4,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        6,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        4
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "cin . get ( ) ;",
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "cin . get ( ) ;",
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "cin . get ( ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "cin . get ( ) ;",
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "cin . get ( ) ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        6,
        4,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        6,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int c , leg = 0 ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "cin . get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’)"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "cin . get ( ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        2
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "cin . get ( ) ;",
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "cin . get ( ) ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == str . end ( ) ) c ++ ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        6,
        4,
        2
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( str . at ( i + 1 ) == 0 ) c ++ ;",
        "int str ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘str’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}