{
  "meta": {
    "index": 1851,
    "hitid": "322ZSN9Z5GENQ2E687QON6FKY39T4V",
    "workerid": "AIWEXPJAU66D9",
    "probid": "447A",
    "subid": "47702475"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "p , n , z and ele are integers where z = - 1",
      "code": "int p , n , z = - 1 , ele ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read p and n",
      "code": "cin >> p >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let arr be integer array with size p",
      "code": "int arr [ p ] = { } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read ele",
      "code": "cin >> ele ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if arr [ ele % p ] is not 0",
      "code": "if ( arr [ ele % p ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set value of z to i + 1",
      "code": "z = i + 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment arr [ ele % p ]",
      "code": "arr [ ele % p ] ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print z and \" \\ n \"",
      "code": "cout << z << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> p >> n )"
      ],
      "err_line": 6,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "int arr [ p ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "int arr [ p ] ;",
        "while ( cin >> p >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        3,
        2,
        8
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "int arr [ p ] ;",
        "while ( cin >> p >> n )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        3,
        2,
        10
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "int arr [ p ] ;",
        "while ( cin >> p >> n )",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "int arr [ p ] ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        10
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "int arr [ p ] ;",
        "do",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "int arr [ p ] ;",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "while ( cin >> p >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "while ( cin >> p >> n )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        10
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "while ( cin >> p >> n )",
        "do",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "while ( cin >> p >> n )",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "do",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int p , n , z , z = - 1 ;",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "while ( cin >> p >> n )"
      ],
      "err_line": 6,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "while ( cin >> p >> n )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        8,
        10
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "while ( cin >> p >> n )",
        "do",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        8,
        1
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "while ( cin >> p >> n )",
        "do",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        3,
        2,
        10
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "while ( cin >> p >> n )",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        10,
        1
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "while ( cin >> p >> n )",
        "arr [ ele % l ] ++ ;",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "while ( cin >> p >> n )",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        10
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "do",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        1
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "do",
        "arr [ ele % l ] ++ ;",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        3,
        8,
        1
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "do",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        1
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "arr [ ele % l ] ++ ;",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int arr [ p ] ;",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        10
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "do",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        1
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "do",
        "arr [ ele % l ] ++ ;",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        2,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "do",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        1
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "arr [ ele % l ] ++ ;",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "while ( cin >> p >> n )",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "do",
        "arr [ ele % l ] ++ ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        1
      ],
      "mod_code": [
        "do",
        "arr [ ele % l ] ++ ;",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "do",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "arr [ ele % l ] ++ ;",
        "int p , n , z , ele , ele ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ele’"
    }
  ]
}