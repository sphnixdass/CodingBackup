{
  "meta": {
    "index": 1152,
    "hitid": "3FW4EL5A3LIJ3P56LEN4T49WFZR22I",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "938A",
    "subid": "48468122"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function is_vowel taking a char c and returning a bool",
      "code": "bool is_vowel ( char c )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if c is a lowercase vowel including y",
      "code": "if ( c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' || c == ' y ' )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return false",
      "code": "return false ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read n then s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if is_vowel of s [ i ] and is_vowel of s [ i + 1 ] are both true",
      "code": "if ( is_vowel ( s [ i ] ) && is_vowel ( s [ i + 1 ] ) )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "erase char at position i + 1 in s",
      "code": "s . erase ( i + 1 , 1 ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "decrement i",
      "code": "i -- ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if i + 1 is length of s then break loop",
      "code": "if ( i + 1 == s . length ( ) ) { break ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print s",
      "code": "cout << s << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "s . erase ( i + 1 , s ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        13,
        4
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "s . erase ( i + 1 , s ) ;",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        13,
        4,
        8
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "s . erase ( i + 1 , s ) ;",
        "else",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        13,
        4,
        18
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "s . erase ( i + 1 , s ) ;",
        "else",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        13,
        8
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "s . erase ( i + 1 , s ) ;",
        "char n ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        13,
        8,
        18
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "s . erase ( i + 1 , s ) ;",
        "char n ;",
        "cout << s ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        13,
        18
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "s . erase ( i + 1 , s ) ;",
        "cout << s ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        4,
        8
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "else",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        18
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "else",
        "char n ;",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        4,
        18
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' 9 ' )",
        "else",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        4,
        8
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "else",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        4,
        8,
        1
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "else",
        "char n ;",
        "if ( c >= ' a ' || c <= ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        4,
        8,
        18
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "else",
        "char n ;",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        4,
        1
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "else",
        "if ( c >= ' a ' || c <= ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        4,
        1,
        18
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "else",
        "if ( c >= ' a ' || c <= ' 9 ' )",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        4,
        18
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "else",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "char n ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        8,
        1
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "char n ;",
        "if ( c >= ' a ' || c <= ' 9 ' )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        8,
        1,
        18
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "char n ;",
        "if ( c >= ' a ' || c <= ' 9 ' )",
        "cout << s ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        8,
        18
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "char n ;",
        "cout << s ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "if ( c >= ' a ' || c <= ' 9 ' )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        1,
        18
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "if ( c >= ' a ' || c <= ' 9 ' )",
        "cout << s ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "s . erase ( i + 1 , s ) ;",
        "cout << s ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "else",
        "char n ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        8,
        1
      ],
      "mod_code": [
        "else",
        "char n ;",
        "if ( c >= ' a ' || c <= ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        8,
        1,
        18
      ],
      "mod_code": [
        "else",
        "char n ;",
        "if ( c >= ' a ' || c <= ' 9 ' )",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        8,
        18
      ],
      "mod_code": [
        "else",
        "char n ;",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "else",
        "if ( c >= ' a ' || c <= ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        1,
        18
      ],
      "mod_code": [
        "else",
        "if ( c >= ' a ' || c <= ' 9 ' )",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "else",
        "cout << s ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}