{
  "meta": {
    "index": 298,
    "hitid": "3IZPORCT1F34MZP9JP5CHGN6GAPRH4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "546A",
    "subid": "49105684"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers i , n , t , k and w",
      "code": "int i , n , t , k , w ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare long long sum = 0",
      "code": "long long sum = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read k , n and w",
      "code": "cin >> k >> n >> w ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "increase sum by i * k w times",
      "code": "for ( i = 1 ; i <= w ; i ++ ) { sum = sum + ( i * k ) ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if sum < = n",
      "code": "if ( sum <= n )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print 0 and \" \\ n \"",
      "code": "cout << 0 << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print sum - n and \" \\ n \"",
      "code": "cout << sum - n << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else if ( sum <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        3,
        5
      ],
      "mod_code": [
        "sum += ( i * k ) ;",
        "cin >> k >> k >> w ;",
        "else if ( sum <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        3,
        5,
        7
      ],
      "mod_code": [
        "sum += ( i * k ) ;",
        "cin >> k >> k >> w ;",
        "else if ( sum <= n )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        3,
        7
      ],
      "mod_code": [
        "sum += ( i * k ) ;",
        "cin >> k >> k >> w ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "sum += ( i * k ) ;",
        "else if ( sum <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "sum += ( i * k ) ;",
        "else if ( sum <= n )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "sum += ( i * k ) ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin >> k >> k >> w ;",
        "else if ( sum <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "cin >> k >> k >> w ;",
        "else if ( sum <= n )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        4
      ],
      "mod_code": [
        "cin >> k >> k >> w ;",
        "else if ( sum <= n )",
        "do",
        "sum += i * k ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "cin >> k >> k >> w ;",
        "else if ( sum <= n )",
        "sum += i * k ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "cin >> k >> k >> w ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "cin >> k >> k >> w ;",
        "do",
        "sum += i * k ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "else if ( sum <= n )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "else if ( sum <= n )",
        "do",
        "sum += i * k ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "else if ( sum <= n )",
        "sum += i * k ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "do",
        "sum += i * k ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}