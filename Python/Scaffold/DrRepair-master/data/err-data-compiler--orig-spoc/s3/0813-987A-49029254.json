{
  "meta": {
    "index": 813,
    "hitid": "30Z7M1Q8UYEJU72ZEAPK9D5XDNG8A3",
    "workerid": "A1APYLD4DUK33J",
    "probid": "987A",
    "subid": "49029254"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string array a size 6",
      "code": "string a [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare string array b size 6",
      "code": "string b [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let a [ 0 ] be \" purple \"",
      "code": "a [ 0 ] = \" purple \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let b [ 0 ] be \" Power \"",
      "code": "b [ 0 ] = \" Power \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let a [ 1 ] be \" green \"",
      "code": "a [ 1 ] = \" green \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let b [ 1 ] be \" Time \"",
      "code": "b [ 1 ] = \" Time \" ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let a [ 2 ] be \" blue \"",
      "code": "a [ 2 ] = \" blue \" ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let b [ 2 ] be \" Space \"",
      "code": "b [ 2 ] = \" Space \" ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let a [ 3 ] be \" orange \"",
      "code": "a [ 3 ] = \" orange \" ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let b [ 3 ] be \" Soul \"",
      "code": "b [ 3 ] = \" Soul \" ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let a [ 4 ] be \" red \"",
      "code": "a [ 4 ] = \" red \" ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "let b [ 4 ] be \" Reality \"",
      "code": "b [ 4 ] = \" Reality \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "let a [ 5 ] be \" yellow \"",
      "code": "a [ 5 ] = \" yellow \" ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "let b [ 5 ] be \" Mind \"",
      "code": "b [ 5 ] = \" Mind \" ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "declare integer count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "declare integer size",
      "code": "int size ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read size",
      "code": "cin >> size ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "declare string pointer x",
      "code": "string * x ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "let x be new string array size size",
      "code": "x = new string [ size ] ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to size exclusive , read x [ i ]",
      "code": "for ( int i = 0 ; i < size ; i ++ ) { cin >> x [ i ] ; }",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to size exclusive",
      "code": "for ( int i = 0 ; i < size ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for j = 0 to 6 exclusive",
      "code": "for ( int j = 0 ; j < 6 ; j ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if x [ i ] is a [ j ] , let b [ j ] be \" 00 \"",
      "code": "if ( x [ i ] == a [ j ] ) { b [ j ] = \" 00 \" ; }",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "for i = 0 to 6 exclusive",
      "code": "for ( int i = 0 ; i < 6 ; i ++ )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if b [ i ] is not \" 00 \" , increment count",
      "code": "if ( b [ i ] != \" 00 \" ) count ++ ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print count and newline",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for i = 0 to 6 exclusive",
      "code": "for ( int i = 0 ; i < 6 ; i ++ )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if b [ i ] is not \" 00 \" , print b [ i ] and newline",
      "code": "if ( b [ i ] != \" 00 \" ) { cout << b [ i ] << endl ; }",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "string x [ size ] ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "b [ 0 ] = ' Power \" ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "a [ 2 ] = ' blue \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "a [ i ] = \" red \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int size ( )"
      ],
      "err_line": 17,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "string x ;"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "string x [ 5 ] ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [5]’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < size ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( j = 0 ; j < 6 ; j ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" [ j ] ;"
      ],
      "err_line": 23,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "for ( i = 0 ; i < 6 ; i ++ )"
      ],
      "err_line": 26,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "for ( i = 0 ; i < 6 ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        23
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        23,
        7
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        23,
        7,
        22
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        23,
        7,
        3
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        23,
        7,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        23,
        22
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        23,
        22,
        3
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        23,
        22,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        23,
        3
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        23,
        3,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 0 ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        23,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "string x [ size ] ;",
        "a [ 2 ] = ' blue \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        7,
        22
      ],
      "mod_code": [
        "string x [ size ] ;",
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        7,
        22,
        3
      ],
      "mod_code": [
        "string x [ size ] ;",
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        7,
        22,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        7,
        3
      ],
      "mod_code": [
        "string x [ size ] ;",
        "a [ 2 ] = ' blue \" ;",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        7,
        3,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "a [ 2 ] = ' blue \" ;",
        "a [ 0 ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        7,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "a [ 2 ] = ' blue \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        19,
        22
      ],
      "mod_code": [
        "string x [ size ] ;",
        "for ( j = 0 ; j < 6 ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        22,
        3
      ],
      "mod_code": [
        "string x [ size ] ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        22,
        3,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        22,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "string x [ size ] ;",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        3,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "a [ 0 ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        19,
        12
      ],
      "mod_code": [
        "string x [ size ] ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::__cxx11::string x [size]’"
    },
    {
      "mod_line": [
        23,
        7
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        23,
        7,
        22
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        23,
        7,
        22,
        3
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        23,
        7,
        22,
        12
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        23,
        7,
        3
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        23,
        7,
        3,
        12
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;",
        "a [ 0 ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        23,
        7,
        12
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "a [ 2 ] = ' blue \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        23,
        22
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        22,
        3
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        22,
        3,
        12
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        22,
        12
      ],
      "mod_code": [
        "if ( x [ i ] == a [ j ] ) b [ j ] = \" \\0 \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        22
      ],
      "mod_code": [
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        22,
        3
      ],
      "mod_code": [
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        22,
        3,
        12
      ],
      "mod_code": [
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        22,
        12
      ],
      "mod_code": [
        "a [ 2 ] = ' blue \" ;",
        "for ( j = 0 ; j < 6 ; j ++ )",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "a [ 2 ] = ' blue \" ;",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        3,
        12
      ],
      "mod_code": [
        "a [ 2 ] = ' blue \" ;",
        "a [ 0 ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "a [ 2 ] = ' blue \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        22,
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        3,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < 6 ; j ++ )",
        "a [ 0 ] = \" \\0 \" ;",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < 6 ; j ++ )",
        "b [ 4 ] = \" \\0 \" ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}