{
  "meta": {
    "index": 2323,
    "hitid": "3GV1I4SEO9JDMCAFIMHCYDPH0HS6LP",
    "workerid": "AIWEXPJAU66D9",
    "probid": "117A",
    "subid": "41382175"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer seed = 131",
      "code": "const int seed = 131 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant integer maxn = 1200",
      "code": "const int maxn = 1200 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers p , s , f , t and x",
      "code": "int p , s , f , t , x ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "p = ( m - 1 ) * 2",
      "code": "p = ( m - 1 ) * 2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while n is > 0 , decrement it and continue the loop",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read s , f and t",
      "code": "cin >> s >> f >> t ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s = f",
      "code": "if ( s == f )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "x = t / p * p + ( s < f ? s - 1 : 2 * m - 1 - s )",
      "code": "x = t / p * p + ( s < f ? s - 1 : 2 * m - 1 - s ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print ( x + p if x < t , else x ) + ( f - s if f > s , else s - f )",
      "code": "cout << ( x < t ? x + p : x ) + ( f > s ? f - s : s - f ) << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const seed = 131 ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int p = ( m - 1 ) * 2 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "while ( -- n -- )"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘:’ token"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "const seed = 131 ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        6
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        6,
        7
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        6,
        9
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        7
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "const seed = 131 ;",
        "while ( -- n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        7,
        9
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "const seed = 131 ;",
        "while ( -- n -- )",
        "if ( s == ' f ' )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        9
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "const seed = 131 ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "int p = ( m - 1 ) * 2 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        13,
        6,
        7
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        13,
        6,
        7,
        9
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )",
        "if ( s == ' f ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        13,
        6,
        9
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "int p = ( m - 1 ) * 2 ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "while ( -- n -- )"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        13,
        7,
        9
      ],
      "mod_code": [
        "cout << ( x < t ? ( x + s ? ( f - s ) : f - s ) : s - f ) << endl ;",
        "while ( -- n -- )",
        "if ( s == ' f ' )"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        7
      ],
      "mod_code": [
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        7,
        9
      ],
      "mod_code": [
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )",
        "if ( s == ' f ' )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        7,
        13
      ],
      "mod_code": [
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        9
      ],
      "mod_code": [
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        9,
        13
      ],
      "mod_code": [
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;",
        "if ( s == ' f ' )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        13
      ],
      "mod_code": [
        "const seed = 131 ;",
        "int p = ( m - 1 ) * 2 ;",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "const seed = 131 ;",
        "while ( -- n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        7,
        9
      ],
      "mod_code": [
        "const seed = 131 ;",
        "while ( -- n -- )",
        "if ( s == ' f ' )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        13
      ],
      "mod_code": [
        "const seed = 131 ;",
        "while ( -- n -- )",
        "if ( s == ' f ' )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        7,
        13
      ],
      "mod_code": [
        "const seed = 131 ;",
        "while ( -- n -- )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "const seed = 131 ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "const seed = 131 ;",
        "if ( s == ' f ' )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "const seed = 131 ;",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘seed’ does not name a type"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )",
        "if ( s == ' f ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        13
      ],
      "mod_code": [
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )",
        "if ( s == ' f ' )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        7,
        13
      ],
      "mod_code": [
        "int p = ( m - 1 ) * 2 ;",
        "while ( -- n -- )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "int p = ( m - 1 ) * 2 ;",
        "if ( s == ' f ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "int p = ( m - 1 ) * 2 ;",
        "if ( s == ' f ' )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "int p = ( m - 1 ) * 2 ;",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "while ( -- n -- )",
        "if ( s == ' f ' )"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        7,
        9,
        13
      ],
      "mod_code": [
        "while ( -- n -- )",
        "if ( s == ' f ' )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "while ( -- n -- )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "if ( s == ' f ' )",
        "cout << ( x < t ) ? ( x + s ? ( f - s ) : ( f - f ) : s - f ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘:’ token"
    }
  ]
}