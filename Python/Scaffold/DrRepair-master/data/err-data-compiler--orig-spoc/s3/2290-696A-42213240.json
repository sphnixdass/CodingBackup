{
  "meta": {
    "index": 2290,
    "hitid": "37NXA7GVST0Y12PGJUPKA55GIXJVLG",
    "workerid": "A1AYVATMT88U1W",
    "probid": "696A",
    "subid": "42213240"
  },
  "lines": [
    {
      "line": 0,
      "text": "the constant integer value of MAX = 3e5 + 5",
      "code": "const int MAX = 3e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "the constant long integer value of MAX1 = 1e5 + 9",
      "code": "const long long int MAX1 = 1e5 + 9 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "the constant long integer value of inf = 1e18",
      "code": "const long long int inf = 1e18 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "the constant long integer value of mod = 1e9 + 7",
      "code": "const long long int mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "st = 2d array of strings of MAX rows and 2 columns",
      "code": "string st [ MAX ] [ 2 ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "let cmp is a function that accepts pair values from int to int for & a and pair values from int to int for & b and returns a boolean value",
      "code": "bool cmp ( pair < int , int > & a , pair < int , int > & b )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "return a . first is greater than b . first",
      "code": "return ( a . first > b . first ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "mp = map from long long int to long long int",
      "code": "map < long long int , long long int > mp ;",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "let n , m , q be long integers",
      "code": "long long int n , m , q ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read q",
      "code": "cin >> q ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while q is decremented by 1",
      "code": "while ( q -- )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "let t be a integer",
      "code": "int t ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if t is equal to 1",
      "code": "if ( t == 1 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "let w be a long integer",
      "code": "long long int w ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "read n , m , w",
      "code": "cin >> n >> m >> w ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "while n is not equal to w",
      "code": "while ( n != m )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if n is less than m , swap the values of n and m",
      "code": "if ( n < m ) swap ( n , m ) ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "increment mp [ n ] by w",
      "code": "mp [ n ] += w ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "divide n by 2",
      "code": "n /= 2 ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "the long integer value of ans = 0",
      "code": "long long int ans = 0 ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "while n is not equal to m",
      "code": "while ( n != m )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "if n is less than m , swap the values of n and m",
      "code": "if ( n < m ) swap ( n , m ) ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "increment ans by mp [ n ]",
      "code": "ans += mp [ n ] ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "divide n by 2",
      "code": "n /= 2 ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 31,
      "text": "print ans and newline",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int MAX += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int b , int b )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "return a . first > b . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘struct std::pair<int, int>’ has no member named ‘size’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << cin >> q ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( -- q -- )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 33,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 28,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != w )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18,
        4
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != w )",
        "string st [ MAX ] [ 2 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18,
        4,
        12
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != w )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( -- q -- )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18,
        4,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != w )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18,
        12
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != w )",
        "while ( -- q -- )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18,
        12,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != w )",
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != w )",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "string st [ MAX ] [ 2 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        4,
        18
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( n != ' w ' )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        4,
        18,
        12
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( n != ' w ' )",
        "while ( -- q -- )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        4,
        18,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( n != ' w ' )",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        4,
        12
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( -- q -- )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        4,
        12,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        4,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != ' w ' )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18,
        12
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != ' w ' )",
        "while ( -- q -- )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18,
        12,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != ' w ' )",
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        18,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n != ' w ' )",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( -- q -- )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        12,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        5,
        26
      ],
      "mod_code": [
        "bool cmp ( pair < int > a , int a , int b )",
        "while ( n )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        18,
        4,
        12
      ],
      "mod_code": [
        "while ( n != w )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( -- q -- )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        18,
        4,
        12,
        26
      ],
      "mod_code": [
        "while ( n != w )",
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        18,
        12
      ],
      "mod_code": [
        "while ( n != w )",
        "while ( -- q -- )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        18,
        12,
        26
      ],
      "mod_code": [
        "while ( n != w )",
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        4,
        18,
        12
      ],
      "mod_code": [
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( n != ' w ' )",
        "while ( -- q -- )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        4,
        18,
        12,
        26
      ],
      "mod_code": [
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( n != ' w ' )",
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( -- q -- )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        4,
        12,
        26
      ],
      "mod_code": [
        "string st [ MAX ] [ 2 ] = { 0 } ;",
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        18,
        12
      ],
      "mod_code": [
        "while ( n != ' w ' )",
        "while ( -- q -- )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        18,
        12,
        26
      ],
      "mod_code": [
        "while ( n != ' w ' )",
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        12,
        26
      ],
      "mod_code": [
        "while ( -- q -- )",
        "while ( n )"
      ],
      "err_line": 12,
      "err_msg": "lvalue required as decrement operand"
    }
  ]
}