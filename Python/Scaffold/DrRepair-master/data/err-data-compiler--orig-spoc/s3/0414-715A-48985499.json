{
  "meta": {
    "index": 414,
    "hitid": "3ABAOCJ4R8YQ2CBKX7WP4VLX1ANMQ8",
    "workerid": "A1APYLD4DUK33J",
    "probid": "715A",
    "subid": "48985499"
  },
  "lines": [
    {
      "line": 0,
      "text": "create double PI with PI = 3 . 14159265358979323846",
      "code": "double PI = 3.14159265358979323846 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer array rx with size 8 with rx = { 1 , 1 , 1 , - 1 , - 1 , - 1 , 0 , 0 }",
      "code": "int rx [ 8 ] = { 1 , 1 , 1 , - 1 , - 1 , - 1 , 0 , 0 } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer array ry with size 8 with ry = { 0 , - 1 , 1 , 0 , - 1 , 1 , 1 , - 1 }",
      "code": "int ry [ 8 ] = { 0 , - 1 , 1 , 0 , - 1 , 1 , 1 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer months with size 13 with months = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 }",
      "code": "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 } ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare sabc with doubles a1 , a2 , a3 , b1 , b2 , b3 as arguments , returning double",
      "code": "double sabc ( double a1 , double a2 , double a3 , double b1 , double b2 , double b3 )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create double g with g = ( ( a1 - a3 ) * ( b2 - b3 ) - ( b1 - b3 ) * ( a2 - a3 ) ) / 2",
      "code": "double g = ( ( a1 - a3 ) * ( b2 - b3 ) - ( b1 - b3 ) * ( a2 - a3 ) ) / 2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return absolute value of g from function",
      "code": "return abs ( g ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create long longs n , x , h , ii , h1 , h2",
      "code": "long long n , x , h , ii , h1 , h2 ;",
      "indent": 0
    },
    {
      "line": 9,
      "text": "declare gcd with long longs a , b as arguments , returning long long",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "if b is 0",
      "code": "if ( b == 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return a from function",
      "code": "return a ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return result of run gcd with b , a % b as arguments",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 16,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set x to 2",
      "code": "x = 2 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 1 to n inclusive",
      "code": "for ( long long i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set ii to i",
      "code": "ii = i ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set h1 to result of run gcd with i + 1 , ii as arguments",
      "code": "h1 = gcd ( i + 1 , ii ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set ii to ii / h1",
      "code": "ii /= h1 ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set h1 to result of run gcd with i + 1 , ii as arguments",
      "code": "h2 = gcd ( i + 1 , ii ) ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "set ii to ii / h1",
      "code": "ii /= h2 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "create long long ans with ans = ii",
      "code": "long long ans = ii ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "set h to ( i + 1 ) / h1 * ( i + 1 ) / h2 * ans - ( i - 1 )",
      "code": "h = ( i + 1 ) / h1 * ( i + 1 ) / h2 * ans - ( i - 1 ) ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if i is 1",
      "code": "if ( i == 1 )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "print 2 print newline",
      "code": "cout << 2 << endl ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 29,
      "text": "print h print newline",
      "code": "cout << h << endl ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int rx [ 8 ] = { 1 , 1 , 1 , 1 , - 1 , - 1 , 0 , 0 , 0 } ;"
      ],
      "err_line": 1,
      "err_msg": "too many initializers for ‘int [8]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b2 , b2 , b3 )"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "return abs ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘abs()’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 16,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        4,
        22
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "h1 = gcd ( i + 1 , ii ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        4,
        22,
        28
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "h1 = gcd ( i + 1 , ii ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        4,
        22,
        9
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "h1 = gcd ( i + 1 , ii ) ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        4,
        28
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        4,
        28,
        9
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        4,
        28,
        22
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "do",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        22
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "long long gcd ( long long a , long long b ) ;",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        4,
        22
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        22
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "h1 = gcd ( i + 1 , ii ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        22,
        28
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "h1 = gcd ( i + 1 , ii ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        22,
        28,
        9
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "h1 = gcd ( i + 1 , ii ) ;",
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        22,
        9
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "h1 = gcd ( i + 1 , ii ) ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        28
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        28,
        9
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        28,
        9,
        22
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "do",
        "long long gcd ( long long a , long long b ) ;",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        28,
        22
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "do",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        9,
        22
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "long long gcd ( long long a , long long b ) ;",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        3,
        22
      ],
      "mod_code": [
        "int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 , 30 } ;",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "too many initializers for ‘int [13]’"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "h1 = gcd ( i + 1 , ii ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        22,
        28
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "h1 = gcd ( i + 1 , ii ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        22,
        28,
        9
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "h1 = gcd ( i + 1 , ii ) ;",
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        22,
        9
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "h1 = gcd ( i + 1 , ii ) ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        28,
        9
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        28,
        9,
        22
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "do",
        "long long gcd ( long long a , long long b ) ;",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        28,
        22
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "do",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        9,
        22
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "long long gcd ( long long a , long long b ) ;",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "double sabc ( double a1 , a2 , a3 , b1 , b2 , b3 )",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a2’ has not been declared"
    },
    {
      "mod_line": [
        22,
        28
      ],
      "mod_code": [
        "h1 = gcd ( i + 1 , ii ) ;",
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        28,
        9
      ],
      "mod_code": [
        "h1 = gcd ( i + 1 , ii ) ;",
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        9
      ],
      "mod_code": [
        "h1 = gcd ( i + 1 , ii ) ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        9
      ],
      "mod_code": [
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        9,
        22
      ],
      "mod_code": [
        "do",
        "long long gcd ( long long a , long long b ) ;",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        22
      ],
      "mod_code": [
        "do",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "h1 = ( gcd ( i + 1 , ii ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}