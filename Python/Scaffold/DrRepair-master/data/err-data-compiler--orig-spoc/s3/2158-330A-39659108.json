{
  "meta": {
    "index": 2158,
    "hitid": "32CXT5U14GX39GGXKF6B9EHRJ39U8R",
    "workerid": "A1APYLD4DUK33J",
    "probid": "330A",
    "subid": "39659108"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m , cnt2 with cnt2 = 0",
      "code": "int n , m , cnt2 = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create 2d character array arr with size n by m",
      "code": "char arr [ n ] [ m ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to m exclusive , read arr [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < m ; j ++ ) { cin >> arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "create integer total with total = n * m",
      "code": "int total = n * m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "create integers cnt1 , cnt with cnt1 = 0 , cnt = 0",
      "code": "int cnt1 = 0 , cnt = 0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if arr [ i ] [ j ] is not ' S '",
      "code": "if ( arr [ i ] [ j ] != ' S ' )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "for c = 0 to m exclusive",
      "code": "for ( int c = 0 ; c < m ; c ++ )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "if arr [ i ] [ c ] is ' S ' , increment cnt",
      "code": "if ( arr [ i ] [ c ] == ' S ' ) { cnt ++ ; }",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "for r = 0 to n exclusive",
      "code": "for ( int r = 0 ; r < n ; r ++ )",
      "indent": 4
    },
    {
      "line": 15,
      "text": "if arr [ r ] [ j ] is ' S ' , increment cnt1",
      "code": "if ( arr [ r ] [ j ] == ' S ' ) { cnt1 ++ ; }",
      "indent": 5
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 17,
      "text": "if cnt1 is greater than 0 and cnt is greater than 0 , set arr [ i ] [ j ] to ' S '",
      "code": "if ( cnt1 > 0 && cnt > 0 ) { arr [ i ] [ j ] = ' S ' ; }",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if arr [ i ] [ j ] is ' . ' , increment cnt2",
      "code": "if ( arr [ i ] [ j ] == ' . ' ) { cnt2 ++ ; }",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print cnt2 print newline",
      "code": "cout << cnt2 << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int cnt1 = 0 , cnt = 0 , cnt ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        21
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        21,
        9
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        21,
        3
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        21,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "int cnt1 = 0 , cnt = 0 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        3
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        21,
        9
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        21,
        9,
        3
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        21,
        9,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        21,
        3
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        21,
        3,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        21,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "int cnt1 = 0 , cnt = 0 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        9,
        3,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        9,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , m , cnt2 , cnt2 = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        9,
        3
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        3
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        3,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int cnt1 = 0 , cnt = 0 , cnt ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        3
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        3,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        21,
        9,
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        21,
        9,
        3,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        3,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        9,
        3,
        8
      ],
      "mod_code": [
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "int cnt1 = 0 , cnt = 0 , cnt ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int arr [ n ] [ m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}