{
  "meta": {
    "index": 1641,
    "hitid": "3ZCC2DXSD7YZ5VRK7K1UBCB69TJYYE",
    "workerid": "A1APYLD4DUK33J",
    "probid": "224A",
    "subid": "47901463"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers m , n , p , sum = 0 , a , b , c",
      "code": "int m , n , p , sum = 0 , a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read m read n read p",
      "code": "cin >> m >> n >> p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let a be square root of p * m / n",
      "code": "a = sqrt ( p * m / n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let b be square root of m * n / p",
      "code": "b = sqrt ( m * n / p ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let b be square root of n * p / m",
      "code": "c = sqrt ( n * p / m ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let sum = 4 * ( a + b + c )",
      "code": "sum = 4 * ( a + b + c ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print sum print newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int m , n , p , sum , a , b , b , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int sum = 4 * ( a + b + c ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        5,
        3,
        1,
        6
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        5,
        3,
        1,
        4
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "a = sqrt ( p * m ) / n ;",
        "int sum = 4 * ( a + b + c ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        3,
        6,
        4
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "a = sqrt ( p * m ) / n ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "int m , n , p , sum , a , b , b , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        5,
        1,
        6
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        5,
        1,
        6,
        4
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        5,
        1,
        4
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "int m , n , p , sum , a , b , b , c ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "int sum = 4 * ( a + b + c ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "b = sqrt ( n * p / m ) ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        1,
        6,
        5
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( n * p ) / m ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        1,
        6,
        4
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;",
        "b = sqrt ( n * p ) / m ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        1,
        5,
        4
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;",
        "b = sqrt ( n * p ) / m ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        1,
        4
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int m , n , p , sum , a , b , b , c ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int sum = 4 * ( a + b + c ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( n * p ) / m ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        6,
        5,
        4
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( n * p ) / m ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "a = sqrt ( p * m ) / n ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( n * p ) / m ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        4
      ],
      "mod_code": [
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( n * p ) / m ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "int m , n , p , sum , a , b , b , c ;",
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int m , n , p , sum , a , b , b , c ;",
        "b = sqrt ( n * p ) / m ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "int m , n , p , sum , a , b , b , c ;",
        "b = sqrt ( n * p ) / m ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int m , n , p , sum , a , b , b , c ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( n * p ) / m ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( n * p ) / m ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "int sum = 4 * ( a + b + c ) ;",
        "b = sqrt ( m ) * n / p ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int sum’"
    }
  ]
}