{
  "meta": {
    "index": 2795,
    "hitid": "3FCO4VKOZ47IK6ESKAZ0RWZTNIA7EC",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "454A",
    "subid": "39054170"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = 1000x1000 char matrix",
      "code": "char a [ 1000 ] [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read char",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to n exclusive , set a [ i ] [ j ] = ' * '",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { a [ i ] [ j ] = ' * ' ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "k = 0 = int",
      "code": "int k = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = n / 2 to 1",
      "code": "for ( int i = n / 2 ; i >= 1 ; i -- )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = i to n exclusive , a [ k ] [ j ] = ' D '",
      "code": "for ( int j = i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set k to n / 2 + 1",
      "code": "k = ( n / 2 ) + 1 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 1 to n / 2 inclusive",
      "code": "for ( int i = 1 ; i <= n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for j = i to n - i exclusive , set a [ k ] [ j ] = ' D '",
      "code": "for ( int j = i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to n exclusive , set a [ n / 2 ] [ i ] = ' D '",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { a [ n / 2 ] [ i ] = ' D ' ; }",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to n exclusive , print a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cout << a [ i ] << endl ; }",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = n / 2 ; i >= 1 ; i -- )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        15,
        4
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        10,
        15,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        10,
        19,
        4
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        10,
        19,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        10,
        4
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        10,
        4,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        10,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        15,
        19,
        4
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        15,
        19,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        15,
        4
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        15,
        4,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        15,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        19,
        4
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        19,
        4,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        19,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        4,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "char a [ 110 ] [ 5 ] ;",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        4
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        8
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10,
        15,
        4
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        15,
        4,
        8
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        15,
        8
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10,
        19,
        4
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        19,
        4,
        8
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        19,
        8
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        4,
        8
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "for ( int j = i ; j < n ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        15,
        19,
        4
      ],
      "mod_code": [
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        19,
        4,
        8
      ],
      "mod_code": [
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        19,
        8
      ],
      "mod_code": [
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        4,
        8
      ],
      "mod_code": [
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "for ( int j = i - i ; j < n - i ; j ++ ) { a [ k ] [ j ] = ' D ' ; }",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        19,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        19,
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cout << a [ i ] ;",
        "int k , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "gets ( ) ;",
        "int k , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘char* gets(char*)’"
    }
  ]
}