{
  "meta": {
    "index": 1264,
    "hitid": "3SSN80MU8CIFLLCTY9E1JQPM98LKX4",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "1042A",
    "subid": "48526747"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "sum = integer = 0 , max = integer = - 1",
      "code": "int sum = 0 , max = - 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n , m = integer",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "temp = integer",
      "code": "int temp ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read temp",
      "code": "cin >> temp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if temp > max , then max = temp",
      "code": "if ( temp > max ) max = temp ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "sum = sum + temp",
      "code": "sum += temp ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "t = integer",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if ( sum + m ) modulo n is 0",
      "code": "if ( ( sum + m ) % n == 0 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "t = ( sum + m ) / n",
      "code": "t = ( sum + m ) / n ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "t = ( sum + m ) / n + 1",
      "code": "t = ( sum + m ) / n + 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if max > t , then t = max",
      "code": "if ( max > t ) t = max ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print t max + m",
      "code": "cout << t << \" \" << max + m << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        16,
        13,
        6
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "do",
        "cout << temp ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        16,
        13,
        6,
        12
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "do",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        13,
        6,
        14
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "do",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        13,
        12
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "do",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        13,
        12,
        14
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "do",
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        13,
        14
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "do",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        6,
        12
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        6,
        12,
        14
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "cout << temp ;",
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        6,
        14
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        12,
        14
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "cout << t + m << endl ;",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "do",
        "cout << t + m << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        13,
        16,
        6
      ],
      "mod_code": [
        "do",
        "cout << t + m << \" \\n \" ;",
        "cout << temp ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        13,
        16,
        6,
        12
      ],
      "mod_code": [
        "do",
        "cout << t + m << \" \\n \" ;",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        16,
        6,
        14
      ],
      "mod_code": [
        "do",
        "cout << t + m << \" \\n \" ;",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        16,
        12
      ],
      "mod_code": [
        "do",
        "cout << t + m << \" \\n \" ;",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        16,
        12,
        14
      ],
      "mod_code": [
        "do",
        "cout << t + m << \" \\n \" ;",
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        16,
        14
      ],
      "mod_code": [
        "do",
        "cout << t + m << \" \\n \" ;",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "do",
        "cout << temp ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        13,
        6,
        12
      ],
      "mod_code": [
        "do",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        6,
        12,
        14
      ],
      "mod_code": [
        "do",
        "cout << temp ;",
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        6,
        14
      ],
      "mod_code": [
        "do",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "do",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        12,
        14
      ],
      "mod_code": [
        "do",
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "do",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        6,
        12
      ],
      "mod_code": [
        "cout << t + m << \" \\n \" ;",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        6,
        12,
        14
      ],
      "mod_code": [
        "cout << t + m << \" \\n \" ;",
        "cout << temp ;",
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        6,
        14
      ],
      "mod_code": [
        "cout << t + m << \" \\n \" ;",
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "cout << t + m << \" \\n \" ;",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        12,
        14
      ],
      "mod_code": [
        "cout << t + m << \" \\n \" ;",
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "cout << t + m << \" \\n \" ;",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "cout << temp ;",
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "cout << temp ;",
        "t += m )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "t += m )",
        "t += m )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}