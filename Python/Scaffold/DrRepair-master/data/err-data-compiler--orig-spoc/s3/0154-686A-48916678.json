{
  "meta": {
    "index": 154,
    "hitid": "3RWB1RTQDJHQHB813T7HZ8USC9I8PL",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "686A",
    "subid": "48916678"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , m , dis = 0 , sum = 0 are long long integers",
      "code": "long long int n , k , m , dis = 0 , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character variable c",
      "code": "char c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to less than n do the following",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read c , m",
      "code": "cin >> c >> m ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if c is + then do the following",
      "code": "if ( c == ' + ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "k equals k plus m",
      "code": "k += m ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if m is greater than k then do the following",
      "code": "if ( m > k )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "add one to dis",
      "code": "dis ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 12,
      "text": "subtract m from k",
      "code": "k -= m ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "output k and dis",
      "code": "cout << k << \" \" << dis << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( m > k )"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( c == \" + \" )"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        3,
        5
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        3,
        5,
        11
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        3,
        5,
        2
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "cin >> m >> m ;",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        3,
        5,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        3,
        11
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        3,
        11,
        2
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "do",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        3,
        11,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        3,
        2
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        3,
        2,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        3,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> n , k ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        5,
        11
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        5,
        11,
        2
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> m >> m ;",
        "do",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        5,
        11,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> m >> m ;",
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        5,
        2
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> m >> m ;",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        5,
        2,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> m >> m ;",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "while ( m > k )",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "while ( m > k )",
        "do",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        11,
        2,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "do",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        11,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "while ( m > k )",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        2,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "while ( m > k )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "cin >> n , k ;",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        2
      ],
      "mod_code": [
        "cin >> n , k ;",
        "cin >> m >> m ;",
        "do",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "cin >> m >> m ;",
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "cin >> n , k ;",
        "cin >> m >> m ;",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "cin >> m >> m ;",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin >> n , k ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "cin >> n , k ;",
        "do",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        11,
        2,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "do",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        11,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> n , k ;",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        11,
        2
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "do",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        11,
        2,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "do",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        11,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "do",
        "char c )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        2,
        8
      ],
      "mod_code": [
        "do",
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "char c )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘)’ token"
    }
  ]
}