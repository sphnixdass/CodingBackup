{
  "meta": {
    "index": 529,
    "hitid": "36JW4WBR06E7J9K0SU5I0R9NDMJHF4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "630A",
    "subid": "41668297"
  },
  "lines": [
    {
      "line": 0,
      "text": "long long function Q_pow with long long arguments a and b",
      "code": "long long Q_pow ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long variable with name ans = 1",
      "code": "long long ans = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while b > 0",
      "code": "while ( b > 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if b is odd",
      "code": "if ( b % 2 == 1 )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "change a to the remainder of a divided by 100",
      "code": "a %= 100 ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "change ans to the ans modulo 100",
      "code": "ans %= 100 ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "set ans to ans multiplied by a",
      "code": "ans *= a ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "change a to a modulo 100",
      "code": "a %= 100 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "multiply a by a",
      "code": "a *= a ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "divide b by 2",
      "code": "b /= 2 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return ans % 100",
      "code": "return ans % 100 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "create long long variable n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read n and print the result of Q_pow ( 5 , n )",
      "code": "while ( cin >> n ) { cout << Q_pow ( 5 , n ) << endl ; }",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cin >> n >> Q_pow << Q_pow ( 5 , n ) ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int(long long int, long long int)’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long Q_pow ( long long a and long long b )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cin >> n >> Q_pow >> Q_pow ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int(long long int, long long int)’)"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "cin >> n >> Q_pow << Q_pow ( 5 , n ) ;",
        "long long Q_pow ( long long a and long long b )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        0,
        6
      ],
      "mod_code": [
        "cin >> n >> Q_pow << Q_pow ( 5 , n ) ;",
        "long long Q_pow ( long long a and long long b )",
        "ans = ans - a ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        0,
        6,
        4
      ],
      "mod_code": [
        "cin >> n >> Q_pow << Q_pow ( 5 , n ) ;",
        "long long Q_pow ( long long a and long long b )",
        "ans = ans - a ;",
        "a = a / 100 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        0,
        4
      ],
      "mod_code": [
        "cin >> n >> Q_pow << Q_pow ( 5 , n ) ;",
        "long long Q_pow ( long long a and long long b )",
        "a = a / 100 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "cin >> n >> Q_pow << Q_pow ( 5 , n ) ;",
        "ans = ans - a ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int(long long int, long long int)’)"
    },
    {
      "mod_line": [
        16,
        6,
        4
      ],
      "mod_code": [
        "cin >> n >> Q_pow << Q_pow ( 5 , n ) ;",
        "ans = ans - a ;",
        "a = a / 100 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int(long long int, long long int)’)"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "cin >> n >> Q_pow << Q_pow ( 5 , n ) ;",
        "a = a / 100 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int(long long int, long long int)’)"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "long long Q_pow ( long long a and long long b )",
        "ans = ans - a ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        6,
        4
      ],
      "mod_code": [
        "long long Q_pow ( long long a and long long b )",
        "ans = ans - a ;",
        "a = a / 100 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        6,
        4,
        16
      ],
      "mod_code": [
        "long long Q_pow ( long long a and long long b )",
        "ans = ans - a ;",
        "a = a / 100 ;",
        "cin >> n >> Q_pow >> Q_pow ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        6,
        16
      ],
      "mod_code": [
        "long long Q_pow ( long long a and long long b )",
        "ans = ans - a ;",
        "cin >> n >> Q_pow >> Q_pow ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "long long Q_pow ( long long a and long long b )",
        "a = a / 100 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        4,
        16
      ],
      "mod_code": [
        "long long Q_pow ( long long a and long long b )",
        "a = a / 100 ;",
        "cin >> n >> Q_pow >> Q_pow ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "long long Q_pow ( long long a and long long b )",
        "cin >> n >> Q_pow >> Q_pow ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        4,
        16
      ],
      "mod_code": [
        "ans = ans - a ;",
        "a = a / 100 ;",
        "cin >> n >> Q_pow >> Q_pow ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int(long long int, long long int)’)"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "ans = ans - a ;",
        "cin >> n >> Q_pow >> Q_pow ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int(long long int, long long int)’)"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "a = a / 100 ;",
        "cin >> n >> Q_pow >> Q_pow ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int(long long int, long long int)’)"
    }
  ]
}