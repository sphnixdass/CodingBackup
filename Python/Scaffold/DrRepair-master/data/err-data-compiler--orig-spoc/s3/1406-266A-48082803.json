{
  "meta": {
    "index": 1406,
    "hitid": "3IZVJEBJ6AEXR1RJXN8L6S0FFQWZ6X",
    "workerid": "AIWEXPJAU66D9",
    "probid": "266A",
    "subid": "48082803"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "Numberofstones is integer",
      "code": "int Numberofstones ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create string Input",
      "code": "string Input ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer variable called Output = 0",
      "code": "int Output = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read Numberofstones",
      "code": "cin >> Numberofstones ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read Input",
      "code": "cin >> Input ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 1 to length of Input inclusive",
      "code": "for ( int i = 1 ; i <= Input . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if Input [ i ] = Input [ i - 1 ]",
      "code": "if ( Input [ i ] == Input [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment Output",
      "code": "Output ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "remove 1 character at position i from Input",
      "code": "Input . erase ( i , 1 ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set i to 0",
      "code": "i = 0 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print Output and a new line",
      "code": "cout << Output << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "Input ( i , 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&, int)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string Input ( )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int const Output = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "Input ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&)’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "cin . get ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&, int)’"
    },
    {
      "mod_line": [
        9,
        5,
        3
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "cin . get ( ) ;",
        "int const Output = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        5,
        3,
        7
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "cin . get ( ) ;",
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        5,
        3,
        10
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "cin . get ( ) ;",
        "int const Output = 0 ;",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        5,
        7
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "cin . get ( ) ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&, int)’"
    },
    {
      "mod_line": [
        9,
        5,
        7,
        10
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "cin . get ( ) ;",
        "if ( ! Input [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&, int)’"
    },
    {
      "mod_line": [
        9,
        5,
        10
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "cin . get ( ) ;",
        "int i = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&, int)’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "int const Output = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        3,
        7
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        3,
        7,
        10
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        3,
        10
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "int const Output = 0 ;",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&, int)’"
    },
    {
      "mod_line": [
        9,
        7,
        10
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "if ( ! Input [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&, int)’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "Input ( i , 1 ) ;",
        "int i = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&, int)’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "Input ( i ) ;",
        "cin . get ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&)’"
    },
    {
      "mod_line": [
        9,
        5,
        3
      ],
      "mod_code": [
        "Input ( i ) ;",
        "cin . get ( ) ;",
        "int const Output = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        5,
        3,
        7
      ],
      "mod_code": [
        "Input ( i ) ;",
        "cin . get ( ) ;",
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        5,
        3,
        10
      ],
      "mod_code": [
        "Input ( i ) ;",
        "cin . get ( ) ;",
        "int const Output = 0 ;",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        5,
        7
      ],
      "mod_code": [
        "Input ( i ) ;",
        "cin . get ( ) ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&)’"
    },
    {
      "mod_line": [
        9,
        5,
        7,
        10
      ],
      "mod_code": [
        "Input ( i ) ;",
        "cin . get ( ) ;",
        "if ( ! Input [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&)’"
    },
    {
      "mod_line": [
        9,
        5,
        10
      ],
      "mod_code": [
        "Input ( i ) ;",
        "cin . get ( ) ;",
        "int i = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&)’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "Input ( i ) ;",
        "int const Output = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        3,
        7
      ],
      "mod_code": [
        "Input ( i ) ;",
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        3,
        7,
        10
      ],
      "mod_code": [
        "Input ( i ) ;",
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        3,
        10
      ],
      "mod_code": [
        "Input ( i ) ;",
        "int const Output = 0 ;",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "Input ( i ) ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&)’"
    },
    {
      "mod_line": [
        9,
        7,
        10
      ],
      "mod_code": [
        "Input ( i ) ;",
        "if ( ! Input [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&)’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "Input ( i ) ;",
        "int i = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int&)’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "int const Output = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        5,
        3,
        7,
        10
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        5,
        3,
        10
      ],
      "mod_code": [
        "cin . get ( ) ;",
        "int const Output = 0 ;",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        3,
        7,
        10
      ],
      "mod_code": [
        "int const Output = 0 ;",
        "if ( ! Input [ i ] )",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int const Output = 0 ;",
        "int i = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "increment of read-only variable ‘Output’"
    }
  ]
}