{
  "meta": {
    "index": 2794,
    "hitid": "3EQPA8A374Q9FW6QH62AFW5K2JJJZ1",
    "workerid": "AIWEXPJAU66D9",
    "probid": "454A",
    "subid": "47857451"
  },
  "lines": [
    {
      "line": 0,
      "text": "define new constant long long integer MOD = 1000000007",
      "code": "const long long int MOD = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new long long int variables N , M , K , H , W , L and R",
      "code": "long long int N , M , K , H , W , L , R ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read from the input to N",
      "code": "cin >> N ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "in a for loop , change i from 0 to N exclusive",
      "code": "for ( int i = 0 ; i < N ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increment j in a loop from 0 to N exclusive",
      "code": "for ( int j = 0 ; j < N ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if the absolute value of i - N / 2 + the absolute value of j - N / 2 < = N / 2",
      "code": "if ( abs ( i - N / 2 ) + abs ( j - N / 2 ) <= N / 2 )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "print ' D '",
      "code": "cout << ' D ' ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print ' * '",
      "code": "cout << ' * ' ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "{ cin >> N ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "{ cin >> N ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "{ cin >> N ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        8
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "{ cin >> N ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        9
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "{ cin >> N ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "{ cin >> N ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        9
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "{ cin >> N ;",
        "do",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "{ cin >> N ;",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        9
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "do",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "do",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "long long int N , M , K , H , W , L , R , R ;",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int R’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "{ cin >> N ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "{ cin >> N ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        9
      ],
      "mod_code": [
        "{ cin >> N ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "do",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "{ cin >> N ;",
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "{ cin >> N ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "{ cin >> N ;",
        "do",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "{ cin >> N ;",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "if ( abs ( i - N ) - 2 + abs ( j - N / 2 ) <= N / 2 )",
        "do",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "do",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}