{
  "meta": {
    "index": 212,
    "hitid": "3JVP4ZJHDPMGI0GUVU4IXWNY7XB0IE",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "902A",
    "subid": "45754928"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints N and M",
      "code": "int N , M ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read N and M",
      "code": "cin >> N >> M ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make integer vector A of size N and B of size N",
      "code": "vector < int > A ( N ) , B ( N ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to N exclusive , read A [ i ] and B [ i ]",
      "code": "for ( int i = 0 ; i < ( int ) ( N ) ; ++ i ) { cin >> A [ i ] >> B [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "make integer max_ = 0",
      "code": "int max_ = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to N exclusive",
      "code": "for ( int i = 0 ; i < ( int ) ( N ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if max_ is less than A [ i ] , break loop",
      "code": "if ( max_ < A [ i ] ) { break ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set max_ to max of max_ and B [ i ]",
      "code": "max_ = max ( max_ , B [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if max_ is equal to M",
      "code": "if ( max_ == M )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" YES \"",
      "code": "cout << \" YES \"",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print new line",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "otherwise do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "display \" NO \"",
      "code": "cout << \" NO \"",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print new line",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N >> y ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > A [ N ] , B [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long max_ = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘max(long long int&, int&)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        14
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        15
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        14,
        15
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        14,
        12
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        15
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        15,
        12
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" YES \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        14
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        14,
        15
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        15
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        15
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        15,
        12
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        12
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" NO \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        12
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "vector < int > A ( N , B [ N ] ) ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        14,
        12
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        15,
        12
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        15,
        12
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}