{
  "meta": {
    "index": 52,
    "hitid": "3GL25Y6843OAB9CWJLRHY3HQYDFXML",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1077A",
    "subid": "48598173"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "t = int",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "i = int",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "right , left , num , end = long long with end = 0",
      "code": "long long right , left , num , end = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to t inclusive",
      "code": "for ( i = 1 ; i <= t ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read right then left then num",
      "code": "cin >> right >> left >> num ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "a = int with a = num / 2",
      "code": "int a = num / 2 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if num is uneven",
      "code": "if ( ( num % 2 ) == 1 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set end to a * right - a * left + right",
      "code": "end = a * right - a * left + right ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set end to a * right - a * left",
      "code": "end = a * right - a * left ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "print end",
      "code": "cout << end << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        6,
        1,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "cin >> right >> num >> num ;",
        "char t ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6,
        11,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "cin >> right >> num >> num ;",
        "end = a * right - ( a ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6,
        9,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "cin >> right >> num >> num ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "cin >> right >> num >> num ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        1,
        11,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "char t ;",
        "end = a * right - ( a ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        1,
        9,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "char t ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        1,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "char t ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        9,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "end = a * right - ( a ) ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "end = a * right - ( a ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        9,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << end ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1,
        11,
        2
      ],
      "mod_code": [
        "cin >> right >> num >> num ;",
        "char t ;",
        "end = a * right - ( a ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1,
        9,
        2
      ],
      "mod_code": [
        "cin >> right >> num >> num ;",
        "char t ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1,
        2
      ],
      "mod_code": [
        "cin >> right >> num >> num ;",
        "char t ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        9,
        2
      ],
      "mod_code": [
        "cin >> right >> num >> num ;",
        "end = a * right - ( a ) ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        2
      ],
      "mod_code": [
        "cin >> right >> num >> num ;",
        "end = a * right - ( a ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "cin >> right >> num >> num ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cin >> right >> num >> num ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        9,
        2
      ],
      "mod_code": [
        "char t ;",
        "end = a * right - ( a ) ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        2
      ],
      "mod_code": [
        "char t ;",
        "end = a * right - ( a ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        9,
        2
      ],
      "mod_code": [
        "char t ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "char t ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        2
      ],
      "mod_code": [
        "end = a * right - ( a ) ;",
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "end = a * right - ( a ) ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "end = a * right - a * left ;",
        "gets ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}