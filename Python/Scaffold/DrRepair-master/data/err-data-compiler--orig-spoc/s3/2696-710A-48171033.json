{
  "meta": {
    "index": 2696,
    "hitid": "35ZRNT9RUISMVEQUCCZ6JRHRMIS3O5",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "710A",
    "subid": "48171033"
  },
  "lines": [
    {
      "line": 0,
      "text": "S = string",
      "code": "string S ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "N , M , A , B , sum , x , y , K = long long with sum = 8",
      "code": "long long N , M , A , B , sum , x = 8 , y , K ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read S",
      "code": "cin >> S ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ( S [ 0 ] is ' a ' | | S [ 0 ] is ' h ' ) and ( S [ 1 ] is ' 1 ' | | S [ 1 ] is ' 8 ' )",
      "code": "if ( ( S [ 0 ] == ' a ' || S [ 0 ] == ' h ' ) && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print 3",
      "code": "cout << 3 << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if ( S [ 0 ] is ' a ' | | S [ 0 ] is ' h ' ) or ( S [ 1 ] is ' 1 ' | | S [ 1 ] is ' 8 ' )",
      "code": "else if ( ( S [ 0 ] == ' a ' || S [ 0 ] == ' h ' ) || ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' ) )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print 5",
      "code": "cout << 5 << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print 8",
      "code": "cout << 8 << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char S ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , K , K ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int K’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        8
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        5
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do",
        "cout << 3 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        0
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do",
        "char S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "cout << 3 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        0
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "cout << 3 ;",
        "char S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "cout << 3 ;",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        0
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "char S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        0,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        4,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        8,
        5
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "do",
        "cout << 3 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        8,
        5,
        0
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "do",
        "cout << 3 ;",
        "char S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        8,
        5,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "do",
        "cout << 3 ;",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        8,
        0
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "do",
        "char S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        8,
        0,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "do",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "do",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "cout << 3 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        5,
        0
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "cout << 3 ;",
        "char S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        5,
        0,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "cout << 3 ;",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "cout << 3 ;",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "char S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        0,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "long long N , M , A , B , sum , x , y , y , K ;",
        "cout << 8 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int y’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        8,
        5
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do",
        "cout << 3 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        8,
        5,
        0
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do",
        "cout << 3 ;",
        "char S ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        5,
        9
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do",
        "cout << 3 ;",
        "cout << 8 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        8,
        0
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do",
        "char S ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        0,
        9
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "do",
        "cout << 8 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        5,
        0
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "cout << 3 ;",
        "char S ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        5,
        0,
        9
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "cout << 3 ;",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "char S ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        0,
        9
      ],
      "mod_code": [
        "if ( S [ 0 ] == ' a ' || S [ 1 ] == ' h ' && ( S [ 1 ] == ' 1 ' || S [ 1 ] == ' 8 ' || S [ 1 ] == ' 8 ' ) )",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "do",
        "cout << 3 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5,
        0
      ],
      "mod_code": [
        "do",
        "cout << 3 ;",
        "char S ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        5,
        0,
        9
      ],
      "mod_code": [
        "do",
        "cout << 3 ;",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        5,
        9
      ],
      "mod_code": [
        "do",
        "cout << 3 ;",
        "cout << 8 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "do",
        "char S ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        0,
        9
      ],
      "mod_code": [
        "do",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "do",
        "cout << 8 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "cout << 3 ;",
        "char S ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        0,
        9
      ],
      "mod_code": [
        "cout << 3 ;",
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "char S ;",
        "cout << 8 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}