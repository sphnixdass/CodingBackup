{
  "meta": {
    "index": 1289,
    "hitid": "3TC2K6WK9GWUP47V1VW53VMZ1ZO82W",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "1011A",
    "subid": "45550430"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , m , i = int",
      "code": "int n , m , i ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sort s",
      "code": "sort ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let cnt = - 1 and num = 0 be int",
      "code": "int cnt = - 1 , num = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if s at i > = cnt + 2 and m isn ' t 0",
      "code": "if ( s [ i ] >= cnt + 2 && m )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set cnt to s [ i ]",
      "code": "cnt = s [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment num by s [ i ] - ' a ' + 1",
      "code": "num += s [ i ] - ' a ' + 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "decrement m",
      "code": "m -= 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if m isn ' t 0",
      "code": "if ( m )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print num",
      "code": "cout << num << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "do nothing",
      "code": ";",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int cnt = - 1 and num = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘;’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "x ;"
      ],
      "err_line": 17,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        4
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        8,
        4,
        17
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;",
        "x ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        8,
        4,
        9
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        8,
        17
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "x ;"
      ],
      "err_line": 17,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        17,
        9
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "x ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        17
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "s >> s ;",
        "x ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        17,
        9
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "s >> s ;",
        "x ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        9
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "s >> s ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "x ;"
      ],
      "err_line": 17,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        9
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . rend ( ) ) ;",
        "x ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        17
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;",
        "x ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        17,
        5
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;",
        "x ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        17,
        9
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;",
        "x ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        5
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        5,
        9
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        9
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "s >> s ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "x ;"
      ],
      "err_line": 17,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        5
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "x ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        8,
        17,
        5,
        9
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "x ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        8,
        17,
        9
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "x ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        8,
        5,
        9
      ],
      "mod_code": [
        "if ( s [ i ] >= ' cnt ' + 2 && m != 0 )",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "x ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        17,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "x ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        17,
        5,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "x ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        17,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "x ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "x ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        17,
        5,
        9
      ],
      "mod_code": [
        "x ;",
        "sort ( s . rbegin ( ) , s . end ( ) ) ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "x ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "sort ( s . rbegin ( ) , s . end ( ) ) ;",
        "int cnt = s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::basic_string<char>::reverse_iterator, std::__cxx11::basic_string<char>::iterator)’"
    }
  ]
}