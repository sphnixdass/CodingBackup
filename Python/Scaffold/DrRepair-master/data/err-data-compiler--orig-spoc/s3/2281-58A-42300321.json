{
  "meta": {
    "index": 2281,
    "hitid": "3OB6JN3A9QJQEDQKAMLP9LV2XWXRMM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "58A",
    "subid": "42300321"
  },
  "lines": [
    {
      "line": 0,
      "text": "function doesIt with string argument a that returns string",
      "code": "string doesIt ( string a )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new string token = \" hello \"",
      "code": "string token = \" hello \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare new integer called j = 0",
      "code": "int j = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for integer i = 0 to length of a exclusive",
      "code": "for ( int i = 0 ; i < a . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if a [ i ] = token [ j ] , increment j by one",
      "code": "if ( a [ i ] == token [ j ] ) { j ++ ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if j is equal to length of token",
      "code": "if ( j == token . length ( ) )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return \" YES \"",
      "code": "return \" YES \" ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return \" NO \"",
      "code": "return \" NO \" ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "declare new string a",
      "code": "string a ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print the result of doesIt ( a )",
      "code": "cout << doesIt ( a ) << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string doesIt ( string a returns )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "j = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "bool a ;"
      ],
      "err_line": 15,
      "err_msg": "could not convert ‘a’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 14,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;"
      ],
      "err_line": 14,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        0
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "string doesIt ( string a returns )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        14,
        0,
        15
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        14,
        0,
        8
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "string doesIt ( string a returns )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        14,
        0,
        1
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "string doesIt ( string a returns )",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        14,
        15
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "cout << doesIt ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        8
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "cout << doesIt ( a ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        1
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "cout << doesIt ( a ) ;",
        "string token = \" , \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        8
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        14,
        8,
        1
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        14,
        1
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cin >> N ;",
        "string token = \" , \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "string doesIt ( string a returns )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        0,
        15
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        0,
        15,
        8
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        0,
        15,
        1
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        0,
        8
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "string doesIt ( string a returns )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        0,
        8,
        1
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "string doesIt ( string a returns )",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        0,
        1
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "string doesIt ( string a returns )",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        9,
        15,
        8
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cout << doesIt ( a ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        15,
        8,
        1
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "cout << doesIt ( a ) ;",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        8,
        1
      ],
      "mod_code": [
        "return \" NO\\n \" ;",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "cin >> N ;",
        "string doesIt ( string a returns )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        14,
        0,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        14,
        0,
        15,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        14,
        0,
        15,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        14,
        0,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "string doesIt ( string a returns )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        14,
        0,
        8,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "string doesIt ( string a returns )",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        14,
        0,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "string doesIt ( string a returns )",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "cout << doesIt ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "cout << doesIt ( a ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        15,
        8,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "cout << doesIt ( a ) ;",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        15,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "cout << doesIt ( a ) ;",
        "string token = \" , \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        8,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "string token = \" , \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        15,
        8
      ],
      "mod_code": [
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        15,
        8,
        1
      ],
      "mod_code": [
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        15,
        1
      ],
      "mod_code": [
        "string doesIt ( string a returns )",
        "cout << doesIt ( a ) ;",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "string doesIt ( string a returns )",
        "do"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        8,
        1
      ],
      "mod_code": [
        "string doesIt ( string a returns )",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "string doesIt ( string a returns )",
        "string token = \" , \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "cout << doesIt ( a ) ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        8,
        1
      ],
      "mod_code": [
        "cout << doesIt ( a ) ;",
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "do",
        "string token = \" , \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}