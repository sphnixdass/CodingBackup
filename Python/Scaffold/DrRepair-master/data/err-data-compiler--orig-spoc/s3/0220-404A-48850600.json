{
  "meta": {
    "index": 220,
    "hitid": "31ODACBENU9T07OPH4SBG4K3TZCQSV",
    "workerid": "A1APYLD4DUK33J",
    "probid": "404A",
    "subid": "48850600"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant double PI = acosign - 1 . 0",
      "code": "const double PI = acos ( - 1.0 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant integer INF = 1000 * 1000 * 1000 + 7",
      "code": "const int INF = 1000 * 1000 * 1000 + 7 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare constant long long LINF = INF * long long casted INF",
      "code": "const long long LINF = INF * ( long long ) INF ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare constant integer MAX = 333",
      "code": "const int MAX = 333 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare string A size MAX",
      "code": "string A [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare boolean U size MAX by MAX",
      "code": "bool U [ MAX ] [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare solve with integer n as argument , returning boolean",
      "code": "bool solve ( int n )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = ( 0 ) ; i < ( n ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if A [ i ] [ i ] is not A [ 0 ] [ 0 ] , return false from function",
      "code": "if ( A [ i ] [ i ] != A [ 0 ] [ 0 ] ) return false ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if A [ i ] [ n - i - 1 ] is not A [ 0 ] [ 0 ] , return false from function",
      "code": "if ( A [ i ] [ n - i - 1 ] != A [ 0 ] [ 0 ] ) return false ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let U [ i ] [ i ] be true",
      "code": "U [ i ] [ i ] = true ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "let U [ i ] [ n - i - 1 ] be true",
      "code": "U [ i ] [ n - i - 1 ] = true ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = ( 0 ) ; i < ( n ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = ( 0 ) ; j < ( n ) ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if U [ i ] [ j ] is true , end current loop iteration",
      "code": "if ( U [ i ] [ j ] ) continue ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if A [ i ] [ j ] is not A [ 0 ] [ 1 ] , return false",
      "code": "if ( A [ i ] [ j ] != A [ 0 ] [ 1 ] ) return false ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if A [ 0 ] [ 0 ] is A [ 0 ] [ 1 ] , return false",
      "code": "if ( A [ 0 ] [ 0 ] == A [ 0 ] [ 1 ] ) return false ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 23,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for i = 0 to n exclusive , read A [ i ]",
      "code": "for ( int i = ( 0 ) ; i < ( n ) ; i ++ ) { cin >> A [ i ] ; }",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if result of run solve ( n )",
      "code": "if ( solve ( n ) )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" YES \" and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print \" NO \" and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int A [ MAX ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool U [ MAX ] , MAX ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘bool MAX’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 24,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        4
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        28
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        28,
        14
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "do",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        28,
        26
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "do",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        28,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "do",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        14
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        14,
        26
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        14,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        26
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        26,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        4,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "int A [ MAX ] ;",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        28
      ],
      "mod_code": [
        "cin >> N ;",
        "do"
      ],
      "err_line": 24,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        14
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        14,
        26
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        14,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "for ( j = 0 ; j < n ; j ++ )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        26
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 24,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        26,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "do",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        14
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        14,
        26
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        14,
        26,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        14,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 24,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        14
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "do",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        14,
        26
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "do",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        14,
        10
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "do",
        "for ( j = 0 ; j < n ; j ++ )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        26
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "do",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        26,
        10
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "do",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        10
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "do",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        14,
        26
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        14,
        26,
        10
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        14,
        10
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        26
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        26,
        10
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "int A [ MAX ] ;",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        28,
        14
      ],
      "mod_code": [
        "do",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        14,
        26
      ],
      "mod_code": [
        "do",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        14,
        26,
        10
      ],
      "mod_code": [
        "do",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        14,
        10
      ],
      "mod_code": [
        "do",
        "for ( j = 0 ; j < n ; j ++ )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        26
      ],
      "mod_code": [
        "do",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 30,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        28,
        26,
        10
      ],
      "mod_code": [
        "do",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        10
      ],
      "mod_code": [
        "do",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        10
      ],
      "mod_code": [
        "if ( ! solve ( n ) )",
        "U [ i ] [ j ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}