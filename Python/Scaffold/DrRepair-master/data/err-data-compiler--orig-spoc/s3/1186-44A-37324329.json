{
  "meta": {
    "index": 1186,
    "hitid": "3JGHED38EDLGQBVJKBBUYZR94SZ7Y6",
    "workerid": "A1APYLD4DUK33J",
    "probid": "44A",
    "subid": "37324329"
  },
  "lines": [
    {
      "line": 0,
      "text": "create map m from string to int",
      "code": "map < string , int > m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read character",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create string str",
      "code": "string str ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read line from cin to str",
      "code": "getline ( cin , str ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set m [ str ] to 1",
      "code": "m [ str ] = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer cnt with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for it = beginning of m to end of m , increment cnt",
      "code": "for ( map < string , int > :: iterator it = m . begin ( ) ; it != m . end ( ) ; ++ it ) { cnt ++ ; }",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print cnt print newline",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < string , bool > m ;"
      ],
      "err_line": 11,
      "err_msg": "conversion from ‘std::map<std::__cxx11::basic_string<char>, bool>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, bool> >}’ to non-scalar type ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ requested"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int str ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> cin >> str ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }"
      ],
      "err_line": 11,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        11,
        6,
        7
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        11,
        6,
        7,
        3
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> cin >> str ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        7,
        8
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> cin >> str ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        11,
        6,
        3
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        3,
        8
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        8
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> cin >> str ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        11,
        7,
        3
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> cin >> str ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7,
        3,
        8
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> cin >> str ;",
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7,
        8
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> cin >> str ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        8
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "for ( int it = 0 ; it < m . end ( ) ; it ++ ) { cnt ++ ; }",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        11,
        6,
        7
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        11,
        6,
        7,
        3
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> cin >> str ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        7,
        8
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> cin >> str ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        11,
        6,
        3
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        3,
        8
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        8
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "int str ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> cin >> str ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        11,
        7,
        3
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> cin >> str ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7,
        3,
        8
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> cin >> str ;",
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7,
        8
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> cin >> str ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        8
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ ) { cnt ++ ; }",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "int str ;",
        "cin >> cin >> str ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        3,
        8
      ],
      "mod_code": [
        "int str ;",
        "cin >> cin >> str ;",
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "int str ;",
        "cin >> cin >> str ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "int str ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        8
      ],
      "mod_code": [
        "int str ;",
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "int str ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "cin >> cin >> str ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        8
      ],
      "mod_code": [
        "cin >> cin >> str ;",
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "cin >> cin >> str ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "cin >> N ;",
        "m [ ' str ' ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}