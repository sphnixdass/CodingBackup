{
  "meta": {
    "index": 1551,
    "hitid": "3B286OTISEB8EOYI5EMBY3EBTYCJA0",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "125A",
    "subid": "35900291"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , foot , inch , x = integers",
      "code": "int n , foot , inch , x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set foot to n / 36",
      "code": "foot = n / 36 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set x to n modulo 36",
      "code": "x = n % 36 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if x is equal to 35",
      "code": "if ( x == 35 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "increment foot",
      "code": "foot ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set inch to 0",
      "code": "inch = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print foot , inch and a new line",
      "code": "cout << foot << ' ' << inch << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set inch to x / 3",
      "code": "inch = x / 3 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if x modulo 3 is 2 , then increment inch",
      "code": "if ( x % 3 == 2 ) inch ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print foot , inch and a new line",
      "code": "cout << foot << ' ' << inch << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        10,
        2
      ],
      "mod_code": [
        "x %= 36 ;",
        "inch /= 3 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        2,
        12
      ],
      "mod_code": [
        "x %= 36 ;",
        "inch /= 3 ;",
        "gets ( n ) ;",
        "cout << foot << inch << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        2,
        9
      ],
      "mod_code": [
        "x %= 36 ;",
        "inch /= 3 ;",
        "gets ( n ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        2,
        3
      ],
      "mod_code": [
        "x %= 36 ;",
        "inch /= 3 ;",
        "gets ( n ) ;",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        9
      ],
      "mod_code": [
        "x %= 36 ;",
        "inch /= 3 ;",
        "cout << foot << inch << endl ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        10,
        9
      ],
      "mod_code": [
        "x %= 36 ;",
        "inch /= 3 ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        10,
        9,
        3
      ],
      "mod_code": [
        "x %= 36 ;",
        "inch /= 3 ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "x %= 36 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        12
      ],
      "mod_code": [
        "x %= 36 ;",
        "gets ( n ) ;",
        "cout << foot << inch << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        12,
        9
      ],
      "mod_code": [
        "x %= 36 ;",
        "gets ( n ) ;",
        "cout << foot << inch << endl ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        12,
        3
      ],
      "mod_code": [
        "x %= 36 ;",
        "gets ( n ) ;",
        "cout << foot << inch << endl ;",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        9
      ],
      "mod_code": [
        "x %= 36 ;",
        "gets ( n ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        9,
        3
      ],
      "mod_code": [
        "x %= 36 ;",
        "gets ( n ) ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "x %= 36 ;",
        "gets ( n ) ;",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        9
      ],
      "mod_code": [
        "x %= 36 ;",
        "cout << foot << inch << endl ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        12,
        9,
        3
      ],
      "mod_code": [
        "x %= 36 ;",
        "cout << foot << inch << endl ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "x %= 36 ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        9,
        3
      ],
      "mod_code": [
        "x %= 36 ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "inch /= 3 ;",
        "gets ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        12
      ],
      "mod_code": [
        "inch /= 3 ;",
        "gets ( n ) ;",
        "cout << foot << inch << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        12,
        9
      ],
      "mod_code": [
        "inch /= 3 ;",
        "gets ( n ) ;",
        "cout << foot << inch << endl ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        12,
        3
      ],
      "mod_code": [
        "inch /= 3 ;",
        "gets ( n ) ;",
        "cout << foot << inch << endl ;",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        9
      ],
      "mod_code": [
        "inch /= 3 ;",
        "gets ( n ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        9,
        3
      ],
      "mod_code": [
        "inch /= 3 ;",
        "gets ( n ) ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        3
      ],
      "mod_code": [
        "inch /= 3 ;",
        "gets ( n ) ;",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        12,
        9
      ],
      "mod_code": [
        "inch /= 3 ;",
        "cout << foot << inch << endl ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        12,
        9,
        3
      ],
      "mod_code": [
        "inch /= 3 ;",
        "cout << foot << inch << endl ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "inch /= 3 ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        9,
        3
      ],
      "mod_code": [
        "inch /= 3 ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "gets ( n ) ;",
        "cout << foot << inch << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        9
      ],
      "mod_code": [
        "gets ( n ) ;",
        "cout << foot << inch << endl ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        9,
        3
      ],
      "mod_code": [
        "gets ( n ) ;",
        "cout << foot << inch << endl ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        12,
        3
      ],
      "mod_code": [
        "gets ( n ) ;",
        "cout << foot << inch << endl ;",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "gets ( n ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9,
        3
      ],
      "mod_code": [
        "gets ( n ) ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "gets ( n ) ;",
        "foot /= 36 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "cout << foot << inch << endl ;",
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        9,
        3
      ],
      "mod_code": [
        "cout << foot << inch << endl ;",
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "do",
        "foot /= 36 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}