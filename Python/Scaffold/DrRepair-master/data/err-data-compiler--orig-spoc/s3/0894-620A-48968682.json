{
  "meta": {
    "index": 894,
    "hitid": "37J05LC5AXD6CV1UPODDO4MHE12JDV",
    "workerid": "A1APYLD4DUK33J",
    "probid": "620A",
    "subid": "48968682"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare swaps with integer pointers x , y as arguments , returning integer",
      "code": "int swaps ( int * x , int * y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer t with t = value of x",
      "code": "int t = * x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set value of x to value of y",
      "code": "* x = * y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set value of y to t",
      "code": "* y = t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create integers x1 , y1 , x2 , y2",
      "code": "int x1 , y1 , x2 , y2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read x1 read y1 read x2 read y2",
      "code": "cin >> x1 >> y1 >> x2 >> y2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if x1 is greater than x2 , run swaps with address of x1 , address of x2 as arguments",
      "code": "if ( x1 > x2 ) { swaps ( & x1 , & x2 ) ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if y1 is greater than y2 , run swaps with address of y1 , address of y2 as argument",
      "code": "if ( y1 > y2 ) { swaps ( & y1 , & y2 ) ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integers X , Y",
      "code": "int X , Y ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set X to x2 - x1",
      "code": "X = x2 - x1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set Y to y2 - y1",
      "code": "Y = y2 - y1 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if X is Y",
      "code": "if ( X == Y )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print X print newline",
      "code": "cout << X << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if X is less than Y , run swaps with address of X , address of Y as arguments",
      "code": "if ( X < Y ) { swaps ( & X , & Y ) ; }",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print X print newline",
      "code": "cout << X << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int t = x ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "x = * y ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "y = t ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 17,
      "err_msg": "assignment of function ‘int swaps(int*, int*)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int x1 , y1 , y2 , y2 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y2’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( x1 > x2 ) swaps = & x1 , & x2 ;"
      ],
      "err_line": 8,
      "err_msg": "assignment of function ‘int swaps(int*, int*)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( y1 > y2 ) swaps ( y1 , abs ( y2 ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "long long X , Y ;"
      ],
      "err_line": 17,
      "err_msg": "cannot convert ‘long long int*’ to ‘int*’ for argument ‘1’ to ‘int swaps(int*, int*)’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "y = t ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        8
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        17
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "y = t ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "y = t ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        17
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        17
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        17,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "x = * y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int t = x ;",
        "y = t ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "int t = x ;",
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        17
      ],
      "mod_code": [
        "int t = x ;",
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3,
        17
      ],
      "mod_code": [
        "int t = x ;",
        "y = t ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3,
        17,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "y = t ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "y = t ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int t = x ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8,
        17
      ],
      "mod_code": [
        "int t = x ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8,
        17,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "int t = x ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        17,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "int t = x ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "x = * y ;",
        "y = t ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        8
      ],
      "mod_code": [
        "x = * y ;",
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        17
      ],
      "mod_code": [
        "x = * y ;",
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        0
      ],
      "mod_code": [
        "x = * y ;",
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        3,
        17
      ],
      "mod_code": [
        "x = * y ;",
        "y = t ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        17,
        0
      ],
      "mod_code": [
        "x = * y ;",
        "y = t ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        3,
        0
      ],
      "mod_code": [
        "x = * y ;",
        "y = t ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "x = * y ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17
      ],
      "mod_code": [
        "x = * y ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        0
      ],
      "mod_code": [
        "x = * y ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        8,
        0
      ],
      "mod_code": [
        "x = * y ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "x = * y ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        0
      ],
      "mod_code": [
        "x = * y ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "x = * y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8,
        17
      ],
      "mod_code": [
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8,
        17,
        0
      ],
      "mod_code": [
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        8,
        0
      ],
      "mod_code": [
        "y = t ;",
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "y = t ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        17,
        0
      ],
      "mod_code": [
        "y = t ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "y = t ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        17,
        0
      ],
      "mod_code": [
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "if ( x1 > x2 ) swaps ( x1 , & x2 ) ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        17,
        0
      ],
      "mod_code": [
        "if ( X < Y ) swaps = & X , & Y ;",
        "int swaps ( int * x , int y )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}