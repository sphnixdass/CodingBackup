{
  "meta": {
    "index": 2603,
    "hitid": "389A2A304OCP5XUU3K8WMTP3T5R0C1",
    "workerid": "A1AYVATMT88U1W",
    "probid": "707A",
    "subid": "48391049"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let r be a integer",
      "code": "int r ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let c be a integer",
      "code": "int c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "boolean color is equal to false",
      "code": "bool color = false ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read r and c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "r is equal to r * c",
      "code": "r = r * c ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while ( r is decreased by 1 )",
      "code": "while ( r -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let ct be a character",
      "code": "char ct ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read ct",
      "code": "cin >> ct ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if ( ct is equal to C or ct is equal to Y or ct is equal to M ) , color is equal to true",
      "code": "if ( ct == ' C ' || ct == ' Y ' || ct == ' M ' ) { color = true ; }",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "check if ( color )",
      "code": "if ( color )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print # Color and newline",
      "code": "cout << \" #Color \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print # Black & White and newline",
      "code": "cout << \" #Black&White \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char ct ="
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "getline ( cin , ct ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;",
        "cout << \" # \" << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        6
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;",
        "cout << \" # \" << \" \\n \" ;",
        "while ( r -= 1 )"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;",
        "cout << \" # \" << \" \\n \" ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        6
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;",
        "while ( r -= 1 )"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        6,
        14
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;",
        "while ( r -= 1 )",
        "cout << \" # \" << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        6,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;",
        "while ( r -= 1 )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;",
        "cout << \" # \" << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;",
        "cout << \" # \" << ' \\n ' ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        6
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" << \" \\n \" ;",
        "while ( r -= 1 )"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        6,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" << \" \\n \" ;",
        "while ( r -= 1 )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" << \" \\n \" ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "while ( r -= 1 )"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        14
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "while ( r -= 1 )",
        "cout << \" # \" << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        14,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "while ( r -= 1 )",
        "cout << \" # \" << ' \\n ' ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "while ( r -= 1 )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" << ' \\n ' ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "cout << \" # \" << ' \\n ' ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "if ( ct == C || ct == Y || ct == M ) color = true ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        6,
        13
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "cout << \" # \" << \" \\n \" ;",
        "while ( r -= 1 )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        14,
        13
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "cout << \" # \" << \" \\n \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        6,
        14,
        13
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "while ( r -= 1 )",
        "cout << \" # \" << ' \\n ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        6,
        13
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "while ( r -= 1 )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        14,
        13
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "cout << \" # \" << ' \\n ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        6,
        13
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "while ( r -= 1 )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "cout << \" # \" << \" \\n \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        13
      ],
      "mod_code": [
        "while ( r -= 1 )",
        "cout << \" # \" << ' \\n ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "while ( r -= 1 )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "cout << \" # \" << ' \\n ' ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}