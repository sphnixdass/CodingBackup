{
  "meta": {
    "index": 660,
    "hitid": "3J6BHNX0U9MA9RYPW3RSLOYO6SUNK1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "5A",
    "subid": "47793531"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers ans , user with ans = 0 , user = 0",
      "code": "int ans = 0 , user = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for indefinitely",
      "code": "for ( ; ; )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string input",
      "code": "string input ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read line from cin to input",
      "code": "getline ( cin , input ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if length of input is 0",
      "code": "if ( input . length ( ) == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if input [ 0 ] is ' + '",
      "code": "else if ( input [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment user",
      "code": "user ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if inpu [ 0 ] is ' - '",
      "code": "else if ( input [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "decrement user",
      "code": "user -- ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "create integer coun with coun = 0",
      "code": "int coun = 0 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "create boolean count_now with count_now = false",
      "code": "bool count_now = false ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "for i = 0 , incrementing i",
      "code": "for ( int i = 0 ; ; i ++ )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if input [ i ] is ' : '",
      "code": "if ( input [ i ] == ' : ' )",
      "indent": 4
    },
    {
      "line": 16,
      "text": "increment coun",
      "code": "coun ++ ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 19,
      "text": "increment coun",
      "code": "coun ++ ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "set coun to length of input - coun",
      "code": "coun = input . length ( ) - coun ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "increment ans by user * coun",
      "code": "ans += user * coun ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print ans",
      "code": "cout << ans ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int ans = 0 , ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( ; ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int input ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "getline ( cin , cin ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, std::istream&)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( ! inpu [ 0 ] == ' - ' )"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "count_now = false ;"
      ],
      "err_line": 13,
      "err_msg": "‘count_now’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        25
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        25,
        6
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        21,
        25,
        15
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        25,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;",
        "count_now = false ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        6
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        21,
        6,
        15
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "do",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        21,
        6,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "do",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        21,
        15
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        15,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "coun = strlen ( input - coun ) ;",
        "count_now = false ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        25
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "cout << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        25,
        6
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "cout << ans << endl ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        25,
        6,
        15
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "cout << ans << endl ;",
        "do",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        25,
        6,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "cout << ans << endl ;",
        "do",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        25,
        15
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "cout << ans << endl ;",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        25,
        15,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "cout << ans << endl ;",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        25,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "cout << ans << endl ;",
        "count_now = false ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        6,
        15
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "do",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        6,
        15,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "do",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        6,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "do",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "else if ( inpu [ 0 ] == ' - ' )",
        "count_now = false ;"
      ],
      "err_line": 9,
      "err_msg": "‘inpu’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        21,
        25,
        6
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        25,
        6,
        15
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;",
        "do",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        25,
        6,
        13
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;",
        "do",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        25,
        15
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        21,
        25,
        15,
        13
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 13,
      "err_msg": "‘count_now’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        13
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "cout << ans << endl ;",
        "count_now = false ;"
      ],
      "err_line": 13,
      "err_msg": "‘count_now’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        6,
        15
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "do",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        6,
        15,
        13
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "do",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        6,
        13
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "do",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        15
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        21,
        15,
        13
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 13,
      "err_msg": "‘count_now’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        13
      ],
      "mod_code": [
        "coun = strlen ( input - coun ) ;",
        "count_now = false ;"
      ],
      "err_line": 13,
      "err_msg": "‘count_now’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        6
      ],
      "mod_code": [
        "cout << ans << endl ;",
        "do"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        6,
        15
      ],
      "mod_code": [
        "cout << ans << endl ;",
        "do",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        6,
        15,
        13
      ],
      "mod_code": [
        "cout << ans << endl ;",
        "do",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        6,
        13
      ],
      "mod_code": [
        "cout << ans << endl ;",
        "do",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        15,
        13
      ],
      "mod_code": [
        "cout << ans << endl ;",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 13,
      "err_msg": "‘count_now’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        13
      ],
      "mod_code": [
        "cout << ans << endl ;",
        "count_now = false ;"
      ],
      "err_line": 13,
      "err_msg": "‘count_now’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "do",
        "if ( ! input [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        13
      ],
      "mod_code": [
        "do",
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "do",
        "count_now = false ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "if ( ! input [ i ] == ' : ' )",
        "count_now = false ;"
      ],
      "err_line": 13,
      "err_msg": "‘count_now’ was not declared in this scope"
    }
  ]
}