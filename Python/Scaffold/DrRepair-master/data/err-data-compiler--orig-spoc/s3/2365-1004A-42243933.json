{
  "meta": {
    "index": 2365,
    "hitid": "3P888QFVX3OE2FWWANB2WZA2VN9OQL",
    "workerid": "A1AYVATMT88U1W",
    "probid": "1004A",
    "subid": "42243933"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , d be integers",
      "code": "int n , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let arr = array of long integers of length 101",
      "code": "long long arr [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for ( i = 0 to n exclusive ) , read ith element of array arr",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let count be a integer with value as 2",
      "code": "int count = 2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n - 1 ( exclusive )",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if ( ( [ i + 1 ] th element of array arr ) - 2 * d ) is less than ith element of array arr )",
      "code": "if ( arr [ i + 1 ] - 2 * d < arr [ i ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "proceed to next",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if ( ( [ i + 1 ] th element of array arr ) - 2 * d ) is equal to ith element of array arr )",
      "code": "else if ( arr [ i + 1 ] - 2 * d == arr [ i ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase count by 1",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if ( ( [ i + 1 ] th element of array arr ) - 2 * d ) is greater than ith element of array arr )",
      "code": "else if ( arr [ i + 1 ] - 2 * d > arr [ i ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "the value of count is equal to ( count + 2 )",
      "code": "count += 2 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print count and newline",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "count = 2 ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] ) { arr [ i + 1 ] - 2 ; }"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "proceed = next ;"
      ],
      "err_line": 8,
      "err_msg": "‘proceed’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( arr [ i + 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        11
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( arr [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        5
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( arr [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        2
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( arr [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "cin >> n , d ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( arr [ i + 1 ] )",
        "count = 2 ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        9,
        5,
        2
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( arr [ i + 1 ] )",
        "count = 2 ;",
        "cin >> n , d ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( arr [ i + 1 ] )",
        "cin >> n , d ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11,
        5
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        11,
        5,
        2
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;",
        "cin >> n , d ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        11,
        5,
        9
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        11,
        2
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "cin >> n , d ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        9
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "cin >> n , d ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11,
        9
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "count = 2 ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        5,
        2
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "count = 2 ;",
        "cin >> n , d ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        5,
        2,
        9
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "count = 2 ;",
        "cin >> n , d ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        5,
        9
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "count = 2 ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "cin >> n , d ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        2,
        9
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "cin >> n , d ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( arr [ i + 1 ] - 2 [ i + 1 ] )",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "else if ( arr [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        5
      ],
      "mod_code": [
        "else if ( arr [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        9,
        11,
        5,
        2
      ],
      "mod_code": [
        "else if ( arr [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;",
        "cin >> n , d ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "else if ( arr [ i + 1 ] )",
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "cin >> n , d ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "else if ( arr [ i + 1 ] )",
        "count = 2 ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        9,
        5,
        2
      ],
      "mod_code": [
        "else if ( arr [ i + 1 ] )",
        "count = 2 ;",
        "cin >> n , d ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        11,
        5,
        2
      ],
      "mod_code": [
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;",
        "cin >> n , d ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        11,
        5,
        2,
        9
      ],
      "mod_code": [
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;",
        "cin >> n , d ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        11,
        5,
        9
      ],
      "mod_code": [
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "count = 2 ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "cin >> n , d ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        2,
        9
      ],
      "mod_code": [
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "cin >> n , d ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "else if ( ( arr [ i + 1 ] ) - 2 [ i + 1 ] > 0 )",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "count = 2 ;",
        "cin >> n , d ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5,
        2,
        9
      ],
      "mod_code": [
        "count = 2 ;",
        "cin >> n , d ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "count = 2 ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "cin >> n , d ;",
        "else if ( arr [ i + 1 ] - 2 [ i + 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}