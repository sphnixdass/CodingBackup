{
  "meta": {
    "index": 2329,
    "hitid": "3KTZHH2ONI9KW8BOBDFPI40X6H88MF",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "117A",
    "subid": "14407616"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n then m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = int array of size n",
      "code": "int * s = new int [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "f = int array of size n",
      "code": "int * f = new int [ n ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "t = int array of size n",
      "code": "int * t = new int [ n ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "xxx = int",
      "code": "int xxx ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "ud = int with ud = m + m - 2",
      "code": "int ud = m + m - 2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "x = int",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "k = int",
      "code": "int k ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "control = int",
      "code": "int control ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n read s [ i ] then f [ i ] then t [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> s [ i ] >> f [ i ] >> t [ i ] ; }",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if f [ i ] equals s [ i ]",
      "code": "if ( f [ i ] - s [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print t [ i ]",
      "code": "cout << t [ i ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "continue loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set k to 1",
      "code": "k = 1 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set x to t [ i ] modulo ud",
      "code": "x = t [ i ] % ud ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set control to ( t [ i ] + 1 ) modulo ud",
      "code": "control = ( t [ i ] + 1 ) % ud ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if x is greater or equal to m",
      "code": "if ( x - m >= 0 )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set x to ud - x",
      "code": "x = ud - x ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "if control is greater or equal to m then set control to ud - control",
      "code": "if ( control - m >= 0 ) control = ud - control ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if x is greater than control then set k to - 1",
      "code": "if ( control - x < 0 ) k = - 1 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "increment ax",
      "code": "x += 1 ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "set xxx to t [ i ]",
      "code": "xxx = t [ i ] ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if k equals 1",
      "code": "if ( k == 1 )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "if s [ i ] is greater than x",
      "code": "if ( s [ i ] - x > 0 )",
      "indent": 3
    },
    {
      "line": 29,
      "text": "add s [ i ] - x to xxx",
      "code": "xxx += s [ i ] - x ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "else if x is greater than s [ i ]",
      "code": "else if ( s [ i ] - x < 0 )",
      "indent": 3
    },
    {
      "line": 31,
      "text": "add x - s [ i ] + 2 * ( m - x ) to xxx",
      "code": "xxx += x - s [ i ] + 2 * ( m - x ) ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "decrement k",
      "code": "k = - 1 ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "else if k equals - 1",
      "code": "else if ( k == - 1 )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "if s [ i ] is greater than x",
      "code": "if ( s [ i ] - x > 0 )",
      "indent": 3
    },
    {
      "line": 36,
      "text": "add s [ i ] - x + 2 * ( x - 1 ) to xxx",
      "code": "xxx += s [ i ] - x + 2 * ( x - 1 ) ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "set k to 1",
      "code": "k = 1 ;",
      "indent": 4
    },
    {
      "line": 38,
      "text": "else if x is greater than s [ i ]",
      "code": "else if ( s [ i ] - x < 0 )",
      "indent": 3
    },
    {
      "line": 39,
      "text": "add x - s [ i ] to xxx",
      "code": "xxx += x - s [ i ] ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 41,
      "text": "if k equals 1",
      "code": "if ( k == 1 )",
      "indent": 2
    },
    {
      "line": 42,
      "text": "if f [ i ] is greater than s [ i ]",
      "code": "if ( f [ i ] - s [ i ] > 0 )",
      "indent": 3
    },
    {
      "line": 43,
      "text": "add f [ i ] - s [ i ] to xxx",
      "code": "xxx += f [ i ] - s [ i ] ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "else if s [ i ] is greater than f [ i ]",
      "code": "else if ( s [ i ] - f [ i ] > 0 )",
      "indent": 3
    },
    {
      "line": 45,
      "text": "add s [ i ] - f [ i ] + 2 * ( m - s [ i ] ) to xxx",
      "code": "xxx += s [ i ] - f [ i ] + 2 * ( m - s [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 46,
      "text": "else if k equals - 1",
      "code": "else if ( k == - 1 )",
      "indent": 2
    },
    {
      "line": 47,
      "text": "if f [ i ] is greater than s [ i ]",
      "code": "if ( f [ i ] - s [ i ] > 0 )",
      "indent": 3
    },
    {
      "line": 48,
      "text": "add f [ i ] - s [ i ] + 2 * ( s [ i ] - 1 ) to xxx",
      "code": "xxx += f [ i ] - s [ i ] + 2 * ( s [ i ] - 1 ) ;",
      "indent": 4
    },
    {
      "line": 49,
      "text": "else if s [ i ] is greater than f [ i ]",
      "code": "else if ( s [ i ] - f [ i ] > 0 )",
      "indent": 3
    },
    {
      "line": 50,
      "text": "add s [ i ] - f [ i ] to xxx",
      "code": "xxx += s [ i ] - f [ i ] ;",
      "indent": 4
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 52,
      "text": "print xxx",
      "code": "cout << xxx << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "ax ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 11,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int a [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int a [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "++ ax ;"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "else if ( k == - l )"
      ],
      "err_line": 34,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "else if ( k == - l )"
      ],
      "err_line": 46,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        25
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "x -= x ;",
        "ax ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        25,
        32
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "x -= x ;",
        "ax ++ ;",
        "k -- ;"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        25,
        49
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "x -= x ;",
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        25,
        44
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "x -= x ;",
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "ax ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        32
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "ax ++ ;",
        "k -- ;"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        32,
        49
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "ax ++ ;",
        "k -- ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        32,
        44
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "ax ++ ;",
        "k -- ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        49
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        49,
        44
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        44
      ],
      "mod_code": [
        "cout << t [ i ] ;",
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "x -= x ;",
        "ax ++ ;"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        32
      ],
      "mod_code": [
        "x -= x ;",
        "ax ++ ;",
        "k -- ;"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        32,
        49
      ],
      "mod_code": [
        "x -= x ;",
        "ax ++ ;",
        "k -- ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        32,
        44
      ],
      "mod_code": [
        "x -= x ;",
        "ax ++ ;",
        "k -- ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        49
      ],
      "mod_code": [
        "x -= x ;",
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        49,
        44
      ],
      "mod_code": [
        "x -= x ;",
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        44
      ],
      "mod_code": [
        "x -= x ;",
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        32
      ],
      "mod_code": [
        "ax ++ ;",
        "k -- ;"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        32,
        49
      ],
      "mod_code": [
        "ax ++ ;",
        "k -- ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        32,
        49,
        44
      ],
      "mod_code": [
        "ax ++ ;",
        "k -- ;",
        "else if ( s [ i ] > ' f ' )",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        32,
        44
      ],
      "mod_code": [
        "ax ++ ;",
        "k -- ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        49
      ],
      "mod_code": [
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        49,
        44
      ],
      "mod_code": [
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        44
      ],
      "mod_code": [
        "ax ++ ;",
        "else if ( s [ i ] > ' f ' )"
      ],
      "err_line": 25,
      "err_msg": "‘ax’ was not declared in this scope"
    }
  ]
}