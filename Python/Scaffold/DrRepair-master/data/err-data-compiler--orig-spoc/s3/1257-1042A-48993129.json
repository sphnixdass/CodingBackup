{
  "meta": {
    "index": 1257,
    "hitid": "3M0556243SEZT56BVS0V5B6JZYUNFL",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "1042A",
    "subid": "48993129"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = integer",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "arr = integer vector of size n all element of arr set to 0",
      "code": "vector < int > arr ( n , 0 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "total = integer = 0",
      "code": "int total = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read arr [ i ]",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "total = total + arr [ i ]",
      "code": "total += arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "_min = integer = greater value between 1 + ( total + m - 1 ) / n , and the greatest element of arr",
      "code": "int _min = max ( 1 + ( total + m - 1 ) / n , * max_element ( arr . begin ( ) , arr . end ( ) ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "_max = integer = the greatest value of arr",
      "code": "int _max = * max_element ( arr . begin ( ) , arr . end ( ) ) + m ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print _min _max",
      "code": "cout << _min << \" \" << _max << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int _max = abs ( arr ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘abs(std::vector<int>&)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , m ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(long long int, int&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 6,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > arr [ n ] , arr [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long total = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(long long int, int&)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cin >> arr . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>::size_type {aka long unsigned int}’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int _max = * arr )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "int _max = abs ( arr ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        11
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "int _max = abs ( arr ) ;",
        "cout << \" _min \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "cout << \" _min \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        10
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "cout << \" _min \" << endl ;",
        "int _max = * arr )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "int _max = * arr )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "int _max = abs ( arr ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "int _max = abs ( arr ) ;",
        "cout << \" _min \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "cout << \" _min \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        11,
        10
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "cout << \" _min \" << endl ;",
        "int _max = * arr )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "vector < int > arr [ n ] [ n ] = { 0 } ;",
        "int _max = * arr )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "int _max = abs ( arr ) ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "int _max = abs ( arr ) ;",
        "cout << \" _min \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        3
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "int _max = abs ( arr ) ;",
        "cout << \" _min \" << endl ;",
        "vector < int > arr [ n ] , arr [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        9,
        10,
        3
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "int _max = abs ( arr ) ;",
        "vector < int > arr [ n ] , arr [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "cout << \" _min \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        11,
        3
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "cout << \" _min \" << endl ;",
        "vector < int > arr [ n ] , arr [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        9,
        11,
        3,
        10
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "cout << \" _min \" << endl ;",
        "vector < int > arr [ n ] , arr [ n ] ;",
        "int _max = * arr )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        9,
        11,
        10
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "cout << \" _min \" << endl ;",
        "int _max = * arr )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "vector < int > arr [ n ] , arr [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        9,
        3,
        10
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "vector < int > arr [ n ] , arr [ n ] ;",
        "int _max = * arr )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "int _min = 1 + ( total + m - 1 ) , n , arr [ arr ] ;",
        "int _max = * arr )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "int _max = abs ( arr ) ;",
        "cout << \" _min \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘abs(std::vector<int>&)’"
    },
    {
      "mod_line": [
        10,
        11,
        3
      ],
      "mod_code": [
        "int _max = abs ( arr ) ;",
        "cout << \" _min \" << endl ;",
        "vector < int > arr [ n ] , arr [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "int _max = abs ( arr ) ;",
        "vector < int > arr [ n ] , arr [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "cout << \" _min \" << endl ;",
        "vector < int > arr [ n ] , arr [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        11,
        3,
        10
      ],
      "mod_code": [
        "cout << \" _min \" << endl ;",
        "vector < int > arr [ n ] , arr [ n ] ;",
        "int _max = * arr )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "cout << \" _min \" << endl ;",
        "int _max = * arr )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "vector < int > arr [ n ] , arr [ n ] ;",
        "int _max = * arr )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::vector<int> arr [n]’"
    }
  ]
}