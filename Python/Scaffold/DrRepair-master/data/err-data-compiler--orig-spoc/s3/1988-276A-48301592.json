{
  "meta": {
    "index": 1988,
    "hitid": "37J05LC5AXD6CV1UPODDO4MHE14JDX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "276A",
    "subid": "48301592"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables n , k , f , t , max_joy and joy",
      "code": "int n , k , f , t , max_joy , joy ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n , k , f and t",
      "code": "cin >> n >> k >> f >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if t is greater than k",
      "code": "if ( t > k )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set max_joy to f - ( t - k )",
      "code": "max_joy = f - ( t - k ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set max_joy to f",
      "code": "max_joy = f ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "decrement n while it is ! = 0 and loop further",
      "code": "while ( -- n )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read f and t",
      "code": "cin >> f >> t ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if t is greater than k",
      "code": "if ( t > k )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set joy to f - ( t - k )",
      "code": "joy = f - ( t - k ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set joy to f",
      "code": "joy = f ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if joy is greater than max_joy , change max_joy to joy",
      "code": "if ( joy > max_joy ) { max_joy = joy ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print max_joy",
      "code": "cout << max_joy << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "max_joy to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "joy to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        11,
        6
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "joy -= ( t - k ) ;",
        "max_joy to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        11,
        6,
        12
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "joy -= ( t - k ) ;",
        "max_joy to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        11,
        6,
        2
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "joy -= ( t - k ) ;",
        "max_joy to ;",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        11,
        6,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "joy -= ( t - k ) ;",
        "max_joy to ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        11,
        12
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "joy -= ( t - k ) ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        2
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "joy -= ( t - k ) ;",
        "do",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "joy -= ( t - k ) ;",
        "do",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        2,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "joy -= ( t - k ) ;",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "joy -= ( t - k ) ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "max_joy to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        6,
        12
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "max_joy to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        2
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "max_joy to ;",
        "do",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "max_joy to ;",
        "do",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "max_joy to ;",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "max_joy to ;",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "max_joy to ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        12,
        2
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "do",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        4,
        12,
        2,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "do",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        12,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "do",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "max_joy -= ( t - k ) ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "max_joy to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        12
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "max_joy to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        12,
        2
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "max_joy to ;",
        "do",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        12,
        8
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "max_joy to ;",
        "do",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        2
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "max_joy to ;",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        2,
        8
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "max_joy to ;",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        6,
        8
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "max_joy to ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        11,
        12,
        2
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        11,
        12,
        2,
        8
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        12,
        8
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "do",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        2,
        8
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "joy -= ( t - k ) ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "max_joy to ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        12,
        2
      ],
      "mod_code": [
        "max_joy to ;",
        "do",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        12,
        2,
        8
      ],
      "mod_code": [
        "max_joy to ;",
        "do",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        12,
        8
      ],
      "mod_code": [
        "max_joy to ;",
        "do",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "max_joy to ;",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "max_joy to ;",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "max_joy to ;",
        "while ( -- -- )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "do",
        "cin >> n >> k >> f >> n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        2,
        8
      ],
      "mod_code": [
        "do",
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "do",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> f >> n ;",
        "while ( -- -- )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘)’ token"
    }
  ]
}