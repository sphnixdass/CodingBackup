{
  "meta": {
    "index": 650,
    "hitid": "3RWSQDNYL9GN5DTUX4HIX6XAW5RFFK",
    "workerid": "A1APYLD4DUK33J",
    "probid": "5A",
    "subid": "47513855"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string command",
      "code": "string command ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create string set name",
      "code": "set < string > name ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "erase content of name",
      "code": "name . clear ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer sum with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while read line from cin to command",
      "code": "while ( getline ( cin , command ) )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if command [ 0 ] is ' + '",
      "code": "if ( command [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "insert substring of command starting at 1 to size of command - 1 into name",
      "code": "name . insert ( command . substr ( 1 , command . size ( ) - 1 ) ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if command [ 0 ] is ' - '",
      "code": "else if ( command [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "erase substring of command starting at 1 to size of command - 1 from name",
      "code": "name . erase ( command . substr ( 1 , command . size ( ) - 1 ) ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "create integer id with id = 0",
      "code": "int id = 0 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "for i = 0 to length of command",
      "code": "for ( int i = 0 ; i < command . length ( ) ; i ++ )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if command [ i ] is ' : '",
      "code": "if ( command [ i ] == ' : ' )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set id to i",
      "code": "id = i ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increment sum by size of name * ( length of command - 1 - id )",
      "code": "sum += name . size ( ) * ( command . length ( ) - 1 - id ) ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print sum print newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s ;"
      ],
      "err_line": 5,
      "err_msg": "‘command’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string name ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::basic_string<char>)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin >> cin >> cin )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) ) - 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "command . erase ( 1 , command . size ( ) , command . size ( ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(int, std::__cxx11::basic_string<char>::size_type, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "id = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘id’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "name . erase ( 0 ) ;",
        "name . insert ( 1 , command . size ( ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "name . erase ( 0 ) ;",
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        6
      ],
      "mod_code": [
        "name . erase ( 0 ) ;",
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        13
      ],
      "mod_code": [
        "name . erase ( 0 ) ;",
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "name . erase ( 0 ) ;",
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        3,
        7,
        6,
        13
      ],
      "mod_code": [
        "name . erase ( 0 ) ;",
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )",
        "if ( ! command [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        3,
        7,
        13
      ],
      "mod_code": [
        "name . erase ( 0 ) ;",
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        7,
        9,
        6
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        7,
        9,
        6,
        13
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )",
        "if ( ! command [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        7,
        9,
        6,
        3
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        7,
        9,
        13
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        3
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ i ] == ' : ' )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        7,
        9,
        3
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        7,
        6,
        13
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )",
        "if ( ! command [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        7,
        6,
        13,
        3
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )",
        "if ( ! command [ i ] == ' : ' )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        7,
        6,
        3
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ i ] == ' : ' )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(int, std::__cxx11::basic_string<char>::size_type)’"
    },
    {
      "mod_line": [
        7,
        13,
        3
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ i ] == ' : ' )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "name . insert ( 1 , command . size ( ) - 1 ) ;",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        9,
        6,
        13,
        3
      ],
      "mod_code": [
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )",
        "if ( ! command [ i ] == ' : ' )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        9,
        6,
        3
      ],
      "mod_code": [
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ 0 ] )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        9,
        13,
        3
      ],
      "mod_code": [
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "if ( ! command [ i ] == ' : ' )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "command . erase ( 1 , command . size ( ) - 1 ) ;",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        6,
        13,
        3
      ],
      "mod_code": [
        "if ( ! command [ 0 ] )",
        "if ( ! command [ i ] == ' : ' )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( ! command [ 0 ] )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "if ( ! command [ i ] == ' : ' )",
        "name . erase ( 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::erase(int)’"
    }
  ]
}