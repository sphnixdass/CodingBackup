{
  "meta": {
    "index": 1192,
    "hitid": "3ZC62PVYDH4L5LB0XSTQ9KXO4FJXXK",
    "workerid": "AIWEXPJAU66D9",
    "probid": "44A",
    "subid": "48201336"
  },
  "lines": [
    {
      "line": 0,
      "text": "asd = map from string to integer",
      "code": "map < string , int > asd ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "dsa = map from string to integer",
      "code": "map < string , int > dsa ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "dataa = array of maps from string to integer",
      "code": "map < int , int > dataa [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare integer variable z",
      "code": "int z ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read z",
      "code": "cin >> z ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "a and s = strings",
      "code": "string a , s ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let d and f be integers with d = 1 and f = 1",
      "code": "int d = 1 , f = 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer itung with value 0",
      "code": "int itung = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while z - -",
      "code": "while ( z -- )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read a and s",
      "code": "cin >> a >> s ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if asd [ a ] is equal to 0",
      "code": "if ( asd [ a ] == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "asd [ a ] = d",
      "code": "asd [ a ] = d ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment d",
      "code": "d ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if dsa [ s ] is equal to 0",
      "code": "if ( dsa [ s ] == 0 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set dsa [ s ] to f",
      "code": "dsa [ s ] = f ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increase f by one",
      "code": "f ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if dataa [ asd [ a ] ] [ dsa [ s ] ] is equal to 0",
      "code": "if ( dataa [ asd [ a ] ] [ dsa [ s ] ] == 0 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increment dataa [ asd [ a ] ] [ dsa [ s ] ]",
      "code": "dataa [ asd [ a ] ] [ dsa [ s ] ] ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increase itung",
      "code": "itung ++ ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print itung and a new line",
      "code": "cout << itung << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int> [105]’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < string , int asd ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < string , int dsa ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string dataa [ maps ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int z = s . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "string a = s , s ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int d = 1 = 1 , f = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "dsa [ ' s ' ] = f ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( dataa [ asd ] ] [ dsa ] == 0 )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int> [105]’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}[std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::__cxx11::string [4] {aka std::__cxx11::basic_string<char> [4]}’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        2,
        19,
        20
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::__cxx11::string [4] {aka std::__cxx11::basic_string<char> [4]}’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        5
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::__cxx11::string [4] {aka std::__cxx11::basic_string<char> [4]}’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        2,
        19,
        20,
        10
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::__cxx11::string [4] {aka std::__cxx11::basic_string<char> [4]}’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        2,
        19,
        5
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "cout << z ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::__cxx11::string [4] {aka std::__cxx11::basic_string<char> [4]}’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        2,
        19,
        5,
        10
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "cout << z ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::__cxx11::string [4] {aka std::__cxx11::basic_string<char> [4]}’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        2,
        19,
        10
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "while ( cin >> a >> s )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::__cxx11::string [4] {aka std::__cxx11::basic_string<char> [4]}’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}[std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        20,
        5
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}[std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        20,
        5,
        10
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}[std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        20,
        10
      ],
      "mod_code": [
        "string dataa [ 4 ] ;",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}[std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int> [105]’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        19,
        20,
        5
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int> [105]’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        19,
        20,
        5,
        2
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;",
        "string dataa [ maps ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        5,
        10
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int> [105]’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        19,
        20,
        2
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "string dataa [ maps ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        2,
        10
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "string dataa [ maps ] ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        10
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int> [105]’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        19,
        5
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "cout << z ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int> [105]’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        19,
        5,
        2
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "cout << z ;",
        "string dataa [ maps ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        5,
        2,
        10
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "cout << z ;",
        "string dataa [ maps ] ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        5,
        10
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "cout << z ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int> [105]’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "string dataa [ maps ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        10
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "string dataa [ maps ] ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        10
      ],
      "mod_code": [
        "if ( dataa [ asd ] [ dsa ] [ dsa [ s ] ] == 0 )",
        "while ( cin >> a >> s )"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int> [105]’ and ‘std::map<std::__cxx11::basic_string<char>, int>’)"
    },
    {
      "mod_line": [
        20,
        5
      ],
      "mod_code": [
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}[std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        5,
        2
      ],
      "mod_code": [
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;",
        "string dataa [ maps ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5,
        2,
        10
      ],
      "mod_code": [
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;",
        "string dataa [ maps ] ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5,
        10
      ],
      "mod_code": [
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "cout << z ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}[std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        2
      ],
      "mod_code": [
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "string dataa [ maps ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        2,
        10
      ],
      "mod_code": [
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "string dataa [ maps ] ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        10
      ],
      "mod_code": [
        "dataa [ asd [ a ] [ dsa [ s ] ] ++ ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}[std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cout << z ;",
        "string dataa [ maps ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        10
      ],
      "mod_code": [
        "cout << z ;",
        "string dataa [ maps ] ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "string dataa [ maps ] ;",
        "while ( cin >> a >> s )"
      ],
      "err_line": 2,
      "err_msg": "‘maps’ was not declared in this scope"
    }
  ]
}