{
  "meta": {
    "index": 75,
    "hitid": "3TL87MO8CMJ9553QJFKGSJ2UU3TFLA",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "1077A",
    "subid": "48695852"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "Q = integer",
      "code": "int Q ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read Q",
      "code": "cin >> Q ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement Q",
      "code": "while ( Q -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "a , b , k , sum , d = long long integer with sum = 0 , d = 1",
      "code": "long long int a , b , k , sum = 0 , d = 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read a , b , k",
      "code": "cin >> a >> b >> k ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( k modulo 2 is not 0 )",
      "code": "if ( k % 2 != 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "sum = a * ( k / 2 + 1 ) - b * ( k / 2 )",
      "code": "sum = a * ( k / 2 + 1 ) - b * ( k / 2 ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "sum = ( a - b ) * k / 2",
      "code": "sum = ( a - b ) * k / 2 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( 1 -- )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        5,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        10,
        5,
        3,
        6
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )",
        "if ( k % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        10,
        5,
        3,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        10,
        5,
        3,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5,
        6,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 0 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        5,
        6,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 0 )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> a >> b >> k )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        5,
        8,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> a >> b >> k )",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( cin >> a >> b >> k )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( 1 -- )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        10,
        3,
        6
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( 1 -- )",
        "if ( k % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        10,
        3,
        6,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( 1 -- )",
        "if ( k % 2 == 0 )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        10,
        3,
        6,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( 1 -- )",
        "if ( k % 2 == 0 )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( 1 -- )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        10,
        3,
        8,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( 1 -- )",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "while ( 1 -- )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( k % 2 == 0 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        6,
        8,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( k % 2 == 0 )",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( k % 2 == 0 )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        8,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << sum ;",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )",
        "if ( k % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        5,
        3,
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )",
        "if ( k % 2 == 0 )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        5,
        3,
        6,
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )",
        "if ( k % 2 == 0 )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3,
        8
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        5,
        3,
        8,
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "while ( 1 -- )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 0 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 0 )",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "if ( k % 2 == 0 )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b >> k )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( 1 -- )",
        "if ( k % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "while ( 1 -- )",
        "if ( k % 2 == 0 )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        2
      ],
      "mod_code": [
        "while ( 1 -- )",
        "if ( k % 2 == 0 )",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "while ( 1 -- )",
        "if ( k % 2 == 0 )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( 1 -- )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        3,
        8,
        2
      ],
      "mod_code": [
        "while ( 1 -- )",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( 1 -- )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( k % 2 == 0 )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "if ( k % 2 == 0 )",
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( k % 2 == 0 )",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "do",
        "gets ( Q ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}