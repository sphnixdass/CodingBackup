{
  "meta": {
    "index": 1416,
    "hitid": "3QGTX7BCHPW18XR5S4YGEMMFJVLZ5H",
    "workerid": "A1AYVATMT88U1W",
    "probid": "266A",
    "subid": "48993057"
  },
  "lines": [
    {
      "line": 0,
      "text": "maximum of long integer a , b",
      "code": "long long max ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a > b , return a else return b",
      "code": "return a > b ? a : b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "minimum of long integer a , b",
      "code": "long long min ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "if a < b , return a else return b",
      "code": "return a < b ? a : b ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "long long modd of long integer a",
      "code": "long long modd ( long long a )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "if a less than 0 , return a = a * - 1",
      "code": "if ( a < 0LL ) return a * - 1LL ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return a",
      "code": "return a ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "let ans be a integer with value is equal to 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for ( i = 1 to n exclusive )",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if ( ( i - 1 ) th element in array s is equal to ith element in array s )",
      "code": "if ( s [ i - 1 ] == s [ i ] )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "let the i - 1th element in array s is initialized to a character value c",
      "code": "char c = s [ i - 1 ] ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "while ( ith element of array s is equal to c )",
      "code": "while ( s [ i ] == c )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "increase i value by 1",
      "code": "i ++ ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "increase ans value by 1",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "decrease i value by 1",
      "code": "i -- ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "min ( int a , b ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘b’ has not been declared"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "long long modd = a ;"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "maximum = max ( a , b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "min ( a , b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected constructor, destructor, or type conversion before ‘(’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 12,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( s [ 1 ) == s [ 1 ] )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "s . 1th ( i - 1 ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3,
        6
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "long long modd = a ;"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3,
        6,
        17
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3,
        6,
        18
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "long long modd = a ;",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        3,
        6,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "long long modd = a ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3,
        17
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3,
        17,
        18
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        3,
        17,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3,
        18
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        3,
        18,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        3,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "min ( int a , b ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "long long modd = a ;"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        17
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        17,
        18
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        6,
        17,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        18
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "long long modd = a ;",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        6,
        18,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "long long modd = a ;",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        6,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "long long modd = a ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        17,
        18
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        17,
        18,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        17,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        18,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "maximum < max ( a , b ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 0,
      "err_msg": "‘maximum’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "long long modd = a ;"
      ],
      "err_line": 3,
      "err_msg": "‘b’ has not been declared"
    },
    {
      "mod_line": [
        3,
        6,
        17
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )"
      ],
      "err_line": 3,
      "err_msg": "‘b’ has not been declared"
    },
    {
      "mod_line": [
        3,
        6,
        17,
        18
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6,
        17,
        19
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 3,
      "err_msg": "‘b’ has not been declared"
    },
    {
      "mod_line": [
        3,
        6,
        18
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "long long modd = a ;",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6,
        18,
        19
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "long long modd = a ;",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6,
        19
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "long long modd = a ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 3,
      "err_msg": "‘b’ has not been declared"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )"
      ],
      "err_line": 3,
      "err_msg": "‘b’ has not been declared"
    },
    {
      "mod_line": [
        3,
        17,
        18
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        17,
        18,
        19
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        17,
        19
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 3,
      "err_msg": "‘b’ has not been declared"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        18,
        19
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "min ( int a , b ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 3,
      "err_msg": "‘b’ has not been declared"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        18
      ],
      "mod_code": [
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        6,
        17,
        18,
        19
      ],
      "mod_code": [
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        6,
        17,
        19
      ],
      "mod_code": [
        "long long modd = a ;",
        "if ( s [ 1 - 1 ] == ' s ' )",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "long long modd = a ;",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        6,
        18,
        19
      ],
      "mod_code": [
        "long long modd = a ;",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "long long modd = a ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        17,
        18,
        19
      ],
      "mod_code": [
        "if ( s [ 1 - 1 ] == ' s ' )",
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "s . 1th ( s [ i ] ) ;",
        "while ( s [ i ] == ' c ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid suffix \"th\" on integer constant"
    }
  ]
}