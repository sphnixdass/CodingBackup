{
  "meta": {
    "index": 2270,
    "hitid": "3CESM1J3EIXTX6MEM0OE7O6XZBXW6K",
    "workerid": "A28TIENUWLMMIP",
    "probid": "58A",
    "subid": "42305101"
  },
  "lines": [
    {
      "line": 0,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let cek be a boolen",
      "code": "bool cek ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let temp , temp1 , temp2 , temp3 , and temp4 be integers",
      "code": "int temp , temp1 , temp2 , temp3 , temp4 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read in s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to i < s . length ( )",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set temp to i",
      "code": "temp = i ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ i ] is equal to ' h '",
      "code": "if ( s [ i ] == ' h ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set cek to true",
      "code": "cek = true ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "break out of the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "or else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if cek is equal to true",
      "code": "if ( cek == true )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for i = temp + 1 to i < s . length ( )",
      "code": "for ( int i = temp + 1 ; i < s . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set temp1 to i",
      "code": "temp1 = i ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if s [ i ] is equal to ' e '",
      "code": "if ( s [ i ] == ' e ' )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "set cek to true",
      "code": "cek = true ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "break out of the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "or else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 23,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if cek is equal to true",
      "code": "if ( cek == true )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "for i = temp1 + 1 to i < s . length ( )",
      "code": "for ( int i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "set temp2 to i",
      "code": "temp2 = i ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "if s [ i ] is equal to ' l '",
      "code": "if ( s [ i ] == ' l ' )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "set cek to true",
      "code": "cek = true ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "break out of the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "or else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 35,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "if cek is equal to true",
      "code": "if ( cek == true )",
      "indent": 1
    },
    {
      "line": 40,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 2
    },
    {
      "line": 41,
      "text": "for i = temp2 + 1 to i < s . length ( )",
      "code": "for ( int i = temp2 + 1 ; i < s . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 42,
      "text": "set temp3 to i",
      "code": "temp3 = i ;",
      "indent": 3
    },
    {
      "line": 43,
      "text": "if s [ i ] is equal to ' l '",
      "code": "if ( s [ i ] == ' l ' )",
      "indent": 3
    },
    {
      "line": 44,
      "text": "set cek to true",
      "code": "cek = true ;",
      "indent": 4
    },
    {
      "line": 45,
      "text": "break out of the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 46,
      "text": "or else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 47,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 4
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 51,
      "text": "if cek is equal to true",
      "code": "if ( cek == true )",
      "indent": 1
    },
    {
      "line": 52,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 2
    },
    {
      "line": 53,
      "text": "for i = temp3 + 1 to i < s . length ( )",
      "code": "for ( int i = temp3 + 1 ; i < s . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 54,
      "text": "set temp4 to i",
      "code": "temp4 = i ;",
      "indent": 3
    },
    {
      "line": 55,
      "text": "if s [ i ] is equal to ' o '",
      "code": "if ( s [ i ] == ' o ' )",
      "indent": 3
    },
    {
      "line": 56,
      "text": "set cek to true",
      "code": "cek = true ;",
      "indent": 4
    },
    {
      "line": 57,
      "text": "break out of the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 58,
      "text": "or else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 59,
      "text": "set cek to false",
      "code": "cek = false ;",
      "indent": 4
    },
    {
      "line": 60,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 61,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 62,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 63,
      "text": "if cek is equal to true",
      "code": "if ( cek == true )",
      "indent": 1
    },
    {
      "line": 64,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 65,
      "text": "or else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 66,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 67,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 68,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 69,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "cek = a ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "cek = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> s [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = temp + 1 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "temp1 to ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "temp2 to ;"
      ],
      "err_line": 30,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 34,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "for ( i = temp2 + 1 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 41,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "C = i ;"
      ],
      "err_line": 42,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 46,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 49,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "for ( i = temp3 + 1 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 53,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        54
      ],
      "mod_code": [
        "C = i ;"
      ],
      "err_line": 54,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        57
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 58,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        58
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 61,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        65
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 68,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        29
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        22
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        22,
        8
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        22,
        44
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do",
        "bool cek = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        22,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        8
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        8,
        44
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "if ( ! s [ i ] )",
        "bool cek = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        8,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "if ( ! s [ i ] )",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        44
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "bool cek = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        44,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "cek = a ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22,
        8
      ],
      "mod_code": [
        "cek = a ;",
        "do",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22,
        8,
        44
      ],
      "mod_code": [
        "cek = a ;",
        "do",
        "if ( ! s [ i ] )",
        "bool cek = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22,
        8,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "do",
        "if ( ! s [ i ] )",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22,
        44
      ],
      "mod_code": [
        "cek = a ;",
        "do",
        "bool cek = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22,
        44,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "do",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "do",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "cek = a ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8,
        44
      ],
      "mod_code": [
        "cek = a ;",
        "if ( ! s [ i ] )",
        "bool cek = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8,
        44,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "if ( ! s [ i ] )",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "if ( ! s [ i ] )",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        44
      ],
      "mod_code": [
        "cek = a ;",
        "bool cek = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        44,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "cek = a ;",
        "temp to ;"
      ],
      "err_line": 1,
      "err_msg": "‘cek’ does not name a type"
    },
    {
      "mod_line": [
        29,
        22
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        22,
        8
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do",
        "if ( ! s [ i ] )"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        22,
        8,
        44
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do",
        "if ( ! s [ i ] )",
        "bool cek = true ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        22,
        8,
        7
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do",
        "if ( ! s [ i ] )",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        29,
        22,
        44
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do",
        "bool cek = true ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        22,
        44,
        7
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        29,
        22,
        7
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "do",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        29,
        8
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "if ( ! s [ i ] )"
      ],
      "err_line": 29,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        8,
        44
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "if ( ! s [ i ] )",
        "bool cek = true ;"
      ],
      "err_line": 29,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        8,
        44,
        7
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "if ( ! s [ i ] )",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        29,
        8,
        7
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "if ( ! s [ i ] )",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        29,
        44
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "bool cek = true ;"
      ],
      "err_line": 29,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        44,
        7
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        29,
        7
      ],
      "mod_code": [
        "for ( i = temp1 + 1 ; i < s . length ( ) ; i ++ )",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        22,
        8
      ],
      "mod_code": [
        "do",
        "if ( ! s [ i ] )"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        8,
        44
      ],
      "mod_code": [
        "do",
        "if ( ! s [ i ] )",
        "bool cek = true ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        8,
        44,
        7
      ],
      "mod_code": [
        "do",
        "if ( ! s [ i ] )",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        22,
        8,
        7
      ],
      "mod_code": [
        "do",
        "if ( ! s [ i ] )",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        22,
        44
      ],
      "mod_code": [
        "do",
        "bool cek = true ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        44,
        7
      ],
      "mod_code": [
        "do",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        22,
        7
      ],
      "mod_code": [
        "do",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        44,
        7
      ],
      "mod_code": [
        "if ( ! s [ i ] )",
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( ! s [ i ] )",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        44,
        7
      ],
      "mod_code": [
        "bool cek = true ;",
        "temp to ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘to’"
    }
  ]
}