{
  "meta": {
    "index": 2333,
    "hitid": "3Q9SPIIRWJGUK8YHCD5QNT8JU7LWAX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "117A",
    "subid": "27431308"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , m , temp , si , fi , t and position",
      "code": "int n , m , temp , si , fi , t , position ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set value of temp to m - 1",
      "code": "temp = m - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create booleans up , down , gotodown and gotoup = false",
      "code": "bool up = false , down = false , gotodown = false , gotoup = false ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "create integer moves = 0",
      "code": "int moves = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read si , fi and t",
      "code": "cin >> si >> fi >> t ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "position = t modulo temp",
      "code": "position = t % temp ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if t / temp % 2",
      "code": "if ( t / temp % 2 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set value of down to true",
      "code": "down = true ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set position to m - position",
      "code": "position = m - position ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set up to true",
      "code": "up = true ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment position",
      "code": "position ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if si - fi is greater than 0",
      "code": "if ( si - fi > 0 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "assign value of true to gotodown",
      "code": "gotodown = true ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else if si - fi is less than 0",
      "code": "else if ( si - fi < 0 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set gotoup to true",
      "code": "gotoup = true ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if down = 1 & & gotodown = 1",
      "code": "if ( down == 1 && gotodown == 1 )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if position > = si",
      "code": "if ( position >= si )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "assign value of ( position - fi ) to moves",
      "code": "moves = ( position - fi ) ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 24,
      "text": "assign value of ( position - 1 ) + temp + ( m - fi ) to moves",
      "code": "moves = ( position - 1 ) + temp + ( m - fi ) ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else if down = 1 & & gotoup = 1",
      "code": "else if ( down == 1 && gotoup == 1 )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "assign value of ( position - 1 ) + ( fi - 1 ) to moves",
      "code": "moves = ( position - 1 ) + ( fi - 1 ) ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "if up = 1 & & gotoup = 1",
      "code": "if ( up == 1 && gotoup == 1 )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if position < = si",
      "code": "if ( position <= si )",
      "indent": 3
    },
    {
      "line": 31,
      "text": "assign value of fi - position to moves",
      "code": "moves = fi - position ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 33,
      "text": "assign value of ( m - position ) + temp + ( fi - 1 ) to moves",
      "code": "moves = ( m - position ) + temp + ( fi - 1 ) ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 35,
      "text": "else if up = 1 & & gotodown = true",
      "code": "else if ( up == 1 && gotodown == true )",
      "indent": 2
    },
    {
      "line": 36,
      "text": "moves = ( m - position ) + ( m - fi )",
      "code": "moves = ( m - position ) + ( m - fi ) ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "print moves + t",
      "code": "cout << moves + t << endl ;",
      "indent": 2
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , temp , fi , fi , t , position ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int fi’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool up = false , down , gotodown = false ;"
      ],
      "err_line": 19,
      "err_msg": "‘gotoup’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else if ( position >= si )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "else if ( up == 1 && gotodown = true )"
      ],
      "err_line": 35,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        36,
        12
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        13
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "bool up = true ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        13,
        11
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "bool up = true ;",
        "position -= position ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        13,
        8
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "bool up = true ;",
        "position %= temp ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        13,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "bool up = true ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        11
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "position -= position ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        11,
        8
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "position -= position ;",
        "position %= temp ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        11,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "position -= position ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        8
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "position %= temp ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        8,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "position %= temp ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        12,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        36,
        13,
        11,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "bool up = true ;",
        "position -= position ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        13,
        8,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "bool up = true ;",
        "position %= temp ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        13,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "bool up = true ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        11,
        8,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "position -= position ;",
        "position %= temp ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        11,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "position -= position ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        8,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "position %= temp ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        36,
        23
      ],
      "mod_code": [
        "int moves = ( m - position ) + ( m - fi ) ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "do",
        "bool up = true ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        13,
        11
      ],
      "mod_code": [
        "do",
        "bool up = true ;",
        "position -= position ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        13,
        11,
        8
      ],
      "mod_code": [
        "do",
        "bool up = true ;",
        "position -= position ;",
        "position %= temp ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        13,
        11,
        23
      ],
      "mod_code": [
        "do",
        "bool up = true ;",
        "position -= position ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        13,
        8
      ],
      "mod_code": [
        "do",
        "bool up = true ;",
        "position %= temp ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        13,
        8,
        23
      ],
      "mod_code": [
        "do",
        "bool up = true ;",
        "position %= temp ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        13,
        23
      ],
      "mod_code": [
        "do",
        "bool up = true ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "do",
        "position -= position ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        11,
        8
      ],
      "mod_code": [
        "do",
        "position -= position ;",
        "position %= temp ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        11,
        8,
        23
      ],
      "mod_code": [
        "do",
        "position -= position ;",
        "position %= temp ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        11,
        23
      ],
      "mod_code": [
        "do",
        "position -= position ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "do",
        "position %= temp ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        8,
        23
      ],
      "mod_code": [
        "do",
        "position %= temp ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        12,
        23
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        13,
        11,
        8,
        23
      ],
      "mod_code": [
        "bool up = true ;",
        "position -= position ;",
        "position %= temp ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        11,
        23
      ],
      "mod_code": [
        "bool up = true ;",
        "position -= position ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8,
        23
      ],
      "mod_code": [
        "bool up = true ;",
        "position %= temp ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        23
      ],
      "mod_code": [
        "bool up = true ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        8,
        23
      ],
      "mod_code": [
        "position -= position ;",
        "position %= temp ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "position -= position ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        23
      ],
      "mod_code": [
        "position %= temp ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}