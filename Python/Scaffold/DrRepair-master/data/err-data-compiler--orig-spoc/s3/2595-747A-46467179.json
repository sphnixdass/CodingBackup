{
  "meta": {
    "index": 2595,
    "hitid": "3Z56AA6EK4UXSUS0IYIRYQ4619H6M1",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "747A",
    "subid": "46467179"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x , a , b = int , hasil = 10000",
      "code": "int x , a , b , hasil = 10000 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to sqrt ( x ) inclusive",
      "code": "for ( int i = 1 ; i <= sqrt ( x ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if x is multiple of i",
      "code": "if ( x % i == 0 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "a = i",
      "code": "a = i ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "b = x / i",
      "code": "b = x / i ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if b - a < hasil",
      "code": "if ( b - a < hasil )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "hasil = b - a",
      "code": "hasil = b - a ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "b = b",
      "code": "b = b ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "a = a",
      "code": "a = a ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print a , space , b",
      "code": "cout << a << \" \" << b << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x , a , b = 10000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘hasil’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        5,
        1
      ],
      "mod_code": [
        "b /= i ;",
        "if ( x % i )",
        "int a = i ;",
        "int x , a , b = 10000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘hasil’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        1
      ],
      "mod_code": [
        "b /= i ;",
        "if ( x % i )",
        "int x , a , b = 10000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘hasil’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        1
      ],
      "mod_code": [
        "b /= i ;",
        "int a = i ;",
        "int x , a , b = 10000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘hasil’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "b /= i ;",
        "int x , a , b = 10000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘hasil’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "if ( x % i )",
        "int a = i ;",
        "int x , a , b = 10000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘hasil’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( x % i )",
        "int x , a , b = 10000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘hasil’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "int a = i ;",
        "int x , a , b = 10000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘hasil’ was not declared in this scope"
    }
  ]
}