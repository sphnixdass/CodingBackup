{
  "meta": {
    "index": 333,
    "hitid": "3UQVX1UPFSBC7F2S6RJQAGGHI1E023",
    "workerid": "AIWEXPJAU66D9",
    "probid": "544A",
    "subid": "48631109"
  },
  "lines": [
    {
      "line": 0,
      "text": "string function ans with int arguments i and j and string argument s",
      "code": "string ans ( int i , int j , string s )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string p = \" \"",
      "code": "string p = \" \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "increment i up to j inclusive , increasing p by s [ i ] on each loop",
      "code": "for ( i ; i <= j ; i ++ ) { p += s [ i ] ; }",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return p",
      "code": "return p ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "arr is an array of integers with size 30",
      "code": "int arr [ 30 ] ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "k , n , i , j , l and m are ints with l = 0 and j = 1",
      "code": "int k , n , i , j = 1 , l = 0 , m ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare vector of strings called vii",
      "code": "vector < string > vii ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "s and p are strings with p = \" \"",
      "code": "string s , p = \" \" ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read k and s",
      "code": "cin >> k >> s ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare vector of integers called viii",
      "code": "vector < int > viii ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "change arr [ s [ 0 ] - ' a ' ] to 1",
      "code": "arr [ s [ 0 ] - ' a ' ] = 1 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "push length of s - 1 into viii",
      "code": "viii . push_back ( s . size ( ) - 1 ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 1 to length of s exclusive incrementing i",
      "code": "for ( i = 1 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if arr [ s [ i ] - ' a ' ] is 0",
      "code": "if ( ! arr [ s [ i ] - ' a ' ] )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "change the value of arr [ s [ i ] - ' a ' ] to 1",
      "code": "arr [ s [ i ] - ' a ' ] = 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if j = k , stop the loop",
      "code": "if ( j == k ) { break ; }",
      "indent": 3
    },
    {
      "line": 18,
      "text": "add i - 1 to viii",
      "code": "viii . push_back ( i - 1 ) ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "sort viii",
      "code": "sort ( viii . begin ( ) , viii . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "increment i in a for loop from 0 to the size of viii exclusive",
      "code": "for ( i = 0 ; i < viii . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "assign the new value = the return value of ans ( l , viii [ i ] , s ) to p",
      "code": "p = ans ( l , viii [ i ] , s ) ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "push p to the end of vii",
      "code": "vii . push_back ( p ) ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "change l to viii [ i ] + 1",
      "code": "l = viii [ i ] + 1 ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if length of vii is less than k",
      "code": "if ( vii . size ( ) < k )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "print all elements of vector vii in a loop",
      "code": "for ( i = 0 ; i < vii . size ( ) ; i ++ ) { cout << vii [ i ] << endl ; }",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "viii += i - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string ans ( int i , int j , int s )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool p = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘p’ from ‘bool’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "vector < vii > vii ;"
      ],
      "err_line": 8,
      "err_msg": "‘vii’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( cin >> k >> s )"
      ],
      "err_line": 13,
      "err_msg": "‘viii’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "vector < int > viii ( temp ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "arr [ s [ 0 ] - ' a ' ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "arr [ i [ i ] - ' a ' ] = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "p = l ( l , viii [ i ] , s ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘l’ cannot be used as a function"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "vii . push ( p ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "if ( vii . length ( ) < k )"
      ],
      "err_line": 28,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘length’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 34,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        2
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        7
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "int k , n , i , j , l = 0 , m = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        18
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "viii += i - 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        7
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "int k , n , i , j , l = 0 , m = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        7,
        18
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        7,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        18
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "viii += i - 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        18,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        1,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "string p = \" \" ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        2,
        7
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "int k , n , i , j , l = 0 , m = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        2,
        7,
        18
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        2,
        7,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        2,
        18
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "viii += i - 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        2,
        18,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        2,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "int k , n , i , j , l = 0 , m = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        7,
        18
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        7,
        18,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        7,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "viii += i - 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        18,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        22
      ],
      "mod_code": [
        "string ans ( int i , int j , int j )",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        18
      ],
      "mod_code": [
        "string p = \" \" ;",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        22
      ],
      "mod_code": [
        "string p = \" \" ;",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        2,
        18
      ],
      "mod_code": [
        "string p = \" \" ;",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "viii += i - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        2,
        18,
        22
      ],
      "mod_code": [
        "string p = \" \" ;",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        2,
        22
      ],
      "mod_code": [
        "string p = \" \" ;",
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        7,
        18
      ],
      "mod_code": [
        "string p = \" \" ;",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        7,
        18,
        22
      ],
      "mod_code": [
        "string p = \" \" ;",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        7,
        22
      ],
      "mod_code": [
        "string p = \" \" ;",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "string p = \" \" ;",
        "viii += i - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        18,
        22
      ],
      "mod_code": [
        "string p = \" \" ;",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "string p = \" \" ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        7,
        18
      ],
      "mod_code": [
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        7,
        18,
        22
      ],
      "mod_code": [
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        7,
        22
      ],
      "mod_code": [
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "int k , n , i , j , l = 0 , m = 0 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "viii += i - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        18,
        22
      ],
      "mod_code": [
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        22
      ],
      "mod_code": [
        "for ( int i = j ; i <= j ; i ++ ) { p += s [ i ] ; }",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        18,
        22
      ],
      "mod_code": [
        "int k , n , i , j , l = 0 , m = 0 ;",
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        22
      ],
      "mod_code": [
        "int k , n , i , j , l = 0 , m = 0 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        18,
        22
      ],
      "mod_code": [
        "viii += i - 1 ;",
        "sort ( viii , viii + n ) ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    }
  ]
}