{
  "meta": {
    "index": 1732,
    "hitid": "39KV3A5D181JUPJAL5J5GD38O9JS7Y",
    "workerid": "AIWEXPJAU66D9",
    "probid": "71A",
    "subid": "49026876"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare ints a and p",
      "code": "int a , p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create new array of characters s with 100 elements",
      "code": "char s [ 100 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read from the input to a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "in a for loop , change i from 0 to a exclusive incrementing i",
      "code": "for ( int i = 0 ; i < a ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read from the input to s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change the value of p to the length of s",
      "code": "p = strlen ( s ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if p is greater than 10",
      "code": "if ( p > 10 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print s [ 0 ] , p - 2 and s [ p - 1 ]",
      "code": "cout << s [ 0 ] << ( p - 2 ) << s [ p - 1 ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print s",
      "code": "cout << s ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print ' \\ n '",
      "code": "cout << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "p = s . length ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "p = s . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        9
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        3
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        3
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "do",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "do",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        3
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        3,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        6,
        10,
        9
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s << endl ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        6,
        10,
        9,
        3
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s << endl ;",
        "do",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10,
        9,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s << endl ;",
        "do",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        3
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s << endl ;",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10,
        3,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s << endl ;",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "cout << s << endl ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100]’"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "do",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        3,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "do",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "do",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "p = s . length ( ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        9
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        10,
        9,
        3
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;",
        "do",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10,
        9,
        4
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;",
        "do",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        3
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10,
        3,
        4
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10,
        4
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "cout << s << endl ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        9,
        3
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "do",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        3,
        4
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "do",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        4
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "do",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3,
        4
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "cout << s [ 0 ] << \" \" << p - 2 << \" \" << s [ p - 1 ] << endl ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "cout << s << endl ;",
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        9,
        3
      ],
      "mod_code": [
        "cout << s << endl ;",
        "do",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9,
        3,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "do",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "do",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "cout << s << endl ;",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "cout << s << endl ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "do",
        "gets ( a ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        3,
        4
      ],
      "mod_code": [
        "do",
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "do",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "gets ( a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}