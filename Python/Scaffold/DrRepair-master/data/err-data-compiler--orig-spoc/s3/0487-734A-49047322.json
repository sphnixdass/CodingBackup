{
  "meta": {
    "index": 487,
    "hitid": "3W3RSPVVGSLYON0GE4FFEJ3X339LU5",
    "workerid": "A1AYVATMT88U1W",
    "probid": "734A",
    "subid": "49047322"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let sumA , sumD be integers with values as sumA is equal to 0 and sumD is equal to 0",
      "code": "int sumA = 0 , sumD = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n ( exclusive )",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if ( ith element of array s is equal to A )",
      "code": "if ( s [ i ] == ' A ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increase the value of sumA by 1",
      "code": "++ sumA ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else , do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase the value of sumD by 1",
      "code": "++ sumD ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if ( sumA is greater than sumD )",
      "code": "if ( sumA > sumD )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print Anton and newline",
      "code": "cout << \" Anton \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else if ( sumD is greater than sumA )",
      "code": "else if ( sumD > sumA )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print Danik and newline",
      "code": "cout << \" Danik \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else , do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print Friendship and newline",
      "code": "cout << \" Friendship \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << Anton << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << Danik << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s [ j ] == ' A ' )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << Anton << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        13,
        15
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;",
        "cout << Danik << endl ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        6
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        13,
        6
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        13,
        6,
        15
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        13,
        6,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        13,
        15
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;",
        "cout << Danik << \" \\n \" ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        13,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Anton << endl ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Danik << endl ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        15,
        6
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Danik << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        15,
        6,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Danik << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        15,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Danik << endl ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        6,
        15
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << Danik << \" \\n \" ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        6,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        15,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "cout << Danik << \" \\n \" ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "int sumA = 0 , sumD = 0 , sumD = 0 ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sumD’"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        6
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        6,
        14
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        14
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << endl ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 13,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        15
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        15,
        14
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << Danik << \" \\n \" ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        14
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        14
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "cout << Danik << \" \\n \" ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 13,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "cout << Anton << endl ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 13,
      "err_msg": "‘Anton’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6,
        14
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "cout << Danik << endl ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 15,
      "err_msg": "‘Danik’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << Danik << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << Danik << \" \\n \" ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "cout << Danik << \" \\n \" ;",
        "else if ( sumD >= sumA )"
      ],
      "err_line": 15,
      "err_msg": "‘Danik’ was not declared in this scope"
    }
  ]
}