{
  "meta": {
    "index": 1209,
    "hitid": "3BAWBGQGYLTZMH0EF0OAR0NFMBWV7K",
    "workerid": "A1APYLD4DUK33J",
    "probid": "44A",
    "subid": "34497527"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare solution with string vector input , integer size as arguments , returning void",
      "code": "void solution ( vector < string > input , int size )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string vector stack",
      "code": "vector < string > stack ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 0 to size exclusive",
      "code": "for ( int i = 0 ; i < size ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if result of run find with beginning of stack , end of stack , input [ i ] as arguments is end of stack , add element input [ i ] to end of stack",
      "code": "if ( find ( stack . begin ( ) , stack . end ( ) , input [ i ] ) == stack . end ( ) ) { stack . push_back ( input [ i ] ) ; }",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print size of stack , print newline",
      "code": "cout << stack . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create integer total",
      "code": "int total ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read total",
      "code": "cin >> total ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create string vector input",
      "code": "vector < string > input ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read line from cin to str",
      "code": "getline ( cin , str ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to total exclusive",
      "code": "for ( int i = 0 ; i < total ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read line from cin to str",
      "code": "getline ( cin , str ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "add element str to end of input",
      "code": "input . push_back ( str ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "run solution with input , total as arguments",
      "code": "solution ( input , total ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void solution ( vector < string > input )"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << stack << endl << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void solution ( string input , int size )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(char&)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < string > vector ;"
      ],
      "err_line": 3,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < size ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) == input [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator==’ (operand types are ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ and ‘std::__cxx11::basic_string<char>’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << stack << endl << cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "gets ( total ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "vector < int > input ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘std::vector<int>::push_back(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int str ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cin >> cin >> str ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < total ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cin >> cin >> str ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "input . push ( str ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "solution ( ( input , total ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "could not convert ‘((void)0, total)’ from ‘int’ to ‘std::vector<std::__cxx11::basic_string<char> >’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        5
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        11
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << endl ;",
        "int str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "int str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11,
        5
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "int str ;",
        "cout << stack << endl << cout << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        5
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << cout << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << cout << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "cout << stack << endl << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        11
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "cout << stack << endl << endl ;",
        "int str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        11,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "cout << stack << endl << endl ;",
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "cout << stack << endl << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "int str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        5
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "int str ;",
        "cout << stack << endl << cout << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        5,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "int str ;",
        "cout << stack << endl << cout << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "cout << stack << endl << cout << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "cout << stack << endl << cout << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "void solution ( vector < string > input )",
        "cin >> cin >> str ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << endl ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << endl ;",
        "int str ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        14
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << endl ;",
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        5,
        14
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "int str ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        11,
        5
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "int str ;",
        "cout << stack << endl << cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        11,
        5,
        14
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "int str ;",
        "cout << stack << endl << cout << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        5,
        14
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cout << stack << endl << cout << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "if ( find ( input . begin ( ) , input . end ( ) , input [ i ] ) )",
        "cin >> cin >> str ;"
      ],
      "err_line": 3,
      "err_msg": "could not convert ‘std::find<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >(input.std::vector<_Tp, _Alloc>::begin<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), input.std::vector<_Tp, _Alloc>::end<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(), (*(const std::__cxx11::basic_string<char>*)input.std::vector<_Tp, _Alloc>::operator[]<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >(((std::vector<std::__cxx11::basic_string<char> >::size_type)i))))’ from ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ to ‘bool’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "cout << stack << endl << endl ;",
        "int str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        5,
        11,
        14
      ],
      "mod_code": [
        "cout << stack << endl << endl ;",
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "cout << stack << endl << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "int str ;",
        "cout << stack << endl << cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        5,
        14
      ],
      "mod_code": [
        "int str ;",
        "cout << stack << endl << cout << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "int str ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "cout << stack << endl << cout << endl ;",
        "cin >> cin >> str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    }
  ]
}