{
  "meta": {
    "index": 108,
    "hitid": "3IKDQS3DQEU0CSBA7AX2SXPZGM1ICI",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "391A",
    "subid": "9719330"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "index = char",
      "code": "char index ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "count , ans = int with count = 1 and ans = 0",
      "code": "int count = 1 , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set index to s [ 0 ]",
      "code": "index = s [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to length of s",
      "code": "for ( int i = 1 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is not index",
      "code": "if ( s [ i ] != index )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if count is even then increment ans",
      "code": "if ( count % 2 == 0 ) { ans ++ ; }",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set count to 1",
      "code": "count = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set index to s [ i ]",
      "code": "index = s [ i ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if count is even then increment ans",
      "code": "if ( count % 2 == 0 ) { ans ++ ; }",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int index = s [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        7,
        5,
        10
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        7,
        5,
        10,
        3
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;",
        "int count = 1 , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        7,
        5,
        10,
        4
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        10,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "int count = 1 , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        7,
        5,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "int count = 1 , ans = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        3,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "int count = 1 , ans = 1 ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        7,
        5,
        4
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        4,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        7,
        5,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ 0 ] ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        7,
        10,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ i ] ;",
        "int count = 1 , ans = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        10,
        3,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ i ] ;",
        "int count = 1 , ans = 1 ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        10,
        4
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ i ] ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        10,
        4,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ i ] ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        10,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int index = s [ i ] ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int count = 1 , ans = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        4,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int count = 1 , ans = 1 ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        3,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "int count = 1 , ans = 1 ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        4,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' index ' )",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        5,
        10,
        3
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;",
        "int count = 1 , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        5,
        10,
        3,
        4
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;",
        "int count = 1 , ans = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        10,
        3,
        1
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;",
        "int count = 1 , ans = 1 ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        5,
        10,
        4
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        10,
        4,
        1
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        5,
        10,
        1
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int index = s [ i ] ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int count = 1 , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int count = 1 , ans = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        3,
        4,
        1
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int count = 1 , ans = 1 ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "int count = 1 , ans = 1 ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        1
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "int index = s [ 0 ] ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int index’"
    },
    {
      "mod_line": [
        10,
        3,
        4
      ],
      "mod_code": [
        "int index = s [ i ] ;",
        "int count = 1 , ans = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3,
        4,
        1
      ],
      "mod_code": [
        "int index = s [ i ] ;",
        "int count = 1 , ans = 1 ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        3,
        1
      ],
      "mod_code": [
        "int index = s [ i ] ;",
        "int count = 1 , ans = 1 ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "int index = s [ i ] ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        4,
        1
      ],
      "mod_code": [
        "int index = s [ i ] ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "int index = s [ i ] ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int count = 1 , ans = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "int count = 1 , ans = 1 ;",
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int count = 1 , ans = 1 ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}