{
  "meta": {
    "index": 2778,
    "hitid": "391FPZIE4CGW2RHQNJ0HMRAQN90HU5",
    "workerid": "A1APYLD4DUK33J",
    "probid": "454A",
    "subid": "47465707"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer iskom = n / 2",
      "code": "int iskom = n / 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer tmp = iskom + 1",
      "code": "int tmp = iskom + 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer k1 = 1",
      "code": "int k1 = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to iskom exclusive",
      "code": "for ( int i = 0 ; i < iskom ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare integer k = 1",
      "code": "int k = 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "while k is not tmp",
      "code": "while ( k != tmp )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print ' * '",
      "code": "cout << ' * ' ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for p = 0 to k1 exclusive , print ' D '",
      "code": "for ( int p = 0 ; p < k1 ; p ++ ) cout << ' D ' ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "while k1 + k is less than or equal to n",
      "code": "while ( k1 + k <= n )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print ' * '",
      "code": "cout << ' * ' ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment k1 by 2",
      "code": "k1 += 2 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "decrement tmp",
      "code": "tmp -- ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to n exclusive , print ' D '",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cout << ' D ' ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 0 to iskom exclusive",
      "code": "for ( int i = 0 ; i < iskom ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "decrement k1 by 2",
      "code": "k1 -= 2 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "increment tmp",
      "code": "tmp ++ ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "declare integer k = 1",
      "code": "int k = 1 ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "while k is not tmp",
      "code": "while ( k != tmp )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print ' * '",
      "code": "cout << ' * ' ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "for j = 0 to k1 exclusive , print ' D '",
      "code": "for ( int j = 0 ; j < k1 ; j ++ ) cout << ' D ' ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "while k1 + k is less than or equal to n",
      "code": "while ( k1 + k <= n )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "print ' * '",
      "code": "cout << ' * ' ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int tmp += 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int k1 = l ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < iskom ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 0 ; i < iskom ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        5
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "int k1 = l ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        5,
        32
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "int k1 = l ;",
        "while ( k1 <= n )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        5,
        27
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "int k1 = l ;",
        "while ( k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        5,
        14
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "int k1 = l ;",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        32
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "while ( k1 <= n )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        32,
        27
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "while ( k1 <= n )",
        "while ( k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        32,
        14
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "while ( k1 <= n )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        27
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "while ( k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        27,
        14
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "while ( k )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        4,
        14
      ],
      "mod_code": [
        "while ( k )",
        "int tmp += 1 ;",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "while ( k )",
        "int k1 = l ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        32
      ],
      "mod_code": [
        "while ( k )",
        "int k1 = l ;",
        "while ( k1 <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        32,
        27
      ],
      "mod_code": [
        "while ( k )",
        "int k1 = l ;",
        "while ( k1 <= n )",
        "while ( k )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        32,
        14
      ],
      "mod_code": [
        "while ( k )",
        "int k1 = l ;",
        "while ( k1 <= n )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        27
      ],
      "mod_code": [
        "while ( k )",
        "int k1 = l ;",
        "while ( k )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        27,
        14
      ],
      "mod_code": [
        "while ( k )",
        "int k1 = l ;",
        "while ( k )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        14
      ],
      "mod_code": [
        "while ( k )",
        "int k1 = l ;",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "int k1 = l ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        5,
        32
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "int k1 = l ;",
        "while ( k1 <= n )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        5,
        32,
        27
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "int k1 = l ;",
        "while ( k1 <= n )",
        "while ( k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        5,
        32,
        14
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "int k1 = l ;",
        "while ( k1 <= n )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        5,
        27
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "int k1 = l ;",
        "while ( k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        5,
        27,
        14
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "int k1 = l ;",
        "while ( k )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        5,
        14
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "int k1 = l ;",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        32
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "while ( k1 <= n )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        32,
        27
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "while ( k1 <= n )",
        "while ( k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        32,
        27,
        14
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "while ( k1 <= n )",
        "while ( k )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        32,
        14
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "while ( k1 <= n )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        27
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "while ( k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        27,
        14
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "while ( k )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "int tmp += 1 ;",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        5,
        32
      ],
      "mod_code": [
        "int k1 = l ;",
        "while ( k1 <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        32,
        27
      ],
      "mod_code": [
        "int k1 = l ;",
        "while ( k1 <= n )",
        "while ( k )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        32,
        27,
        14
      ],
      "mod_code": [
        "int k1 = l ;",
        "while ( k1 <= n )",
        "while ( k )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        32,
        14
      ],
      "mod_code": [
        "int k1 = l ;",
        "while ( k1 <= n )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        27
      ],
      "mod_code": [
        "int k1 = l ;",
        "while ( k )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        27,
        14
      ],
      "mod_code": [
        "int k1 = l ;",
        "while ( k )",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "int k1 = l ;",
        "cout << ' * ' << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}