{
  "meta": {
    "index": 2767,
    "hitid": "36JW4WBR06E7J9K0SU5I0R9NDMLFH4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "454A",
    "subid": "39012362"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new integers i , j and k",
      "code": "int i , j , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "define new integers n , m and p",
      "code": "int n , m , p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read from the input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 and j = 1 while i and j < = n , increment i by 1 and j by 2",
      "code": "for ( i = 1 , j = 1 ; i <= n , j <= n ; i ++ , j += 2 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set k to ( n - j ) / 2",
      "code": "k = ( n - j ) / 2 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change p to k",
      "code": "p = k ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement k and print \" * \" in a loop , while k ! = 0",
      "code": "while ( k -- ) cout << \" * \" ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "change the value of m to j",
      "code": "m = j ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrement m and print \" D \" in a loop , while m ! = 0",
      "code": "while ( m -- ) cout << \" D \" ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" * \" in a loop , then p and keep the loop while p ! = 0",
      "code": "while ( p -- ) cout << \" * \" ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 1 and j = n - 2 while i < = n and j > = 1 , increment i and subtract 2 from j",
      "code": "for ( i = 1 , j = n - 2 ; i <= n , j >= 1 ; i ++ , j -= 2 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set k to ( n - j ) / 2",
      "code": "k = ( n - j ) / 2 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set p to k",
      "code": "p = k ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "while k ! = 0 , decrement it and print \" * \" in a loop",
      "code": "while ( k -- ) cout << \" * \" ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "assign the new value = j to m",
      "code": "m = j ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "while m ! = 0 , decrement it , then print \" D \" and keep the loop going",
      "code": "while ( m -- ) cout << \" D \" ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "decrement p and loop further , while p ! = 0 , printing \" * \" on each loop",
      "code": "while ( p -- ) cout << \" * \" ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "k -= j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "m to ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "k -= j )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "m = j )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        6
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "m to ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        10,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "k -= j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "k -= j )",
        "p to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "k -= j )",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10,
        6
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        10,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "p to ;",
        "m to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "m to ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        13,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )",
        "p to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        13,
        6
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        13,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "p to ;",
        "m to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        13,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "m to ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "k -= j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "k -= j )",
        "p to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "k -= j )",
        "p to ;",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "k -= j )",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "p to ;",
        "m to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = 1 ; i <= n ; i += 2 )",
        "m to ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10,
        13,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        13,
        5,
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )",
        "p to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        13,
        5,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        13,
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10,
        13,
        6,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "p to ;",
        "m to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10,
        13,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "m to ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "k -= j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        5,
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "k -= j )",
        "p to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        5,
        6,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "k -= j )",
        "p to ;",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        5,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "k -= j )",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10,
        6,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "p to ;",
        "m to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j != 0 ; j ++ ) cout << \" * \" ;",
        "m to ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )",
        "p to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        5,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )",
        "p to ;",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "k -= j )",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "p to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "p to ;",
        "m to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "for ( int i = 1 , j = n - 2 ; i <= n && j >= 1 ; i -= 2 )",
        "m to ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "k -= j )",
        "p to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "k -= j )",
        "p to ;",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "k -= j )",
        "m to ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "p to ;",
        "m to ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘to’"
    }
  ]
}