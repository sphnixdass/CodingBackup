{
  "meta": {
    "index": 385,
    "hitid": "3XEDXEGFX3I7OV6IVXPUAC2BZ100KP",
    "workerid": "A1XZJAF9DYWJ5G",
    "probid": "950A",
    "subid": "41383011"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "l , r , a , x , max , min , n = integers",
      "code": "int l , r , a , x , max , min , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read l , r , and a",
      "code": "cin >> l >> r >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a is equal to 0",
      "code": "if ( a == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if l is greater than r , let x equal r . Otherwise , let x equal l",
      "code": "x = l > r ? r : l ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "x = x * 2",
      "code": "x *= 2 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print x",
      "code": "cout << x << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "otherwise",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if l is greater than r , let min equal r , otherwise , let m equal l",
      "code": "min = l > r ? r : l ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if l is greater than r , let min equal l , otherwise , let m equal r",
      "code": "max = l > r ? l : r ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if min + a is less than max",
      "code": "if ( min + a < max )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "let x equal 2 * ( min + a )",
      "code": "x = 2 * ( min + a ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "print x",
      "code": "cout << x << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "n equals min + a - max",
      "code": "n = min + a - max ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "x equals max + n / 2",
      "code": "x = max + n / 2 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print x * 2",
      "code": "cout << x * 2 << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( l > r ) x = r . equal ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "return else ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( l > r ) min = r , m = l ;"
      ],
      "err_line": 8,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "return else ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        9,
        4
      ],
      "mod_code": [
        "if ( l > r ) min = r ;",
        "if ( l > r ) min = l ;",
        "if ( l > r ) x = r . equal ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9,
        4,
        15
      ],
      "mod_code": [
        "if ( l > r ) min = r ;",
        "if ( l > r ) min = l ;",
        "if ( l > r ) x = r . equal ( ) ;",
        "x += n / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9,
        4,
        11
      ],
      "mod_code": [
        "if ( l > r ) min = r ;",
        "if ( l > r ) min = l ;",
        "if ( l > r ) x = r . equal ( ) ;",
        "x -= ( min + a ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "if ( l > r ) min = r ;",
        "if ( l > r ) x = r . equal ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        4,
        15
      ],
      "mod_code": [
        "if ( l > r ) min = r ;",
        "if ( l > r ) x = r . equal ( ) ;",
        "x += n / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        4,
        15,
        11
      ],
      "mod_code": [
        "if ( l > r ) min = r ;",
        "if ( l > r ) x = r . equal ( ) ;",
        "x += n / 2 ;",
        "x -= ( min + a ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        4,
        11
      ],
      "mod_code": [
        "if ( l > r ) min = r ;",
        "if ( l > r ) x = r . equal ( ) ;",
        "x -= ( min + a ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( l > r ) min = l ;",
        "if ( l > r ) x = r . equal ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        4,
        15
      ],
      "mod_code": [
        "if ( l > r ) min = l ;",
        "if ( l > r ) x = r . equal ( ) ;",
        "x += n / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        4,
        15,
        11
      ],
      "mod_code": [
        "if ( l > r ) min = l ;",
        "if ( l > r ) x = r . equal ( ) ;",
        "x += n / 2 ;",
        "x -= ( min + a ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        4,
        11
      ],
      "mod_code": [
        "if ( l > r ) min = l ;",
        "if ( l > r ) x = r . equal ( ) ;",
        "x -= ( min + a ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "if ( l > r ) x = r . equal ( ) ;",
        "x += n / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        4,
        15,
        11
      ],
      "mod_code": [
        "if ( l > r ) x = r . equal ( ) ;",
        "x += n / 2 ;",
        "x -= ( min + a ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "if ( l > r ) x = r . equal ( ) ;",
        "x -= ( min + a ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘equal’ in ‘r’, which is of non-class type ‘int’"
    }
  ]
}