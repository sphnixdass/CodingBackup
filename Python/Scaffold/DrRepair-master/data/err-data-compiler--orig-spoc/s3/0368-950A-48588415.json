{
  "meta": {
    "index": 368,
    "hitid": "388FBO7JZRN5TWN60ISJUWDZ59JNYH",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "950A",
    "subid": "48588415"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b , c , d , e , f , g = integers",
      "code": "int a , b , c , d , e , f , g ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read a , b , c",
      "code": "while ( cin >> a >> b >> c )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if ( a is b )",
      "code": "if ( a == b )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "a = a + c / 2",
      "code": "a += c / 2 ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "b = b + c / 2",
      "code": "b += c / 2 ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "print a + b",
      "code": "cout << a + b << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "continue next iteration",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if ( a < b )",
      "code": "if ( a < b )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "while ( a < b and c > 0 )",
      "code": "while ( a < b and c > 0 )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "increment a",
      "code": "a ++ ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "decrement c",
      "code": "c -- ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "a = a + c / 2",
      "code": "a += c / 2 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "b = b + c / 2",
      "code": "b += c / 2 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 17,
      "text": "while ( b < a and c > 0 )",
      "code": "while ( b < a and c > 0 )",
      "indent": 4
    },
    {
      "line": 18,
      "text": "increment b",
      "code": "b ++ ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "decrement c",
      "code": "c -- ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 21,
      "text": "a = a + c / 2",
      "code": "a += c / 2 ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "b = b + c / 2",
      "code": "b += c / 2 ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "print min of a and b * 2",
      "code": "cout << min ( a , b ) * 2 << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        7
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        16
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        16,
        8
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        16,
        9
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        16,
        2
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        8
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        8,
        9
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        8,
        2
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        9
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        9,
        2
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "if ( a < ' b ' )",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        7,
        2
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        16
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        16,
        8
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        16,
        8,
        9
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        16,
        8,
        2
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        16,
        9
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        16,
        9,
        2
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "if ( a < ' b ' )",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        16,
        2
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        8
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        8,
        9
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        8,
        9,
        2
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "if ( a < ' b ' )",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        8,
        2
      ],
      "mod_code": [
        "cout << min ( a , b * 2 ) << endl ;",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        16,
        8
      ],
      "mod_code": [
        "do",
        "do",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        16,
        8,
        9
      ],
      "mod_code": [
        "do",
        "do",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        16,
        8,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        16,
        9
      ],
      "mod_code": [
        "do",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        16,
        9,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "if ( a < ' b ' )",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        16,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "do",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "if ( a < ' b ' )",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        8,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "do",
        "if ( a < ' b ' )",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        8,
        9
      ],
      "mod_code": [
        "do",
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        8,
        9,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "if ( a < ' b ' )",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        8,
        2
      ],
      "mod_code": [
        "do",
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        9,
        2
      ],
      "mod_code": [
        "do",
        "if ( a < ' b ' )",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "do",
        "if ( a < ' b ' )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9,
        2
      ],
      "mod_code": [
        "do",
        "if ( a < ' b ' )",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "do",
        "while ( cin >> a >> c >> c )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}