{
  "meta": {
    "index": 1368,
    "hitid": "3CVBMEMMXBAU4G5UAB76CZW6EB1H7Q",
    "workerid": "A1APYLD4DUK33J",
    "probid": "96A",
    "subid": "42325064"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer i",
      "code": "int i ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings m , n",
      "code": "string m , n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if first index of \" 0000000 \" in n is - 1 and first index of \" 1111111 \" in n is - 1",
      "code": "if ( n . find ( \" 0000000 \" ) == - 1 && n . find ( \" 1111111 \" ) == - 1 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( n == - 1 && n == - 1 && n == - 1 && n == - 1 )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "m , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( n . find ( \" 0000000 \" ) == - 1 && n == - 1 )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 9,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "if ( n == - 1 && n == - 1 && n == - 1 && n == - 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "if ( n == - 1 && n == - 1 && n == - 1 && n == - 1 )",
        "cin >> N ;",
        "m , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        6
      ],
      "mod_code": [
        "if ( n == - 1 && n == - 1 && n == - 1 && n == - 1 )",
        "cin >> N ;",
        "m , n ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "if ( n == - 1 && n == - 1 && n == - 1 && n == - 1 )",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( n == - 1 && n == - 1 && n == - 1 && n == - 1 )",
        "m , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "if ( n == - 1 && n == - 1 && n == - 1 && n == - 1 )",
        "m , n ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "if ( n == - 1 && n == - 1 && n == - 1 && n == - 1 )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "if ( n . find ( \" 0000000 \" ) == - 1 && n == - 1 )",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "if ( n . find ( \" 0000000 \" ) == - 1 && n == - 1 )",
        "cin >> N ;",
        "m , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        6
      ],
      "mod_code": [
        "if ( n . find ( \" 0000000 \" ) == - 1 && n == - 1 )",
        "cin >> N ;",
        "m , n ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "if ( n . find ( \" 0000000 \" ) == - 1 && n == - 1 )",
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( n . find ( \" 0000000 \" ) == - 1 && n == - 1 )",
        "m , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "if ( n . find ( \" 0000000 \" ) == - 1 && n == - 1 )",
        "m , n ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "if ( n . find ( \" 0000000 \" ) == - 1 && n == - 1 )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "cin >> N ;",
        "m , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "cin >> N ;",
        "m , n ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "cin >> N ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "m , n ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "‘m’ does not name a type"
    }
  ]
}