{
  "meta": {
    "index": 1140,
    "hitid": "3H1C3QRA01DOWN9OBR7B7IR7N63CE1",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "938A",
    "subid": "48377695"
  },
  "lines": [
    {
      "line": 0,
      "text": "n = int",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = array of 110 chars",
      "code": "char s [ 110 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "function check , get char c , returns bool",
      "code": "bool check ( char c )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return true if c is a vowel ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' )",
      "code": "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' || c == ' y ' ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read s + 1",
      "code": "cin >> s + 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if not check ( s [ i ] ) or not check ( s [ i - 1 ] ) print s [ i ]",
      "code": "if ( ! check ( s [ i ] ) || ! check ( s [ i - 1 ] ) ) cout << s [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool check ( char c , char c )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> s + l ;"
      ],
      "err_line": 7,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        0
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        0,
        6
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        0,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        0
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        0,
        6
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        0,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "char n ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        0,
        6
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        0,
        6,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "char n ;",
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        0,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "char n ;",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        6,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "bool check ( char c , char c )",
        "cin >> s + l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘char c’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6
      ],
      "mod_code": [
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6,
        7
      ],
      "mod_code": [
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        7
      ],
      "mod_code": [
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> s + l ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "return c == a ? a : ( ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> s + l ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6
      ],
      "mod_code": [
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6,
        7
      ],
      "mod_code": [
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        7
      ],
      "mod_code": [
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "char n ;",
        "cin >> s + l ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "return c == a ? ( c == ' e ' , ' e ' , ' e ' , ' o ' , ' u ' , ' y ' ) ;",
        "cin >> s + l ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "char n ;",
        "cin >> N ;"
      ],
      "err_line": 6,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        7
      ],
      "mod_code": [
        "char n ;",
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 6,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "char n ;",
        "cin >> s + l ;"
      ],
      "err_line": 7,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "cin >> N ;",
        "cin >> s + l ;"
      ],
      "err_line": 6,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}