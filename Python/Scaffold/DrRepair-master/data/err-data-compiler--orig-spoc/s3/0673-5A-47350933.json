{
  "meta": {
    "index": 673,
    "hitid": "3RWB1RTQDJHQHB813T7HZ8USB71P8G",
    "workerid": "AIWEXPJAU66D9",
    "probid": "5A",
    "subid": "47350933"
  },
  "lines": [
    {
      "line": 0,
      "text": "k and ans = integers",
      "code": "int k , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "while can read line from input to s",
      "code": "for ( ; getline ( cin , s ) ; )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if s [ 0 ] is equal to ' + '",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if s [ 0 ] is equal to ' - '",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "ans = ans + ( lengh of s - index of character ' : ' in the s - 1 ) * k",
      "code": "ans = ans + ( s . size ( ) - s . find ( ' : ' ) - 1 ) * k ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;"
      ],
      "err_line": 9,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        4
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        9,
        4,
        6
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        9,
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        9,
        6
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        9,
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( cin >> s )",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "while ( cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;"
      ],
      "err_line": 9,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( cin >> s )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        4,
        6,
        8
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        4,
        8
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        6,
        8
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' - 1 ) * k ) * k ) ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘lengh’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        8
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "else if ( s [ 0 ] == \" - ' )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        8
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        8
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )",
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )",
        "do"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "ans += ( lengh . substr ( s - min ( ' : ' ) - 1 ) * k ) * k ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "‘lengh’ was not declared in this scope"
    }
  ]
}