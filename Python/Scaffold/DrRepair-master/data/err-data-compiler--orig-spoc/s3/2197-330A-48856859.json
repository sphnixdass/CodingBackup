{
  "meta": {
    "index": 2197,
    "hitid": "3XQ4XW3OD96C8OM4FT2AKMM0C6WS26",
    "workerid": "AIWEXPJAU66D9",
    "probid": "330A",
    "subid": "48856859"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "sets onf integers rowSet and colSet",
      "code": "set < int > rowSet , colSet ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "r and c are integers",
      "code": "int r , c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "value is character",
      "code": "char value ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read r and c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read value",
      "code": "cin >> value ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if value = ' S '",
      "code": "if ( value == ' S ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "insert i into rowSet",
      "code": "rowSet . insert ( i ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "insert j into colSet",
      "code": "colSet . insert ( j ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "let rows be integer = r - size of rowSet",
      "code": "int rows = r - rowSet . size ( ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "cols is integer = c - size of colSet",
      "code": "int cols = c - colSet . size ( ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "declare integer variable called eatable = ( rows * c ) + ( cols * r ) - ( rows * cols )",
      "code": "int eatable = ( rows * c ) + ( cols * r ) - ( rows * cols ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print eatable and a new line",
      "code": "cout << eatable << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "sets , colSet = colSet ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        ";"
      ],
      "err_line": 7,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "colSet . push_back ( j ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int cols -= colSet . size ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        6
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        6,
        8
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        6,
        9
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        8
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "if ( ! value )"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        8,
        9
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "if ( ! value )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        9
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        9
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "if ( ! value )"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "if ( ! value )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "sets , colSet = colSet ;",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        8
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        8,
        9
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        8,
        1
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        9
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        9,
        1
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "rowSet . push_back ( i ) ;",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        1
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "for ( j = 0 ; j < c ; j ++ )",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        9
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "if ( ! value )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        16,
        8,
        9,
        1
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "if ( ! value )",
        "rowSet . push_back ( i ) ;",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        1
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "if ( ! value )",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        16,
        9,
        1
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "rowSet . push_back ( i ) ;",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "int eatable = ( rows * c ) + ( cols * r ) - ( cols * cols ) ;",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )",
        "rowSet . push_back ( i ) ;",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "if ( ! value )",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "rowSet . push_back ( i ) ;",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( ! value )",
        "rowSet . push_back ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        8,
        9,
        1
      ],
      "mod_code": [
        "if ( ! value )",
        "rowSet . push_back ( i ) ;",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "if ( ! value )",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "rowSet . push_back ( i ) ;",
        "sets = atoi ( rowSet , colSet ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘sets’ was not declared in this scope"
    }
  ]
}