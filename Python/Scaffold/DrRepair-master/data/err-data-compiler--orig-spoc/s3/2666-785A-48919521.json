{
  "meta": {
    "index": 2666,
    "hitid": "3CKVGCS3PGZ5CEJQ06YW1YTLGVFS00",
    "workerid": "A1AYVATMT88U1W",
    "probid": "785A",
    "subid": "48919521"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "the integer value of count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ 0 ] equals T",
      "code": "if ( s [ 0 ] == ' T ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment count by 4",
      "code": "count += 4 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if s [ 0 ] equals C",
      "code": "else if ( s [ 0 ] == ' C ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment count by 6",
      "code": "count += 6 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if s [ 0 ] equals O",
      "code": "else if ( s [ 0 ] == ' O ' )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment count by 8",
      "code": "count += 8 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if s [ 0 ] equals D",
      "code": "else if ( s [ 0 ] == ' D ' )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment count by 12",
      "code": "count += 12 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if s [ 0 ] equals I",
      "code": "else if ( s [ 0 ] == ' I ' )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment count by 20",
      "code": "count += 20 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print count and newline",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" I \" )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        15
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        15,
        9
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        15,
        13
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        15,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        13
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        13
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        13,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        7,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == \" I \" )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        15,
        9
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        15,
        9,
        13
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        15,
        9,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        15,
        13
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        15,
        13,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        15,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        13,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        15,
        9
      ],
      "mod_code": [
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        15,
        9,
        13
      ],
      "mod_code": [
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        15,
        9,
        11
      ],
      "mod_code": [
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        15,
        13
      ],
      "mod_code": [
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        15,
        13,
        11
      ],
      "mod_code": [
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        15,
        11
      ],
      "mod_code": [
        "if ( ! s [ 0 ] )",
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        9,
        13
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        9,
        13,
        11
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        9,
        11
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( s [ 0 ] == ' 0 ' )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        11
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" I \" )",
        "else if ( ! s [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}