{
  "meta": {
    "index": 2301,
    "hitid": "3HA5ODM5KAML5FK633MLMRJBARRVSU",
    "workerid": "A1APYLD4DUK33J",
    "probid": "696A",
    "subid": "41149914"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare map mp from long long to long long",
      "code": "map < long long , long long > mp ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer q",
      "code": "int q ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read q",
      "code": "cin >> q ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while decrement q is true",
      "code": "while ( q -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer op",
      "code": "int op ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read op",
      "code": "cin >> op ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if op is 1",
      "code": "if ( op == 1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "declare long longs u , v , w",
      "code": "long long u , v , w ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "read v , u , w",
      "code": "cin >> v >> u >> w ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "while u is not v",
      "code": "while ( u != v )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if u is greater than v",
      "code": "if ( u > v )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increment mp [ u ] by w",
      "code": "mp [ u ] += w ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "let u be u / 2",
      "code": "u /= 2 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 15,
      "text": "increment mp [ v ] by w",
      "code": "mp [ v ] += w ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "let v be v / 2",
      "code": "v /= 2 ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 20,
      "text": "declare long longs v , u",
      "code": "long long v , u ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "read v , u",
      "code": "cin >> v >> u ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "declare long long ans = 0",
      "code": "long long ans = 0 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "while u is not v",
      "code": "while ( u != v )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if u is greater than v",
      "code": "if ( u > v )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "increment ans by mp [ u ]",
      "code": "ans += mp [ u ] ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "let u be u / 2",
      "code": "u /= 2 ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 28,
      "text": "increment ans by mp [ v ]",
      "code": "ans += mp [ v ] ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "let v be v / 2",
      "code": "v /= 2 ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < long long to ;"
      ],
      "err_line": 0,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int q = s . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cout << cin >> q ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( -- -- )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( op ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 34,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "while ( cin >> v >> u )"
      ],
      "err_line": 25,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "while ( -- -- )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        14
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "do"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        14,
        21
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "do",
        "while ( cin >> v >> u )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        14,
        6
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "do",
        "gets ( op ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        14,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "do",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        21
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "while ( cin >> v >> u )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        21,
        6
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "while ( cin >> v >> u )",
        "gets ( op ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        21,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "while ( cin >> v >> u )",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        6
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "gets ( op ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        6,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        19,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "while ( -- -- )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14,
        21
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "while ( cin >> v >> u )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        6
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "while ( cin >> v >> u )",
        "gets ( op ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "while ( cin >> v >> u )",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14,
        6
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "gets ( op ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14,
        6,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        14,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "do",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "while ( -- -- )",
        "while ( cin >> v >> u )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        21,
        6
      ],
      "mod_code": [
        "while ( -- -- )",
        "while ( cin >> v >> u )",
        "gets ( op ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        21,
        6,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "while ( cin >> v >> u )",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        21,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "while ( cin >> v >> u )",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "while ( -- -- )",
        "gets ( op ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "while ( -- -- )",
        "while ( ! v )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        19,
        14
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        14,
        21
      ],
      "mod_code": [
        "do",
        "do",
        "while ( cin >> v >> u )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        14,
        21,
        6
      ],
      "mod_code": [
        "do",
        "do",
        "while ( cin >> v >> u )",
        "gets ( op ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        14,
        21,
        10
      ],
      "mod_code": [
        "do",
        "do",
        "while ( cin >> v >> u )",
        "while ( ! v )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        14,
        6
      ],
      "mod_code": [
        "do",
        "do",
        "gets ( op ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        14,
        6,
        10
      ],
      "mod_code": [
        "do",
        "do",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        14,
        10
      ],
      "mod_code": [
        "do",
        "do",
        "while ( ! v )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "do",
        "while ( cin >> v >> u )"
      ],
      "err_line": 25,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        21,
        6
      ],
      "mod_code": [
        "do",
        "while ( cin >> v >> u )",
        "gets ( op ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        21,
        6,
        10
      ],
      "mod_code": [
        "do",
        "while ( cin >> v >> u )",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        21,
        10
      ],
      "mod_code": [
        "do",
        "while ( cin >> v >> u )",
        "while ( ! v )"
      ],
      "err_line": 25,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        6
      ],
      "mod_code": [
        "do",
        "gets ( op ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        6,
        10
      ],
      "mod_code": [
        "do",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        10
      ],
      "mod_code": [
        "do",
        "while ( ! v )"
      ],
      "err_line": 34,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "do",
        "while ( cin >> v >> u )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        21,
        6
      ],
      "mod_code": [
        "do",
        "while ( cin >> v >> u )",
        "gets ( op ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        21,
        6,
        10
      ],
      "mod_code": [
        "do",
        "while ( cin >> v >> u )",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        21,
        10
      ],
      "mod_code": [
        "do",
        "while ( cin >> v >> u )",
        "while ( ! v )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "do",
        "gets ( op ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        6,
        10
      ],
      "mod_code": [
        "do",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "do",
        "while ( ! v )"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "while ( cin >> v >> u )",
        "gets ( op ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        6,
        10
      ],
      "mod_code": [
        "while ( cin >> v >> u )",
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        10
      ],
      "mod_code": [
        "while ( cin >> v >> u )",
        "while ( ! v )"
      ],
      "err_line": 25,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "gets ( op ) ;",
        "while ( ! v )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}