{
  "meta": {
    "index": 2253,
    "hitid": "3SD15I2WD2OW68KQCGDC2RV01IW63H",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "82A",
    "subid": "48600404"
  },
  "lines": [
    {
      "line": 0,
      "text": "dp = long long array of size 32",
      "code": "long long dp [ 32 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str = string with str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" }",
      "code": "string str [ 5 ] = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in the function init",
      "code": "void init ( )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "dp [ 1 ] = 5",
      "code": "dp [ 1 ] = 5 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "dp [ 0 ] = 0",
      "code": "dp [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "tmp = integer with tmp = 1",
      "code": "int tmp = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to 31",
      "code": "for ( int i = 1 ; i < 32 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to i - 1 , tmp = tmp * 2",
      "code": "for ( int j = 0 ; j < i - 1 ; j ++ ) { tmp *= 2 ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "dp [ i ] = dp [ i - 1 ] + 5 * tmp",
      "code": "dp [ i ] = dp [ i - 1 ] + 5 * tmp ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "tmp = 1",
      "code": "tmp = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "call init",
      "code": "init ( ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "i = integer",
      "code": "int i ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for i = 0 to 31",
      "code": "for ( i = 0 ; i < 32 ; i ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if n < dp [ i ] , break loop",
      "code": "if ( n < dp [ i ] ) { break ; }",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "a = integer",
      "code": "int a ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if n < 5",
      "code": "if ( n < 5 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "a = n",
      "code": "a = n ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "a = n - dp [ i - 1 ]",
      "code": "a = n - dp [ i - 1 ] ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if a is 0",
      "code": "if ( a == 0 )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "print Howard",
      "code": "cout << \" Howard \" << endl ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 29,
      "text": "tmp = integer with tmp = 1",
      "code": "int tmp = 1 ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "for j = 0 to i - 1 , tmp = tmp * 2",
      "code": "for ( int j = 0 ; j < i - 1 ; j ++ ) { tmp *= 2 ; }",
      "indent": 3
    },
    {
      "line": 31,
      "text": "cnt = integer with cnt = a / tmp",
      "code": "int cnt = a / tmp ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "if a modulo tmp , increment cnt",
      "code": "if ( a % tmp ) { cnt ++ ; }",
      "indent": 3
    },
    {
      "line": 33,
      "text": "print str [ cnt - 1 ]",
      "code": "cout << str [ cnt - 1 ] << endl ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "cout << Howard << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘Howard’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Leonard \" , \" Rajesh \" , \" Howard \" } ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "init ( )"
      ],
      "err_line": 2,
      "err_msg": "ISO C++ forbids declaration of ‘init’ with no type [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 31 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "return init ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "void value not ignored as it ought to be"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "cout << Howard ;"
      ],
      "err_line": 27,
      "err_msg": "‘Howard’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        17
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "for ( int i = 0 ; i < 31 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        27
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        22
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "int a = n ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        27
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "cout << Howard << endl ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        27,
        22
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "cout << Howard << endl ;",
        "int a = n ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        27,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "cout << Howard << endl ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        22
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "int a = n ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        22,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        9,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int tmp = 1 ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "for ( int i = 0 ; i < 31 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        17,
        27
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        17,
        27,
        22
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;",
        "int a = n ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        17,
        27,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        17,
        22
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "int a = n ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        17,
        22,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        17,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        27
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << Howard << endl ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        27,
        22
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << Howard << endl ;",
        "int a = n ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        27,
        22,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << Howard << endl ;",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        27,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "cout << Howard << endl ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int a = n ;"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        22,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "string str = { \" Sheldon \" , \" Leonard \" , \" Penny \" , \" Rajesh \" , \" Howard \" } ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "in C++98 ‘str’ must be initialized by constructor, not by ‘{...}’"
    },
    {
      "mod_line": [
        9,
        17,
        27
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘Howard’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        27,
        22
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;",
        "int a = n ;"
      ],
      "err_line": 27,
      "err_msg": "‘Howard’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        27,
        15
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        17,
        22,
        15
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        17,
        15
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        27
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "cout << Howard << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘Howard’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        27,
        22
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "cout << Howard << endl ;",
        "int a = n ;"
      ],
      "err_line": 27,
      "err_msg": "‘Howard’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        27,
        22,
        15
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "cout << Howard << endl ;",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        27,
        15
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "cout << Howard << endl ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        15
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "int tmp = 1 ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘Howard’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;",
        "int a = n ;"
      ],
      "err_line": 27,
      "err_msg": "‘Howard’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27,
        22,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        27,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "cout << Howard << endl ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        22,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 31 ; i ++ )",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        27,
        22
      ],
      "mod_code": [
        "cout << Howard << endl ;",
        "int a = n ;"
      ],
      "err_line": 27,
      "err_msg": "‘Howard’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        22,
        15
      ],
      "mod_code": [
        "cout << Howard << endl ;",
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        27,
        15
      ],
      "mod_code": [
        "cout << Howard << endl ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        15
      ],
      "mod_code": [
        "int a = n ;",
        "while ( gets ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    }
  ]
}