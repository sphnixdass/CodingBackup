{
  "meta": {
    "index": 2601,
    "hitid": "372AGES0I4Z18PPOOTNYK2B03DEXRY",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "707A",
    "subid": "48296517"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n then m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = two dimensional char array of sizes n and m",
      "code": "char a [ n ] [ m ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "ans = string",
      "code": "string ans ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "count = int with count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n excusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to m excusive read a [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < m ; j ++ ) { cin >> a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n excusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = 0 to m excusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if a [ i ] [ j ] equals char ' C ' or ' M ' or ' Y '",
      "code": "if ( a [ i ] [ j ] == ' C ' || a [ i ] [ j ] == ' M ' || a [ i ] [ j ] == ' Y ' )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set ans to \" # Color \"",
      "code": "ans = \" #Color \" ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "break inner loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if count equals n * m then set ans to \" # Black & White \"",
      "code": "if ( count == n * m ) { ans = \" #Black&White \" ; }",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char ans ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        12,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;",
        "if ( count == n * m ) ans = \" # \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        12,
        19,
        2
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;",
        "if ( count == n * m ) ans = \" # \" ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        19,
        4
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;",
        "if ( count == n * m ) ans = \" # \" ;",
        "char ans ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        12,
        2
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        2,
        4
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;",
        "while ( cin >> n >> m )",
        "char ans ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        2,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;",
        "while ( cin >> n >> m )",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        4
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;",
        "char ans ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        12,
        4,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;",
        "char ans ;",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        12,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "ans = \" #. \" ;",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "if ( count == n * m ) ans = \" # \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        19,
        2
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "if ( count == n * m ) ans = \" # \" ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        2,
        4
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "if ( count == n * m ) ans = \" # \" ;",
        "while ( cin >> n >> m )",
        "char ans ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        4
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "if ( count == n * m ) ans = \" # \" ;",
        "char ans ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        4
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "while ( cin >> n >> m )",
        "char ans ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        4,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "while ( cin >> n >> m )",
        "char ans ;",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "while ( cin >> n >> m )",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "char ans ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        4,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "char ans ;",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == char ' C ' || a [ i ] [ j ] == ' Y ' )",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        12,
        19,
        2
      ],
      "mod_code": [
        "ans = \" #. \" ;",
        "if ( count == n * m ) ans = \" # \" ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        19,
        2,
        4
      ],
      "mod_code": [
        "ans = \" #. \" ;",
        "if ( count == n * m ) ans = \" # \" ;",
        "while ( cin >> n >> m )",
        "char ans ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        19,
        4
      ],
      "mod_code": [
        "ans = \" #. \" ;",
        "if ( count == n * m ) ans = \" # \" ;",
        "char ans ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "ans = \" #. \" ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        4
      ],
      "mod_code": [
        "ans = \" #. \" ;",
        "while ( cin >> n >> m )",
        "char ans ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        4,
        19
      ],
      "mod_code": [
        "ans = \" #. \" ;",
        "while ( cin >> n >> m )",
        "char ans ;",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        19
      ],
      "mod_code": [
        "ans = \" #. \" ;",
        "while ( cin >> n >> m )",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "ans = \" #. \" ;",
        "char ans ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        4,
        19
      ],
      "mod_code": [
        "ans = \" #. \" ;",
        "char ans ;",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "if ( count == n * m ) ans = \" # \" ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        4
      ],
      "mod_code": [
        "if ( count == n * m ) ans = \" # \" ;",
        "while ( cin >> n >> m )",
        "char ans ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        4
      ],
      "mod_code": [
        "if ( count == n * m ) ans = \" # \" ;",
        "char ans ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "char ans ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        19
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "char ans ;",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "char ans ;",
        "if ( count == n * m ) { ans = \" # \" ; }"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    }
  ]
}