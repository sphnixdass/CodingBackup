{
  "meta": {
    "index": 1822,
    "hitid": "33QQ60S6ASCLRRBUPBTWGZB91SZU0H",
    "workerid": "A1APYLD4DUK33J",
    "probid": "732A",
    "subid": "41732941"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers k , r",
      "code": "int k , r ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read k , r",
      "code": "cin >> k >> r ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer num = 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to 1000 inclusive",
      "code": "for ( int i = 1 ; i <= 1000 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if ( k - r ) % 10 is 0 or k % 10 is 0",
      "code": "if ( ( k - r ) % 10 == 0 || k % 10 == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print \" 1 \" and newline",
      "code": "cout << \" 1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if ( i * k - r ) % 10 is 0",
      "code": "else if ( ( i * k - r ) % 10 == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let num be i",
      "code": "num = i ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "end loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if ( k * i ) % 10 is 0",
      "code": "else if ( ( k * i ) % 10 == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "let num be i",
      "code": "num = i ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "end loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if num is not 0",
      "code": "if ( num != 0 )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print num and newline",
      "code": "cout << num << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print r and newline",
      "code": "cout << r << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        9,
        18
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "continue ;",
        "int num = i ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        2,
        18
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "continue ;",
        "cin >> k >> k ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        18
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "continue ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        10
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "continue ;",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        9,
        2,
        18
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "int num = i ;",
        "cin >> k >> k ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        9,
        18
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "int num = i ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        10
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "int num = i ;",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        2,
        18
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "cin >> k >> k ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        2,
        18,
        10
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "cin >> k >> k ;",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        18,
        10
      ],
      "mod_code": [
        "else if ( i * k - r == 0 )",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        9,
        2,
        18
      ],
      "mod_code": [
        "continue ;",
        "int num = i ;",
        "cin >> k >> k ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        9,
        18
      ],
      "mod_code": [
        "continue ;",
        "int num = i ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        9,
        18,
        10
      ],
      "mod_code": [
        "continue ;",
        "int num = i ;",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        2,
        18
      ],
      "mod_code": [
        "continue ;",
        "cin >> k >> k ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        2,
        18,
        10
      ],
      "mod_code": [
        "continue ;",
        "cin >> k >> k ;",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "continue ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        18,
        10
      ],
      "mod_code": [
        "continue ;",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        9,
        2,
        18
      ],
      "mod_code": [
        "int num = i ;",
        "cin >> k >> k ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        9,
        2,
        18,
        10
      ],
      "mod_code": [
        "int num = i ;",
        "cin >> k >> k ;",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "int num = i ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        9,
        18,
        10
      ],
      "mod_code": [
        "int num = i ;",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "cin >> k >> k ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        18,
        10
      ],
      "mod_code": [
        "cin >> k >> k ;",
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        18,
        10
      ],
      "mod_code": [
        "do",
        "continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}