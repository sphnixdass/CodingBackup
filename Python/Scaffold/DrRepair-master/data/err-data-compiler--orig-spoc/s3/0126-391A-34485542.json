{
  "meta": {
    "index": 126,
    "hitid": "3VDVA3ILID92TYVH1P8FQPTSXCIG1Y",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "391A",
    "subid": "34485542"
  },
  "lines": [
    {
      "line": 0,
      "text": "answer = int",
      "code": "int answer ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "ln = int",
      "code": "int ln ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "sn = char",
      "code": "char sn ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "fn = int",
      "code": "int fn ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "ss = array of 100 int",
      "code": "int ss [ 100 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "ln = length of s",
      "code": "ln = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sn = first char of s",
      "code": "sn = s [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "ss [ 0 ] = 0",
      "code": "ss [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "fn = 1",
      "code": "fn = 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to ln exclusive",
      "code": "for ( int i = 1 ; i <= ln ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if sn is s [ i ]",
      "code": "if ( sn == s [ i ] )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment fn",
      "code": "fn += 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "ss [ i ] = ss [ i - 1 ]",
      "code": "ss [ i ] = ss [ i - 1 ] ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "ss [ i ] = ss [ i - 1 ] + ( fn + 1 ) modulo 2",
      "code": "ss [ i ] = ss [ i - 1 ] + ( fn + 1 ) % 2 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "sn = s [ i ]",
      "code": "sn = s [ i ] ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "fn = 1",
      "code": "fn = 1 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "answer = ss [ ln ]",
      "code": "answer = ss [ ln ] ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print answer",
      "code": "cout << answer << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int ln = s . length ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char sn = s . first ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "t ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "1 = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int l ;"
      ],
      "err_line": 11,
      "err_msg": "‘fn’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int ln = s . size ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char sn [ s ] ;"
      ],
      "err_line": 9,
      "err_msg": "size of array ‘sn’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "bool = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( ! sn [ i ] )"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "bool = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "string answer = ss [ ln ] ;"
      ],
      "err_line": 22,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        10
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        11
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        12
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        11
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        12
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "1 = 1 ;",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "1 = 1 ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "1 = 1 ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        12
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        9,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "char sn = s . first ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        12
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        17,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        10,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        12
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        11,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        12,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        12,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        12,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "t ++ ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        14,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "t ++ ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        14,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        17,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "int ln = s . length ( ) ;",
        "1 = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int ln’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        12
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        14
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "t ++ ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        12
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        14
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        14
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        10,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        12
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        14
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "t ++ ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        11,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        12,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        12,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "char sn = s . first ;",
        "t ++ ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        14,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        14,
        17,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "t ++ ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        14,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        17,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "char sn = s . first ;",
        "1 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char sn’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        12
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        14
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        17
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "t ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        17
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        17
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        11,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        12,
        14
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        17
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        17,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        12,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14,
        17
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14,
        17,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        17,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "ss [ 0 ] = ' 0 ' ;",
        "1 = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        12,
        14
      ],
      "mod_code": [
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        17
      ],
      "mod_code": [
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        19
      ],
      "mod_code": [
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        12,
        17
      ],
      "mod_code": [
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        12,
        17,
        19
      ],
      "mod_code": [
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        12,
        19
      ],
      "mod_code": [
        "1 = 1 ;",
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "1 = 1 ;",
        "t ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        14,
        17
      ],
      "mod_code": [
        "1 = 1 ;",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        19
      ],
      "mod_code": [
        "1 = 1 ;",
        "t ++ ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        14,
        19
      ],
      "mod_code": [
        "1 = 1 ;",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "1 = 1 ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        17,
        19
      ],
      "mod_code": [
        "1 = 1 ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "1 = 1 ;",
        "1 = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        17
      ],
      "mod_code": [
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i < ln ; i ++ )",
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i < ln ; i ++ )",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i < ln ; i ++ )",
        "1 = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "t ++ ;",
        "ss [ i ] += 2 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        19
      ],
      "mod_code": [
        "t ++ ;",
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "t ++ ;",
        "1 = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "ss [ i ] += 2 ;",
        "1 = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as left operand of assignment"
    }
  ]
}