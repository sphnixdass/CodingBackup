{
  "meta": {
    "index": 499,
    "hitid": "3FO95NVK5CUTC83PUJHBLUU8PLESRY",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "967A",
    "subid": "41619709"
  },
  "lines": [
    {
      "line": 0,
      "text": "MAXT = const int with MAXT = 1500",
      "code": "const int MAXT = 1500 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , s = int",
      "code": "int n , s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "ok = bool array of size MAXT + 1",
      "code": "bool ok [ MAXT + 1 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "set all values of ok to true",
      "code": "memset ( ok , true , sizeof ok ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n then s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "h , m = int",
      "code": "int h , m ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read h then m",
      "code": "cin >> h >> m ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "t = int with t = h * 60 + m",
      "code": "int t = h * 60 + m ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = max of 0 , t - s to t + s inclusive set ok [ i ] to false",
      "code": "for ( int i = max ( 0 , t - s ) ; i <= t + s ; ++ i ) ok [ i ] = false ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to MAXT inclusive",
      "code": "for ( int i = 0 ; i <= MAXT ; ++ i )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if ok [ i ]",
      "code": "if ( ok [ i ] )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "h , m = int with h = i / 60 and m = i mod 60",
      "code": "int h = i / 60 , m = i % 60 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print h and m",
      "code": "cout << h << \" \" << m << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int MAXT = 1500 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool ok + MAXT + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int h = i / 60 , m %= 60 ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘%=’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        16
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        16,
        14
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "do",
        "int h = i / 60 , m %= 60 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        16,
        15
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "do",
        "cin >> h >> m ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        16,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "do",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        14
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "int h = i / 60 , m %= 60 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        14,
        15
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        14,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "int h = i / 60 , m %= 60 ;",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        15
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "cin >> h >> m ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        15,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        13,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "if ( ! ok [ i ] )",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        16,
        14
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "do",
        "int h = i / 60 , m %= 60 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        16,
        14,
        15
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "do",
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        16,
        14,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "do",
        "int h = i / 60 , m %= 60 ;",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        16,
        15
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "do",
        "cin >> h >> m ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        16,
        15,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "do",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        16,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "do",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "int h = i / 60 , m %= 60 ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        14,
        15
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        14,
        15,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        14,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "int h = i / 60 , m %= 60 ;",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "cin >> h >> m ;"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        15,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int MAXT = 1500 ;",
        "int h , m"
      ],
      "err_line": 2,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        16,
        14
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "do",
        "int h = i / 60 , m %= 60 ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘%=’ token"
    },
    {
      "mod_line": [
        13,
        16,
        14,
        15
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "do",
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘%=’ token"
    },
    {
      "mod_line": [
        13,
        16,
        14,
        7
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "do",
        "int h = i / 60 , m %= 60 ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        13,
        16,
        15
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "do",
        "cin >> h >> m ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        16,
        15,
        7
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "do",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        13,
        16,
        7
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "do",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "int h = i / 60 , m %= 60 ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘%=’ token"
    },
    {
      "mod_line": [
        13,
        14,
        15
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘%=’ token"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        7
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        13,
        14,
        7
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "int h = i / 60 , m %= 60 ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        13,
        15,
        7
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "if ( ! ok [ i ] )",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "do",
        "int h = i / 60 , m %= 60 ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘%=’ token"
    },
    {
      "mod_line": [
        16,
        14,
        15
      ],
      "mod_code": [
        "do",
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘%=’ token"
    },
    {
      "mod_line": [
        16,
        14,
        15,
        7
      ],
      "mod_code": [
        "do",
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        16,
        14,
        7
      ],
      "mod_code": [
        "do",
        "int h = i / 60 , m %= 60 ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        16,
        15
      ],
      "mod_code": [
        "do",
        "cin >> h >> m ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        15,
        7
      ],
      "mod_code": [
        "do",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "do",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘%=’ token"
    },
    {
      "mod_line": [
        14,
        15,
        7
      ],
      "mod_code": [
        "int h = i / 60 , m %= 60 ;",
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "int h = i / 60 , m %= 60 ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "cin >> h >> m ;",
        "int h , m"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘cin’"
    }
  ]
}