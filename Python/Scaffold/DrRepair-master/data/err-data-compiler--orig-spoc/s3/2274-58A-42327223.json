{
  "meta": {
    "index": 2274,
    "hitid": "3EKTG13IZUXFBFV752OTN9M3R48MLR",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "58A",
    "subid": "42327223"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while s [ 0 ] is not equal to ' h ' and s . length ( ) is greater than 0 , erase the first character of s",
      "code": "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( 0 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while s [ 1 ] is not equal to ' e ' and s . length ( ) is greater than 1 , erase the second character",
      "code": "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 ) { s . erase ( 1 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while s [ 2 ] is not equal to ' 1 ' and s . length ( ) is greater than 2 , erase the third character of s",
      "code": "while ( s [ 2 ] != ' l ' && s . length ( ) > 2 ) { s . erase ( 2 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while s [ 3 ] is not equal to ' 1 ' and s . length ( ) is greater than 3 , erase the fourth character of s",
      "code": "while ( s [ 3 ] != ' l ' && s . length ( ) > 3 ) { s . erase ( 3 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while s [ 4 ] is not equal to ' o ' and s . length ( ) is greater than 4 , erase the fifth character of s",
      "code": "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( 4 , 1 ) ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if s . length ( ) is greater than 5 , call s . erase ( 5 . 100 )",
      "code": "if ( s . length ( ) > 5 ) { s . erase ( 5.100 ) ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if s is equal to \" hello \"",
      "code": "if ( s == \" hello \" )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "otherwise",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "show \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s ) ; }"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "return else ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 2 ] != ' 1 ' && s . length ( ) > 2 ) { s . erase ( s [ 2 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 2 ] != ' 1 ' && s . length ( ) > 2 ) { s . erase ( s [ 2 ] ) ; }",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        7
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 2 ] != ' 1 ' && s . length ( ) > 2 ) { s . erase ( s [ 2 ] ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        7
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        5
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        5
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s . length ( ) > 2 ) { s . erase ( s [ 2 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s . length ( ) > 2 ) { s . erase ( s [ 2 ] ) ; }",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        7
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s . length ( ) > 2 ) { s . erase ( s [ 2 ] ) ; }",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s . length ( ) > 2 ) { s . erase ( s [ 2 ] ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        5
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        7,
        5
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( s [ 0 ] != ' h ' && s . length ( ) > 0 ) { s . erase ( s . first ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        5
      ],
      "mod_code": [
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "while ( s [ 1 ] != ' e ' && s . length ( ) > 1 )",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "while ( s [ 3 ] != ' 1 ' && s . length ( ) > 3 ) { s . erase ( s [ 3 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "while ( s [ 4 ] != ' o ' && s . length ( ) > 4 ) { s . erase ( s [ 4 ] ) ; }",
        "while ( s [ 2 ] != ' 1 ' && s [ 2 ] ( 2 ) > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expression cannot be used as a function"
    }
  ]
}