{
  "meta": {
    "index": 1805,
    "hitid": "3SR6AEG6W5NDJ01VXKX6PCG3JX8HY0",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "195A",
    "subid": "41531234"
  },
  "lines": [
    {
      "line": 0,
      "text": "N = 1e5 + 5 = const int",
      "code": "const int N = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b , c = int",
      "code": "int a , b , c ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in bool function ok that takes t = int",
      "code": "bool ok ( int t )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return weather t * b + b * c > = a * c",
      "code": "return t * b + b * c >= a * c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "in int function binary",
      "code": "int binary ( )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "let lo = 0 , hi = 1e6 , med be integers",
      "code": "int lo = 0 , hi = 1e6 , med ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while hi > lo",
      "code": "while ( hi > lo )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set med = ( lo + hi ) bitwise right shift 1",
      "code": "med = ( lo + hi ) >> 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if is ok ( med )",
      "code": "if ( ok ( med ) )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set hi to med",
      "code": "hi = med ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set lo to med + 1",
      "code": "lo = med + 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return lo",
      "code": "return lo ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "read a , b , c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print the result of binary",
      "code": "cout << binary ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a , b ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool ok ( int t ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int binary ( int x )"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int binary(int)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int lo = 0 , hi = 1e6 ;"
      ],
      "err_line": 8,
      "err_msg": "‘med’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( is ( med ) )"
      ],
      "err_line": 9,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        18,
        2
      ],
      "mod_code": [
        "if ( ! ok ( med ) )",
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        18,
        2,
        5
      ],
      "mod_code": [
        "if ( ! ok ( med ) )",
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;",
        "int binary ( int x )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        18,
        2,
        7
      ],
      "mod_code": [
        "if ( ! ok ( med ) )",
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;",
        "while ( hi > 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( ! ok ( med ) )",
        "bool ok ( int t ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        5
      ],
      "mod_code": [
        "if ( ! ok ( med ) )",
        "bool ok ( int t ) ;",
        "int binary ( int x )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        5,
        7
      ],
      "mod_code": [
        "if ( ! ok ( med ) )",
        "bool ok ( int t ) ;",
        "int binary ( int x )",
        "while ( hi > 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        7
      ],
      "mod_code": [
        "if ( ! ok ( med ) )",
        "bool ok ( int t ) ;",
        "while ( hi > 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( ! ok ( med ) )",
        "int binary ( int x )"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int binary(int)’"
    },
    {
      "mod_line": [
        9,
        5,
        7
      ],
      "mod_code": [
        "if ( ! ok ( med ) )",
        "int binary ( int x )",
        "while ( hi > 0 )"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int binary(int)’"
    },
    {
      "mod_line": [
        18,
        2
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        2,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;",
        "int binary ( int x )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        2,
        5,
        7
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;",
        "int binary ( int x )",
        "while ( hi > 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        2,
        5,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;",
        "int binary ( int x )",
        "if ( is ( med ) )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        2,
        7
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;",
        "while ( hi > 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        2,
        7,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;",
        "while ( hi > 0 )",
        "if ( is ( med ) )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        2,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "bool ok ( int t ) ;",
        "if ( is ( med ) )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        5,
        7,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int binary ( int x )",
        "while ( hi > 0 )",
        "if ( is ( med ) )"
      ],
      "err_line": 9,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        5,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int binary ( int x )",
        "if ( is ( med ) )"
      ],
      "err_line": 9,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        7,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "while ( hi > 0 )",
        "if ( is ( med ) )"
      ],
      "err_line": 9,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "if ( is ( med ) )"
      ],
      "err_line": 9,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "bool ok ( int t ) ;",
        "int binary ( int x )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "bool ok ( int t ) ;",
        "int binary ( int x )",
        "while ( hi > 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        9
      ],
      "mod_code": [
        "bool ok ( int t ) ;",
        "int binary ( int x )",
        "while ( hi > 0 )",
        "if ( is ( med ) )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5,
        9
      ],
      "mod_code": [
        "bool ok ( int t ) ;",
        "int binary ( int x )",
        "if ( is ( med ) )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "bool ok ( int t ) ;",
        "while ( hi > 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "bool ok ( int t ) ;",
        "while ( hi > 0 )",
        "if ( is ( med ) )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "bool ok ( int t ) ;",
        "if ( is ( med ) )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "int binary ( int x )",
        "while ( hi > 0 )"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int binary(int)’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "int binary ( int x )",
        "while ( hi > 0 )",
        "if ( is ( med ) )"
      ],
      "err_line": 9,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int binary ( int x )",
        "if ( is ( med ) )"
      ],
      "err_line": 9,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "while ( hi > 0 )",
        "if ( is ( med ) )"
      ],
      "err_line": 9,
      "err_msg": "‘is’ was not declared in this scope"
    }
  ]
}