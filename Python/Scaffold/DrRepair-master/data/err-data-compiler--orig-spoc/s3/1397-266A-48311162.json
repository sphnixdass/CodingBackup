{
  "meta": {
    "index": 1397,
    "hitid": "388CL5C1RJHTJ1UWE58GV4E79V5HLY",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "266A",
    "subid": "48311162"
  },
  "lines": [
    {
      "line": 0,
      "text": "function takeStones ( take an array of chars , return int )",
      "code": "int takeStones ( char arr [ ] )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if first char of arr is null byte return 0",
      "code": "if ( arr [ 0 ] == ' \\0 ' ) return 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "smallAns = takeStones ( arr + 1 )",
      "code": "int smallAns = takeStones ( arr + 1 ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if first two chars of arr are equals",
      "code": "if ( arr [ 0 ] == arr [ 1 ] )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "i = int",
      "code": "int i ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "i = 2 , while arr [ i ] is not null byte arr [ i - 1 ] = arr [ i ] and increment i",
      "code": "for ( i = 2 ; arr [ i ] != ' \\0 ' ; i ++ ) { arr [ i - 1 ] = arr [ i ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "arr [ i - 1 ] = null byte",
      "code": "arr [ i - 1 ] = ' \\0 ' ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "return 1 + smallAns",
      "code": "return 1 + smallAns ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return smallAns",
      "code": "return smallAns ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "str = pointer to array of n + 1 chars",
      "code": "char * str = new char [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print takeStones ( str )",
      "code": "cout << takeStones ( str ) << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int takeStones ( int ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "if ( arr . first == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘first’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "smallAns = takeStones ( arr + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘smallAns’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int takeStones ( int )"
      ],
      "err_line": 1,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘compare’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( arr . first == 0 )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘first’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 13,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "if ( arr . first == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1,
        2
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "smallAns = takeStones ( arr + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        3
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        5
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1,
        3
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1,
        3,
        5
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "else",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1,
        5
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "smallAns = takeStones ( arr + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        5
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "else",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        1
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "else",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        1
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "arr [ i ] != ' \\0 ' ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        1
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        5
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "else",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        1
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "else",
        "arr [ i ] != ' \\0 ' ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        1
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "else",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        1
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "arr [ i ] != ' \\0 ' ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int takeStones ( int ) ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "smallAns = takeStones ( arr + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘first’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘first’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        5
      ],
      "mod_code": [
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "else",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘first’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "smallAns = takeStones ( arr + 1 ) ;",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘first’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘first’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "else",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘first’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "if ( arr . first == ' \\0 ' ) return 0 ;",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘first’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "smallAns = takeStones ( arr + 1 ) ;",
        "else"
      ],
      "err_line": 2,
      "err_msg": "‘smallAns’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "smallAns = takeStones ( arr + 1 ) ;",
        "else",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘smallAns’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        1
      ],
      "mod_code": [
        "smallAns = takeStones ( arr + 1 ) ;",
        "else",
        "arr [ i ] != ' \\0 ' ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘compare’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "smallAns = takeStones ( arr + 1 ) ;",
        "else",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘compare’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "smallAns = takeStones ( arr + 1 ) ;",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘smallAns’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "smallAns = takeStones ( arr + 1 ) ;",
        "arr [ i ] != ' \\0 ' ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘compare’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "smallAns = takeStones ( arr + 1 ) ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘compare’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "else",
        "arr [ i ] != ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "else",
        "arr [ i ] != ' \\0 ' ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘compare’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "else",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘compare’ in ‘arr’, which is of non-class type ‘char*’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "arr [ i ] != ' \\0 ' ;",
        "if ( arr . compare ( arr ) == ' \\0 ' ) return 0 ;"
      ],
      "err_line": 1,
      "err_msg": "request for member ‘compare’ in ‘arr’, which is of non-class type ‘char*’"
    }
  ]
}