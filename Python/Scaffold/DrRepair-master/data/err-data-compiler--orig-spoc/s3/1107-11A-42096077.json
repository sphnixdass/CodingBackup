{
  "meta": {
    "index": 1107,
    "hitid": "3WRKFXQBOB1DFVCF32FRPOHII89YIR",
    "workerid": "AIWEXPJAU66D9",
    "probid": "11A",
    "subid": "42096077"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a is an array of long longs of size 100000 ; n , m , c and c1 are long longs with c and c1 = 0",
      "code": "long long a [ 100000 ] , n , m , c = 0 , c1 = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if m ! = 1",
      "code": "if ( m != 1 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while a [ i - 1 ] > = a [ i ]",
      "code": "while ( a [ i - 1 ] >= a [ i ] )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "increase a [ i ] by m",
      "code": "a [ i ] += m ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "increase c by one",
      "code": "c ++ ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a [ i - 1 ] > = a [ i ]",
      "code": "if ( a [ i - 1 ] >= a [ i ] )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "c1 = a [ i - 1 ] - a [ i ]",
      "code": "c1 = a [ i - 1 ] - a [ i ] ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "increase c by c1 + 1",
      "code": "c += c1 + 1 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "a [ i ] = a [ i ] + ( c1 + 1 )",
      "code": "a [ i ] = a [ i ] + ( c1 + 1 ) ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print c and \" \\ n \"",
      "code": "cout << c << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "do"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        11,
        7
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "do",
        "a [ i ] ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        11,
        7,
        20
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "do",
        "a [ i ] ++ ;",
        "cout << c << \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        11,
        7,
        12
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "do",
        "a [ i ] ++ ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        11,
        20
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "do",
        "cout << c << \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        11,
        20,
        12
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "do",
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "do",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "a [ i ] ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        7,
        20
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "a [ i ] ++ ;",
        "cout << c << \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        7,
        20,
        12
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "a [ i ] ++ ;",
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        7,
        12
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "a [ i ] ++ ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "cout << c << \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        20,
        12
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "long long a [ 100000 ] = { 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "do",
        "a [ i ] ++ ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        7,
        20
      ],
      "mod_code": [
        "do",
        "a [ i ] ++ ;",
        "cout << c << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        7,
        20,
        12
      ],
      "mod_code": [
        "do",
        "a [ i ] ++ ;",
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        20,
        1
      ],
      "mod_code": [
        "do",
        "a [ i ] ++ ;",
        "cout << c << \" \" ;",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        7,
        12
      ],
      "mod_code": [
        "do",
        "a [ i ] ++ ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        12,
        1
      ],
      "mod_code": [
        "do",
        "a [ i ] ++ ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        7,
        1
      ],
      "mod_code": [
        "do",
        "a [ i ] ++ ;",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "do",
        "cout << c << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        20,
        12
      ],
      "mod_code": [
        "do",
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        20,
        12,
        1
      ],
      "mod_code": [
        "do",
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        20,
        1
      ],
      "mod_code": [
        "do",
        "cout << c << \" \" ;",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "do",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        12,
        1
      ],
      "mod_code": [
        "do",
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "do",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        20,
        12
      ],
      "mod_code": [
        "a [ i ] ++ ;",
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        20,
        12,
        1
      ],
      "mod_code": [
        "a [ i ] ++ ;",
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        20,
        1
      ],
      "mod_code": [
        "a [ i ] ++ ;",
        "cout << c << \" \" ;",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "a [ i ] ++ ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        1
      ],
      "mod_code": [
        "a [ i ] ++ ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "a [ i ] ++ ;",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        12,
        1
      ],
      "mod_code": [
        "cout << c << \" \" ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        20,
        1
      ],
      "mod_code": [
        "cout << c << \" \" ;",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long a [ 100000 ] = { 0 ; , m , m , c , c1 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘}’ before ‘;’ token"
    }
  ]
}