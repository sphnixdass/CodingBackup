{
  "meta": {
    "index": 1568,
    "hitid": "3BDORL6HKK7D5RETXXRB6PQQ3IPRC0",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1080A",
    "subid": "48766981"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "res , cur = int",
      "code": "int res , cur ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n then k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set res to 0",
      "code": "res = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set cur to 2 * n",
      "code": "cur = n * 2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "increment res by ( cur + k - 1 ) / k",
      "code": "res += ( cur + k - 1 ) / k ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set cur to n * 5",
      "code": "cur = n * 5 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "increment res by ( cur + k - 1 ) / k",
      "code": "res += ( cur + k - 1 ) / k ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set cur to n * 8",
      "code": "cur = n * 8 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "increment res by ( cur + k - 1 ) / k",
      "code": "res += ( cur + k - 1 ) / k ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int res = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        1
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 5 ;",
        "cur *= 8 ;",
        "int n , k"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        2
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 5 ;",
        "cur *= 8 ;",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        7,
        1
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 5 ;",
        "int n , k"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        7,
        1,
        2
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 5 ;",
        "int n , k",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        7,
        1,
        6
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 5 ;",
        "int n , k",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 5 ;",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        6
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 5 ;",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        9,
        1
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 8 ;",
        "int n , k"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        9,
        1,
        2
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 8 ;",
        "int n , k",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        9,
        1,
        6
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 8 ;",
        "int n , k",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 8 ;",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        9,
        2,
        6
      ],
      "mod_code": [
        "cur *= n ;",
        "cur *= 8 ;",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cur *= n ;",
        "int n , k"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "cur *= n ;",
        "int n , k",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        6
      ],
      "mod_code": [
        "cur *= n ;",
        "int n , k",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        1,
        6
      ],
      "mod_code": [
        "cur *= n ;",
        "int n , k",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cur *= n ;",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        5,
        2,
        6
      ],
      "mod_code": [
        "cur *= n ;",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        7,
        9,
        1
      ],
      "mod_code": [
        "cur *= 5 ;",
        "cur *= 8 ;",
        "int n , k"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        1,
        2
      ],
      "mod_code": [
        "cur *= 5 ;",
        "cur *= 8 ;",
        "int n , k",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        1,
        6
      ],
      "mod_code": [
        "cur *= 5 ;",
        "cur *= 8 ;",
        "int n , k",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "cur *= 5 ;",
        "cur *= 8 ;",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        7,
        9,
        2,
        6
      ],
      "mod_code": [
        "cur *= 5 ;",
        "cur *= 8 ;",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "cur *= 5 ;",
        "int n , k"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        7,
        1,
        2
      ],
      "mod_code": [
        "cur *= 5 ;",
        "int n , k",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        7,
        1,
        2,
        6
      ],
      "mod_code": [
        "cur *= 5 ;",
        "int n , k",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        7,
        1,
        6
      ],
      "mod_code": [
        "cur *= 5 ;",
        "int n , k",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "cur *= 5 ;",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "cur *= 5 ;",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "cur *= 8 ;",
        "int n , k"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        9,
        1,
        2
      ],
      "mod_code": [
        "cur *= 8 ;",
        "int n , k",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        9,
        1,
        2,
        6
      ],
      "mod_code": [
        "cur *= 8 ;",
        "int n , k",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        9,
        1,
        6
      ],
      "mod_code": [
        "cur *= 8 ;",
        "int n , k",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "cur *= 8 ;",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        9,
        2,
        6
      ],
      "mod_code": [
        "cur *= 8 ;",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , k",
        "int res , res ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "int n , k",
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , k",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int res , res ;",
        "res += ( cur + ( k - 1 ) / k ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int res’"
    }
  ]
}