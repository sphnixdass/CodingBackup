{
  "meta": {
    "index": 2707,
    "hitid": "3L2OEKSTW94KQP02UG30CZN4GEJ8YD",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "710A",
    "subid": "47478073"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "res = integer with 8",
      "code": "int res = 8 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if s is a1 OR s is a8 OR s is h1 OR s is h8",
      "code": "if ( s == \" a1 \" || s == \" a8 \" || s == \" h1 \" || s == \" h8 \" )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set res to 3",
      "code": "res = 3 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if s [ 0 ] is a OR s [ 0 ] is h",
      "code": "else if ( s [ 0 ] == ' a ' || s [ 0 ] == ' h ' )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set res to 5",
      "code": "res = 5 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else if s [ 1 ] is 1 OR s [ 1 ] is 8",
      "code": "else if ( s [ 1 ] == ' 1 ' || s [ 1 ] == ' 8 ' )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set res to 5",
      "code": "res = 5 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print res and a new line",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )"
      ],
      "err_line": 4,
      "err_msg": "‘a1’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int res = s ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( s == a1 || s == a8 || s == h1 || s == h8 )"
      ],
      "err_line": 4,
      "err_msg": "‘a1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;"
      ],
      "err_line": 4,
      "err_msg": "‘a1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        5
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "gets ( s ) ;",
        "int res = 3 ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        3
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "gets ( s ) ;",
        "int res = s ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "gets ( s ) ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "int res = 3 ;"
      ],
      "err_line": 4,
      "err_msg": "‘a1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        5,
        3
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "int res = 3 ;",
        "int res = s ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        4,
        7,
        5,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "int res = 3 ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "int res = s ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 5 ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "gets ( s ) ;",
        "int res = 3 ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        3
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "gets ( s ) ;",
        "int res = 3 ;",
        "int res = s ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "gets ( s ) ;",
        "int res = 3 ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "gets ( s ) ;",
        "int res = s ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2,
        3,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "gets ( s ) ;",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "gets ( s ) ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 3 ;"
      ],
      "err_line": 4,
      "err_msg": "‘a1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 3 ;",
        "int res = s ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 3 ;",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = 3 ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = s ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "if ( s == a1 || s == h1 || s == h1 || s == h8 )",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a1’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "int res = 5 ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "int res = 5 ;",
        "gets ( s ) ;",
        "int res = 3 ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2,
        5,
        3
      ],
      "mod_code": [
        "int res = 5 ;",
        "gets ( s ) ;",
        "int res = 3 ;",
        "int res = s ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2,
        5,
        6
      ],
      "mod_code": [
        "int res = 5 ;",
        "gets ( s ) ;",
        "int res = 3 ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "int res = 5 ;",
        "gets ( s ) ;",
        "int res = s ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2,
        3,
        6
      ],
      "mod_code": [
        "int res = 5 ;",
        "gets ( s ) ;",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "int res = 5 ;",
        "gets ( s ) ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "int res = 5 ;",
        "int res = 3 ;",
        "int res = s ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        5,
        3,
        6
      ],
      "mod_code": [
        "int res = 5 ;",
        "int res = 3 ;",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        5,
        6
      ],
      "mod_code": [
        "int res = 5 ;",
        "int res = 3 ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "int res = 5 ;",
        "int res = s ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "int res = 5 ;",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "int res = 5 ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int res = 3 ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int res = 3 ;",
        "int res = s ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        5,
        3,
        6
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int res = 3 ;",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int res = 3 ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int res = s ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "gets ( s ) ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int res = 3 ;",
        "int res = s ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "int res = 3 ;",
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int res = 3 ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int res = s ;",
        "else if ( s [ 0 ] == a || s [ 0 ] == ' h ' )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    }
  ]
}