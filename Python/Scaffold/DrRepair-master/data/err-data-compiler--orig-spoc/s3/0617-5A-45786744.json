{
  "meta": {
    "index": 617,
    "hitid": "3BVS8WK9Q0PH2NJ4TA17HDJHXZRIBW",
    "workerid": "A1APYLD4DUK33J",
    "probid": "5A",
    "subid": "45786744"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string commands",
      "code": "string commands ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integers person , mark_idx , send_size with person = 0 , send_size = 0",
      "code": "int person = 0 , mark_idx , send_size = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while read line from cin to commands is true",
      "code": "while ( getline ( cin , commands ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if commands [ 0 ] is ' + '",
      "code": "if ( commands [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment person",
      "code": "person ++ ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if commands [ 0 ] is ' - '",
      "code": "else if ( commands [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement person",
      "code": "person -- ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set mark_idx to first index of ' : ' in commands",
      "code": "mark_idx = commands . find ( ' : ' ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment send_size by ( size of commands - mark_idx - 1 ) * person",
      "code": "send_size += ( commands . size ( ) - mark_idx - 1 ) * person ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print send_size print newline",
      "code": "cout << send_size << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "mark_idx = strlen ( ' : ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s ;"
      ],
      "err_line": 3,
      "err_msg": "‘commands’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( commands [ 0 ] == \" + ' )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "mark_idx = min ( ' : ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "while ( cin >> cin >> commands )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "while ( cin >> cin >> commands )",
        "mark_idx = strlen ( ' : ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        10
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "while ( cin >> cin >> commands )",
        "mark_idx = strlen ( ' : ' ) ;",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        10
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "while ( cin >> cin >> commands )",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        10,
        9
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "while ( cin >> cin >> commands )",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "mark_idx = min ( ' : ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "while ( cin >> cin >> commands )",
        "mark_idx = min ( ' : ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "mark_idx = strlen ( ' : ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9,
        10
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "mark_idx = strlen ( ' : ' ) ;",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        10,
        9
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "mark_idx = min ( ' : ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int person = 0 , mark_idx = 0 , send_size ;",
        "mark_idx = min ( ' : ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "mark_idx = strlen ( ' : ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "mark_idx = strlen ( ' : ' ) ;",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        2
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "mark_idx = strlen ( ' : ' ) ;",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "mark_idx = strlen ( ' : ' ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "mark_idx = min ( ' : ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        10,
        9,
        2
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "mark_idx = min ( ' : ' ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "mark_idx = min ( ' : ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "mark_idx = min ( ' : ' ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( cin >> cin >> commands )",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "mark_idx = strlen ( ' : ' ) ;",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        2
      ],
      "mod_code": [
        "mark_idx = strlen ( ' : ' ) ;",
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "mark_idx = strlen ( ' : ' ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "mark_idx = min ( ' : ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        10,
        9,
        2
      ],
      "mod_code": [
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "mark_idx = min ( ' : ' ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "send_size += ( commands . substr ( commands - mark_idx - 1 ) * person ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "mark_idx = min ( ' : ' ) ;",
        "int person , mark_idx = 0 , send_size = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    }
  ]
}