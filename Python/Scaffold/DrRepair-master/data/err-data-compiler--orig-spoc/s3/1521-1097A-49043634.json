{
  "meta": {
    "index": 1521,
    "hitid": "3BCRDCM0ODO226SXXM5BJDC2C4G6KQ",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "1097A",
    "subid": "49043634"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b , c , d , e , f = strings",
      "code": "string a , b , c , d , e , f ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "flag = boolean , set to false",
      "code": "bool flag = false ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "Read b",
      "code": "cin >> b ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ 0 ] is b [ 0 ] OR a [ 1 ] is b [ 1 ]",
      "code": "if ( a [ 0 ] == b [ 0 ] || a [ 1 ] == b [ 1 ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print YES and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print NO and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string a , b , c , d , e , f , f ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string f’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "{ cin >> b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a [ 0 ] == b [ 0 ] OR a [ 1 ] == b [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘OR’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "gets ( a ) ;",
        "{ cin >> b ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "gets ( a ) ;",
        "{ cin >> b ;",
        "if ( a [ 0 ] == b [ 0 ] OR a [ 1 ] == b [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        1
      ],
      "mod_code": [
        "gets ( a ) ;",
        "{ cin >> b ;",
        "if ( a [ 0 ] == b [ 0 ] OR a [ 1 ] == b [ 1 ] )",
        "string a , b , c , d , e , f , f ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string f’"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "gets ( a ) ;",
        "{ cin >> b ;",
        "string a , b , c , d , e , f , f ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string f’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a [ 0 ] == b [ 0 ] OR a [ 1 ] == b [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a [ 0 ] == b [ 0 ] OR a [ 1 ] == b [ 1 ] )",
        "string a , b , c , d , e , f , f ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string f’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "gets ( a ) ;",
        "string a , b , c , d , e , f , f ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string f’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "{ cin >> b ;",
        "if ( a [ 0 ] == b [ 0 ] OR a [ 1 ] == b [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘OR’"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "{ cin >> b ;",
        "if ( a [ 0 ] == b [ 0 ] OR a [ 1 ] == b [ 1 ] )",
        "string a , b , c , d , e , f , f ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string f’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "{ cin >> b ;",
        "string a , b , c , d , e , f , f ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string f’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( a [ 0 ] == b [ 0 ] OR a [ 1 ] == b [ 1 ] )",
        "string a , b , c , d , e , f , f ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string f’"
    }
  ]
}