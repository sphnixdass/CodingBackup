{
  "meta": {
    "index": 157,
    "hitid": "3TUOHPJXYHR6GL6ANNX471JHWFTWXB",
    "workerid": "A1AYVATMT88U1W",
    "probid": "686A",
    "subid": "48774394"
  },
  "lines": [
    {
      "line": 0,
      "text": "num = array of integers of length 1001",
      "code": "int num [ 1001 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n , left be integers with left = 0",
      "code": "int n , left = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let d , x be long integers",
      "code": "long long d , x ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let c be a character",
      "code": "char c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n , s",
      "code": "cin >> n >> x ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while n is decremented by 1",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read c , d",
      "code": "cin >> c >> d ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if c is equal to +",
      "code": "if ( c == ' + ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment x by d",
      "code": "x += d ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if x - d is less than 0",
      "code": "if ( x - d < 0 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment left by 1",
      "code": "left ++ ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "decrement x by d",
      "code": "x -= d ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print x and space and left and newline",
      "code": "cout << x << \" \" << left << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n >> s ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char c ="
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin >> n >> s )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( c == \" + \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c ="
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "if ( c == \" + \" )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        8,
        13
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "if ( c == \" + \" )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        8,
        17
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "if ( c == \" + \" )",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        8,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "if ( c == \" + \" )",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        13
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        13,
        17
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        13,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "do",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        17
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        17,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "char c =",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "if ( c == \" + \" )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        13
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "if ( c == \" + \" )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        17
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "if ( c == \" + \" )",
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "if ( c == \" + \" )",
        "do",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        17
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "if ( c == \" + \" )",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        17,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "if ( c == \" + \" )",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "if ( c == \" + \" )",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "do"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        17
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "do",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cin >> n >> s ;",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "char c =",
        "if ( c == \" + \" )"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        13
      ],
      "mod_code": [
        "char c =",
        "if ( c == \" + \" )",
        "do"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        17
      ],
      "mod_code": [
        "char c =",
        "if ( c == \" + \" )",
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        6
      ],
      "mod_code": [
        "char c =",
        "if ( c == \" + \" )",
        "do",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        17
      ],
      "mod_code": [
        "char c =",
        "if ( c == \" + \" )",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        6
      ],
      "mod_code": [
        "char c =",
        "if ( c == \" + \" )",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "char c =",
        "if ( c == \" + \" )",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "char c =",
        "do"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        17
      ],
      "mod_code": [
        "char c =",
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        6
      ],
      "mod_code": [
        "char c =",
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        6
      ],
      "mod_code": [
        "char c =",
        "do",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "char c =",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        17,
        6
      ],
      "mod_code": [
        "char c =",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "char c =",
        "while ( -- n )"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "if ( c == \" + \" )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        17
      ],
      "mod_code": [
        "if ( c == \" + \" )",
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        6
      ],
      "mod_code": [
        "if ( c == \" + \" )",
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        6
      ],
      "mod_code": [
        "if ( c == \" + \" )",
        "do",
        "while ( -- n )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "if ( c == \" + \" )",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        17,
        6
      ],
      "mod_code": [
        "if ( c == \" + \" )",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( c == \" + \" )",
        "while ( -- n )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        17,
        6
      ],
      "mod_code": [
        "do",
        "cout << x << \" \" << left << \" \" << left << endl ;",
        "while ( -- n )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "do",
        "while ( -- n )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}