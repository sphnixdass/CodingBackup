{
  "meta": {
    "index": 1760,
    "hitid": "3XD2A6FGFNON887302HPU9UEJZ7S9A",
    "workerid": "AIWEXPJAU66D9",
    "probid": "71A",
    "subid": "49043573"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new integer c",
      "code": "int c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to c",
      "code": "cin >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read and discard the input",
      "code": "cin . ignore ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "a is a new array of strings with size c",
      "code": "string a [ c ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare new integer called i = 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "j is a new integer = 0",
      "code": "int j = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while i < c",
      "code": "while ( i < c )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read line from the input and put it into a [ i ]",
      "code": "getline ( cin , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "while j < c",
      "code": "while ( j < c )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if length of a [ j ] is greater than 10",
      "code": "if ( a [ j ] . length ( ) > 10 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print a [ j ] [ 0 ] , length of a [ j ] - 2 and a [ j ] [ a [ j ] . length ( ) - 1 ]",
      "code": "cout << a [ j ] [ 0 ] << ( a [ j ] . length ( ) - 2 ) << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print a [ j ]",
      "code": "cout << a [ j ] << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment j by one",
      "code": "j ++ ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> input ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int c = s . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "i = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "j = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘j’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        15
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "cout << a [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        15,
        11
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "cout << a [ j ] ;",
        "while ( j < c ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        15,
        8
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "cout << a [ j ] ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        15,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "cout << a [ j ] ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        11
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "while ( j < c ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        11,
        8
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        11,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "while ( j < c ) ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        8
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        8,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        11
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] ;",
        "while ( j < c ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        11,
        8
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] ;",
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        11,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] ;",
        "while ( j < c ) ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        8
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        8,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "cout << a [ j ] ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin >> input ;",
        "while ( j < c ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        8
      ],
      "mod_code": [
        "cin >> input ;",
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        8,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "while ( j < c ) ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "cin >> input ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "cin >> input ;",
        "while ( ! i )"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        11,
        8
      ],
      "mod_code": [
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "cout << a [ j ] ;",
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        15,
        8
      ],
      "mod_code": [
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "cout << a [ j ] ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        15,
        8,
        7
      ],
      "mod_code": [
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "cout << a [ j ] ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        11,
        8
      ],
      "mod_code": [
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        11,
        8,
        7
      ],
      "mod_code": [
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        8,
        7
      ],
      "mod_code": [
        "cout << a [ j ] [ 0 ] << \" \" << a [ j ] . size ( ) << \" \" << a [ j ] [ a [ j ] . length ( ) - 1 ] << endl ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        11,
        8
      ],
      "mod_code": [
        "cout << a [ j ] ;",
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        11,
        8,
        7
      ],
      "mod_code": [
        "cout << a [ j ] ;",
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "cout << a [ j ] ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        8,
        7
      ],
      "mod_code": [
        "cout << a [ j ] ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        8,
        7
      ],
      "mod_code": [
        "while ( j < c ) ;",
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "getline ( cin , a [ i ] ) ) ;",
        "while ( ! i )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}