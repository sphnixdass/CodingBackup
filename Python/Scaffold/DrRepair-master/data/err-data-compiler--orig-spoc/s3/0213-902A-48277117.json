{
  "meta": {
    "index": 213,
    "hitid": "3L21G7IH47Q2FPGHVVULXP0W28EY1K",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "902A",
    "subid": "48277117"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = integer array of size 105",
      "code": "int a [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , m , x , y , l , r = integers with l = 0",
      "code": "int n , m , x , y , l = 0 , r ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( i is 1 and x is not 0 )",
      "code": "if ( i == 1 && x != 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if ( i is 1 )",
      "code": "if ( i == 1 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "r = y",
      "code": "r = y ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if ( x < = r )",
      "code": "else if ( x <= r )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "r = max r and y",
      "code": "r = max ( r , y ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if ( r > = m )",
      "code": "if ( r >= m )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        13
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "int r = max ( r , y ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        13,
        17
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "int r = max ( r , y ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        13,
        11
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "int r = max ( r , y ) ;",
        "int r = y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        13,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "int r = max ( r , y ) ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        17
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        17,
        11
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "do",
        "int r = y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        17,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "do",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        11
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "int r = y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        11,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "int r = y ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "cin >> x >> x ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "int r = max ( r , y ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        13,
        17
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "int r = max ( r , y ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        11
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "int r = max ( r , y ) ;",
        "do",
        "int r = y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "int r = max ( r , y ) ;",
        "do",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        13,
        11
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "int r = max ( r , y ) ;",
        "int r = y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        13,
        11,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "int r = max ( r , y ) ;",
        "int r = y ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        13,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "int r = max ( r , y ) ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        17,
        11
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "do",
        "int r = y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        17,
        11,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "do",
        "int r = y ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        17,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "do",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "int r = y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        11,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "int r = y ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "int n , m , x , y , l , r , r ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        5,
        13,
        17
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "int r = max ( r , y ) ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        11
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "int r = max ( r , y ) ;",
        "do",
        "int r = y ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        15
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "int r = max ( r , y ) ;",
        "do",
        "if ( r >= ' m ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        17,
        11
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "do",
        "int r = y ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        17,
        11,
        15
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "do",
        "int r = y ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        17,
        15
      ],
      "mod_code": [
        "cin >> x >> x ;",
        "do",
        "if ( r >= ' m ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "int r = max ( r , y ) ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        17,
        11
      ],
      "mod_code": [
        "int r = max ( r , y ) ;",
        "do",
        "int r = y ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        17,
        11,
        15
      ],
      "mod_code": [
        "int r = max ( r , y ) ;",
        "do",
        "int r = y ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        17,
        15
      ],
      "mod_code": [
        "int r = max ( r , y ) ;",
        "do",
        "if ( r >= ' m ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "do",
        "int r = y ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        11,
        15
      ],
      "mod_code": [
        "do",
        "int r = y ;",
        "if ( r >= ' m ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        15
      ],
      "mod_code": [
        "do",
        "if ( r >= ' m ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}