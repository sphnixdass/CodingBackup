{
  "meta": {
    "index": 580,
    "hitid": "3FJ2RVH25Z0U39Q56N2J3RHAL5892O",
    "workerid": "A1AYVATMT88U1W",
    "probid": "593A",
    "subid": "15562105"
  },
  "lines": [
    {
      "line": 0,
      "text": "vis = array of integers of length 109",
      "code": "int vis [ 109 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "len = array of integers of length 109",
      "code": "int len [ 109 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let w be a string",
      "code": "string w ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read w",
      "code": "cin >> w ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for j = 0 to length of w exclusive , vis [ i ] | = 1 < < ( w [ j ] - a )",
      "code": "for ( int j = 0 ; j < w . length ( ) ; ++ j ) vis [ i ] |= 1 << ( w [ j ] - ' a ' ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "len [ i ] is equal to length of w",
      "code": "len [ i ] = w . length ( ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let mx , sel be integers with mx = 0",
      "code": "int mx = 0 , sel ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to 26 exclusive",
      "code": "for ( int i = 0 ; i < 26 ; ++ i )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = 0 to 26 exclusive",
      "code": "for ( int j = 0 ; j < 26 ; ++ j )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "sel is equal to 0",
      "code": "sel = 0 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "let k be a integer with k = ( 1 < < i ) | ( 1 < < j )",
      "code": "int k = ( 1 << i ) | ( 1 << j ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "for u = 0 to n exclusive",
      "code": "for ( int u = 0 ; u < n ; ++ u )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if k & vis [ u ] ) is equal to vis [ u ] , increment sel by len [ u ]",
      "code": "if ( ( k & vis [ u ] ) == vis [ u ] ) sel += len [ u ] ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "mx is equal to maximum of mx and sel",
      "code": "mx = max ( mx , sel ) ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print mx and newline",
      "code": "cout << mx << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;"
      ],
      "err_line": 9,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 109 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < 26 ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "mx = max ( mx and sel ) ;"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;"
      ],
      "err_line": 9,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        8,
        9,
        11
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;"
      ],
      "err_line": 9,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        9,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;"
      ],
      "err_line": 9,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        9,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        9,
        5,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        9,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "len [ i ] = strlen ( w ) ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "int mx , sel = 0 ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "int mx , sel = 0 ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        11,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "int mx , sel = 0 ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        11,
        5,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "int mx , sel = 0 ;",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        11,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "int mx , sel = 0 ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        17,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        17,
        5,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        17,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        5,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < w . size ( ) ; j ++ ) { vis [ i ] |= 1 ; }",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        9,
        11,
        17
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;"
      ],
      "err_line": 9,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        5
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        7
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        11,
        5
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        11,
        5,
        7
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        11,
        7
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "int mx , sel = 0 ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;"
      ],
      "err_line": 9,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        9,
        17,
        5
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        17,
        5,
        7
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        17,
        7
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        5,
        7
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "len [ i ] = strlen ( w ) ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        17,
        5
      ],
      "mod_code": [
        "int mx , sel = 0 ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        17,
        5,
        7
      ],
      "mod_code": [
        "int mx , sel = 0 ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        17,
        7
      ],
      "mod_code": [
        "int mx , sel = 0 ;",
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "int mx , sel = 0 ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        5,
        7
      ],
      "mod_code": [
        "int mx , sel = 0 ;",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "int mx , sel = 0 ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        17,
        5,
        7
      ],
      "mod_code": [
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        17,
        7
      ],
      "mod_code": [
        "if ( k & vis [ u ] ) sel += len [ u ] ;",
        "w >> w ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "char w ;",
        "w >> w ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘length’ in ‘w’, which is of non-class type ‘char’"
    }
  ]
}