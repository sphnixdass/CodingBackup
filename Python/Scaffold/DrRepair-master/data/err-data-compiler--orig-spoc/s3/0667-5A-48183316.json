{
  "meta": {
    "index": 667,
    "hitid": "37ZQELHEQ0S5ZFYSHF4801QSVXPNM6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "5A",
    "subid": "48183316"
  },
  "lines": [
    {
      "line": 0,
      "text": "c is array of characters of length 1000000",
      "code": "char c [ 1000000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s , total , i , j , k , n and m are integers with s , total = 0",
      "code": "int s = 0 , total = 0 , i , j , k , n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while can read value into c + 1",
      "code": "while ( gets ( c + 1 ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if c [ 1 ] is equal to ' + ' increase s",
      "code": "if ( c [ 1 ] == ' + ' ) s ++ ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if c [ 1 ] is equal to ' - ' decrease s",
      "code": "if ( c [ 1 ] == ' - ' ) s -- ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if c [ 1 ] - ' + ' and c [ 1 ] - ' - '",
      "code": "if ( c [ 1 ] - ' + ' && c [ 1 ] - ' - ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "create integer t with value 1",
      "code": "int t = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "while c [ t ] - ' : ' increment t",
      "code": "while ( c [ t ] - ' : ' ) t ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increase total by ( ( length of c + 1 ) - t ) * s )",
      "code": "total += ( ( strlen ( c + 1 ) - t ) * s ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print total and a new line",
      "code": "cout << total << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘c’, which is of non-class type ‘char [1000000]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string c [ 1000000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( c [ 1 ] - ' + ' && c [ 1 ] - ' - ' ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘c’, which is of non-class type ‘char [1000000]’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "while ( cin >> c + 1 )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "while ( cin >> c + 1 )",
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        0
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "while ( cin >> c + 1 )",
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "while ( cin >> c + 1 )",
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        0
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "while ( cin >> c + 1 )",
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        3,
        0
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "while ( cin >> c + 1 )",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        9,
        0
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        9,
        0
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m , m ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘c’, which is of non-class type ‘char [1000000]’"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;",
        "int s , total , i , j , k , n , n , m = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        9,
        2,
        0
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;",
        "int s , total , i , j , k , n , n , m = 0 ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        9,
        0
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘c’, which is of non-class type ‘char [1000000]’"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;",
        "int s , total , i , j , k , n , n , m = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        9,
        2,
        0
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;",
        "int s , total , i , j , k , n , n , m = 0 ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        9,
        0
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "int s , total , i , j , k , n , n , m = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        2,
        0
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "int s , total , i , j , k , n , n , m = 0 ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "while ( cin >> c + 1 )",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;",
        "int s , total , i , j , k , n , n , m = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        2,
        0
      ],
      "mod_code": [
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;",
        "int s , total , i , j , k , n , n , m = 0 ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "total += ( ( c . length ( ) + 1 ) - t ) * s ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;",
        "int s , total , i , j , k , n , n , m = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        2,
        0
      ],
      "mod_code": [
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;",
        "int s , total , i , j , k , n , n , m = 0 ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "total += ( ( c . size ( ) + 1 ) - t ) * s ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "int s , total , i , j , k , n , n , m = 0 ;",
        "string c [ 1000000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    }
  ]
}