{
  "meta": {
    "index": 1216,
    "hitid": "3ZFRE2BDQ98AAGBFYAHB65DZCFHZXJ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "44A",
    "subid": "39411749"
  },
  "lines": [
    {
      "line": 0,
      "text": "m = map from string to integer",
      "code": "map < string , int > m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n be integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read character from input",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare string variable x",
      "code": "string x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read line and store it into x",
      "code": "getline ( cin , x ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set m [ x ] to 1",
      "code": "m [ x ] = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print length of m and a new line",
      "code": "cout << m . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < string = int > m ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int x ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( cin >> x ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "m [ ' x ' ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::map<std::__cxx11::basic_string<char>, int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        8
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        8,
        6
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;",
        "int x ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        8,
        7
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        8,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        6
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "int x ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        6,
        7
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "int x ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        6,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "int x ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        7
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        7,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        10,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cout << m . length ( ) << endl ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "map < string = int > m ;",
        "m [ ' x ' ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        8,
        6
      ],
      "mod_code": [
        "map < string = int > m ;",
        "m [ ' x ' ] = 1 ;",
        "int x ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        8,
        6,
        7
      ],
      "mod_code": [
        "map < string = int > m ;",
        "m [ ' x ' ] = 1 ;",
        "int x ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        8,
        6,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "m [ ' x ' ] = 1 ;",
        "int x ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        8,
        7
      ],
      "mod_code": [
        "map < string = int > m ;",
        "m [ ' x ' ] = 1 ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        8,
        7,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "m [ ' x ' ] = 1 ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        8,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "m [ ' x ' ] = 1 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "map < string = int > m ;",
        "int x ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        6,
        7
      ],
      "mod_code": [
        "map < string = int > m ;",
        "int x ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        6,
        7,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "int x ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        6,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "int x ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "map < string = int > m ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "map < string = int > m ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        10,
        8,
        6
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;",
        "int x ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        10,
        8,
        6,
        7
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;",
        "int x ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        6,
        3
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;",
        "int x ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        7
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        7,
        3
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        3
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "m [ ' x ' ] = 1 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "int x ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        10,
        6,
        7
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "int x ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        7,
        3
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "int x ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        3
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "int x ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        7,
        3
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "cout << m . length ( ) << endl ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "m [ ' x ' ] = 1 ;",
        "int x ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        8,
        6,
        7
      ],
      "mod_code": [
        "m [ ' x ' ] = 1 ;",
        "int x ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6,
        7,
        3
      ],
      "mod_code": [
        "m [ ' x ' ] = 1 ;",
        "int x ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        3
      ],
      "mod_code": [
        "m [ ' x ' ] = 1 ;",
        "int x ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "m [ ' x ' ] = 1 ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        3
      ],
      "mod_code": [
        "m [ ' x ' ] = 1 ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "m [ ' x ' ] = 1 ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "int x ;",
        "gets ( cin >> x ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid user-defined conversion from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "int x ;",
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "int x ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "gets ( cin >> x ) ;",
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}