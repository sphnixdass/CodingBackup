{
  "meta": {
    "index": 377,
    "hitid": "3S37Y8CWI8UFIJI03CVZAQMJ3KOW4W",
    "workerid": "AIWEXPJAU66D9",
    "probid": "950A",
    "subid": "48585133"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints r , l and a",
      "code": "int r , l , a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read l , r and a",
      "code": "cin >> l >> r >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer variable half with value min of r and l",
      "code": "int half = min ( r , l ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if l < = r",
      "code": "if ( l <= r )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if r - l < = a",
      "code": "if ( r - l <= a )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set half to r",
      "code": "half = r ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "subtract r - l from a",
      "code": "a -= ( r - l ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "change half to half + a",
      "code": "half += a ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "assign 0 to a",
      "code": "a = 0 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if l - r < = a",
      "code": "if ( l - r <= a )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "assign l to half",
      "code": "half = l ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "change a to a - ( l - r )",
      "code": "a -= ( l - r ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "add a to half",
      "code": "half += a ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "assign the new value = 0 to a",
      "code": "a = 0 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if a ! = 0",
      "code": "if ( a != 0 )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if a is odd",
      "code": "if ( a % 2 )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "change half to half + ( a - 1 ) / 2",
      "code": "half += ( ( a - 1 ) / 2 ) ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 25,
      "text": "increase half by a / 2",
      "code": "half += ( a / 2 ) ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print half * 2",
      "code": "cout << half * 2 << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "half . push_back ( a ) ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘push_back’ in ‘half’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> l >> r >> a )"
      ],
      "err_line": 6,
      "err_msg": "‘half’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "else if ( l <= r )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "C = r ;"
      ],
      "err_line": 6,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;"
      ],
      "err_line": 6,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        6,
        10
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "int a = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        6,
        10,
        4
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "int a = 0 ;",
        "else if ( l <= r )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        6,
        10,
        3
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "int a = 0 ;",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        6,
        10,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "int a = 0 ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        6,
        4
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "else if ( l <= r )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        6,
        4,
        3
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "else if ( l <= r )",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        6,
        4,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "else if ( l <= r )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        6,
        3
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        6,
        3,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        6,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "C = r ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        10
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "int a = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘push_back’ in ‘half’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        17,
        10,
        4
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "int a = 0 ;",
        "else if ( l <= r )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        10,
        4,
        3
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "int a = 0 ;",
        "else if ( l <= r )",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        10,
        4,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "int a = 0 ;",
        "else if ( l <= r )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        10,
        3
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "int a = 0 ;",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        10,
        3,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "int a = 0 ;",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        10,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "int a = 0 ;",
        "do"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘push_back’ in ‘half’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "else if ( l <= r )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        4,
        3
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "else if ( l <= r )",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        4,
        3,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "else if ( l <= r )",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        4,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "else if ( l <= r )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        3,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "half . push_back ( a ) ;",
        "do"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘push_back’ in ‘half’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "C = r ;",
        "int a = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        4
      ],
      "mod_code": [
        "C = r ;",
        "int a = 0 ;",
        "else if ( l <= r )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        10,
        4,
        3
      ],
      "mod_code": [
        "C = r ;",
        "int a = 0 ;",
        "else if ( l <= r )",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        10,
        4,
        16
      ],
      "mod_code": [
        "C = r ;",
        "int a = 0 ;",
        "else if ( l <= r )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        10,
        3
      ],
      "mod_code": [
        "C = r ;",
        "int a = 0 ;",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        10,
        3,
        16
      ],
      "mod_code": [
        "C = r ;",
        "int a = 0 ;",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        10,
        16
      ],
      "mod_code": [
        "C = r ;",
        "int a = 0 ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "C = r ;",
        "else if ( l <= r )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "C = r ;",
        "else if ( l <= r )",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        4,
        3,
        16
      ],
      "mod_code": [
        "C = r ;",
        "else if ( l <= r )",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        4,
        16
      ],
      "mod_code": [
        "C = r ;",
        "else if ( l <= r )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "C = r ;",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        3,
        16
      ],
      "mod_code": [
        "C = r ;",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "C = r ;",
        "do"
      ],
      "err_line": 6,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "int a = 0 ;",
        "else if ( l <= r )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        4,
        3
      ],
      "mod_code": [
        "int a = 0 ;",
        "else if ( l <= r )",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        4,
        3,
        16
      ],
      "mod_code": [
        "int a = 0 ;",
        "else if ( l <= r )",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        4,
        16
      ],
      "mod_code": [
        "int a = 0 ;",
        "else if ( l <= r )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "int a = 0 ;",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        3,
        16
      ],
      "mod_code": [
        "int a = 0 ;",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "int a = 0 ;",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "else if ( l <= r )",
        "int half = min ( r and l ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        4,
        3,
        16
      ],
      "mod_code": [
        "else if ( l <= r )",
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "else if ( l <= r )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int half = min ( r and l ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘min(bool)’"
    }
  ]
}