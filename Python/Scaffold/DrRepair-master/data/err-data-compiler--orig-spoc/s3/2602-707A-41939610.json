{
  "meta": {
    "index": 2602,
    "hitid": "386T3MLZLNPNTU4HM8SRK7TK3E608V",
    "workerid": "A1APYLD4DUK33J",
    "probid": "707A",
    "subid": "41939610"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create 2d character array a with size 101 by 101",
      "code": "char a [ 101 ] [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while read n read m is true",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create character temp",
      "code": "char temp ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create integer flag with flag = 0",
      "code": "int flag = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if a [ i ] [ j ] is ' C ' or a [ i ] [ j ] is ' M ' or a [ i ] [ j ] is ' Y ' , set flag to 1",
      "code": "if ( a [ i ] [ j ] == ' C ' || a [ i ] [ j ] == ' M ' || a [ i ] [ j ] == ' Y ' ) { flag = 1 ; }",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if flag is 1",
      "code": "if ( flag == 1 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" # Color \\ n \"",
      "code": "cout << \" #Color\\n \" ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" # Black & White \\ n \"",
      "code": "cout << \" #Black&White\\n \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # Black ( \" \\n \" ) ;"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        13,
        15,
        12
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # Black ( \" \\n \" ) ;",
        "if ( ! flag )"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        13,
        15,
        12,
        14
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # Black ( \" \\n \" ) ;",
        "if ( ! flag )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        13,
        15,
        14
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # Black ( \" \\n \" ) ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        13,
        15,
        12,
        14
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # \" ;",
        "if ( ! flag )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        15,
        14
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "cout << \" # \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        12,
        14
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "if ( ! flag )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "cout << \" U\\n \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "if ( ! flag )"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        15,
        12,
        13
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "if ( ! flag )",
        "cout << \" D\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        15,
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "if ( ! flag )",
        "cout << \" D\\n \" ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        15,
        12,
        14
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "if ( ! flag )",
        "do"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "cout << \" D\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        15,
        13,
        14
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "cout << \" D\\n \" ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "cout << \" # Black ( \" \\n \" ) ;",
        "do"
      ],
      "err_line": 15,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        15,
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "if ( ! flag )",
        "cout << \" D\\n \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        12,
        14
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "if ( ! flag )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        13,
        14
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "cout << \" D\\n \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "cout << \" # \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        13,
        14
      ],
      "mod_code": [
        "if ( ! flag )",
        "cout << \" D\\n \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "if ( ! flag )",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "cout << \" D\\n \" ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}