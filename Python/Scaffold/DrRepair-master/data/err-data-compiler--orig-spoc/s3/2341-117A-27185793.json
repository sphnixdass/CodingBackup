{
  "meta": {
    "index": 2341,
    "hitid": "3WUVMVA7OBXYE33MN0PXMX21B9PZAQ",
    "workerid": "A36Q5TAZ7L6HOS",
    "probid": "117A",
    "subid": "27185793"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "i , x , y , t , up , down , ans , u_d , d_u , count , sum = integers with up set to 0 , down set to 0 , count set to 0 , sum set to 0",
      "code": "int i , x , y , t , up = 0 , down = 0 , ans , u_d , d_u , count = 0 , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x , y and t",
      "code": "cin >> x >> y >> t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set up to 0",
      "code": "up = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set down to 0",
      "code": "down = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set count to 0",
      "code": "count = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set sum to 0",
      "code": "sum = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set u_d to 2 * ( m - x )",
      "code": "u_d = 2 * ( m - x ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set d_u to 2 * ( x - 1 )",
      "code": "d_u = 2 * ( x - 1 ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if x is equal to y",
      "code": "if ( x == y )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if t is less than or equal to x - 1",
      "code": "if ( t <= x - 1 )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if y is greater than x",
      "code": "if ( y > x )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "print x - 1 + y - x",
      "code": "cout << x - 1 + y - x << endl ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 19,
      "text": "print x - 1 + x - y + u_d",
      "code": "cout << x - 1 + x - y + u_d << endl ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 22,
      "text": "decrement t by x - 1",
      "code": "t -= ( x - 1 ) ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "set up to 1",
      "code": "up = 1 ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "increment sum by x - 1",
      "code": "sum += ( x - 1 ) ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "while t is greater than 0",
      "code": "while ( t > 0 )",
      "indent": 4
    },
    {
      "line": 26,
      "text": "if count % 2 is 0",
      "code": "if ( count % 2 == 0 )",
      "indent": 5
    },
    {
      "line": 27,
      "text": "decrement t by u_d",
      "code": "t -= u_d ;",
      "indent": 6
    },
    {
      "line": 28,
      "text": "set down to 1",
      "code": "down = 1 ;",
      "indent": 6
    },
    {
      "line": 29,
      "text": "set up to 1",
      "code": "up = 0 ;",
      "indent": 6
    },
    {
      "line": 30,
      "text": "increment sum by u_d",
      "code": "sum += u_d ;",
      "indent": 6
    },
    {
      "line": 31,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 32,
      "text": "decrement t by d_u",
      "code": "t -= d_u ;",
      "indent": 6
    },
    {
      "line": 33,
      "text": "set down to 0",
      "code": "down = 0 ;",
      "indent": 6
    },
    {
      "line": 34,
      "text": "set up to 1",
      "code": "up = 1 ;",
      "indent": 6
    },
    {
      "line": 35,
      "text": "increment sum by d_u",
      "code": "sum += d_u ;",
      "indent": 6
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 37,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 5
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 39,
      "text": "if y is greater than x",
      "code": "if ( y > x )",
      "indent": 4
    },
    {
      "line": 40,
      "text": "if up is equal to 1",
      "code": "if ( up == 1 )",
      "indent": 5
    },
    {
      "line": 41,
      "text": "print sum + y - x",
      "code": "cout << sum + y - x << endl ;",
      "indent": 6
    },
    {
      "line": 42,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 43,
      "text": "print sum + d_u + y - x",
      "code": "cout << sum + d_u + y - x << endl ;",
      "indent": 6
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 45,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 46,
      "text": "if up is equal to 1",
      "code": "if ( up == 1 )",
      "indent": 5
    },
    {
      "line": 47,
      "text": "print sum + x - y + u_d",
      "code": "cout << sum + x - y + u_d << endl ;",
      "indent": 6
    },
    {
      "line": 48,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 49,
      "text": "print sum + x - y",
      "code": "cout << sum + x - y << endl ;",
      "indent": 6
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , d_u , count = 0 , count = 0 , sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; j <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 53,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "down = l ;"
      ],
      "err_line": 28,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before ‘count’"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 45,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 52,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 51,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        29
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        46
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "if ( ! up )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        46,
        14
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "if ( ! up )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        46,
        18
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "if ( ! up )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        46,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "if ( ! up )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        14
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        14,
        18
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        14,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        18
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        18,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        29,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "up = 1 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        46
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "if ( ! up )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        46,
        14
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "if ( ! up )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        46,
        14,
        18
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "if ( ! up )",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        46,
        14,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "if ( ! up )",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        46,
        18
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "if ( ! up )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        46,
        18,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "if ( ! up )",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        46,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "if ( ! up )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        14,
        18
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        14,
        18,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "do",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        14,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        18,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "do",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "int i , x , y , t , up = 0 , u_d = 0 , u_d , d_u , count = 0 , count = 0 , sum = 0 , sum = 0 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int u_d’"
    },
    {
      "mod_line": [
        29,
        46,
        14
      ],
      "mod_code": [
        "up = 1 ;",
        "if ( ! up )",
        "do"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        46,
        14,
        18
      ],
      "mod_code": [
        "up = 1 ;",
        "if ( ! up )",
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        46,
        14,
        21
      ],
      "mod_code": [
        "up = 1 ;",
        "if ( ! up )",
        "do",
        "do"
      ],
      "err_line": 53,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        46,
        18
      ],
      "mod_code": [
        "up = 1 ;",
        "if ( ! up )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        46,
        18,
        21
      ],
      "mod_code": [
        "up = 1 ;",
        "if ( ! up )",
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        46,
        21
      ],
      "mod_code": [
        "up = 1 ;",
        "if ( ! up )",
        "do"
      ],
      "err_line": 53,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        14
      ],
      "mod_code": [
        "up = 1 ;",
        "do"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        14,
        18
      ],
      "mod_code": [
        "up = 1 ;",
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        14,
        18,
        21
      ],
      "mod_code": [
        "up = 1 ;",
        "do",
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        14,
        21
      ],
      "mod_code": [
        "up = 1 ;",
        "do",
        "do"
      ],
      "err_line": 53,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        18
      ],
      "mod_code": [
        "up = 1 ;",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        18,
        21
      ],
      "mod_code": [
        "up = 1 ;",
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        21
      ],
      "mod_code": [
        "up = 1 ;",
        "do"
      ],
      "err_line": 53,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        46,
        14
      ],
      "mod_code": [
        "if ( ! up )",
        "do"
      ],
      "err_line": 54,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        46,
        14,
        18
      ],
      "mod_code": [
        "if ( ! up )",
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        46,
        14,
        18,
        21
      ],
      "mod_code": [
        "if ( ! up )",
        "do",
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        46,
        14,
        21
      ],
      "mod_code": [
        "if ( ! up )",
        "do",
        "do"
      ],
      "err_line": 53,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        46,
        18
      ],
      "mod_code": [
        "if ( ! up )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        46,
        18,
        21
      ],
      "mod_code": [
        "if ( ! up )",
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        46,
        21
      ],
      "mod_code": [
        "if ( ! up )",
        "do"
      ],
      "err_line": 53,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        18,
        21
      ],
      "mod_code": [
        "do",
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 53,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        21
      ],
      "mod_code": [
        "do",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}