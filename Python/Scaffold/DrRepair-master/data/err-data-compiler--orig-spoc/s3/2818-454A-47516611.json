{
  "meta": {
    "index": 2818,
    "hitid": "3NI0WFPPI9A0PGLTTTVT0TXTY6G06K",
    "workerid": "AIWEXPJAU66D9",
    "probid": "454A",
    "subid": "47516611"
  },
  "lines": [
    {
      "line": 0,
      "text": "void function print with int arguments x and n",
      "code": "void print ( int x , int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for integer i = 0 to ( n - 2 * x + 1 ) / 2 exclusive , print \" * \"",
      "code": "for ( int i = 0 ; i < ( n - 2 * x + 1 ) / 2 ; i ++ ) { cout << \" * \" ; }",
      "indent": 1
    },
    {
      "line": 2,
      "text": "print \" D \" in a loop for i = 0 to 2 * ( x - 1 ) + 1 exclusive",
      "code": "for ( int i = 0 ; i < 2 * ( x - 1 ) + 1 ; i ++ ) { cout << \" D \" ; }",
      "indent": 1
    },
    {
      "line": 3,
      "text": "start for loop from i = 0 to ( n - 2 * x + 1 ) / 2 exclusive , printing \" * \" to the output on iteration",
      "code": "for ( int i = 0 ; i < ( n - 2 * x + 1 ) / 2 ; i ++ ) { cout << \" * \" ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read variable n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i from 1 to n / 2 inclusive",
      "code": "for ( int i = 1 ; i <= n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "call function print ( i , n )",
      "code": "print ( i , n ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" D \" n times",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cout << \" D \" ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print a new line to the output",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for integer i = n / 2 to 1 inclusive decrementing i",
      "code": "for ( int i = n / 2 ; i >= 1 ; i -- )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ( i , n )",
      "code": "print ( i , n ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print new line to the standard output",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "void print ( i , n ) ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "cout << ( i , n ) << endl ;",
        "void print ( i , n ) ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        15,
        9,
        7
      ],
      "mod_code": [
        "cout << ( i , n ) << endl ;",
        "void print ( i , n ) ;",
        "{ cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        15,
        9,
        7,
        13
      ],
      "mod_code": [
        "cout << ( i , n ) << endl ;",
        "void print ( i , n ) ;",
        "{ cin >> n ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        15,
        9,
        13
      ],
      "mod_code": [
        "cout << ( i , n ) << endl ;",
        "void print ( i , n ) ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "cout << ( i , n ) << endl ;",
        "{ cin >> n ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        15,
        7,
        13
      ],
      "mod_code": [
        "cout << ( i , n ) << endl ;",
        "{ cin >> n ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "cout << ( i , n ) << endl ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "void print ( i , n ) ;",
        "cout << ( i , n ) << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        9,
        15,
        7
      ],
      "mod_code": [
        "void print ( i , n ) ;",
        "cout << ( i , n ) << \" \\n \" ;",
        "{ cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        9,
        15,
        7,
        13
      ],
      "mod_code": [
        "void print ( i , n ) ;",
        "cout << ( i , n ) << \" \\n \" ;",
        "{ cin >> n ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        9,
        15,
        13
      ],
      "mod_code": [
        "void print ( i , n ) ;",
        "cout << ( i , n ) << \" \\n \" ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "void print ( i , n ) ;",
        "{ cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        9,
        7,
        13
      ],
      "mod_code": [
        "void print ( i , n ) ;",
        "{ cin >> n ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "void print ( i , n ) ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "variable or field ‘print’ declared void"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "cout << ( i , n ) << \" \\n \" ;",
        "{ cin >> n ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        15,
        7,
        13
      ],
      "mod_code": [
        "cout << ( i , n ) << \" \\n \" ;",
        "{ cin >> n ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "cout << ( i , n ) << \" \\n \" ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "{ cin >> n ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}