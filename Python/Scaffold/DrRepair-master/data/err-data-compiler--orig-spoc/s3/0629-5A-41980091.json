{
  "meta": {
    "index": 629,
    "hitid": "31N9JPQXIPCJ71XHQIOV8WIWEBQNHX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "5A",
    "subid": "41980091"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let comando be string",
      "code": "string comando ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integers x and y = 0",
      "code": "int x = 0 , y = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read line into comando in the loop",
      "code": "while ( getline ( cin , comando ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if comando [ 0 ] = ' + '",
      "code": "if ( comando [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if comando [ 0 ] = ' - '",
      "code": "else if ( comando [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrease x by one",
      "code": "x -- ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "y = y + x * ( size of comando - index of ' : ' in comando - 1 )",
      "code": "y = y + x * ( ( int ) comando . size ( ) - comando . find ( ' : ' ) - 1 ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print y and a new line",
      "code": "cout << y << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s ;"
      ],
      "err_line": 3,
      "err_msg": "‘comando’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> line )"
      ],
      "err_line": 3,
      "err_msg": "‘line’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        3,
        9,
        6
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "else if ( ! comando [ 0 ] )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        3,
        9,
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "else if ( ! comando [ 0 ] )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        3,
        9,
        6,
        2
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "else if ( ! comando [ 0 ] )",
        "int x , y = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        3,
        9,
        8
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        3,
        9,
        8,
        2
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "do",
        "int x , y = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "int x , y = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "else if ( ! comando [ 0 ] )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        9
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "else if ( ! comando [ 0 ] )",
        "do",
        "y = y + x * ( comando . size ( ) - ' : ' - 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        2
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "else if ( ! comando [ 0 ] )",
        "do",
        "int x , y = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "do",
        "y = y + x * ( comando . size ( ) - ' : ' - 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        2
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "do",
        "y = y + x * ( comando . size ( ) - ' : ' - 1 ) ;",
        "int x , y = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        2
      ],
      "mod_code": [
        "while ( cin >> comando )",
        "do",
        "int x , y = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "else if ( ! comando [ 0 ] )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        9,
        6,
        8
      ],
      "mod_code": [
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "else if ( ! comando [ 0 ] )",
        "do"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        9,
        6,
        8,
        2
      ],
      "mod_code": [
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "else if ( ! comando [ 0 ] )",
        "do",
        "int x , y = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        9,
        6,
        2
      ],
      "mod_code": [
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "else if ( ! comando [ 0 ] )",
        "int x , y = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "do"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        9,
        8,
        2
      ],
      "mod_code": [
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "do",
        "int x , y = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "y += x * ( comando . size ( ) - min ( ' : ' ) - 1 ) ;",
        "int x , y = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(char)’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "else if ( ! comando [ 0 ] )",
        "do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "else if ( ! comando [ 0 ] )",
        "do",
        "y = y + x * ( comando . size ( ) - ' : ' - 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        2
      ],
      "mod_code": [
        "else if ( ! comando [ 0 ] )",
        "do",
        "y = y + x * ( comando . size ( ) - ' : ' - 1 ) ;",
        "int x , y = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "else if ( ! comando [ 0 ] )",
        "do",
        "int x , y = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "do",
        "y = y + x * ( comando . size ( ) - ' : ' - 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9,
        2
      ],
      "mod_code": [
        "do",
        "y = y + x * ( comando . size ( ) - ' : ' - 1 ) ;",
        "int x , y = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "do",
        "int x , y = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}