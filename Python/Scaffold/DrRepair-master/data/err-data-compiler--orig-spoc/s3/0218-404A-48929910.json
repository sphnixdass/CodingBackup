{
  "meta": {
    "index": 218,
    "hitid": "306996CF6WE62HN6L3G1PE2VHZZ1BB",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "404A",
    "subid": "48929910"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "x = true",
      "code": "bool x = true ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "arr = array of n by n char",
      "code": "char arr [ n ] [ n ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to n exclusive read arr [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { cin >> arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "a = array 1 by 1 char filled with 0",
      "code": "char a = arr [ 0 ] [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if i is j and arr [ i ] [ j ] is not a and arr [ i ] [ j ] is not ' 0 '",
      "code": "if ( i == j && arr [ i ] [ j ] != a && arr [ i ] [ j ] != ' 0 ' )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "x = false",
      "code": "x = false ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if i is j and arr [ i ] [ j ] is a arr [ i ] [ j ] = ' 0 '",
      "code": "if ( i == j && arr [ i ] [ j ] == a ) { arr [ i ] [ j ] = ' 0 ' ; }",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if i + j is n - 1 and arr [ i ] [ j ] is not a and arr [ i ] [ j ] is not ' 0 '",
      "code": "if ( i + j == n - 1 && arr [ i ] [ j ] != a && arr [ i ] [ j ] != ' 0 ' )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "x = false",
      "code": "x = false ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if i + j is n - 1 and arr [ i ] [ j ] is a arr [ i ] [ j ] = ' 0 '",
      "code": "if ( i + j == n - 1 && arr [ i ] [ j ] == a ) { arr [ i ] [ j ] = ' 0 ' ; }",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if x",
      "code": "if ( x )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "y = true",
      "code": "bool y = true ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "b = array 1 by 1 char filled with 0 and 1",
      "code": "char b = arr [ 0 ] [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "if arr [ i ] [ j ] is not b and arr [ i ] [ j ] is not ' 0 '",
      "code": "if ( arr [ i ] [ j ] != b && arr [ i ] [ j ] != ' 0 ' )",
      "indent": 4
    },
    {
      "line": 29,
      "text": "y = false",
      "code": "y = false ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "break",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "if y and a is not b",
      "code": "if ( y && a != b )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 37,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 39,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "char b [ 1 ] = { 0 , 1 , 1 } ;"
      ],
      "err_line": 25,
      "err_msg": "too many initializers for ‘char [1]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "x = true ;"
      ],
      "err_line": 2,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 3,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "char a [ 1 ] [ 1 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "y = true ;"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "char b [ 1 ] = { 0 , 1 } ;"
      ],
      "err_line": 25,
      "err_msg": "too many initializers for ‘char [1]’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 27,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 38,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 40,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        20
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        25
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        24
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        25
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        24
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        25,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        24
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        24,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20,
        25
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        24
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20,
        25,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20,
        24
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20,
        24,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "char b [ 1 ] = { 0 , 1 , 1 } ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        24
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        24,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        24
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "y = true ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        24,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "char a [ 1 ] = { 0 } ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 15,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        25
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;"
      ],
      "err_line": 25,
      "err_msg": "too many initializers for ‘char [1]’"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        24
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        11
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "too many initializers for ‘char [1]’"
    },
    {
      "mod_line": [
        15,
        20,
        24
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        11
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;"
      ],
      "err_line": 25,
      "err_msg": "too many initializers for ‘char [1]’"
    },
    {
      "mod_line": [
        15,
        25,
        24
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        24,
        11
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        25,
        11
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "too many initializers for ‘char [1]’"
    },
    {
      "mod_line": [
        15,
        24
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        24,
        11
      ],
      "mod_code": [
        "if ( i == j && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25
      ],
      "mod_code": [
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;"
      ],
      "err_line": 25,
      "err_msg": "too many initializers for ‘char [1]’"
    },
    {
      "mod_line": [
        20,
        25,
        24
      ],
      "mod_code": [
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        24,
        11
      ],
      "mod_code": [
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        11
      ],
      "mod_code": [
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "too many initializers for ‘char [1]’"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        11
      ],
      "mod_code": [
        "if ( i + j == n - 1 && arr [ i ] [ j ] == ' a ' ) { arr [ i ] [ j ] = ' 0 ' ; }",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        24
      ],
      "mod_code": [
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        24,
        11
      ],
      "mod_code": [
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        11
      ],
      "mod_code": [
        "char b [ 1 ] = { 0 , 1 , 1 } ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 25,
      "err_msg": "too many initializers for ‘char [1]’"
    },
    {
      "mod_line": [
        24,
        11
      ],
      "mod_code": [
        "y = true ;",
        "if ( i == j && arr [ i ] [ j ] != ' a ' && arr [ i ] [ j ] != ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "‘y’ was not declared in this scope"
    }
  ]
}