{
  "meta": {
    "index": 2163,
    "hitid": "386659BNTLB5IUKWNNJC5X6CP8001B",
    "workerid": "A1AYVATMT88U1W",
    "probid": "330A",
    "subid": "48550786"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m , i , j , ans be integers with value ans is equal to 0",
      "code": "int n , m , i , j , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let b be a 2d array of integers of length 10 rows and 10 columns respectively",
      "code": "int b [ 10 ] [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let r = array of boolean elements of length 10 , c = array of boolean elements of length 10",
      "code": "bool r [ 10 ] , c [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let memset ( r , true , sizeof ( r ) )",
      "code": "memset ( r , true , sizeof ( r ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let memset ( c , true , sizeof ( c ) )",
      "code": "memset ( c , true , sizeof ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let memset ( b , 0 , sizeof ( b ) )",
      "code": "memset ( b , 0 , sizeof ( b ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let c be a 2d array of characters of length 10 rows and 10 columns respectively",
      "code": "char s [ 10 ] [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for ( i = 0 to n exclusive ) , read ith element of array s",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> s [ i ] ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for ( i = 0 to n exclusive )",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for ( j = 0 to m exclusive )",
      "code": "for ( j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if ( s [ i ] [ j ] is equal to . )",
      "code": "if ( s [ i ] [ j ] == ' . ' )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "the value of b [ i ] [ j ] is equal to 1",
      "code": "b [ i ] [ j ] = 1 ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else , do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 15,
      "text": "the ith element of array r is equal to false",
      "code": "r [ i ] = false ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "the jth element of array c is equal to false",
      "code": "c [ j ] = false ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if ( ith element of array r )",
      "code": "if ( r [ i ] )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "ans is equal to ( ans + m )",
      "code": "ans += m ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "( for j = 0 to m exclusive ) , increase the value b [ i ] [ j ] by 1",
      "code": "for ( j = 0 ; j < m ; j ++ ) b [ i ] [ j ] ++ ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "( for i = 0 to m exclusive )",
      "code": "for ( i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if ( ith element of array c )",
      "code": "if ( c [ i ] )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "ans is equal to ( ans + n )",
      "code": "ans += n ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "( for j = 0 to n exclusive )",
      "code": "for ( j = 0 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 30,
      "text": "if ( b [ j ] [ i ] not equal to 1 ) , decrease ans value by 1",
      "code": "if ( b [ j ] [ i ] != 1 ) ans -- ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , i , j , ans , ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "memset ( c , true , sizeof ( c ) )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "memset ( b , 0 , sizeof ( b ) )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘char’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( r [ r ] )"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool [10][bool [10]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "c [ i ] = false ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        7,
        16,
        13
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "c [ i ] = false ;",
        "b [ i ] [ j ] = ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        7,
        16,
        13,
        4
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "c [ i ] = false ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        16,
        13,
        12
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "c [ i ] = false ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        7,
        16,
        4
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "c [ i ] = false ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        16,
        4,
        12
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "c [ i ] = false ;",
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        16,
        12
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "c [ i ] = false ;",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        7,
        13,
        4
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        13,
        4,
        12
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        13,
        12
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        4,
        12
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] = { 0 } ;",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        16,
        13,
        7
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "char c [ 10 ] [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        16,
        13,
        7,
        4
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "char c [ 10 ] [ 10 ] ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        16,
        13,
        7,
        12
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "char c [ 10 ] [ 10 ] ;",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        16,
        13,
        4
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        16,
        13,
        4,
        12
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "b [ i ] [ j ] = ' 1 ' ;",
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "char c [ 10 ] [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        16,
        7,
        4
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "char c [ 10 ] [ 10 ] ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        16,
        7,
        4,
        12
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "char c [ 10 ] [ 10 ] ;",
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        16,
        7,
        12
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "char c [ 10 ] [ 10 ] ;",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        16,
        4,
        12
      ],
      "mod_code": [
        "c [ i ] = false ;",
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "b [ i ] [ j ] = ' 1 ' ;",
        "char c [ 10 ] [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        13,
        7,
        4
      ],
      "mod_code": [
        "b [ i ] [ j ] = ' 1 ' ;",
        "char c [ 10 ] [ 10 ] ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        13,
        7,
        4,
        12
      ],
      "mod_code": [
        "b [ i ] [ j ] = ' 1 ' ;",
        "char c [ 10 ] [ 10 ] ;",
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        13,
        7,
        12
      ],
      "mod_code": [
        "b [ i ] [ j ] = ' 1 ' ;",
        "char c [ 10 ] [ 10 ] ;",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "b [ i ] [ j ] = ' 1 ' ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        13,
        4,
        12
      ],
      "mod_code": [
        "b [ i ] [ j ] = ' 1 ' ;",
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] ;",
        "memset ( r , true , sizeof ( r ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        4,
        12
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] ;",
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "char c [ 10 ] [ 10 ] ;",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char c [10][10]’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "memset ( r , true , sizeof ( r ) )",
        "if ( s [ i ] [ j ] = ' . ' )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘memset’"
    }
  ]
}