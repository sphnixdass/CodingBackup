{
  "meta": {
    "index": 1847,
    "hitid": "3UZUVSO3P7P159LFOG1PAEWJI76ME3",
    "workerid": "A59A6LMCQRBL3",
    "probid": "732A",
    "subid": "49029564"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "k , r = int",
      "code": "int k , r ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read k , r",
      "code": "cin >> k >> r ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for int i = 1",
      "code": "for ( int i = 1 ; ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "n = int , n = remainder of i * k / 10",
      "code": "int n = ( i * k ) % 10 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if n = r or n = 0",
      "code": "if ( n == r || n == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print i",
      "code": "cout << i << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "exit for loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "cin >> k >> k ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        6
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "cin >> k >> k ;",
        "cout << i ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        1
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "cin >> k >> k ;",
        "char k , r ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        7
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "cin >> k >> k ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "cout << i ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        6,
        1
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "cout << i ;",
        "char k , r ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        6,
        7
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "cout << i ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "char k , r ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        7
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "char k , r ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        7
      ],
      "mod_code": [
        "int n = i % k / 10 ;",
        "for ( int i = 1 ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cin >> k >> k ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cin >> k >> k ;",
        "cout << i ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cin >> k >> k ;",
        "cout << i ;",
        "char k , r ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cin >> k >> k ;",
        "cout << i ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cin >> k >> k ;",
        "char k , r ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cin >> k >> k ;",
        "char k , r ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cin >> k >> k ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cout << i ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cout << i ;",
        "char k , r ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cout << i ;",
        "char k , r ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "cout << i ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "char k , r ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "char k , r ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ;",
        "continue ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    }
  ]
}