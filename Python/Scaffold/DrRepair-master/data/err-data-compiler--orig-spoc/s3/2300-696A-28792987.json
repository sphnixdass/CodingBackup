{
  "meta": {
    "index": 2300,
    "hitid": "3H4IKZHALBCBHXJSTGJ8DGFS1PHNNT",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "696A",
    "subid": "28792987"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "M = map form long long to long long",
      "code": "map < long long , long long > M ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "N = int",
      "code": "int N ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read N",
      "code": "cin >> N ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while decrementim N",
      "code": "while ( N -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "temp = int",
      "code": "int temp ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read temp",
      "code": "cin >> temp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if temp = 1",
      "code": "if ( temp == 1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "temp1 , temp2 , temp0 = long long",
      "code": "long long temp1 , temp2 , temp0 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "read temp1 , temp2 , temp0",
      "code": "cin >> temp1 >> temp2 >> temp0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "while temp1 isn ' t temp2",
      "code": "while ( temp1 != temp2 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if temp1 > temp2",
      "code": "if ( temp1 > temp2 )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increment M [ temp1 ] by temp0",
      "code": "M [ temp1 ] += temp0 ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "divide temp1 by 2",
      "code": "temp1 /= 2 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 15,
      "text": "increment M at temp2 by temp0",
      "code": "M [ temp2 ] += temp0 ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "divide temp2 by 2",
      "code": "temp2 /= 2 ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else if temp = 2",
      "code": "else if ( temp == 2 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "temp1 , temp2 = long long",
      "code": "long long temp1 , temp2 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "sum = 0 = long long",
      "code": "long long sum = 0 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "read temp1 , temp2",
      "code": "cin >> temp1 >> temp2 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "while temp1 isn ' t temp2",
      "code": "while ( temp1 != temp2 )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if temp1 > temp2",
      "code": "if ( temp1 > temp2 )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "increment sum by M at temp1",
      "code": "sum += M [ temp1 ] ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "divide temp1 by 2",
      "code": "temp1 /= 2 ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 28,
      "text": "increment sum by M at temp2",
      "code": "sum += M [ temp2 ] ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "divide temp2 by 2",
      "code": "temp2 /= 2 ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < long long = long long > M ;"
      ],
      "err_line": 1,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "M . insert ( temp2 ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘std::map<long long int, long long int>::insert(long long int&)’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "long long temp1 , y ;"
      ],
      "err_line": 22,
      "err_msg": "‘temp2’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "sum += M [ M ] ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<long long int, long long int>’ and ‘std::map<long long int, long long int>’)"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}