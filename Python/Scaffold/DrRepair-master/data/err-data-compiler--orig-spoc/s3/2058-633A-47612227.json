{
  "meta": {
    "index": 2058,
    "hitid": "3THR0FZ95PN3BIGJII36FDB8M4EOLZ",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "633A",
    "subid": "47612227"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b , c = long long",
      "code": "long long a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a , b , c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "ada = boolean = 0",
      "code": "bool ada = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 , i is multiplied by a to 100000 inclusive",
      "code": "for ( long long i = 0 ; i * a <= 100000 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 , i is multiplied by b to 100000 inclusive",
      "code": "for ( long long j = 0 ; j * b <= 100000 ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if j * b + i * a > c , exit the for loop",
      "code": "if ( j * b + i * a > c ) break ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if j * b + i * a is c , ada = 1",
      "code": "if ( j * b + i * a == c ) ada = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if ada is nonzero , exit the loop",
      "code": "if ( ada ) break ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if ada is nonzero , exit the loop",
      "code": "if ( ada ) break ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if ada is nonzero",
      "code": "if ( ada )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print Yes",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print No",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b >> c )"
      ],
      "err_line": 7,
      "err_msg": "‘ada’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "ada = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘ada’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "if ( ! ada )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "if ( ! ada )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "if ( ! ada )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "if ( ! ada )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "if ( ! ada )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "if ( ! ada )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "if ( ! ada )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        4,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "if ( ! ada )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        4,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "if ( ! ada )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "if ( ! ada )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "if ( ! ada )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "if ( ! ada )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "if ( ! ada )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "if ( ! ada )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 100000 ; i <= 100000 ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "if ( ! ada )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "if ( ! ada )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( int i = 0 , i = 0 ; i <= 100000 ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int i’"
    }
  ]
}