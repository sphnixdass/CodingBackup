{
  "meta": {
    "index": 925,
    "hitid": "3PKVGQTFIHEQ8UFYTP903GI95J9RYZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "332A",
    "subid": "38078525"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables i , j , k , m and n",
      "code": "int i , j , k , m , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if i modulo n = 0 & & i > = 3",
      "code": "if ( i % n == 0 && i >= 3 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "create integer mode = 1",
      "code": "int mode = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "for integer j = 2 to 3 inclusive",
      "code": "for ( int j = 2 ; j <= 3 ; ++ j )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if s [ ( i - j + length of s ) % length of s ] ! = s [ ( i - j + 1 + length of s ) % length of s ] , set mode to 0",
      "code": "if ( s [ ( i - j + s . size ( ) ) % s . size ( ) ] != s [ ( i - j + 1 + s . size ( ) ) % s . size ( ) ] ) mode = 0 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if mode is not 0 , increment ans",
      "code": "if ( mode ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 10,
      "err_msg": "‘length’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "cin >> N ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        4,
        3
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "cin >> N ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        4,
        15
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "cin >> N ;",
        "s >> s ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        3
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "cin >> N ;",
        "bool s ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        3,
        15
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "cin >> N ;",
        "bool s ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        15
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "cin >> N ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        4,
        3
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        4,
        3,
        15
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "s >> s ;",
        "bool s ;",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        4,
        15
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "s >> s ;",
        "cout << ans ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        3,
        15
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "bool s ;",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "if ( s [ ( i - j + sizeof ( s . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) % s . length ( ) ) mode = 0 ;",
        "cout << ans ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "bool s ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "bool s ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        15,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "cout << ans ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "s >> s ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> N ;",
        "bool s ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "bool s ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        15,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "bool s ;",
        "cout << ans ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "bool s ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "cin >> N ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        15,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "cout << ans ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "bool s ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        4,
        3,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "bool s ;",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        4,
        3,
        15,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "bool s ;",
        "cout << ans ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        4,
        3,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "bool s ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "s >> s ;",
        "cout << ans ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        15,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "cout << ans ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "bool s ;",
        "cout << ans ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        3,
        15,
        10
      ],
      "mod_code": [
        "bool s ;",
        "cout << ans ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "bool s ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( s [ ( i - j + length . size ( ) ) ] != s [ ( i - j + 1 + 1 ) ) { mode = 0 ; }"
      ],
      "err_line": 10,
      "err_msg": "‘length’ was not declared in this scope"
    }
  ]
}