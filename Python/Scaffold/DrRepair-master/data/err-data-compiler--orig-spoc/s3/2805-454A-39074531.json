{
  "meta": {
    "index": 2805,
    "hitid": "3IZVJEBJ6AEXR1RJXN8L6S0FGDZ6ZI",
    "workerid": "A1APYLD4DUK33J",
    "probid": "454A",
    "subid": "39074531"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers i , j , n , integer array a size 102 by 102",
      "code": "int i , j , n , a [ 102 ] [ 102 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 1 to n inclusive , let a [ i ] [ j ] be 0",
      "code": "for ( j = 1 ; j <= n ; j ++ ) a [ i ] [ j ] = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 1 to n / 2 + 1 inclusive",
      "code": "for ( i = 1 ; i <= n / 2 + 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = n / 2 - i + 2 to n / 2 + i + 1 exclusive",
      "code": "for ( j = n / 2 - i + 2 ; j < n / 2 + i + 1 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let a [ i ] [ j ] be 1",
      "code": "a [ i ] [ j ] = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "let a [ n - i + 1 ] [ j ] be 1",
      "code": "a [ n - i + 1 ] [ j ] = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 1 to n inclusive",
      "code": "for ( j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if a [ i ] [ j ] is 0",
      "code": "if ( a [ i ] [ j ] == 0 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print \" * \"",
      "code": "cout << \" * \" ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << \" * \""
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \""
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        6
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        6,
        15
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        6,
        8
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        6,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        15
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        15,
        8
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "puts ( \" D \" ) ;",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        15,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "puts ( \" D \" ) ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        8
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        8,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "a [ n - i ] [ j ] = 1 ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        13,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "cout << \" * \"",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        6,
        15
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        6,
        15,
        8
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "puts ( \" D \" ) ;",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        6,
        15,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "puts ( \" D \" ) ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "a [ n - i ] [ j ] = 1 ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        6,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        15,
        8
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "puts ( \" D \" ) ;",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        15,
        8,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "puts ( \" D \" ) ;",
        "a [ n - i ] [ j ] = 1 ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        15,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "puts ( \" D \" ) ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "a [ n - i ] [ j ] = 1 ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int i , j , a [ 102 ] [ 102 ] , j ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        6,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        6,
        15,
        8
      ],
      "mod_code": [
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "puts ( \" D \" ) ;",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        6,
        15,
        12
      ],
      "mod_code": [
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "puts ( \" D \" ) ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        6,
        8
      ],
      "mod_code": [
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        6,
        8,
        12
      ],
      "mod_code": [
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "a [ n - i ] [ j ] = 1 ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        6,
        12
      ],
      "mod_code": [
        "cout << \" * \"",
        "for ( int j = n / 2 - i + 2 ; j < n / 2 ; j ++ )",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "cout << \" * \"",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        15,
        8
      ],
      "mod_code": [
        "cout << \" * \"",
        "puts ( \" D \" ) ;",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        15,
        8,
        12
      ],
      "mod_code": [
        "cout << \" * \"",
        "puts ( \" D \" ) ;",
        "a [ n - i ] [ j ] = 1 ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        15,
        12
      ],
      "mod_code": [
        "cout << \" * \"",
        "puts ( \" D \" ) ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "cout << \" * \"",
        "a [ n - i ] [ j ] = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        8,
        12
      ],
      "mod_code": [
        "cout << \" * \"",
        "a [ n - i ] [ j ] = 1 ;",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "cout << \" * \"",
        "if ( a [ i ] [ j ] == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    }
  ]
}