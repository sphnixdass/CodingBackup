{
  "meta": {
    "index": 639,
    "hitid": "3OID399FXG1Q7TFY6YMS96UPKSBFD9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "5A",
    "subid": "46516946"
  },
  "lines": [
    {
      "line": 0,
      "text": "function local with array of chars argument s",
      "code": "int local ( char s [ ] )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "from i = 0 , increment i",
      "code": "for ( int i = 0 ; s [ i ] ; ++ i )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if s [ i ] is equal to ' : ' return i",
      "code": "if ( s [ i ] == ' : ' ) { return i ; }",
      "indent": 2
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "let vis be a unique set of strings",
      "code": "set < string > vis ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let s be an array of characters of size 205",
      "code": "char s [ 205 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set integer ans to 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while can read input into s",
      "code": "while ( gets ( s ) )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if s [ 0 ] is equal to ' + '",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set string tp to s + 1",
      "code": "string tp = s + 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "insert tp into vis",
      "code": "vis . insert ( tp ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if s [ 0 ] is equal to ' - '",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "create string tp with value s + 1",
      "code": "string tp = s + 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "remove tp from the vis",
      "code": "vis . erase ( tp ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set integer st to local ( s )",
      "code": "int st = local ( s ) ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "string tp ( s , s + st )",
      "code": "string tp ( s , s + st ) ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if vis . count ( tp ) is not 0 , append strlen ( s + st + 1 ) * vis . size ( ) to ans",
      "code": "if ( vis . count ( tp ) ) { ans += strlen ( s + st + 1 ) * vis . size ( ) ; }",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool local ( char s )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "i = 0 , i ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int st ( s ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid conversion from ‘char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void local ( char s )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "priority_queue < string > vis ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::priority_queue<std::__cxx11::basic_string<char> >’ has no member named ‘insert’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [205])’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "string tp + 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "vis . push_back ( tp ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "string tp = s + l ;"
      ],
      "err_line": 14,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "vis . pop_front ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘pop_front’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int st ( local ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid conversion from ‘int (*)(char*)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "string tp ( string s , s + st ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘s’ is not a type"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        9
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;",
        "while ( cin >> s )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        9,
        17
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;",
        "while ( cin >> s )",
        "int st ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        9,
        13
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;",
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        1,
        17
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;",
        "int st ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        17,
        13
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;",
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        1,
        17,
        9
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;",
        "int st ( s ) ;",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        13
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        9
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;",
        "else if ( s [ 0 ] == \" - ' )",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        1,
        9
      ],
      "mod_code": [
        "bool local ( char s )",
        "i = 0 , i ++ ;",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "bool local ( char s )",
        "while ( cin >> s )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        9,
        17
      ],
      "mod_code": [
        "bool local ( char s )",
        "while ( cin >> s )",
        "int st ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        13
      ],
      "mod_code": [
        "bool local ( char s )",
        "while ( cin >> s )",
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "bool local ( char s )",
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "bool local ( char s )",
        "int st ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        17,
        13
      ],
      "mod_code": [
        "bool local ( char s )",
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        17,
        13,
        9
      ],
      "mod_code": [
        "bool local ( char s )",
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        17,
        9
      ],
      "mod_code": [
        "bool local ( char s )",
        "int st ( s ) ;",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "bool local ( char s )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        13,
        9
      ],
      "mod_code": [
        "bool local ( char s )",
        "else if ( s [ 0 ] == \" - ' )",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "bool local ( char s )",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "while ( cin >> s )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        17
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "while ( cin >> s )",
        "int st ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        13
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "while ( cin >> s )",
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        9,
        13
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "int st ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        17,
        13
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        17,
        13,
        9
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        17,
        9
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "int st ( s ) ;",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        13,
        9
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "else if ( s [ 0 ] == \" - ' )",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "i = 0 , i ++ ;",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "while ( cin >> s )",
        "int st ( s ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid conversion from ‘char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        17,
        13
      ],
      "mod_code": [
        "while ( cin >> s )",
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "while ( cin >> s )",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        13,
        9
      ],
      "mod_code": [
        "int st ( s ) ;",
        "else if ( s [ 0 ] == \" - ' )",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "int st ( s ) ;",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [205])’"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "else if ( s [ 0 ] == \" - ' )",
        "while ( getline ( cin , s ) )"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    }
  ]
}