{
  "meta": {
    "index": 2782,
    "hitid": "3AC6MFV69KCDOQB0T6ZP3JP5PRFHZU",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "454A",
    "subid": "47179204"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer MD = 1000000009",
      "code": "const int MD = 1000000009 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make const integer INF = 1e9 + 9",
      "code": "const int INF = 1e9 + 9 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "make const int N = 2e3 + 33",
      "code": "const int N = 2e3 + 33 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "make integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n / 2",
      "code": "for ( int i = 1 ; i <= n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if abs ( j - ( n / 2 ) ) is less than i",
      "code": "if ( abs ( j - ( n / 2 ) ) < i )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else do",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print \" * \"",
      "code": "cout << \" * \" ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = n / 2 to 0 by decreasing by 1",
      "code": "for ( int i = n / 2 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if abs ( j - ( n / 2 ) is less than or equal to i",
      "code": "if ( abs ( j - ( n / 2 ) ) <= i )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "display \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else do",
      "code": "else",
      "indent": 3
    },
    {
      "line": 20,
      "text": "display \" * \"",
      "code": "cout << \" * \" ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << \" * \""
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = n / 2 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        6,
        8,
        19
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        6,
        8,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        6,
        19
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        6,
        19,
        18
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "do",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        6,
        19,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "do",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        6,
        18,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        6,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        8,
        19
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        8,
        19,
        18
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "do",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        8,
        19,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "do",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        8,
        18,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        8,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        19,
        18
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "do",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        19,
        18,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "do",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        19,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "do",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        18,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) <= i ) )",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        6,
        8,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "do",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "do",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        6,
        8,
        18,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "if ( abs ( j - ( n / 2 ) ) )",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        19,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "do",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        19,
        18,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "do",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        6,
        19,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "do",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        6,
        18,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n / 2 ; i ++ )",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) ) )",
        "do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19,
        18
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) ) )",
        "do",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19,
        18,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) ) )",
        "do",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        8,
        19,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) ) )",
        "do",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        8,
        18,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) ) )",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "if ( abs ( j - ( n / 2 ) ) )",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        19,
        18
      ],
      "mod_code": [
        "do",
        "puts ( \" D \" ) ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        18,
        5
      ],
      "mod_code": [
        "do",
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        19,
        5
      ],
      "mod_code": [
        "do",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        18,
        5
      ],
      "mod_code": [
        "puts ( \" D \" ) ;",
        "cin >> N ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    }
  ]
}