{
  "meta": {
    "index": 2680,
    "hitid": "3P4ZBJFX2VXPGZFPNTRI1UJASA0WFN",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "785A",
    "subid": "49035991"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s1 = string = \" Tetrahedron \"",
      "code": "string s1 = \" Tetrahedron \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s2 = string = \" Cube \"",
      "code": "string s2 = \" Cube \" ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s3 = string = \" Octahedron \"",
      "code": "string s3 = \" Octahedron \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "s4 = string = \" Dodecahedron \"",
      "code": "string s4 = \" Dodecahedron \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "s5 = string = \" Icosahedron \"",
      "code": "string s5 = \" Icosahedron \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "c = 0 = int",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "s = string",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if s = s1",
      "code": "if ( s == s1 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment c by 4",
      "code": "c += 4 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if s = s2",
      "code": "else if ( s == s2 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment c by 6",
      "code": "c += 6 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else if s = s3",
      "code": "else if ( s == s3 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment s by 8",
      "code": "c += 8 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else fi s = s4",
      "code": "else if ( s == s4 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increment c by 12",
      "code": "c += 12 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increment c by 20",
      "code": "c += 20 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 7,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( s == ' s1 ' )"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else if ( s == ' s2 ' )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "s = s + 8 ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "s += 8 ;",
        "else"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        18,
        4
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "string s4 = \" + \" ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        18,
        4,
        14
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        4,
        11
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "string s4 = \" + \" ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        18,
        4,
        23
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "string s4 = \" + \" ;",
        "cout << c ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        18,
        14
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "else if ( s == ' s2 ' )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        14,
        11
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "else if ( s == ' s2 ' )",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        18,
        14,
        23
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "else if ( s == ' s2 ' )",
        "cout << c ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        11
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        18,
        11,
        23
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        18,
        23
      ],
      "mod_code": [
        "s += 8 ;",
        "else",
        "cout << c ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        4,
        14
      ],
      "mod_code": [
        "s += 8 ;",
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        4,
        14,
        11
      ],
      "mod_code": [
        "s += 8 ;",
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        4,
        14,
        23
      ],
      "mod_code": [
        "s += 8 ;",
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )",
        "cout << c ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        4,
        11
      ],
      "mod_code": [
        "s += 8 ;",
        "string s4 = \" + \" ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        4,
        11,
        23
      ],
      "mod_code": [
        "s += 8 ;",
        "string s4 = \" + \" ;",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        14
      ],
      "mod_code": [
        "s += 8 ;",
        "else if ( s == ' s2 ' )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        14,
        11
      ],
      "mod_code": [
        "s += 8 ;",
        "else if ( s == ' s2 ' )",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        14,
        11,
        23
      ],
      "mod_code": [
        "s += 8 ;",
        "else if ( s == ' s2 ' )",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        14,
        23
      ],
      "mod_code": [
        "s += 8 ;",
        "else if ( s == ' s2 ' )",
        "cout << c ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "s += 8 ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        11,
        23
      ],
      "mod_code": [
        "s += 8 ;",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        4
      ],
      "mod_code": [
        "else",
        "string s4 = \" + \" ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        4,
        14
      ],
      "mod_code": [
        "else",
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        18,
        4,
        14,
        11
      ],
      "mod_code": [
        "else",
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        4,
        14,
        23
      ],
      "mod_code": [
        "else",
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )",
        "cout << c ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        18,
        4,
        11
      ],
      "mod_code": [
        "else",
        "string s4 = \" + \" ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        4,
        11,
        23
      ],
      "mod_code": [
        "else",
        "string s4 = \" + \" ;",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        4,
        23
      ],
      "mod_code": [
        "else",
        "string s4 = \" + \" ;",
        "cout << c ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "else",
        "else if ( s == ' s2 ' )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        18,
        14,
        11
      ],
      "mod_code": [
        "else",
        "else if ( s == ' s2 ' )",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        14,
        11,
        23
      ],
      "mod_code": [
        "else",
        "else if ( s == ' s2 ' )",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        14,
        23
      ],
      "mod_code": [
        "else",
        "else if ( s == ' s2 ' )",
        "cout << c ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "else",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        11,
        23
      ],
      "mod_code": [
        "else",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        23
      ],
      "mod_code": [
        "else",
        "cout << c ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        14,
        11
      ],
      "mod_code": [
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        14,
        11,
        23
      ],
      "mod_code": [
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        14,
        23
      ],
      "mod_code": [
        "string s4 = \" + \" ;",
        "else if ( s == ' s2 ' )",
        "cout << c ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "string s4 = \" + \" ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        11,
        23
      ],
      "mod_code": [
        "string s4 = \" + \" ;",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "else if ( s == ' s2 ' )",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        11,
        23
      ],
      "mod_code": [
        "else if ( s == ' s2 ' )",
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        23
      ],
      "mod_code": [
        "else if ( s == ' s2 ' )",
        "cout << c ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "s >> s ;",
        "cout << c ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}