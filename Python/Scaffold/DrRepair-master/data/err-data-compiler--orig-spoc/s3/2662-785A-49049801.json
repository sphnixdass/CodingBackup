{
  "meta": {
    "index": 2662,
    "hitid": "375VSR8FVW3QDKP3PBBJHNRBC0FRZ3",
    "workerid": "A1AYVATMT88U1W",
    "probid": "785A",
    "subid": "49049801"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n is an integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s is a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "h is integer 0",
      "code": "int h = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s equals \" Icosahedron \"",
      "code": "if ( s == \" Icosahedron \" )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increase h by 20",
      "code": "h += 20 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if s equals \" Tetrahedron \"",
      "code": "else if ( s == \" Tetrahedron \" )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase h by 4",
      "code": "h += 4 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if s equals \" Cube \"",
      "code": "else if ( s == \" Cube \" )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increase h by 6",
      "code": "h += 6 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if s equals \" Octahedron \"",
      "code": "else if ( s == \" Octahedron \" )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increase h by 8",
      "code": "h += 8 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if s equals \" Dodecahedron \"",
      "code": "else if ( s == \" Dodecahedron \" )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increase h by 12",
      "code": "h += 12 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print h and endline",
      "code": "cout << h << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        15,
        6
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        15,
        6,
        7
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        15,
        6,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "s >> s ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        6,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        15,
        7,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        2,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        6,
        7
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        6,
        7,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        7,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        6,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        2,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        7,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        2,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        6,
        7
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        6,
        7,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6,
        7,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        6,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6,
        2,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "s >> s ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        7,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        7,
        2,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        7,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        2,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s == \" [] \" )",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s == \" [] \" )",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "cin >> N ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        11
      ],
      "mod_code": [
        "if ( s == \" [] \" )",
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> N ;",
        "if ( s == \" [] \" )"
      ],
      "err_line": 2,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}