{
  "meta": {
    "index": 1907,
    "hitid": "36GJS3V78VK9OFBLREELUPPEQ6OJG0",
    "workerid": "A1APYLD4DUK33J",
    "probid": "626A",
    "subid": "46207771"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer MAX with MAX = 3e5 + 5",
      "code": "const int MAX = 3e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create constant long long MAX2 with MAX2 = 11",
      "code": "const long long MAX2 = 11 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create constant integer MOD with MOD = 1000000000 + 7",
      "code": "const int MOD = 1000000000 + 7 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create constant integer long long INF with INF = 20000",
      "code": "const long long INF = 20000 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create constant integer array dr with dr = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 }",
      "code": "const int dr [ ] = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create constant integer array dc with dc = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 }",
      "code": "const int dc [ ] = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create constant double pi with pi = acosign of - 1",
      "code": "const double pi = acos ( - 1 ) ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "create constant double eps with eps = 1e - 9",
      "code": "const double eps = 1e-9 ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create long longs n , x , y , z , sz , cnt , tmp , res , a , b , k , m",
      "code": "long long n , x , y , z , sz , cnt , tmp , res , a , b , k , m ;",
      "indent": 0
    },
    {
      "line": 9,
      "text": "create boolean array v with size MAX",
      "code": "bool v [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 10,
      "text": "create strings s , t",
      "code": "string s , t ;",
      "indent": 0
    },
    {
      "line": 11,
      "text": "create character array c with size MAX",
      "code": "char c [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 1 to n inclusive , read c [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> c [ i ] ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set x to y to 0",
      "code": "x = y = 0 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for j = i to n inclusive",
      "code": "for ( int j = i ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if c [ j ] is ' L '",
      "code": "if ( c [ j ] == ' L ' )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else if c [ j ] is ' R '",
      "code": "else if ( c [ j ] == ' R ' )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "else if c [ j ] is ' U '",
      "code": "else if ( c [ j ] == ' U ' )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 25,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "if not x and not y , increment z",
      "code": "if ( ! x && ! y ) z ++ ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print z print ' \\ n '",
      "code": "cout << z << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int MAX += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const int MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , res , b , b , b , m ;"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "s , t ;"
      ],
      "err_line": 10,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "char c [ MAX ] [ MAX ] ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 13,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        10,
        16
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "x = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        0
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "x = 0 ;",
        "const int MAX += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        13
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "x = 0 ;",
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "x = 0 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        10,
        0
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "const int MAX += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        10,
        0,
        13
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "const int MAX += 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        10,
        0,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "const int MAX += 5 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        10,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "s , t ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "x = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        16,
        0
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "x = 0 ;",
        "const int MAX += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        16,
        0,
        13
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "x = 0 ;",
        "const int MAX += 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        16,
        0,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "x = 0 ;",
        "const int MAX += 5 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        16,
        13
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "x = 0 ;",
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        16,
        13,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "x = 0 ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        16,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "x = 0 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "const int MAX += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        0,
        13
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "const int MAX += 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        0,
        13,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "const int MAX += 5 ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        0,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "const int MAX += 5 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "cin >> N ;"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        13,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "long long n , x , y , z , sz , cnt , tmp , a , b , b , b , m ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 8,
      "err_msg": "redefinition of ‘long long int b’"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "s , t ;",
        "x = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        10,
        16,
        0
      ],
      "mod_code": [
        "s , t ;",
        "x = 0 ;",
        "const int MAX += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        10,
        16,
        0,
        13
      ],
      "mod_code": [
        "s , t ;",
        "x = 0 ;",
        "const int MAX += 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        10,
        16,
        0,
        20
      ],
      "mod_code": [
        "s , t ;",
        "x = 0 ;",
        "const int MAX += 5 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        10,
        16,
        13
      ],
      "mod_code": [
        "s , t ;",
        "x = 0 ;",
        "cin >> N ;"
      ],
      "err_line": 10,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        10,
        16,
        13,
        20
      ],
      "mod_code": [
        "s , t ;",
        "x = 0 ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 10,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        10,
        16,
        20
      ],
      "mod_code": [
        "s , t ;",
        "x = 0 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 10,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "s , t ;",
        "const int MAX += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        10,
        0,
        13
      ],
      "mod_code": [
        "s , t ;",
        "const int MAX += 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        10,
        0,
        13,
        20
      ],
      "mod_code": [
        "s , t ;",
        "const int MAX += 5 ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        10,
        0,
        20
      ],
      "mod_code": [
        "s , t ;",
        "const int MAX += 5 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "s , t ;",
        "cin >> N ;"
      ],
      "err_line": 10,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        10,
        13,
        20
      ],
      "mod_code": [
        "s , t ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 10,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        10,
        20
      ],
      "mod_code": [
        "s , t ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 10,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "x = 0 ;",
        "const int MAX += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        16,
        0,
        13
      ],
      "mod_code": [
        "x = 0 ;",
        "const int MAX += 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        16,
        0,
        13,
        20
      ],
      "mod_code": [
        "x = 0 ;",
        "const int MAX += 5 ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        16,
        0,
        20
      ],
      "mod_code": [
        "x = 0 ;",
        "const int MAX += 5 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "x = 0 ;",
        "cin >> N ;"
      ],
      "err_line": 13,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        13,
        20
      ],
      "mod_code": [
        "x = 0 ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 13,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "const int MAX += 5 ;",
        "cin >> N ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        0,
        13,
        20
      ],
      "mod_code": [
        "const int MAX += 5 ;",
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "const int MAX += 5 ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "cin >> N ;",
        "else if ( ! c [ j ] == ' R ' )"
      ],
      "err_line": 13,
      "err_msg": "‘N’ was not declared in this scope"
    }
  ]
}