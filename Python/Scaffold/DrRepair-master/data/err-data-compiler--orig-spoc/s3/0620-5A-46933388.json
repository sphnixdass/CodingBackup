{
  "meta": {
    "index": 620,
    "hitid": "3MG8450X2O4OF8FE6W8MV0CH8YTUP1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "5A",
    "subid": "46933388"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integers k , now , with k = 0 , now = 0",
      "code": "int k = 0 , now = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "end statement",
      "code": ";",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while read line from cin to s",
      "code": "while ( getline ( cin , s ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ 0 ] is ' - ' or s [ 0 ] is ' + '",
      "code": "if ( s [ 0 ] == ' - ' || s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s [ 0 ] is ' - '",
      "code": "if ( s [ 0 ] == ' - ' )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "decrement now",
      "code": "now -- ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment now",
      "code": "now ++ ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "break current loop iteration",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "create boolean p with p = 0",
      "code": "bool p = 0 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "create integer len with len = length of s",
      "code": "int len = s . length ( ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "for i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if s [ i ] is ' : '",
      "code": "if ( s [ i ] == ' : ' )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increment k by ( len - i - 1 ) * now",
      "code": "k += ( len - i - 1 ) * now ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print k print newline",
      "code": "cout << k << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int k = 0 , now = 0 , now ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int now’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "statement ;"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" - ' )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘;’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "bool p = 0 , p ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘bool p’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        15
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        15,
        4
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        15,
        1
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        15,
        8
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        4
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        4,
        1
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        4,
        8
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        1
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        1,
        8
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        8
      ],
      "mod_code": [
        "statement ;",
        "bool p = 0 , p ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "statement ;",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        4
      ],
      "mod_code": [
        "statement ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        4,
        1
      ],
      "mod_code": [
        "statement ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        4,
        8
      ],
      "mod_code": [
        "statement ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        1
      ],
      "mod_code": [
        "statement ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        1,
        8
      ],
      "mod_code": [
        "statement ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        8
      ],
      "mod_code": [
        "statement ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "statement ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "statement ;",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1,
        8
      ],
      "mod_code": [
        "statement ;",
        "while ( cin >> cin >> s )",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "statement ;",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "statement ;",
        "int s ;"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        8
      ],
      "mod_code": [
        "statement ;",
        "int s ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "statement ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "‘statement’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘bool p’"
    },
    {
      "mod_line": [
        13,
        15,
        4
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        13,
        15,
        4,
        1
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        13,
        15,
        4,
        8
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        13,
        15,
        1
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        13,
        15,
        1,
        8
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "int s ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        13,
        15,
        8
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        13,
        4,
        1
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        13,
        4,
        1,
        8
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "while ( cin >> cin >> s )",
        "int s ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        13,
        4,
        8
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        13,
        1,
        8
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "int s ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "bool p = 0 , p ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘;’ token"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        15,
        4,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        15,
        4,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )",
        "int s ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        15,
        4,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        15,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "int s ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "int s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        4,
        1,
        8
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "int s ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int s ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    }
  ]
}