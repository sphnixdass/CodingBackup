{
  "meta": {
    "index": 649,
    "hitid": "3PKVGQTFIHEQ8UFYTP903GI954SRYO",
    "workerid": "A1APYLD4DUK33J",
    "probid": "5A",
    "subid": "47299634"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings s , p",
      "code": "string s , p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integers i , j , k , l , sum with sum = 0",
      "code": "int i , j , k , l , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers c1 , c2 , c3 with c1 = 0 , c2 = 0 , c3 = 0",
      "code": "int c1 = 0 , c2 = 0 , c3 = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while read line from cin to s",
      "code": "while ( getline ( cin , s ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if size of s is 0 , break loop",
      "code": "if ( s . size ( ) == 0 ) break ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s [ 0 ] is ' + '",
      "code": "if ( s [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment c1",
      "code": "c1 ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if s [ 0 ] is ' - '",
      "code": "else if ( s [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrement c1",
      "code": "c1 -- ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set c3 to 0",
      "code": "c3 = 0 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "for i = 0",
      "code": "for ( i = 0 ; ; i ++ )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment c3",
      "code": "c3 ++ ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "if s [ i ] is ' : ' break loop",
      "code": "if ( s [ i ] == ' : ' ) break ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment sum by ( size of s - c3 ) * c1",
      "code": "sum += ( s . size ( ) - c3 ) * c1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print sum print newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "s , p ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , j , k , l , sum , sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s [ 0 ] == \" + ' )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        8,
        2
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        8,
        2,
        4
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        8,
        2,
        16
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        8,
        2,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        8,
        4,
        16
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        8,
        4,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        8,
        16
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        8,
        16,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        8,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "else if ( ! s [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "int i , j , k , l , sum , sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        16
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        2,
        16
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "int i , j , k , l , sum , sum = 0 ;",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        2,
        16,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "int i , j , k , l , sum , sum = 0 ;",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        2,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "int i , j , k , l , sum , sum = 0 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        4,
        16
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        4,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        16,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c3 = 0 , c3 ;",
        "do"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c3’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        8,
        2,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        8,
        2,
        4,
        16
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        8,
        2,
        4,
        10
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        8,
        2,
        16
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        8,
        2,
        16,
        10
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        8,
        2,
        10
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "int i , j , k , l , sum , sum = 0 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        16
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        16,
        10
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        10
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8,
        16,
        10
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "else if ( ! s [ 0 ] == ' - ' )",
        "do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        2,
        4,
        16
      ],
      "mod_code": [
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        2,
        4,
        16,
        10
      ],
      "mod_code": [
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        2,
        4,
        10
      ],
      "mod_code": [
        "int i , j , k , l , sum , sum = 0 ;",
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "int i , j , k , l , sum , sum = 0 ;",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        2,
        16,
        10
      ],
      "mod_code": [
        "int i , j , k , l , sum , sum = 0 ;",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int i , j , k , l , sum , sum = 0 ;",
        "do"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        4,
        16,
        10
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "while ( cin >> cin >> s )",
        "do"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::istream {aka std::basic_istream<char>}’)"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "sum += ( s . substr ( s - c3 ) * c1 ) ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    }
  ]
}