{
  "meta": {
    "index": 2305,
    "hitid": "3L7SUC0TTUO2EJ6LG92APPUFO6X0MW",
    "workerid": "A1AYVATMT88U1W",
    "probid": "696A",
    "subid": "44983944"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "m = map from long long to long long",
      "code": "map < long long , long long > m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let q be a integer",
      "code": "int q ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read q",
      "code": "cin >> q ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while q is decremented by 1",
      "code": "while ( q -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let tc be a integer",
      "code": "int tc ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read tc",
      "code": "cin >> tc ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if tc equal to 1",
      "code": "if ( tc == 1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let u , v , w be long integers",
      "code": "long long u , v , w ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "read u , v , w",
      "code": "cin >> u >> v >> w ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment m [ u ] by w",
      "code": "m [ u ] += w ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment m [ v ] by w",
      "code": "m [ v ] += w ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "while u is not equal to v",
      "code": "while ( u != v )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if v is greater than u , swap the values u , v",
      "code": "if ( v > u ) swap ( u , v ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "divide u by 2",
      "code": "u /= 2 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "if u equals v",
      "code": "if ( u == v )",
      "indent": 4
    },
    {
      "line": 16,
      "text": "decrease m [ u ] by w",
      "code": "m [ u ] -= w ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 18,
      "text": "increase m [ u ] by w",
      "code": "m [ u ] += w ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if tc equals 2",
      "code": "if ( tc == 2 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "let u , v be long integers",
      "code": "long long u , v ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "read u , v",
      "code": "cin >> u >> v ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "the long integer value of sol = m [ u ] + m [ v ]",
      "code": "long long sol = m [ u ] + m [ v ] ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "while u is not equal to v",
      "code": "while ( u != v )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "if v is greater than u , swap u and v",
      "code": "if ( v > u ) swap ( u , v ) ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "divide u by 2",
      "code": "u /= 2 ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "if u equals v",
      "code": "if ( u == v )",
      "indent": 4
    },
    {
      "line": 29,
      "text": "decrease sol by m [ u ]",
      "code": "sol -= m [ u ] ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 31,
      "text": "increase sol by m [ u ]",
      "code": "sol += m [ u ] ;",
      "indent": 5
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 33,
      "text": "print sol and newline",
      "code": "cout << sol << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < long long to ;"
      ],
      "err_line": 1,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cout << cin >> q ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( -- q -- )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "m [ i ] -= w ;"
      ],
      "err_line": 16,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "while ( cin >> u >> v )"
      ],
      "err_line": 29,
      "err_msg": "‘sol’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        7,
        11,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "if ( tc == ' 1 ' )",
        "m [ v ] ++ ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        7,
        12,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "if ( tc == ' 1 ' )",
        "while ( u != ' v ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        7,
        21,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "if ( tc == ' 1 ' )",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        7,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "if ( tc == ' 1 ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        11,
        12,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "m [ v ] ++ ;",
        "while ( u != ' v ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        11,
        21,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "m [ v ] ++ ;",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        11,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "m [ v ] ++ ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        12,
        21,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "while ( u != ' v ' )",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        12,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "while ( u != ' v ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        21,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        17
      ],
      "mod_code": [
        "if ( tc == ' 1 ' )",
        "m [ v ] ++ ;",
        "while ( u != ' v ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        11,
        21,
        17
      ],
      "mod_code": [
        "if ( tc == ' 1 ' )",
        "m [ v ] ++ ;",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        11,
        17
      ],
      "mod_code": [
        "if ( tc == ' 1 ' )",
        "m [ v ] ++ ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        12,
        21,
        17
      ],
      "mod_code": [
        "if ( tc == ' 1 ' )",
        "while ( u != ' v ' )",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        12,
        17
      ],
      "mod_code": [
        "if ( tc == ' 1 ' )",
        "while ( u != ' v ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        21,
        17
      ],
      "mod_code": [
        "if ( tc == ' 1 ' )",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "if ( tc == ' 1 ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12,
        21,
        17
      ],
      "mod_code": [
        "m [ v ] ++ ;",
        "while ( u != ' v ' )",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        12,
        17
      ],
      "mod_code": [
        "m [ v ] ++ ;",
        "while ( u != ' v ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        21,
        17
      ],
      "mod_code": [
        "m [ v ] ++ ;",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "m [ v ] ++ ;",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        21,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "while ( u != ' v ' )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21,
        17
      ],
      "mod_code": [
        "if ( ! tc )",
        "do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}