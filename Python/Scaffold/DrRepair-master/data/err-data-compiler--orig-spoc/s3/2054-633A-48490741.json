{
  "meta": {
    "index": 2054,
    "hitid": "3G9UA71JVVOQVM0KYBAROCCLSQZJ72",
    "workerid": "A1APYLD4DUK33J",
    "probid": "633A",
    "subid": "48490741"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare gcd with long longs a , b as arguments , returning long long",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "while a is greater than 0 and b is greater than 0",
      "code": "while ( a > 0 && b > 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 2
    },
    {
      "line": 3,
      "text": "set a to a % b",
      "code": "a %= b ;",
      "indent": 3
    },
    {
      "line": 4,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set b to b % a",
      "code": "b %= a ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return a + b",
      "code": "return a + b ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "create long long array f with size 10010",
      "code": "long long f [ 10010 ] ;",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "create long longs a , b , s , k , n , i , j , x , y , c with s = 0",
      "code": "long long a , b , s = 0 , k , n , i , j , x , y , c ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read a read b read c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if c % result of run gcd with a , b as arguments",
      "code": "if ( c % gcd ( a , b ) )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" No \" print newline",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set x to 10000 / a",
      "code": "x = 10000 / a ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set y to 10000 / b",
      "code": "y = 10000 / b ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to x + 1 inclusive",
      "code": "for ( i = 0 ; i <= x + 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for j = 0 to y + 1 inclusive",
      "code": "for ( j = 0 ; j <= y + 1 ; j ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if i * a + j * b is less than or equal to 10005 , increment f [ i * a + j * b ]",
      "code": "if ( i * a + j * b <= 10005 ) f [ i * a + j * b ] ++ ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if f [ c ] is true",
      "code": "if ( f [ c ] )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print \" Yes \" print newline",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" No \" print newline",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 6,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , c , c ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int c’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 13,
      "err_msg": "‘a’ cannot be used as a function"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 28,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        18,
        26
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        18,
        26,
        24
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "do",
        "if ( ! f [ c ] )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        18,
        26,
        0
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        18,
        26,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "do",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        18,
        24
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "if ( ! f [ c ] )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        18,
        24,
        0
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        18,
        24,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "if ( ! f [ c ] )",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        18,
        0
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        18,
        0,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        18,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "y /= b ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        26
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "do"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        26,
        24
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "do",
        "if ( ! f [ c ] )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        26,
        24,
        0
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "do",
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        26,
        24,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "do",
        "if ( ! f [ c ] )",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        26,
        0
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        26,
        0,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "do",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        26,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "do",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "if ( ! f [ c ] )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        24,
        0
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        24,
        0,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        24,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "if ( ! f [ c ] )",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        0,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "long long a , b , s , k , n , i , j , x , y , y , c ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘long long int y’"
    },
    {
      "mod_line": [
        18,
        26
      ],
      "mod_code": [
        "y /= b ;",
        "do"
      ],
      "err_line": 28,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        18,
        26,
        24
      ],
      "mod_code": [
        "y /= b ;",
        "do",
        "if ( ! f [ c ] )"
      ],
      "err_line": 28,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        18,
        26,
        24,
        0
      ],
      "mod_code": [
        "y /= b ;",
        "do",
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        26,
        24,
        13
      ],
      "mod_code": [
        "y /= b ;",
        "do",
        "if ( ! f [ c ] )",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 13,
      "err_msg": "‘a’ cannot be used as a function"
    },
    {
      "mod_line": [
        18,
        26,
        0
      ],
      "mod_code": [
        "y /= b ;",
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        26,
        0,
        13
      ],
      "mod_code": [
        "y /= b ;",
        "do",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        26,
        13
      ],
      "mod_code": [
        "y /= b ;",
        "do",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 13,
      "err_msg": "‘a’ cannot be used as a function"
    },
    {
      "mod_line": [
        18,
        24,
        0
      ],
      "mod_code": [
        "y /= b ;",
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        24,
        0,
        13
      ],
      "mod_code": [
        "y /= b ;",
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        24,
        13
      ],
      "mod_code": [
        "y /= b ;",
        "if ( ! f [ c ] )",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 13,
      "err_msg": "‘a’ cannot be used as a function"
    },
    {
      "mod_line": [
        18,
        0
      ],
      "mod_code": [
        "y /= b ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        0,
        13
      ],
      "mod_code": [
        "y /= b ;",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "y /= b ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 13,
      "err_msg": "‘a’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        24
      ],
      "mod_code": [
        "do",
        "if ( ! f [ c ] )"
      ],
      "err_line": 28,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        26,
        24,
        0
      ],
      "mod_code": [
        "do",
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        24,
        0,
        13
      ],
      "mod_code": [
        "do",
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        24,
        13
      ],
      "mod_code": [
        "do",
        "if ( ! f [ c ] )",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 13,
      "err_msg": "‘a’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        0
      ],
      "mod_code": [
        "do",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        0,
        13
      ],
      "mod_code": [
        "do",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        13
      ],
      "mod_code": [
        "do",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 13,
      "err_msg": "‘a’ cannot be used as a function"
    },
    {
      "mod_line": [
        24,
        0
      ],
      "mod_code": [
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        0,
        13
      ],
      "mod_code": [
        "if ( ! f [ c ] )",
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        13
      ],
      "mod_code": [
        "if ( ! f [ c ] )",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 13,
      "err_msg": "‘a’ cannot be used as a function"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "if ( c % a ( a , b ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}