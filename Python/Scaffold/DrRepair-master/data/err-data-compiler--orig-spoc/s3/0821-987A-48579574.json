{
  "meta": {
    "index": 821,
    "hitid": "36FQTHX3Z3L2CK1L87UKD7HSFJ9B39",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "987A",
    "subid": "48579574"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , i , counter = int with counter = 6",
      "code": "int n , i , counter = 6 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a = string = Power \\ nTime \\ nSpace \\ nSoul \\ nReality \\ nMind \\ n",
      "code": "string a = ( \" Power\\nTime\\nSpace\\nSoul\\nReality\\nMind\\n \" ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "b , c = string",
      "code": "string b , c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read b",
      "code": "cin >> b ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if b = purple",
      "code": "if ( b == \" purple \" )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "call erase on a with args rfind with \" Power \" in a , 6",
      "code": "a . erase ( a . rfind ( \" Power \" ) , 6 ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "decrement counter",
      "code": "counter -- ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if b is \" green \"",
      "code": "else if ( b == \" green \" )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "call erase on a with args rfind with \" Time \" in a , 5",
      "code": "a . erase ( a . rfind ( \" Time \" ) , 5 ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "decrement counter",
      "code": "counter -- ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if b = \" blue \"",
      "code": "else if ( b == \" blue \" )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "call erase on a with args rfind \" Space \" in a , 6",
      "code": "a . erase ( a . rfind ( \" Space \" ) , 6 ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "decrement counter",
      "code": "counter -- ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else if b = \" orange \"",
      "code": "else if ( b == \" orange \" )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "call erase on a with args rfind \" Soul \" in a , 5",
      "code": "a . erase ( a . rfind ( \" Soul \" ) , 5 ) ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "decrement counter",
      "code": "counter -- ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else if b = \" red \"",
      "code": "else if ( b == \" red \" )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "call erase on a with args rfind \" Reality \" in a , 8",
      "code": "a . erase ( a . rfind ( \" Reality \" ) , 8 ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "decrement counter",
      "code": "counter -- ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else if b = \" yellow \"",
      "code": "else if ( b == \" yellow \" )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "call erase on a with args rfind \" Mind \" in a , 5",
      "code": "a . erase ( a . rfind ( \" Mind \" ) , 5 ) ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "decrement counter",
      "code": "counter -- ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print counter , new line , a",
      "code": "cout << counter << \" \\n \" << a ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string a = n ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( b == purple )"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string a = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> N ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( b == ' purple ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind . \" Power \" ) , 6 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Time \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind . \" Space \" , 6 ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else if ( b == \" orange ' )"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind . \" 5 \" , 5 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "else if ( b == \" red ' )"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind . \" rfind \" ) , 8 ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind . \" 5 \" , 5 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        11
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        14
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        11
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        14
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        14
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        14,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        14,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        14,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        14,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        17,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        17,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        17,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        20,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        20,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        23,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        7,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "if ( b == purple )",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        14
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        14
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        14,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        17,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        23,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        8,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        14
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        14,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        14,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        14,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        14,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        17,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        17,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        17,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        20,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        20,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        23,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        11,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        23,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        17,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        17,
        20,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        17,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        17,
        23,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        17,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        20,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        20,
        23,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        20,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        23
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        23,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        27
      ],
      "mod_code": [
        "string a = n ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        11
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        14
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        17
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        14
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        17
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        17
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        17,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        17,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        17,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        20,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        20,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        23,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        14
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        17
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        17
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        20,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        20,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        23,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        17
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        17,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        17,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        17,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        20,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        20,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        23,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        20,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        20,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        23,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20,
        23,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        23
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        23,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        27
      ],
      "mod_code": [
        "if ( b == purple )",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘purple’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        14
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        17
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        17
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        17
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Power \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        17
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( rfind ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Space \" ) , 6 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Soul \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 20,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Reality \" ) , 8 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 20,
      "err_msg": "‘rfind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        27
      ],
      "mod_code": [
        "a . erase ( rfind ( \" Mind \" ) , 5 ) ;",
        "cout << counter << \" \" << a << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘rfind’ was not declared in this scope"
    }
  ]
}