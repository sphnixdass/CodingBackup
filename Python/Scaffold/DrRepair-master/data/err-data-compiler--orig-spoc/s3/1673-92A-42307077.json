{
  "meta": {
    "index": 1673,
    "hitid": "39O0SQZVJN17TAJX6GJ0Q3YC2707RP",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "92A",
    "subid": "42307077"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , m = short",
      "code": "short n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n then m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "iterate i from 1 while m > = n if i is a multiple of n else i mod n",
      "code": "for ( int i = 1 ; m >= ( ( i % n ) == 0 ? n : ( i % n ) ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if i is not a multiple of n",
      "code": "if ( i % n )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "decrement m by i mod n",
      "code": "m -= ( i % n ) ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement m by n",
      "code": "m -= n ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print m",
      "code": "cout << m << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "short long n , m ;"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; i -- )",
        "short long n , m ;"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        3,
        0,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; i -- )",
        "short long n , m ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        3,
        0,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; i -- )",
        "short long n , m ;",
        "do",
        "cout << m ;"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        3,
        0,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; i -- )",
        "short long n , m ;",
        "cout << m ;"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; i -- )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; i -- )",
        "do",
        "cout << m ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; -- i )",
        "short long n , m ;"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        3,
        0,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; -- i )",
        "short long n , m ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        3,
        0,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; -- i )",
        "short long n , m ;",
        "do",
        "cout << m ;"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        3,
        0,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; -- i )",
        "short long n , m ;",
        "cout << m ;"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; -- i )",
        "do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i >= 0 ; -- i )",
        "do",
        "cout << m ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "short long n , m ;",
        "do"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        0,
        6,
        9
      ],
      "mod_code": [
        "short long n , m ;",
        "do",
        "cout << m ;"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "short long n , m ;",
        "cout << m ;"
      ],
      "err_line": 0,
      "err_msg": "‘long’ and ‘short’ specified together for ‘n’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "do",
        "cout << m ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}