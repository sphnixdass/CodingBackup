{
  "meta": {
    "index": 2580,
    "hitid": "30ZKOOGW2W01J7IEFPG5U3IPZHF1AH",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "83A",
    "subid": "48549713"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = long long",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "v = long long vector of size n",
      "code": "vector < long long > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read the first n elements of v",
      "code": "for ( long long i = 0 ; i < n ; i ++ ) cin >> v [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "ans = long long vector",
      "code": "vector < long long > ans ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for long long i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "x = long long = v at i",
      "code": "long long x = v [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "smallasn = 0 = lon glong",
      "code": "long long smallans = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "j = 0 = long long",
      "code": "long long j = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for j = = to n exclusive",
      "code": "for ( j = 0 ; i + j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if v [ i + j ] = x",
      "code": "if ( v [ i + j ] == x )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment smallans",
      "code": "smallans ++ ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "exit loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment i by j - 1",
      "code": "i = i + j - 1 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "push back smallans into ans",
      "code": "ans . push_back ( smallans ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "final = 0 = long long",
      "code": "long long final = 0 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for long long i = 0 to size of ans , increment final by ( ans [ i ] * ( ans [ i ] + 1 ) ) / 2",
      "code": "for ( long long i = 0 ; i < ans . size ( ) ; i ++ ) { final = final + ( ans [ i ] * ( ans [ i ] + 1 ) ) / 2 ; }",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print final",
      "code": "cout << final << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "smallasn = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < long long > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "vector < long long long long > ans ;"
      ],
      "err_line": 5,
      "err_msg": "‘long long long’ is too long for GCC"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long x [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "const int smallasn = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘smallans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "ans . push ( smallans ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        2
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        13
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        2
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        2,
        13
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        2,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "n = getchar ( ) ;",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "for ( int j = = n ; j < n ; j ++ )",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "if ( v [ i + j ] = x )"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        2
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        2,
        13
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        2,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        13
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "if ( v [ i + j ] = x )",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "if ( v [ i + j ] = x )",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "if ( v [ i + j ] = x )",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        13
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        13,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "n = getchar ( ) ;",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "n = getchar ( ) ;",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "smallasn = 0 ;",
        "long long x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘smallasn’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        11,
        2
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        13
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        7
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;",
        "long long x [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        7
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        11,
        7
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "if ( v [ i + j ] = x )",
        "long long x [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        2,
        13
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        2,
        13,
        7
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "n = getchar ( ) ;",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        2,
        7
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "n = getchar ( ) ;",
        "long long x [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        13,
        7
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "for ( int j = = n ; j < n ; j ++ )",
        "long long x [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        11,
        2,
        13
      ],
      "mod_code": [
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        2,
        13,
        7
      ],
      "mod_code": [
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        2,
        7
      ],
      "mod_code": [
        "if ( v [ i + j ] = x )",
        "n = getchar ( ) ;",
        "long long x [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( v [ i + j ] = x )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        7
      ],
      "mod_code": [
        "if ( v [ i + j ] = x )",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "if ( v [ i + j ] = x )",
        "long long x [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        13,
        7
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "long long x [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "n",
        "long long x [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}