{
  "meta": {
    "index": 2140,
    "hitid": "3UL5XDRDNCDMO1QIJEY312PBL9C85U",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "615A",
    "subid": "48202451"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array vis of size 1000",
      "code": "int vis [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers m and n",
      "code": "int m , n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while cin > > n > > m is truthy",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create integers x and y",
      "code": "int x , y ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "for j = 0 to x exclusive",
      "code": "for ( int j = 0 ; j < x ; j ++ )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "read y",
      "code": "cin >> y ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set vis [ y ] to 1",
      "code": "vis [ y ] = 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "create integer flag = 0",
      "code": "int flag = 0 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for i = 1 to m",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if vis [ i ] is 0",
      "code": "if ( vis [ i ] == 0 )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if flag is truthy",
      "code": "if ( flag )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 1000 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘vis’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < x ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int vis [ y ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        3
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        15
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        15,
        13
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        15,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;",
        "y = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        15,
        6
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        13
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        13,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "y = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        13,
        6
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "y = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        8,
        6
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "y = getchar ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        3,
        6
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( cin >> ( n >> m ) )",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        13
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        13,
        8
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "y = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        13,
        6
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        8
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;",
        "y = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        8,
        6
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;",
        "y = getchar ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        6
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "int flag = 1 ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        13,
        8
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "y = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        13,
        8,
        6
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "y = getchar ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        13,
        6
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "y = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "y = getchar ( ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( cin >> ( n >> m ) )",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    }
  ]
}