{
  "meta": {
    "index": 532,
    "hitid": "3CZH926SIC8L1JW9IC1TOKFJWGD4EI",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1040A",
    "subid": "46958991"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , a , b , deflt and ans are long longs where ans = 0",
      "code": "long long n , a , b , deflt , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare long long array arr with size 30",
      "code": "long long arr [ 30 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , a and b",
      "code": "cin >> n >> a >> b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign min of a and b to deflt",
      "code": "deflt = min ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive read arr [ i ]",
      "code": "for ( long long i = 0 ; i < n ; ++ i ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare long long variables left = 0 and right = n - 1",
      "code": "long long left = 0 , right = n - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while left < = right",
      "code": "while ( left <= right )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if left = right and arr [ left ] = 2",
      "code": "if ( left == right && arr [ left ] == 2 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increase ans by deflt",
      "code": "ans += deflt ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if arr [ left ] = 2 and arr [ right ] = 2",
      "code": "if ( arr [ left ] == 2 && arr [ right ] == 2 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increase ans by 2 * deflt",
      "code": "ans += 2 * deflt ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else if arr [ left ] = 2 or arr [ right ] = 2",
      "code": "else if ( arr [ left ] == 2 || arr [ right ] == 2 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if arr [ right ] = 0",
      "code": "if ( arr [ right ] == 0 )",
      "indent": 4
    },
    {
      "line": 15,
      "text": "add a to ans",
      "code": "ans += a ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "else if arr [ left ] = 0",
      "code": "else if ( arr [ left ] == 0 )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increase ans by a",
      "code": "ans += a ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "else if arr [ right ] = 1",
      "code": "else if ( arr [ right ] == 1 )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "increase ans by b",
      "code": "ans += b ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "else if arr [ left ] = 1",
      "code": "else if ( arr [ left ] == 1 )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "increase ans by b",
      "code": "ans += b ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "else if arr [ left ] ! = arr [ right ]",
      "code": "else if ( arr [ left ] != arr [ right ] )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "set ans to - 1",
      "code": "ans = - 1 ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "increment left",
      "code": "++ left ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "decrement right",
      "code": "-- right ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print ans and ' \\ n '",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int deflt = min ( a , b ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        20,
        23,
        24
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int ans = - 1 ;",
        "break the ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        20,
        23,
        24,
        4
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int ans = - 1 ;",
        "break the ;",
        "int deflt = min ( a , b ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        23,
        24,
        17
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int ans = - 1 ;",
        "break the ;",
        "ans += ' a ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        20,
        23,
        24,
        30
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int ans = - 1 ;",
        "break the ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        20,
        23,
        4
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int ans = - 1 ;",
        "int deflt = min ( a , b ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        23,
        4,
        17
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int ans = - 1 ;",
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        23,
        4,
        30
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int ans = - 1 ;",
        "int deflt = min ( a , b ) ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "break the ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        20,
        24,
        4
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "break the ;",
        "int deflt = min ( a , b ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        24,
        4,
        17
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "break the ;",
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        24,
        4,
        30
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "break the ;",
        "int deflt = min ( a , b ) ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        24,
        17
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "break the ;",
        "ans += ' a ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        20,
        24,
        17,
        30
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "break the ;",
        "ans += ' a ' ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        20,
        24,
        30
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "break the ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        20,
        4
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int deflt = min ( a , b ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        4,
        17
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        4,
        17,
        30
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        20,
        4,
        30
      ],
      "mod_code": [
        "else if ( ! arr [ left ] )",
        "int deflt = min ( a , b ) ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        23,
        24
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "break the ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        23,
        24,
        4
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "break the ;",
        "int deflt = min ( a , b ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        23,
        24,
        4,
        17
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "break the ;",
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        23,
        24,
        4,
        30
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "break the ;",
        "int deflt = min ( a , b ) ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        23,
        24,
        17
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "break the ;",
        "ans += ' a ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        23,
        24,
        17,
        30
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "break the ;",
        "ans += ' a ' ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        23,
        24,
        30
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "break the ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        23,
        4
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "int deflt = min ( a , b ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        23,
        4,
        17
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        23,
        4,
        17,
        30
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        23,
        4,
        30
      ],
      "mod_code": [
        "int ans = - 1 ;",
        "int deflt = min ( a , b ) ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        24,
        4
      ],
      "mod_code": [
        "break the ;",
        "int deflt = min ( a , b ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        24,
        4,
        17
      ],
      "mod_code": [
        "break the ;",
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        24,
        4,
        17,
        30
      ],
      "mod_code": [
        "break the ;",
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        24,
        4,
        30
      ],
      "mod_code": [
        "break the ;",
        "int deflt = min ( a , b ) ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        24,
        17
      ],
      "mod_code": [
        "break the ;",
        "ans += ' a ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        24,
        17,
        30
      ],
      "mod_code": [
        "break the ;",
        "ans += ' a ' ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        24,
        30
      ],
      "mod_code": [
        "break the ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        4,
        17,
        30
      ],
      "mod_code": [
        "int deflt = min ( a , b ) ;",
        "ans += ' a ' ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    },
    {
      "mod_line": [
        4,
        30
      ],
      "mod_code": [
        "int deflt = min ( a , b ) ;",
        "ans << ans << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int deflt’"
    }
  ]
}