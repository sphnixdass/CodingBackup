{
  "meta": {
    "index": 9,
    "hitid": "304QEQWKZPEQEMRXTPHNHTJKJ630O2",
    "workerid": "AIWEXPJAU66D9",
    "probid": "63A",
    "subid": "47305097"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare int variables a , b , c , d and n",
      "code": "int a , b , c , d , n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create and array of pairs of strings arr with n elements",
      "code": "pair < string , string > arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create and array of pairs of strings arr1 with n elements",
      "code": "pair < string , string > arr1 [ n ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive , read input to arr [ i ] . first and arr [ i ] . second",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] . first >> arr [ i ] . second ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "loop i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if arr [ i ] . second is \" rat \" , print arr [ i ] . first",
      "code": "if ( arr [ i ] . second == \" rat \" ) { cout << arr [ i ] . first << endl ; }",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if arr [ i ] . second is \" woman \" or arr [ i ] . second is \" child \" , print arr [ i ] . first",
      "code": "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) { cout << arr [ i ] . first << endl ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if arr [ i ] . second is \" man \" , print arr [ i ] . first",
      "code": "if ( arr [ i ] . second == \" man \" ) { cout << arr [ i ] . first << endl ; }",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "loop i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if arr [ i ] . second is \" captain \" , print arr [ i ] . first",
      "code": "if ( arr [ i ] . second == \" captain \" ) { cout << arr [ i ] . first << endl ; }",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "pair < string , int > arr [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" man \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8,
        11,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8,
        11,
        0,
        14
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;",
        "if ( arr [ i ] . second == \" man \" ) { cout << arr [ i ] . first ; }"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" man \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8,
        14,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" man \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8,
        17,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8,
        17,
        0,
        14
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;",
        "if ( arr [ i ] . second == \" man \" ) { cout << arr [ i ] . first ; }"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        8,
        0,
        14
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" rat \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;",
        "if ( arr [ i ] . second == \" man \" ) { cout << arr [ i ] . first ; }"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" man \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        11,
        14,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" man \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        11,
        17,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        11,
        17,
        0,
        14
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;",
        "if ( arr [ i ] . second == \" man \" ) { cout << arr [ i ] . first ; }"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        11,
        0,
        14
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" woman \" || arr [ i ] . second == \" child \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;",
        "if ( arr [ i ] . second == \" man \" ) { cout << arr [ i ] . first ; }"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        14,
        17,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" man \" ) cout << arr [ i ] . first ;",
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" man \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        17,
        0
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        17,
        0,
        14
      ],
      "mod_code": [
        "if ( arr [ i ] . second == \" captain \" ) cout << arr [ i ] . first ;",
        "string a , b , c , d , n ;",
        "if ( arr [ i ] . second == \" man \" ) { cout << arr [ i ] . first ; }"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "string a , b , c , d , n ;",
        "if ( arr [ i ] . second == \" man \" ) { cout << arr [ i ] . first ; }"
      ],
      "err_line": 4,
      "err_msg": "size of array ‘arr’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    }
  ]
}