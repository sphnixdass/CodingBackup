{
  "meta": {
    "index": 2684,
    "hitid": "37OPIVELUUXCNI3SHEJQMQYWFJ8AHB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "181A",
    "subid": "46904397"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integers n , m , i , j , c = 0 , l = 0 , g = 0 , a = 0 , b = 0 , a1 = 0 , h = 0",
      "code": "int n , m , i , j , c = 0 , l = 0 , g = 0 , a = 0 , b = 0 , a1 = 0 , h = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare vector of integers p",
      "code": "vector < int > p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create string k = \" \"",
      "code": "string k = \" \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 0 to length of k exclusive",
      "code": "for ( j = 0 ; j < k . size ( ) ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment c if k [ j ] = ' * '",
      "code": "if ( k [ j ] == ' * ' ) { c ++ ; }",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if c = 1",
      "code": "if ( c == 1 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for j = 0 to length of k exclusive",
      "code": "for ( j = 0 ; j < k . size ( ) ; j ++ )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if k [ j ] = ' * '",
      "code": "if ( k [ j ] == ' * ' )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set value of g to j + 1",
      "code": "g = j + 1 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "set value of i + 1 to l",
      "code": "l = i + 1 ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else if c = 2",
      "code": "else if ( c == 2 )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "for j = 0 to length of k exclusive",
      "code": "for ( j = 0 ; j < k . size ( ) ; j ++ )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if k [ j ] = ' * ' , push j + 1 to p",
      "code": "if ( k [ j ] == ' * ' ) { p . push_back ( j + 1 ) ; }",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "for j = 0 to length of p exclusive",
      "code": "for ( j = 0 ; j < p . size ( ) ; j ++ )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "set a to p [ 0 ]",
      "code": "a = p [ 0 ] ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "set a1 to i + 1",
      "code": "a1 = i + 1 ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "set b to p [ 1 ]",
      "code": "b = p [ 1 ] ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "set value of c to 0",
      "code": "c = 0 ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if g = a",
      "code": "if ( g == a )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print l , \" \" and b",
      "code": "cout << l << \" \" << b << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "else if g = b",
      "code": "else if ( g == b )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print l , \" \" and a",
      "code": "cout << l << \" \" << a << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , a = 0 , a = 0 , h = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "vector < int > p [ 4 ] ;"
      ],
      "err_line": 19,
      "err_msg": "request for member ‘push_back’ in ‘p’, which is of non-class type ‘std::vector<int> [4]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "const string k = \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const string {aka const std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "cout << l << ' \" << b << endl ;"
      ],
      "err_line": 30,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        21
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        21,
        10
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        21,
        29
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( g = a )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        21,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        10
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "if ( ! c )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        10,
        29
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "if ( ! c )",
        "if ( g = a )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        10,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "if ( ! c )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        29
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "if ( g = a )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        29,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        14,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "i = l + 1 ;",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        21,
        10
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        21,
        10,
        29
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )",
        "if ( g = a )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        21,
        10,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        21,
        29
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( g = a )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        21,
        29,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        21,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "if ( ! c )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        10,
        29
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "if ( ! c )",
        "if ( g = a )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        10,
        29,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "if ( ! c )",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        10,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "if ( ! c )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        29
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "if ( g = a )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        29,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "int n , m , i , j , c = 0 , g = 0 , g = 0 , g = 0 , a = 0 , h = 0 ;",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int g’"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        14,
        21,
        10
      ],
      "mod_code": [
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )"
      ],
      "err_line": 21,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        14,
        21,
        10,
        29
      ],
      "mod_code": [
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )",
        "if ( g = a )"
      ],
      "err_line": 21,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        14,
        21,
        10,
        19
      ],
      "mod_code": [
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        14,
        21,
        29
      ],
      "mod_code": [
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( g = a )"
      ],
      "err_line": 21,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        14,
        21,
        29,
        19
      ],
      "mod_code": [
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        14,
        21,
        19
      ],
      "mod_code": [
        "i = l + 1 ;",
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        14,
        10,
        29,
        19
      ],
      "mod_code": [
        "i = l + 1 ;",
        "if ( ! c )",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        14,
        10,
        19
      ],
      "mod_code": [
        "i = l + 1 ;",
        "if ( ! c )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        14,
        29,
        19
      ],
      "mod_code": [
        "i = l + 1 ;",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "i = l + 1 ;",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        21,
        10
      ],
      "mod_code": [
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )"
      ],
      "err_line": 21,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        21,
        10,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )",
        "if ( g = a )"
      ],
      "err_line": 21,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        21,
        10,
        29,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        21,
        10,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( ! c )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        21,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( g = a )"
      ],
      "err_line": 21,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        21,
        29,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        21,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < p . length ( ) ; j ++ )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        10,
        29,
        19
      ],
      "mod_code": [
        "if ( ! c )",
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "if ( ! c )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        29,
        19
      ],
      "mod_code": [
        "if ( g = a )",
        "if ( k [ j ] == ' * ' ) p . push ( j + 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    }
  ]
}