{
  "meta": {
    "index": 2674,
    "hitid": "3BS6ERDL931UO0MN55JOF0HCSVID6J",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "165A",
    "subid": "34399006"
  },
  "lines": [
    {
      "line": 0,
      "text": "set M to 200 + 5",
      "code": "const int M = 200 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int a [ M ] [ 2 ]",
      "code": "int a [ M ] [ 2 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create int n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , read a [ i ] [ 0 ] and a [ i ] [ 1 ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] [ 0 ] >> a [ i ] [ 1 ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set num to 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set num1 to 0",
      "code": "int num1 = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if i different from j",
      "code": "if ( i != j )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if a [ j ] [ 0 ] = a [ i ] [ 0 ] and a [ j ] [ 1 ] > a [ i ] [ 1 ]",
      "code": "if ( a [ j ] [ 0 ] == a [ i ] [ 0 ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increment num1",
      "code": "num1 ++ ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "break the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if i different from j",
      "code": "if ( i != j )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if a [ j ] [ 0 ] = a [ i ] [ 0 ] and a [ j ] [ 1 ] < a [ i ] [ 1 ]",
      "code": "if ( a [ j ] [ 0 ] == a [ i ] [ 0 ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
      "indent": 4
    },
    {
      "line": 20,
      "text": "add 1 to num1",
      "code": "num1 ++ ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "break",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if i different from j",
      "code": "if ( i != j )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "if a [ j ] [ 0 ] > a [ i ] [ 0 ] and a [ j ] [ 1 ] = a [ i ] [ 1 ]",
      "code": "if ( a [ j ] [ 0 ] > a [ i ] [ 0 ] && a [ j ] [ 1 ] == a [ i ] [ 1 ] )",
      "indent": 4
    },
    {
      "line": 28,
      "text": "increment num1",
      "code": "num1 ++ ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "break",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 34,
      "text": "if i different from j",
      "code": "if ( i != j )",
      "indent": 3
    },
    {
      "line": 35,
      "text": "if a [ j ] [ 0 ] < a [ i ] [ 0 ] and a [ j ] [ 1 ] = a [ i ] [ 1 ]",
      "code": "if ( a [ j ] [ 0 ] < a [ i ] [ 0 ] && a [ j ] [ 1 ] == a [ i ] [ 1 ] )",
      "indent": 4
    },
    {
      "line": 36,
      "text": "increment num1",
      "code": "num1 ++ ;",
      "indent": 5
    },
    {
      "line": 37,
      "text": "break the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 41,
      "text": "set num to num + ( num1 = 4 )",
      "code": "num = num + ( num1 == 4 ) ;",
      "indent": 2
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 43,
      "text": "print num",
      "code": "cout << num << endl ;",
      "indent": 1
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "M += 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "num = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "num1 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘num1’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 19,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "M = 200 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ M ++ ] [ 2 ] ;"
      ],
      "err_line": 1,
      "err_msg": "increment of read-only variable ‘M’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 25,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( a [ j ] [ 0 ] > a [ i ] && a [ j ] [ 1 ] == a [ i ] [ 1 ] )"
      ],
      "err_line": 27,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 33,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "if ( a [ j ] [ 0 ] [ 0 ] < a [ i ] [ 0 ] && a [ j ] [ 1 ] == a [ i ] )"
      ],
      "err_line": 35,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        8
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "num1 = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        11
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        19
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "num1 = 0 ;",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        11
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        11,
        19
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        11,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        19
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        19,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "num = 0 ;",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "M += 5 ;",
        "num1 = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11
      ],
      "mod_code": [
        "M += 5 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        19
      ],
      "mod_code": [
        "M += 5 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        19
      ],
      "mod_code": [
        "M += 5 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        19,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "num1 = 0 ;",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "M += 5 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        19
      ],
      "mod_code": [
        "M += 5 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        19,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "M += 5 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        19,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        41
      ],
      "mod_code": [
        "M += 5 ;",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "num = 0 ;",
        "num1 = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "num = 0 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        19
      ],
      "mod_code": [
        "num = 0 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        41
      ],
      "mod_code": [
        "num = 0 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        19
      ],
      "mod_code": [
        "num = 0 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        41
      ],
      "mod_code": [
        "num = 0 ;",
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        41
      ],
      "mod_code": [
        "num = 0 ;",
        "num1 = 0 ;",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        19
      ],
      "mod_code": [
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        41
      ],
      "mod_code": [
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        41
      ],
      "mod_code": [
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        19,
        41
      ],
      "mod_code": [
        "num = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        41
      ],
      "mod_code": [
        "num = 0 ;",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )"
      ],
      "err_line": 8,
      "err_msg": "‘num1’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        19
      ],
      "mod_code": [
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 8,
      "err_msg": "‘num1’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        41
      ],
      "mod_code": [
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘num1’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        41
      ],
      "mod_code": [
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘num1’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 8,
      "err_msg": "‘num1’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        41
      ],
      "mod_code": [
        "num1 = 0 ;",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘num1’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        41
      ],
      "mod_code": [
        "num1 = 0 ;",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘num1’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        19,
        41
      ],
      "mod_code": [
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        41
      ],
      "mod_code": [
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] > a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        41
      ],
      "mod_code": [
        "if ( a [ j ] [ 0 ] == a [ i ] && a [ j ] [ 1 ] < a [ i ] [ 1 ] )",
        "num += ( num1 = 4 ) ;"
      ],
      "err_line": 19,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}