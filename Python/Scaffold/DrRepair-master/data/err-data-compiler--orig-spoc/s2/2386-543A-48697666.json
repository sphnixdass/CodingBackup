{
  "meta": {
    "index": 2386,
    "hitid": "3CESM1J3EIXTX6MEM0OE7O6XYOUW66",
    "workerid": "A36Q5TAZ7L6HOS",
    "probid": "543A",
    "subid": "48697666"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , m , b , mod = integers",
      "code": "int n , m , b , mod ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare sum as long long",
      "code": "long long sum ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare dp as long long array of size 600 to 600 and a as long long array of size 600",
      "code": "long long dp [ 600 ] [ 600 ] , a [ 600 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "i , j , k = integers",
      "code": "int i , j , k ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read n , m , b and mod",
      "code": "cin >> n >> m >> b >> mod ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for 1 to n inclusive read a [ i ]",
      "code": "for ( i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set dp [ 0 ] [ 0 ] to 1",
      "code": "dp [ 0 ] [ 0 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for 1 to m inclusive",
      "code": "for ( j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for a [ i ] to b inclusive",
      "code": "for ( k = a [ i ] ; k <= b ; k ++ )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment dp [ j ] [ k ] by dp [ j - 1 ] [ k - a [ i ] ]",
      "code": "dp [ j ] [ k ] += dp [ j - 1 ] [ k - a [ i ] ] ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set dp [ j ] [ k ] to dp [ j ] [ k ] % mod",
      "code": "dp [ j ] [ k ] %= mod ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set sum to 0",
      "code": "sum = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for 0 to b inclusive",
      "code": "for ( i = 0 ; i <= b ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "increment sum by dp [ m ] [ i ]",
      "code": "sum += dp [ m ] [ i ] ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set sum to sum % mod",
      "code": "sum %= mod ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( int i [ i ] ; i <= b ; a ++ )"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long sum ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long dp [ 600 ] to 600 , a [ 600 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int dp [ 0 ] [ 0 ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "dp [ j ] [ k ] += dp [ j ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i <= b ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        9,
        10
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i [ i ] ; i <= b ; a ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        11
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i [ i ] ; i <= b ; a ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        9,
        11
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        10
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int i = 0 ; a [ i ] ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        9,
        10
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 0 ; a [ i ] ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i [ i ] ; i <= b ; a ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        10,
        11
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i [ i ] ; i <= b ; a ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        9
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i [ i ] ; i <= b ; a ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        10,
        9
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i [ i ] ; i <= b ; a ++ )",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "dp [ j ] [ k ] += dp [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        11,
        10
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int i = 0 ; a [ i ] ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        11,
        10,
        9
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int i = 0 ; a [ i ] ; i ++ )",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        11,
        9
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i = 0 ; a [ i ] ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        10,
        9
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int i = 0 ; a [ i ] ; i ++ )",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "long long dp [ 600 ] , 600 [ 600 ] ;",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i [ i ] ; i <= b ; a ++ )"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i [ i ] ; i <= b ; a ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        11,
        10
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int i = 0 ; a [ i ] ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( int i [ i ] ; i <= b ; a ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        9
      ],
      "mod_code": [
        "for ( int i [ i ] ; i <= b ; a ++ )",
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "for ( int i [ i ] ; i <= b ; a ++ )",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int i = 0 ; a [ i ] ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        10,
        9
      ],
      "mod_code": [
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int i = 0 ; a [ i ] ; i ++ )",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "dp [ j ] [ k ] += dp [ j ] ;",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] ; i ++ )",
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    }
  ]
}