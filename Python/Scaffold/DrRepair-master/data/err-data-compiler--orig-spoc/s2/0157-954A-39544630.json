{
  "meta": {
    "index": 157,
    "hitid": "3R6RZGK0XF6I11WF29EA4D7CQPLVYV",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "954A",
    "subid": "39544630"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , c = int with c = 0",
      "code": "int n , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "call getchar",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = i to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] equals ' U ' and s [ i - 1 ] euqals ' R '",
      "code": "if ( s [ i ] == ' U ' && s [ i - 1 ] == ' R ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if s [ i - 1 ] equals ' U ' and s [ i ] equals ' R '",
      "code": "else if ( s [ i - 1 ] == ' U ' && s [ i ] == ' R ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print n - c",
      "code": "cout << n - c << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "exit ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        1
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "n = getchar ( ) ;",
        "int n , c = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        5
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        6
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "n = getchar ( ) ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        1
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "int n , c = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        1,
        5
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "int n , c = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        1,
        6
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "int n , c = 1 ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        6
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "string S ;",
        "exit ( ) ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "string S ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "string S ;",
        "n = getchar ( ) ;",
        "int n , c = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        1,
        5
      ],
      "mod_code": [
        "string S ;",
        "n = getchar ( ) ;",
        "int n , c = 1 ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        1,
        6
      ],
      "mod_code": [
        "string S ;",
        "n = getchar ( ) ;",
        "int n , c = 1 ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "string S ;",
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        6
      ],
      "mod_code": [
        "string S ;",
        "n = getchar ( ) ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "string S ;",
        "n = getchar ( ) ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "string S ;",
        "int n , c = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "string S ;",
        "int n , c = 1 ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        5,
        6
      ],
      "mod_code": [
        "string S ;",
        "int n , c = 1 ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        6
      ],
      "mod_code": [
        "string S ;",
        "int n , c = 1 ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "string S ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "string S ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "string S ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "exit ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "exit ( ) ;",
        "n = getchar ( ) ;",
        "int n , c = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        5
      ],
      "mod_code": [
        "exit ( ) ;",
        "n = getchar ( ) ;",
        "int n , c = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "n = getchar ( ) ;",
        "int n , c = 1 ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3,
        5
      ],
      "mod_code": [
        "exit ( ) ;",
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3,
        5,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "n = getchar ( ) ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "n = getchar ( ) ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "exit ( ) ;",
        "int n , c = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        1,
        5
      ],
      "mod_code": [
        "exit ( ) ;",
        "int n , c = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        1,
        5,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "int n , c = 1 ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "int n , c = 1 ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "exit ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , c = 1 ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        1,
        5,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , c = 1 ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , c = 1 ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , c = 1 ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int n , c = 1 ;",
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , c = 1 ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = i ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}