{
  "meta": {
    "index": 1953,
    "hitid": "3FO95NVK5CUTC83PUJHBLUU8OYFSRO",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "319A",
    "subid": "40861085"
  },
  "lines": [
    {
      "line": 0,
      "text": "modulo = constant long long with value of 1000000007",
      "code": "const long long modulo = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function mod that takes arguments x , m = long long with m having default value of modulo and returns a long long",
      "code": "long long mod ( long long x , long long m = modulo )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "set x to the mod of x and m",
      "code": "x %= m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "increase x by m",
      "code": "x += m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set x to the mod of x and m",
      "code": "x %= m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return x",
      "code": "return x ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "in function power that takes arguments x , a = long long and returns long long",
      "code": "long long power ( long long x , long long a )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "set x to the return value of function mod with argument x",
      "code": "x = mod ( x ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set a to the return value of function mod with argument x and modulo minus 1",
      "code": "a = mod ( a , modulo - 1 ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "ret = long long with value of 1",
      "code": "long long ret = 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "k = long long with value of 1",
      "code": "long long k = 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while a is not 0",
      "code": "while ( a )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if k bitwise - and a is greater than 0",
      "code": "if ( ( k & a ) > 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set a to a xor k",
      "code": "a ^= k ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set ret to the return of function mod with argument ret * x",
      "code": "ret = mod ( ret * x ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set k to k left - shifted by 1",
      "code": "k <<= 1 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set x to the return of mod with argument x * x",
      "code": "x = mod ( x * x ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "return ret",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 22,
      "text": "in function inv that takes argument x = long long and returns long long",
      "code": "long long inv ( long long x )",
      "indent": 0
    },
    {
      "line": 23,
      "text": "return the return of the function power with arguments x and - 1",
      "code": "return power ( x , - 1 ) ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 26,
      "text": "ans = long long with value of 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "x = string",
      "code": "string x ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "reverse the string x",
      "code": "reverse ( x . begin ( ) , x . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for i = 0 to the size of x",
      "code": "for ( int i = 0 ; i < x . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if x [ i ] equals the character 1 then increase ans by the return of the function power with arguments 2 and size of x + i - 1",
      "code": "if ( x [ i ] == ' 1 ' ) ans += power ( 2 , x . size ( ) + i - 1 ) ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "set ans to the mod of ans and modulo",
      "code": "ans %= modulo ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "print ans",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const long long * modulo = 1000000007 ;"
      ],
      "err_line": 0,
      "err_msg": "invalid conversion from ‘int’ to ‘const long long int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long mod ( long long x , long long * m )"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘long long int’ and ‘long long int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "a = mod ( x , modulo ) -- ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "k = k left - 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘left’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 28,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "reverse ( x , x + n ) ;"
      ],
      "err_line": 29,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "for ( i = 0 ; i < x . size ( ) ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "if ( x [ i ] == 1 ) ans += ( x + i ) - 1 ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "ans = ans . mod ( ans , 0 ) ;"
      ],
      "err_line": 32,
      "err_msg": "request for member ‘mod’ in ‘ans’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        17
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        18
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "x = x % x ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        23
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        18
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "x = x % x ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        18,
        23
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "x = x % x ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        18,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        18,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "x = x % x ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        23
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        23,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        23,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        31,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        9,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "a = mod ( x , modulo ) - 1 ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        18
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "x = x % x ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        18,
        23
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "x = x % x ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        18,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        18,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "x = x % x ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        23
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        23,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        23,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        31,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        17,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "k += 1 ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "x = x % x ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        18,
        23
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "x = x % x ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        18,
        23,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "x = x % x ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        18,
        23,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "x = x % x ;",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        18,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        18,
        31,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        18,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "x = x % x ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        23,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        23,
        31,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        23,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        31
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        31,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        1,
        32
      ],
      "mod_code": [
        "long long mod ( long long x , long long m )",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘long long int mod(long long int, long long int)’"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        23
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "x = x % x ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        31
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        17,
        23
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        17,
        23,
        31
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        17,
        23,
        32
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        17,
        31
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        17,
        31,
        32
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "k += 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        18,
        23
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "x = x % x ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        18,
        23,
        31
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "x = x % x ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        18,
        23,
        32
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "x = x % x ;",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        18,
        31
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        18,
        31,
        32
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        23
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        23,
        31
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        23,
        31,
        32
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        23,
        32
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        9,
        31
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        31,
        32
      ],
      "mod_code": [
        "a = mod ( x , modulo ) - 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        23
      ],
      "mod_code": [
        "k += 1 ;",
        "x = x % x ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        17,
        18,
        23,
        31
      ],
      "mod_code": [
        "k += 1 ;",
        "x = x % x ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        17,
        18,
        23,
        32
      ],
      "mod_code": [
        "k += 1 ;",
        "x = x % x ;",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        17,
        18,
        31
      ],
      "mod_code": [
        "k += 1 ;",
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        18,
        31,
        32
      ],
      "mod_code": [
        "k += 1 ;",
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "k += 1 ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        17,
        23,
        31
      ],
      "mod_code": [
        "k += 1 ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        17,
        23,
        31,
        32
      ],
      "mod_code": [
        "k += 1 ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        17,
        23,
        32
      ],
      "mod_code": [
        "k += 1 ;",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        17,
        31
      ],
      "mod_code": [
        "k += 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17,
        31,
        32
      ],
      "mod_code": [
        "k += 1 ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        18,
        23
      ],
      "mod_code": [
        "x = x % x ;",
        "return max ( x , - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        18,
        23,
        31
      ],
      "mod_code": [
        "x = x % x ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        18,
        23,
        31,
        32
      ],
      "mod_code": [
        "x = x % x ;",
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        18,
        23,
        32
      ],
      "mod_code": [
        "x = x % x ;",
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        18,
        31
      ],
      "mod_code": [
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        18,
        31,
        32
      ],
      "mod_code": [
        "x = x % x ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        23,
        31
      ],
      "mod_code": [
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        23,
        31,
        32
      ],
      "mod_code": [
        "return max ( x , - 1 ) ;",
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        23,
        32
      ],
      "mod_code": [
        "return max ( x , - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        31,
        32
      ],
      "mod_code": [
        "if ( x [ i ] == ' 1 ' ) ans += ( x + i - 1 ) ;",
        "ans = ans % ans % 2 ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    }
  ]
}