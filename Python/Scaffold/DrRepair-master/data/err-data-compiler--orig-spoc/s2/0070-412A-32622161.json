{
  "meta": {
    "index": 70,
    "hitid": "3NSCTNUR2ZH07PJXGCIHXTV6BXC5AV",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "412A",
    "subid": "32622161"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "k , n , i , j = int",
      "code": "int k , n , i , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "loop while reading k then n then s",
      "code": "while ( cin >> k >> n >> s )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n is greater than k / 2",
      "code": "if ( n > k / 2 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = n to k print \" RIGHT \"",
      "code": "for ( i = n ; i < k ; i ++ ) cout << \" RIGHT\\n \" ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "print \" PRINT \" then s [ k - 1 ]",
      "code": "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "for i = k - 1 to 1 inclusive decrementing i",
      "code": "for ( i = k - 1 ; i >= 1 ; i -- )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print \" LEFT \"",
      "code": "cout << \" LEFT\\n \"",
      "indent": 4
    },
    {
      "line": 9,
      "text": "then \" PRINT \" then s [ i - 1 ]",
      "code": "<< \" PRINT \" << s [ i - 1 ] << endl ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "fir i = n to 1 decrementing i print \" LEFT \"",
      "code": "for ( i = n ; i > 1 ; i -- ) cout << \" LEFT\\n \" ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "print \" PRINT \" then s [ 0 ]",
      "code": "cout << \" PRINT \" << s [ 0 ] << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "for i = 2 to k inclusive",
      "code": "for ( i = 2 ; i <= k ; i ++ )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print \" RIGHT \"",
      "code": "cout << \" RIGHT\\n \"",
      "indent": 4
    },
    {
      "line": 15,
      "text": "then \" PRINT \" then s [ i - 1 ]",
      "code": "<< \" PRINT \" << s [ i - 1 ] << endl ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int k , n , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> k >> n then s )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘then’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "puts ( \" LEFT \" ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cin >> \" PRINT \" >> s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cin’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "puts ( \" RIGHT \" ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cin >> \" PRINT \" >> s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cin’"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        11
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        12
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        12
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        12
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        11,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i < k ; i ++ ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        12
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        12
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        12,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ k - 1 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        14
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        9,
        14
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ i - 1 ] ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "for ( int i = n ; i >= 1 ; i -- ) cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "cout << \" PRINT \" << s [ 0 ] << endl ;",
        "cout << \" PRINT \" << s [ i - 1 ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}