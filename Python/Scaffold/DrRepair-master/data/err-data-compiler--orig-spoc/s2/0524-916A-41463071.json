{
  "meta": {
    "index": 524,
    "hitid": "3R4QIDVOJP63TLT27ID6X6RA95CEE3",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "916A",
    "subid": "41463071"
  },
  "lines": [
    {
      "line": 0,
      "text": "hh , mm , x = integers",
      "code": "int hh , mm , x ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in the function CalTime that takes integer reference h , m , integer x",
      "code": "void CalTime ( int & h , int & m , int x )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "tag = bool",
      "code": "bool tag ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "do",
      "code": "do",
      "indent": 1
    },
    {
      "line": 4,
      "text": "tag = true",
      "code": "tag = true ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if m - x > = 0",
      "code": "if ( m - x >= 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "m = m - x",
      "code": "m -= x ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "m = m + 60",
      "code": "m += 60 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if ( h - 1 < 0 )",
      "code": "if ( h - 1 < 0 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "h = 23",
      "code": "h = 23 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "h = h - 1",
      "code": "h -= 1 ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "if ( m - x > = 0 )",
      "code": "if ( m - x >= 0 )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "tag = false",
      "code": "tag = false ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "m = m - x",
      "code": "m -= x ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "while ( tag is true )",
      "code": "while ( tag == true ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 22,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read hh , mm",
      "code": "cin >> hh >> mm ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "count = integer with count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "while ( hh modulo 10 is not 7 and mm modulo 10 is not 7 )",
      "code": "while ( hh % 10 != 7 && mm % 10 != 7 )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "call CalTime on hh , mm , x",
      "code": "CalTime ( hh , mm , x ) ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "while ( tag == true )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long hh , mm , x ;"
      ],
      "err_line": 26,
      "err_msg": "invalid initialization of non-const reference of type ‘int&’ from an rvalue of type ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool S ;"
      ],
      "err_line": 4,
      "err_msg": "‘tag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "while ( tag )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "CalTime = hh , mm , x ;"
      ],
      "err_line": 26,
      "err_msg": "assignment of function ‘void CalTime(int&, int&, int)’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "m -= 60 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        19
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "m -= 60 ;",
        "while ( tag == true )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        19,
        0
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "m -= 60 ;",
        "while ( tag == true )",
        "long long hh , mm , x ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        19,
        3
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "m -= 60 ;",
        "while ( tag == true )",
        "while ( true )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        0
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "m -= 60 ;",
        "long long hh , mm , x ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        0,
        3
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "m -= 60 ;",
        "long long hh , mm , x ;",
        "while ( true )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "m -= 60 ;",
        "while ( true )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "while ( tag == true )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        19,
        0
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "while ( tag == true )",
        "long long hh , mm , x ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        19,
        0,
        3
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "while ( tag == true )",
        "long long hh , mm , x ;",
        "while ( true )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        19,
        3
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "while ( tag == true )",
        "while ( true )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "long long hh , mm , x ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        0,
        3
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "long long hh , mm , x ;",
        "while ( true )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "void CalTime ( int & h , int x , int x )",
        "while ( true )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "m -= 60 ;",
        "while ( tag == true )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        19,
        1
      ],
      "mod_code": [
        "m -= 60 ;",
        "while ( tag == true )",
        "void CalTime ( int h , int m , int x )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        19,
        1,
        0
      ],
      "mod_code": [
        "m -= 60 ;",
        "while ( tag == true )",
        "void CalTime ( int h , int m , int x )",
        "long long hh , mm , x ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        19,
        1,
        3
      ],
      "mod_code": [
        "m -= 60 ;",
        "while ( tag == true )",
        "void CalTime ( int h , int m , int x )",
        "while ( true )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        19,
        0
      ],
      "mod_code": [
        "m -= 60 ;",
        "while ( tag == true )",
        "long long hh , mm , x ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        19,
        0,
        3
      ],
      "mod_code": [
        "m -= 60 ;",
        "while ( tag == true )",
        "long long hh , mm , x ;",
        "while ( true )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        19,
        3
      ],
      "mod_code": [
        "m -= 60 ;",
        "while ( tag == true )",
        "while ( true )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "m -= 60 ;",
        "long long hh , mm , x ;"
      ],
      "err_line": 26,
      "err_msg": "invalid initialization of non-const reference of type ‘int&’ from an rvalue of type ‘int’"
    },
    {
      "mod_line": [
        9,
        0,
        3
      ],
      "mod_code": [
        "m -= 60 ;",
        "long long hh , mm , x ;",
        "while ( true )"
      ],
      "err_line": 26,
      "err_msg": "invalid initialization of non-const reference of type ‘int&’ from an rvalue of type ‘int’"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "while ( tag == true )",
        "void CalTime ( int h , int m , int x )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        1,
        0
      ],
      "mod_code": [
        "while ( tag == true )",
        "void CalTime ( int h , int m , int x )",
        "long long hh , mm , x ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        1,
        0,
        3
      ],
      "mod_code": [
        "while ( tag == true )",
        "void CalTime ( int h , int m , int x )",
        "long long hh , mm , x ;",
        "while ( true )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        1,
        3
      ],
      "mod_code": [
        "while ( tag == true )",
        "void CalTime ( int h , int m , int x )",
        "while ( true )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        0
      ],
      "mod_code": [
        "while ( tag == true )",
        "long long hh , mm , x ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        0,
        3
      ],
      "mod_code": [
        "while ( tag == true )",
        "long long hh , mm , x ;",
        "while ( true )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "while ( tag == true )",
        "while ( true )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "long long hh , mm , x ;",
        "while ( true )"
      ],
      "err_line": 26,
      "err_msg": "invalid initialization of non-const reference of type ‘int&’ from an rvalue of type ‘int’"
    }
  ]
}