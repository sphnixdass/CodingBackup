{
  "meta": {
    "index": 2418,
    "hitid": "372AGES0I4Z18PPOOTNYK2B040CXR7",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "631A",
    "subid": "29251533"
  },
  "lines": [
    {
      "line": 0,
      "text": "maxn = const int with maxn = 1005",
      "code": "const int maxn = 1005 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "a = int array of size maxn",
      "code": "int a [ maxn ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "b = int array of size maxn",
      "code": "int b [ maxn ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n values into a",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n values into b",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "MAX = int with MAX = 0",
      "code": "int MAX = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if n is 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set MAX to a [ 0 ] + b [ 0 ]",
      "code": "MAX = a [ 0 ] + b [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "tmp1 , tmp2 = int with tmp1 = a [ i ] and tmp2 = b [ i ]",
      "code": "int tmp1 = a [ i ] , tmp2 = b [ i ] ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "for j = i + 1 to n",
      "code": "for ( int j = i + 1 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set tmp1 to tmp1 bitwise - or a [ j ]",
      "code": "tmp1 = ( tmp1 | a [ j ] ) ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "set tmp2 to tmp2 bitwise - or b [ j ]",
      "code": "tmp2 = ( tmp2 | b [ j ] ) ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "if tmp1 + tmp2 > MAX set MAX to tmp2 + tmp1",
      "code": "if ( tmp1 + tmp2 > MAX ) MAX = tmp2 + tmp1 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print MAX",
      "code": "cout << MAX << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "const int MAX = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( n == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int tmp1 = ( a [ i ] , tmp2 = b [ i ] ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘tmp2’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        8
      ],
      "mod_code": [
        "bool n ;",
        "n = getchar ( ) ;",
        "const int MAX = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        10
      ],
      "mod_code": [
        "bool n ;",
        "n = getchar ( ) ;",
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        11
      ],
      "mod_code": [
        "bool n ;",
        "n = getchar ( ) ;",
        "const int MAX = 0 ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        4
      ],
      "mod_code": [
        "bool n ;",
        "n = getchar ( ) ;",
        "const int MAX = 0 ;",
        "int * a ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        3,
        10,
        11
      ],
      "mod_code": [
        "bool n ;",
        "n = getchar ( ) ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "bool n ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        11,
        4
      ],
      "mod_code": [
        "bool n ;",
        "n = getchar ( ) ;",
        "n",
        "int * a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "bool n ;",
        "const int MAX = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        8,
        10
      ],
      "mod_code": [
        "bool n ;",
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        11
      ],
      "mod_code": [
        "bool n ;",
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        4
      ],
      "mod_code": [
        "bool n ;",
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "int * a ;"
      ],
      "err_line": 17,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "bool n ;",
        "const int MAX = 0 ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        4
      ],
      "mod_code": [
        "bool n ;",
        "const int MAX = 0 ;",
        "n",
        "int * a ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        8,
        4
      ],
      "mod_code": [
        "bool n ;",
        "const int MAX = 0 ;",
        "int * a ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        2,
        10,
        11
      ],
      "mod_code": [
        "bool n ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        4
      ],
      "mod_code": [
        "bool n ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n",
        "int * a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "bool n ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        4
      ],
      "mod_code": [
        "bool n ;",
        "n",
        "int * a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "const int MAX = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        3,
        8,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "int * a ;"
      ],
      "err_line": 17,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        3,
        8,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "const int MAX = 0 ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        3,
        8,
        11,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "const int MAX = 0 ;",
        "n",
        "int * a ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "const int MAX = 0 ;",
        "int * a ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n",
        "int * a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n",
        "int * a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        4
      ],
      "mod_code": [
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n",
        "int * a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        4
      ],
      "mod_code": [
        "const int MAX = 0 ;",
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "int * a ;"
      ],
      "err_line": 17,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "const int MAX = 0 ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        8,
        11,
        4
      ],
      "mod_code": [
        "const int MAX = 0 ;",
        "n",
        "int * a ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "const int MAX = 0 ;",
        "int * a ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only variable ‘MAX’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        4
      ],
      "mod_code": [
        "int MAX = a [ 0 ] + b [ 0 ] ;",
        "n",
        "int * a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "n",
        "int * a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}