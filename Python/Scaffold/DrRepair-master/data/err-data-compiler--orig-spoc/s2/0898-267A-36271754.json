{
  "meta": {
    "index": 898,
    "hitid": "3OJX0UFJ0Z13NLZ7P7CP9AC24WO9U3",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "267A",
    "subid": "36271754"
  },
  "lines": [
    {
      "line": 0,
      "text": "i , j , n , a , b , q , t = long longs , s = long long array of size 10000",
      "code": "long long i , j , n , a , b , s [ 10000 ] , q , t ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "t = 0",
      "code": "t = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a is 0 or b is 0",
      "code": "if ( a == 0 || b == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "s [ i ] = 0",
      "code": "s [ i ] = 0 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "while a is not 0 and b is not 0",
      "code": "while ( a != 0 && b != 0 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if a > b",
      "code": "if ( a > b )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "t = t + a / b",
      "code": "t += a / b ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "a = a modulo b",
      "code": "a %= b ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "else if b > a",
      "code": "else if ( b > a )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "t = t + b / a",
      "code": "t += b / a ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "b = b modulo a",
      "code": "b %= a ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "else if a is b",
      "code": "else if ( a == b )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increase t by 1",
      "code": "t ++ ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "a = a - b",
      "code": "a -= b ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "s [ i ] = t",
      "code": "s [ i ] = t ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for i = 0 to n exclusive , then print s [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cout << s [ i ] << endl ; }",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        24
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        24,
        2
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        24,
        2,
        8
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        24,
        8
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        2,
        8
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        24
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "n = getchar ( ) ;",
        "n",
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        2,
        24
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "n = getchar ( ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        8,
        24
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "n",
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        0,
        24
      ],
      "mod_code": [
        "long long i , j , n , a [ 10000 ] , q [ 10000 ] , t , t ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int t’"
    },
    {
      "mod_line": [
        24,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        2,
        8,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;",
        "n = getchar ( ) ;",
        "n",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        24,
        2,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;",
        "n = getchar ( ) ;",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        24,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        8,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;",
        "n",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        24,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cout << s [ i ] ;",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        24
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n",
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n",
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        2,
        8,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        2,
        24,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        8,
        24
      ],
      "mod_code": [
        "n",
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        24,
        0
      ],
      "mod_code": [
        "n",
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "n",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    },
    {
      "mod_line": [
        24,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] ; }",
        "long long i , j , n , a , b [ 10000 ] , q [ 10000 ] , t ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [10000]’)"
    }
  ]
}