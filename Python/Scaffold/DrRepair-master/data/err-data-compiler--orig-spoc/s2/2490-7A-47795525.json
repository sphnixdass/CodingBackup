{
  "meta": {
    "index": 2490,
    "hitid": "338431Z1FL9EEGBWN2021PK7RUTROD",
    "workerid": "AIWEXPJAU66D9",
    "probid": "7A",
    "subid": "47795525"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = array of strings of size 8",
      "code": "string s [ 8 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read 8 values into array s",
      "code": "for ( int i = 0 ; i < 8 ; i ++ ) cin >> s [ i ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer cnt with value 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for o = 0 to 8 exclusive",
      "code": "for ( int o = 0 ; o < 8 ; o ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set boolean good to 1",
      "code": "bool good = 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for integer i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ o ] [ i ] is equal to ' W '",
      "code": "if ( s [ o ] [ i ] == ' W ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set value of good to 0",
      "code": "good = 0 ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increase cnt by good",
      "code": "cnt += good ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for o = 0 to 8 exclusive",
      "code": "for ( int o = 0 ; o < 8 ; o ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set boolean good to 1",
      "code": "bool good = 1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if s [ i ] [ o ] is equal to ' W '",
      "code": "if ( s [ i ] [ o ] == ' W ' )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "set value of good to 0",
      "code": "good = 0 ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increase cnt by good",
      "code": "cnt += good ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if cnt is equal to 16 set cnt to 8",
      "code": "if ( cnt == 16 ) cnt = 8 ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print cnt and a new line",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "s [ 8 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool t = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘good’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "* good = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "bool t = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "‘good’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "* good = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        18
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "* good = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        18,
        16
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        18,
        17
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "* good = 0 ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        18,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "* good = 0 ;",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        16
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        16,
        17
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        16,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        17
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        17,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "break the ;",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "* good = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        18,
        16
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        18,
        16,
        17
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        18,
        16,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        18,
        17
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "* good = 0 ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        18,
        17,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "* good = 0 ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        18,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "* good = 0 ;",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        17
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        17,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        17,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "s [ 8 ] ;",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        18
      ],
      "mod_code": [
        "break the ;",
        "* good = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        19,
        18,
        16
      ],
      "mod_code": [
        "break the ;",
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        18,
        16,
        17
      ],
      "mod_code": [
        "break the ;",
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        18,
        16,
        7
      ],
      "mod_code": [
        "break the ;",
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        18,
        17
      ],
      "mod_code": [
        "break the ;",
        "* good = 0 ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        19,
        18,
        17,
        7
      ],
      "mod_code": [
        "break the ;",
        "* good = 0 ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        19,
        18,
        7
      ],
      "mod_code": [
        "break the ;",
        "* good = 0 ;",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        19,
        16
      ],
      "mod_code": [
        "break the ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        16,
        17
      ],
      "mod_code": [
        "break the ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        16,
        17,
        7
      ],
      "mod_code": [
        "break the ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        16,
        7
      ],
      "mod_code": [
        "break the ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        17
      ],
      "mod_code": [
        "break the ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        19,
        17,
        7
      ],
      "mod_code": [
        "break the ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "break the ;",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        18,
        16
      ],
      "mod_code": [
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        16,
        17
      ],
      "mod_code": [
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        16,
        17,
        7
      ],
      "mod_code": [
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        16,
        7
      ],
      "mod_code": [
        "* good = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        17
      ],
      "mod_code": [
        "* good = 0 ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        18,
        17,
        7
      ],
      "mod_code": [
        "* good = 0 ;",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        18,
        7
      ],
      "mod_code": [
        "* good = 0 ;",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 18,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        17,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ ' o ' ] == ' W ' )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( s [ i ] [ i ] == ' W ' )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}