{
  "meta": {
    "index": 1340,
    "hitid": "3CMV9YRYP3VPA7PM25B17HUMNACJLJ",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "320A",
    "subid": "48962453"
  },
  "lines": [
    {
      "line": 0,
      "text": "in bool function is_magical taking number = string",
      "code": "bool is_magical ( string number )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for i = 0 to size of number",
      "code": "for ( int i = 0 ; i < ( int ) number . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if number at i isn ' t ' 1 ' and number at i isn ' t 4 then return false",
      "code": "if ( number [ i ] != ' 1 ' && number [ i ] != ' 4 ' ) return false ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "if number at 0 = ' 4 ' then return false",
      "code": "if ( number [ 0 ] == ' 4 ' ) return false ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if find \" 444 \" in number isn ' t number . npos then return false",
      "code": "if ( number . find ( \" 444 \" ) != number . npos ) return false ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "number = string",
      "code": "string number ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read number",
      "code": "cin >> number ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if is_magical ( number )",
      "code": "if ( is_magical ( number ) )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool is_magical ( string number ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "string number ( )"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        12
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        12,
        10
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n",
        "if ( ! is_magical ( number ) )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        12,
        1
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        12,
        5
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        10
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "if ( ! is_magical ( number ) )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        10,
        1
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        10,
        5
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "if ( ! is_magical ( number ) )",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        1
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        1,
        5
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        10
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "n",
        "if ( ! is_magical ( number ) )"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        10,
        1
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "n",
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        10,
        5
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "n",
        "if ( ! is_magical ( number ) )",
        "exit ( true ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        1
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "n",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        1,
        5
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "n",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        5
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "n",
        "exit ( true ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        1
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        1,
        5
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "if ( number [ i ] != ' 1 ' && number [ i ] != ' 1 ' ) return false ;",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        12,
        10
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n",
        "if ( ! is_magical ( number ) )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        12,
        10,
        1
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n",
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        12,
        10,
        5
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n",
        "if ( ! is_magical ( number ) )",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        12,
        1
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        12,
        1,
        5
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        12,
        5
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "n",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "if ( ! is_magical ( number ) )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10,
        1
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10,
        1,
        5
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10,
        5
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "if ( ! is_magical ( number ) )",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        1,
        5
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "if ( find ( \" 444 \" ) != ' . \" ) return false ;",
        "exit ( true ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "n",
        "if ( ! is_magical ( number ) )"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        1
      ],
      "mod_code": [
        "n",
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        1,
        5
      ],
      "mod_code": [
        "n",
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        5
      ],
      "mod_code": [
        "n",
        "if ( ! is_magical ( number ) )",
        "exit ( true ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1,
        5
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "n",
        "exit ( true ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1,
        5
      ],
      "mod_code": [
        "if ( ! is_magical ( number ) )",
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < number . size ( ) ; i ++ )",
        "exit ( true ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}