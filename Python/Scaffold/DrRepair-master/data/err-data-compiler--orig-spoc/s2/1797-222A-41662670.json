{
  "meta": {
    "index": 1797,
    "hitid": "3IKDQS3DQEU0CSBA7AX2SXPZGM3ICK",
    "workerid": "A1APYLD4DUK33J",
    "probid": "222A",
    "subid": "41662670"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k , a , seq , count with seq = 0 , count = 1",
      "code": "int n , k , a , seq = 0 , count = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if a is seq",
      "code": "if ( a == seq )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment count by 1",
      "code": "count += 1 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set count to 1",
      "code": "count = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set seq to a",
      "code": "seq = a ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if count + k is greater than n",
      "code": "if ( count + k > n )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print n - count print newline",
      "code": "cout << n - count << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" - 1 \\ n \"",
      "code": "cout << \" -1\\n \" ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k , a , seq = 0 , seq = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "getline ( cin , a ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else if ( a == seq )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << \" \\ \" ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        1
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        1,
        7
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        1,
        3
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        1,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        7
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "n"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        7,
        3
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        7,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "n",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        3
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        3,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        14,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "int n , k , a , seq = 0 , seq = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        1,
        7
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        1,
        7,
        3
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        1,
        7,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        1,
        3
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        1,
        3,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        1,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        7,
        3
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        7,
        3,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        7,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "n",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        3,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "cout << \" \\ \" ;",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        14,
        1,
        7
      ],
      "mod_code": [
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        14,
        1,
        7,
        3
      ],
      "mod_code": [
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        14,
        1,
        7,
        10
      ],
      "mod_code": [
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n",
        "seq = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        14,
        1,
        3
      ],
      "mod_code": [
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        14,
        1,
        3,
        10
      ],
      "mod_code": [
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        14,
        1,
        10
      ],
      "mod_code": [
        "n",
        "int n , k , a , seq = 0 , seq = 1 ;",
        "seq = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        7,
        3
      ],
      "mod_code": [
        "n",
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        7,
        3,
        10
      ],
      "mod_code": [
        "n",
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        7,
        10
      ],
      "mod_code": [
        "n",
        "n",
        "seq = ' a ' ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        3,
        10
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "n",
        "seq = ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        1,
        7,
        3
      ],
      "mod_code": [
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        1,
        7,
        3,
        10
      ],
      "mod_code": [
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        1,
        7,
        10
      ],
      "mod_code": [
        "int n , k , a , seq = 0 , seq = 1 ;",
        "n",
        "seq = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , k , a , seq = 0 , seq = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "int n , k , a , seq = 0 , seq = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , k , a , seq = 0 , seq = 1 ;",
        "seq = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int seq’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        10
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "n",
        "seq = ' a ' ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "seq = ' a ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}