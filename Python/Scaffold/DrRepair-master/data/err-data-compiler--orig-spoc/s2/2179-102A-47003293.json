{
  "meta": {
    "index": 2179,
    "hitid": "33N1S8XHHMF2KFQMRHW4BW9Y82JZ1D",
    "workerid": "A1AYVATMT88U1W",
    "probid": "102A",
    "subid": "47003293"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "the long integer value of ans = 99999999",
      "code": "long int ans = 99999999 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let n , m be long integers",
      "code": "long int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "price = array of long integers of length 1100",
      "code": "long int price [ 1100 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let l , r be integers , G = 2d array of integers with 110 rows and 110 columns respectively",
      "code": "int G [ 110 ] [ 110 ] = { 0 } , l , r ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive , read price [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> price [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read l , r",
      "code": "cin >> l >> r ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "G [ l ] [ r ] is equal to G [ r ] [ l ] is equal to 1",
      "code": "G [ l ] [ r ] = G [ r ] [ l ] = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 1 to n inclusive",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for k = 1 to n inclusive",
      "code": "for ( int k = 1 ; k <= n ; k ++ )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] [ j ] is equal to 3",
      "code": "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] [ j ] == 3 )",
      "indent": 4
    },
    {
      "line": 15,
      "text": "if ans is greater than price [ i ] + price [ j ] + price [ k ] , ans is equal to price [ i ] + price [ j ] + price [ k ]",
      "code": "if ( ans > price [ i ] + price [ j ] + price [ k ] ) ans = price [ i ] + price [ j ] + price [ k ] ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if ans is equal to 99999999",
      "code": "if ( ans == 99999999 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print - 1 and newline",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print ans and new line",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )"
      ],
      "err_line": 14,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( k = 1 ; k <= n ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] [ j ] == 3 )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ k ] + price [ k ] )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        14,
        15
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        13
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        11
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        14,
        13
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "for ( k = 1 ; k <= n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        14,
        13,
        11
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        14,
        11
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        15,
        13
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        15,
        13,
        11
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        15,
        11
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "for ( k = 1 ; k <= n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        13,
        11
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "int l [ 110 ] [ 110 ] , r , r ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )"
      ],
      "err_line": 14,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        13
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        13,
        11
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        13,
        4
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        14,
        15,
        11
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        11,
        4
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        14,
        15,
        4
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "for ( k = 1 ; k <= n ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13,
        11
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        13,
        11,
        4
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        14,
        13,
        4
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        11,
        4
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "if ( G [ i ] [ j ] + G [ i ] [ k ] + G [ k ] == 3 )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13,
        11
      ],
      "mod_code": [
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13,
        11,
        4
      ],
      "mod_code": [
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        15,
        13,
        4
      ],
      "mod_code": [
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( k = 1 ; k <= n ; k ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        11,
        4
      ],
      "mod_code": [
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "if ( ans > price [ i ] + price [ j ] + price [ k ] + price [ j ] + price [ j ] + price [ k ] )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11,
        4
      ],
      "mod_code": [
        "for ( k = 1 ; k <= n ; k ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "for ( k = 1 ; k <= n ; k ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int l , r [ 110 ] [ 110 ] , r ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int r’"
    }
  ]
}