{
  "meta": {
    "index": 2451,
    "hitid": "3SX4X51T803MFZPFLREG6ZVXSSJOAL",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "631A",
    "subid": "48675377"
  },
  "lines": [
    {
      "line": 0,
      "text": "inf = constant integer = 0x3f3f3f3f",
      "code": "const int inf = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "MAXN = constant integer = 100005",
      "code": "const int MAXN = 100005 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "a = integer array of size 1005",
      "code": "int a [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "b = integer array of size 1005",
      "code": "int b [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "a [ i ] = new number created from the comparison of a [ i ] and a [ i - 1 ] , the bits of this new number are set to 1 if either a [ i ] or a [ i - 1 ] contained a one in the same position",
      "code": "a [ i ] |= a [ i - 1 ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read b [ i ]",
      "code": "cin >> b [ i ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "b [ i ] = new number created from the comparison of b [ i ] and b [ i - 1 ] , the bits of this new number are set to 1 if either b [ i ] or b [ i - 1 ] contained a one in the same position",
      "code": "b [ i ] |= b [ i - 1 ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print the result of a [ n ] + b [ n ]",
      "code": "cout << a [ n ] + b [ n ] << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int * a [ 1005 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> a . at ( i ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘at’ in ‘a’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int j = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cin >> b . at ( i ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘at’ in ‘b’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        0
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        13,
        0,
        6
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        13,
        0,
        2
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        13,
        0,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        13,
        6
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        6,
        2
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        13,
        6,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "n = getchar ( ) ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        2
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        13,
        2,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        13,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        0,
        6
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        0,
        6,
        2
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        0,
        6,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        0,
        2
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        0,
        2,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        0,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6,
        2
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        6,
        2,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        6,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "n = getchar ( ) ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        2,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "a [ i ] = strcmp ( a [ i ] , a [ i ] ) ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        6
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        6,
        2
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        6,
        15
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        2
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        2,
        15
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        15
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "const inf = 0x3f3f3f3f ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        6,
        2
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        13,
        6,
        2,
        15
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        13,
        6,
        15
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "n = getchar ( ) ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        13,
        2,
        15
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "b [ i ] = strcmp ( b [ i ] , b [ i - 1 ] , b [ i - 1 ] , b [ i - 1 ] ) ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        2
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        2,
        15
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        15
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "n = getchar ( ) ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        15
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        2,
        15
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "int * a [ 1005 ] ;",
        "cout << a [ n ] + b [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    }
  ]
}