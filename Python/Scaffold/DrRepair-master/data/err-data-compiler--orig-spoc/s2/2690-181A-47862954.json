{
  "meta": {
    "index": 2690,
    "hitid": "3I7SHAD35MQGWU6518NJ4442VX17MQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "181A",
    "subid": "47862954"
  },
  "lines": [
    {
      "line": 0,
      "text": "constant long long int MOD = 1000000007",
      "code": "const long long int MOD = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long integers N , M , K , H , W , L and R",
      "code": "long long int N , M , K , H , W , L , R ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read H and W",
      "code": "cin >> H >> W ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "s is a vector of strings with H elements",
      "code": "vector < string > s ( H ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to H exclusive",
      "code": "for ( int i = 0 ; i < H ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s [ i ]",
      "code": "cin >> s [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for integer j = 0 to W exclusive",
      "code": "for ( int j = 0 ; j < W ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ i ] [ j ] = ' * '",
      "code": "if ( s [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "N ^ = i",
      "code": "N ^= i ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "M ^ = j",
      "code": "M ^= j ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print N + 1 , \" \" and M + 1",
      "code": "cout << N + 1 << \" \" << M + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < string > s [ H ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        10,
        4
      ],
      "mod_code": [
        "N *= i ;",
        "M *= j ;",
        "vector < string > s [ H ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        10,
        4,
        3
      ],
      "mod_code": [
        "N *= i ;",
        "M *= j ;",
        "vector < string > s [ H ] ;",
        "H >> H >> W ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "N *= i ;",
        "vector < string > s [ H ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        4,
        3
      ],
      "mod_code": [
        "N *= i ;",
        "vector < string > s [ H ] ;",
        "H >> H >> W ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        4,
        3,
        10
      ],
      "mod_code": [
        "N *= i ;",
        "vector < string > s [ H ] ;",
        "H >> H >> W ;",
        "M >>= j ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        4,
        10
      ],
      "mod_code": [
        "N *= i ;",
        "vector < string > s [ H ] ;",
        "M >>= j ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "M *= j ;",
        "vector < string > s [ H ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        10,
        4,
        9
      ],
      "mod_code": [
        "M *= j ;",
        "vector < string > s [ H ] ;",
        "N >>= i ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        10,
        4,
        9,
        3
      ],
      "mod_code": [
        "M *= j ;",
        "vector < string > s [ H ] ;",
        "N >>= i ;",
        "H >> H >> W ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        10,
        4,
        3
      ],
      "mod_code": [
        "M *= j ;",
        "vector < string > s [ H ] ;",
        "H >> H >> W ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "vector < string > s [ H ] ;",
        "N >>= i ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        4,
        9,
        3
      ],
      "mod_code": [
        "vector < string > s [ H ] ;",
        "N >>= i ;",
        "H >> H >> W ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        4,
        9,
        3,
        10
      ],
      "mod_code": [
        "vector < string > s [ H ] ;",
        "N >>= i ;",
        "H >> H >> W ;",
        "M >>= j ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        4,
        9,
        10
      ],
      "mod_code": [
        "vector < string > s [ H ] ;",
        "N >>= i ;",
        "M >>= j ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "vector < string > s [ H ] ;",
        "H >> H >> W ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        4,
        3,
        10
      ],
      "mod_code": [
        "vector < string > s [ H ] ;",
        "H >> H >> W ;",
        "M >>= j ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "vector < string > s [ H ] ;",
        "M >>= j ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    }
  ]
}