{
  "meta": {
    "index": 2720,
    "hitid": "38LRF35D5LQH8JAR8YBFIX9G3223UZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1A",
    "subid": "49035066"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m and a be long longs",
      "code": "long long n , m , a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m and a",
      "code": "cin >> n >> m >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set long long ans to 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n % a is equal to 0",
      "code": "if ( n % a == 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "n = n / a",
      "code": "n = n / a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "n = n / a + 1",
      "code": "n = n / a + 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if m % a is equal to 0",
      "code": "if ( m % a == 0 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "m = m / a",
      "code": "m = m / a ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "m = m / a + 1",
      "code": "m = m / a + 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print m * n and a new line",
      "code": "cout << m * n << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        11
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "m -= a ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        11,
        7
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "m -= a ;",
        "n",
        "n -= a + 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        11,
        2
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "m -= a ;",
        "n",
        "cin >> n >> m , a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        11,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "m -= a ;",
        "n",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        7,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "m -= a ;",
        "n -= a + 1 ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        2,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "m -= a ;",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "m -= a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        7
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n",
        "n -= a + 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        7,
        2
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n",
        "n -= a + 1 ;",
        "cin >> n >> m , a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        7,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n",
        "n -= a + 1 ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        2
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n",
        "cin >> n >> m , a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        2,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        7,
        2,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n -= a + 1 ;",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        7,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n -= a + 1 ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        2,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "m -= a + 1 ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "m -= a ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        7
      ],
      "mod_code": [
        "m -= a ;",
        "n",
        "n -= a + 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        7,
        2
      ],
      "mod_code": [
        "m -= a ;",
        "n",
        "n -= a + 1 ;",
        "cin >> n >> m , a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        7,
        6
      ],
      "mod_code": [
        "m -= a ;",
        "n",
        "n -= a + 1 ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        2
      ],
      "mod_code": [
        "m -= a ;",
        "n",
        "cin >> n >> m , a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        6
      ],
      "mod_code": [
        "m -= a ;",
        "n",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        6
      ],
      "mod_code": [
        "m -= a ;",
        "n",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        7,
        2,
        6
      ],
      "mod_code": [
        "m -= a ;",
        "n -= a + 1 ;",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        7,
        6
      ],
      "mod_code": [
        "m -= a ;",
        "n -= a + 1 ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        2,
        6
      ],
      "mod_code": [
        "m -= a ;",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "m -= a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "n",
        "n -= a + 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7,
        2
      ],
      "mod_code": [
        "n",
        "n -= a + 1 ;",
        "cin >> n >> m , a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7,
        2,
        6
      ],
      "mod_code": [
        "n",
        "n -= a + 1 ;",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7,
        6
      ],
      "mod_code": [
        "n",
        "n -= a + 1 ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "n",
        "cin >> n >> m , a ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        2,
        6
      ],
      "mod_code": [
        "n",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "n -= a + 1 ;",
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "n -= a + 1 ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}