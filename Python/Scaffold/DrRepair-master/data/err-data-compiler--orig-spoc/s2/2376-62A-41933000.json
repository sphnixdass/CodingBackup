{
  "meta": {
    "index": 2376,
    "hitid": "3R4QIDVOJP63TLT27ID6X6RA8IEEEU",
    "workerid": "A1APYLD4DUK33J",
    "probid": "62A",
    "subid": "41933000"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare check with integers d , m as arguments , returning boolean",
      "code": "bool check ( int d , int m )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if m is less than or equal to 2 * ( d + 1 ) and ( m is greater than or equal to d - 1 ) , return 1 from function",
      "code": "if ( m <= 2 * ( d + 1 ) && ( m >= d - 1 ) ) return 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create integers l1 , r1 , l2 , r2",
      "code": "int l1 , r1 , l2 , r2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read l1 read r1 read l2 read r2",
      "code": "cin >> l1 >> r1 >> l2 >> r2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if result of run check with l1 , r2 as arguments or result of run check with r1 , l2 as arguments",
      "code": "if ( check ( l1 , r2 ) || check ( r1 , l2 ) )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool check ( int d , int m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "l1 , r1 , l2 , r2 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l1’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "n",
        "if ( check ( l1 , r2 ) || ! check ( r1 , l2 ) )"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        0
      ],
      "mod_code": [
        "n",
        "if ( check ( l1 , r2 ) || ! check ( r1 , l2 ) )",
        "bool check ( int d , int m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        7,
        0,
        5
      ],
      "mod_code": [
        "n",
        "if ( check ( l1 , r2 ) || ! check ( r1 , l2 ) )",
        "bool check ( int d , int m ) ;",
        "l1 , r1 , l2 , r2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        7,
        5
      ],
      "mod_code": [
        "n",
        "if ( check ( l1 , r2 ) || ! check ( r1 , l2 ) )",
        "l1 , r1 , l2 , r2 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l1’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "n",
        "bool check ( int d , int m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        0,
        5
      ],
      "mod_code": [
        "n",
        "bool check ( int d , int m ) ;",
        "l1 , r1 , l2 , r2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "n",
        "l1 , r1 , l2 , r2 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l1’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "if ( check ( l1 , r2 ) || ! check ( r1 , l2 ) )",
        "bool check ( int d , int m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        5
      ],
      "mod_code": [
        "if ( check ( l1 , r2 ) || ! check ( r1 , l2 ) )",
        "bool check ( int d , int m ) ;",
        "l1 , r1 , l2 , r2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( check ( l1 , r2 ) || ! check ( r1 , l2 ) )",
        "l1 , r1 , l2 , r2 ;"
      ],
      "err_line": 5,
      "err_msg": "‘l1’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "bool check ( int d , int m ) ;",
        "l1 , r1 , l2 , r2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}