{
  "meta": {
    "index": 2566,
    "hitid": "3MIVREZQVHSVCOBHCVJ9PITTB3HQKR",
    "workerid": "AIWEXPJAU66D9",
    "probid": "24A",
    "subid": "41587889"
  },
  "lines": [
    {
      "line": 0,
      "text": "let graph be a 2d array of integers with size 105 by 105",
      "code": "int graph [ 105 ] [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let vis be an array of integers of length 105",
      "code": "int vis [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let m be a 2d array of integers with size 105 by 105",
      "code": "int m [ 105 ] [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "t = integer",
      "code": "int t ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "let k be integer",
      "code": "int k ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare integer variable n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "void function dfs which takes integer argument u",
      "code": "void dfs ( int u )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "increase k by one",
      "code": "k ++ ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set vis [ u ] to 1",
      "code": "vis [ u ] = 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if k is equal to n , increase by m [ 1 ] [ u ]",
      "code": "if ( k == n ) { t += m [ 1 ] [ u ] ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to 105 exclusive",
      "code": "for ( int i = 0 ; i < 105 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if graph [ u ] [ i ] = 1 and vis [ i ] is equal to 0",
      "code": "if ( graph [ u ] [ i ] == 1 && vis [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increase t by m [ i ] [ u ]",
      "code": "t += m [ i ] [ u ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if k is equal to n , return from the function",
      "code": "if ( k == n ) { return ; }",
      "indent": 3
    },
    {
      "line": 14,
      "text": "call dfs of i",
      "code": "dfs ( i ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "while can read input into n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set value of t to 0",
      "code": "t = 0 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set value of k to 0",
      "code": "k = 0 ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set integer sum to 0",
      "code": "int sum = 0 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "call memset with arguments graph , 0 and sizeof ( graph )",
      "code": "memset ( graph , 0 , sizeof ( graph ) ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "call memset with arguments vis , 0 and sizeof ( vis )",
      "code": "memset ( vis , 0 , sizeof ( vis ) ) ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "call memset with arguments m , 0 and sizeof ( m )",
      "code": "memset ( m , 0 , sizeof ( m ) ) ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "x , y and z = integers",
      "code": "int x , y , z ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "read x , y and z",
      "code": "cin >> x >> y >> z ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "set graph [ x ] [ y ] and graph [ y ] [ x ] to 1",
      "code": "graph [ x ] [ y ] = graph [ y ] [ x ] = 1 ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "set m [ y ] [ x ] to z",
      "code": "m [ y ] [ x ] = z ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "increase sum by z",
      "code": "sum += z ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "call dfs with 1 as an argument",
      "code": "dfs ( 1 ) ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "if sum - t is less than t , set t to sum - t",
      "code": "if ( sum - t < t ) { t = sum - t ; }",
      "indent": 2
    },
    {
      "line": 35,
      "text": "print t and a new line",
      "code": "cout << t << endl ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int s [ 105 ] [ 105 ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘graph’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * vis [ 105 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int * m [ 105 ] [ 105 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "void dfs ( int u ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "C [ u ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( k == n ) { m ++ ; }"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( k == n ) return from ;"
      ],
      "err_line": 13,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "while ( getline ( cin , n ) )"
      ],
      "err_line": 19,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "* k = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 22,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "vis ( vis , 0 , sizeof ( vis ) ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘vis’ cannot be used as a function"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 25,
      "err_msg": "expected unqualified-id before ‘sizeof’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "dfs ( l ) ;"
      ],
      "err_line": 33,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        34,
        25
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 25,
      "err_msg": "expected unqualified-id before ‘sizeof’"
    },
    {
      "mod_line": [
        9,
        34,
        25,
        4
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        34,
        25,
        30
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 25,
      "err_msg": "expected unqualified-id before ‘sizeof’"
    },
    {
      "mod_line": [
        9,
        34,
        25,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        34,
        4
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "if ( sum - t < t ) t -= t ;",
        "k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        34,
        4,
        30
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "if ( sum - t < t ) t -= t ;",
        "k ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        34,
        4,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "if ( sum - t < t ) t -= t ;",
        "k ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        34,
        30,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "if ( sum - t < t ) t -= t ;",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        34,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "if ( sum - t < t ) t -= t ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        25
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 25,
      "err_msg": "expected unqualified-id before ‘sizeof’"
    },
    {
      "mod_line": [
        9,
        25,
        4
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        25,
        4,
        30
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        25,
        4,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        25,
        30
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 25,
      "err_msg": "expected unqualified-id before ‘sizeof’"
    },
    {
      "mod_line": [
        9,
        25,
        30,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        25,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        4,
        30
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "k ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        4,
        30,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "k ;",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        4,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "k ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        9,
        30,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23
      ],
      "mod_code": [
        "if ( k == n ) { ++ m [ 1 ] [ u ] ; }",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        34,
        25
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 25,
      "err_msg": "expected unqualified-id before ‘sizeof’"
    },
    {
      "mod_line": [
        34,
        25,
        4
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        34,
        25,
        4,
        30
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        34,
        25,
        4,
        23
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        34,
        25,
        30
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 25,
      "err_msg": "expected unqualified-id before ‘sizeof’"
    },
    {
      "mod_line": [
        34,
        25,
        30,
        23
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        34,
        25,
        23
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        34,
        4
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        34,
        4,
        30
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "k ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        34,
        4,
        30,
        23
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "k ;",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        34,
        4,
        23
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "k ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        34,
        30,
        23
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        34,
        23
      ],
      "mod_code": [
        "if ( sum - t < t ) t -= t ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        4
      ],
      "mod_code": [
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        25,
        4,
        30
      ],
      "mod_code": [
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        25,
        4,
        30,
        23
      ],
      "mod_code": [
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        25,
        4,
        23
      ],
      "mod_code": [
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "k ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        25,
        30
      ],
      "mod_code": [
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 25,
      "err_msg": "expected unqualified-id before ‘sizeof’"
    },
    {
      "mod_line": [
        25,
        30,
        23
      ],
      "mod_code": [
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        23
      ],
      "mod_code": [
        "m . sizeof ( m , 0 , sizeof ( m ) ) ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        30
      ],
      "mod_code": [
        "k ;",
        "m [ y ] [ x ] = ' z ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        4,
        30,
        23
      ],
      "mod_code": [
        "k ;",
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        4,
        23
      ],
      "mod_code": [
        "k ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ does not name a type"
    },
    {
      "mod_line": [
        30,
        23
      ],
      "mod_code": [
        "m [ y ] [ x ] = ' z ' ;",
        "memset ( ( graph , 0 , sizeof ( graph ) ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    }
  ]
}