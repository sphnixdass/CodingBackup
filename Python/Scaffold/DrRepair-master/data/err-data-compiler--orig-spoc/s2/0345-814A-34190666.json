{
  "meta": {
    "index": 345,
    "hitid": "32XN26MTXZDI81O0GX1VPCFQO100LN",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "814A",
    "subid": "34190666"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create int arrays a and b of size 100",
      "code": "int a [ 100 ] , b [ 100 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read the first k elements of b [ i ]",
      "code": "for ( int i = 0 ; i < k ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if k greater than 1",
      "code": "if ( k > 1 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print Yes",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if a [ i ] equal to 0 , assign b [ 0 ] to a [ i ]",
      "code": "if ( a [ i ] == 0 ) a [ i ] = b [ 0 ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set flag to 0",
      "code": "int flag = 0 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for i = 0 to n - 1 exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if a [ i ] < = a [ i + 1 ] , increment flag",
      "code": "if ( a [ i ] <= a [ i + 1 ] ) flag ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if flag equal to n - 1",
      "code": "if ( flag == n - 1 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print No",
      "code": "cout << \" No \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print Yes",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int ( a [ 100 ] , b [ 100 ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 17,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        9
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        9,
        18
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        9,
        2
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        9,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        10,
        18
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        18,
        2
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        18,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        10,
        2
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        2,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        10,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "flag = 0 ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        9,
        18
      ],
      "mod_code": [
        "flag = 0 ;",
        "n",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        9,
        18,
        2
      ],
      "mod_code": [
        "flag = 0 ;",
        "n",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        9,
        18,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "n",
        "cout << \" YES\\n \" ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        9,
        2
      ],
      "mod_code": [
        "flag = 0 ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        9,
        2,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "n",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        9,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "n",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "flag = 0 ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        2
      ],
      "mod_code": [
        "flag = 0 ;",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        2,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        18,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "cout << \" YES\\n \" ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "flag = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        9,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        9,
        18,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        9,
        18,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "cout << \" YES\\n \" ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        9,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        9,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        9,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        18,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        18,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        18,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "n",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        18,
        2
      ],
      "mod_code": [
        "n",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        18,
        2,
        1
      ],
      "mod_code": [
        "n",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        18,
        1
      ],
      "mod_code": [
        "n",
        "cout << \" YES\\n \" ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        1
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "n",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        18,
        2,
        1
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        18,
        1
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    }
  ]
}