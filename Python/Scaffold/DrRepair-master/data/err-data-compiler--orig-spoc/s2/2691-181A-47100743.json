{
  "meta": {
    "index": 2691,
    "hitid": "3IHWR4LC7D7Y0PLXQYHXQBTGP8NI88",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "181A",
    "subid": "47100743"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integers n and m , x = 0 , y = 0",
      "code": "int n , m , x = 0 , y = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if str [ j ] = *",
      "code": "if ( str [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set x to x ^ i",
      "code": "x ^= i ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "assign y ^ j to y",
      "code": "y ^= j ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print + + x , \" \" , + + y and a newline",
      "code": "cout << ++ x << \" \" << ++ y << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "getline ( cin , str ) ;"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        5,
        1
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "getline ( cin , str ) ;",
        "string str << endl ;"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        5,
        1,
        7
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "getline ( cin , str ) ;",
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        5,
        1,
        6
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "getline ( cin , str ) ;",
        "string str << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        5,
        7
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "getline ( cin , str ) ;",
        "if ( str [ j ] = ' * ' )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        5,
        7,
        6
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "getline ( cin , str ) ;",
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        5,
        6
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "getline ( cin , str ) ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "string str << endl ;"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        1,
        7
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        1,
        7,
        6
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        1,
        6
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "string str << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "if ( str [ j ] = ' * ' )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        7,
        6
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "cout << \" + x << \" \" << + y + y << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        1,
        7
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        1,
        7,
        6
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        1,
        7,
        12
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        5,
        1,
        6
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "string str << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        1,
        6,
        12
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "string str << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        5,
        1,
        12
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "string str << endl ;",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        12
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        5,
        7,
        12
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "if ( str [ j ] = ' * ' )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "getline ( cin , str ) ;",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7,
        6
      ],
      "mod_code": [
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7,
        6,
        12
      ],
      "mod_code": [
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        7,
        12
      ],
      "mod_code": [
        "string str << endl ;",
        "if ( str [ j ] = ' * ' )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "string str << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        12
      ],
      "mod_code": [
        "string str << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "string str << endl ;",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        12
      ],
      "mod_code": [
        "if ( str [ j ] = ' * ' )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "if ( str [ j ] = ' * ' )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << \" + x << \" \" << + y << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "stray ‘\\’ in program"
    }
  ]
}