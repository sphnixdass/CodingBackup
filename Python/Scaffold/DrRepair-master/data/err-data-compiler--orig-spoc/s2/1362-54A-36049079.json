{
  "meta": {
    "index": 1362,
    "hitid": "3A520CCNWNU038CQRDBK1N1JOQGAE6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "54A",
    "subid": "36049079"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare ints n , k and m",
      "code": "int n , k , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create long long variable fill",
      "code": "long long fill ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "define integers diff and x",
      "code": "int diff , x ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read variables n and k from the input",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "c is a new array of integers with m elements",
      "code": "int c [ m ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read m elements from the input into c",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> c [ i ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set fill to m",
      "code": "fill = m ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "diff = c [ 0 ] / k",
      "code": "diff = int ( c [ 0 ] / k ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if c [ 0 ] modulo k is equal to 0 , subtract 1 from diff",
      "code": "if ( c [ 0 ] % k == 0 ) diff = diff - 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set fill to fill + diff",
      "code": "fill = fill + diff ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for integer j = 0 to m - 1 exclusive",
      "code": "for ( int j = 0 ; j < m - 1 ; j ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "change x to c [ j + 1 ] - c [ j ]",
      "code": "x = c [ j + 1 ] - c [ j ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set diff to x / k",
      "code": "diff = int ( x / k ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if x % k is 0 , change the value of diff to diff - 1",
      "code": "if ( x % k == 0 ) diff = diff - 1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "change the value of fill to fill + diff",
      "code": "fill = fill + diff ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if m ! = 0",
      "code": "if ( m != 0 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "change x to n - c [ m - 1 ]",
      "code": "x = n - c [ m - 1 ] ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "change the value of diff to x / k",
      "code": "diff = int ( x / k ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "change fill to fill + diff",
      "code": "fill = fill + diff ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "change the value of diff to n / k",
      "code": "diff = int ( n / k ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "assign diff to fill",
      "code": "fill = diff ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print fill and \" \\ n \"",
      "code": "cout << fill << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long fill ( )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "fill ( m , m ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "fill ( fill + diff ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "fill ( fill + diff ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "fill ( fill + diff ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "fill ( diff ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "memset ( m , m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int diff = c [ 0 ] / k ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int diff’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "fill ( fill + diff , sizeof ( fill ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "fill ( diff , diff ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "cout << fill ( \" \\n \" ) ;"
      ],
      "err_line": 26,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        16
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        21
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        16
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        21
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        16,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        21
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        21,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        8,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( m , m ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        11,
        16
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        11,
        16,
        21
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        11,
        16,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        11,
        21
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        11,
        21,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        11,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        16,
        21
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        16,
        21,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        16,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        21,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2,
        24
      ],
      "mod_code": [
        "long long fill ( )",
        "fill ( diff ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        11,
        16
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        21
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        24
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        11,
        21
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        11,
        21,
        24
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        11,
        24
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        16,
        21
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        16,
        21,
        24
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        16,
        24
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        21,
        24
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        24
      ],
      "mod_code": [
        "fill ( m , m ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        16,
        21
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        16,
        21,
        24
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        16,
        24
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        21,
        24
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        21,
        24
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        24
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘fill’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        24
      ],
      "mod_code": [
        "fill ( fill + diff ) ;",
        "fill ( diff ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘fill’ cannot be used as a function"
    }
  ]
}