{
  "meta": {
    "index": 961,
    "hitid": "373L46LKP70EQ174H5Z0SHH7XN6JK4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "778A",
    "subid": "48211929"
  },
  "lines": [
    {
      "line": 0,
      "text": "long long mod = 1000000007",
      "code": "long long mod = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "long long integer function fast_exp with long long integer arguments base and ex",
      "code": "long long int fast_exp ( long long int base , long long int ex )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "long long integer res = 1",
      "code": "long long int res = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while ex is greater than 0",
      "code": "while ( ex > 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ex is odd , set res = ( res * base ) % mod",
      "code": "if ( ex % 2 == 1 ) res = ( res * base ) % mod ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "base = ( base * base ) % mod",
      "code": "base = ( base * base ) % mod ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "divide ex by 2",
      "code": "ex /= 2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return res % mod",
      "code": "return res % mod ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "long long integer function gcd with long long integer arguments a and b",
      "code": "long long int gcd ( long long int a , long long int b )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "if b = 0 , return a",
      "code": "if ( b == 0 ) return a ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return gcd of b and a % b",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "boolean function isSubSequence with string arguments str1 and str2 and integer arguments m and n",
      "code": "bool isSubSequence ( string str1 , string str2 , int m , int n )",
      "indent": 0
    },
    {
      "line": 15,
      "text": "declare integer j = 0",
      "code": "int j = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to n while i < n and j < m",
      "code": "for ( int i = 0 ; i < n && j < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if str1 [ j ] = str2 [ i ] , increment j",
      "code": "if ( str1 [ j ] == str2 [ i ] ) j ++ ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "return true if j = m , else otherwise",
      "code": "return ( j == m ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "declare long long n",
      "code": "long long n ;",
      "indent": 0
    },
    {
      "line": 21,
      "text": "create long long array ar with 200001 element",
      "code": "long long ar [ 200001 ] ;",
      "indent": 0
    },
    {
      "line": 22,
      "text": "declare string variables s and t",
      "code": "string s , t ;",
      "indent": 0
    },
    {
      "line": 23,
      "text": "boolean function check with long long argument a",
      "code": "bool check ( long long a )",
      "indent": 0
    },
    {
      "line": 24,
      "text": "let vi be long long array with size n filled with 0",
      "code": "long long vi [ n ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for integer i = 0 to a exclusive , set vi [ ar [ i ] ] to 1",
      "code": "for ( int i = 0 ; i < a ; i ++ ) vi [ ar [ i ] ] = 1 ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "declare string variable h",
      "code": "string h ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if vi [ i ] is 0 , increment h by s [ i ]",
      "code": "if ( ! vi [ i ] ) h += s [ i ] ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "return isSubSequence ( t , h , length of t , length of h )",
      "code": "return isSubSequence ( t , h , t . length ( ) , h . length ( ) ) ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 33,
      "text": "read s and t",
      "code": "cin >> s >> t ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "n = length of s",
      "code": "n = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "read ar [ i ]",
      "code": "cin >> ar [ i ] ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "decrease ar [ i ]",
      "code": "ar [ i ] -- ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "create long long l = 0",
      "code": "long long l = 0 ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "create long long h = n",
      "code": "long long h = n ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "create long long ans = 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "while l is less than h",
      "code": "while ( l < h )",
      "indent": 1
    },
    {
      "line": 43,
      "text": "long long variable mi = h + l",
      "code": "long long mi = h + l ;",
      "indent": 2
    },
    {
      "line": 44,
      "text": "divide mi by 2",
      "code": "mi /= 2 ;",
      "indent": 2
    },
    {
      "line": 45,
      "text": "if check ( mi ) is true",
      "code": "if ( check ( mi ) )",
      "indent": 2
    },
    {
      "line": 46,
      "text": "set l to mi + 1",
      "code": "l = mi + 1 ;",
      "indent": 3
    },
    {
      "line": 47,
      "text": "set value of ans to max of ans and mi",
      "code": "ans = max ( ans , mi ) ;",
      "indent": 3
    },
    {
      "line": 48,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 49,
      "text": "set h to mi",
      "code": "h = mi ;",
      "indent": 3
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 51,
      "text": "print ans and \" \\ n \"",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "return gcd ( b % b ) % b ;"
      ],
      "err_line": 12,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "bool isSubSequence ( string str1 , int str2 , int m , int n )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "char s , t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "bool check ( long long a ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "bool h ;"
      ],
      "err_line": 30,
      "err_msg": "request for member ‘length’ in ‘h’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 27,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "s >> s >> t ;"
      ],
      "err_line": 33,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "cin >> ar . at ( i ) ;"
      ],
      "err_line": 36,
      "err_msg": "request for member ‘at’ in ‘ar’, which is of non-class type ‘long long int [200001]’"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "* ans = max ( ans , mi ) ;"
      ],
      "err_line": 47,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 49,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        51
      ],
      "mod_code": [
        "\" cout << ans << \" \\n \" ;"
      ],
      "err_line": 51,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        34,
        18,
        42,
        22
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "return j == m ? true : true ;",
        "while ( l < h ) ;",
        "char s , t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        18,
        42,
        33
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "return j == m ? true : true ;",
        "while ( l < h ) ;",
        "s >> s >> t ;"
      ],
      "err_line": 33,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        34,
        18,
        42,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "return j == m ? true : true ;",
        "while ( l < h ) ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        18,
        22
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "return j == m ? true : true ;",
        "char s , t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        18,
        22,
        33
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "return j == m ? true : true ;",
        "char s , t ;",
        "s >> s >> t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        18,
        22,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "return j == m ? true : true ;",
        "char s , t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        18,
        33
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "return j == m ? true : true ;",
        "s >> s >> t ;"
      ],
      "err_line": 33,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        34,
        18,
        33,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "return j == m ? true : true ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        18,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "return j == m ? true : true ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        42,
        22
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "while ( l < h ) ;",
        "char s , t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        42,
        22,
        33
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "while ( l < h ) ;",
        "char s , t ;",
        "s >> s >> t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        42,
        22,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "while ( l < h ) ;",
        "char s , t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        42,
        33
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "while ( l < h ) ;",
        "s >> s >> t ;"
      ],
      "err_line": 33,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        34,
        42,
        33,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "while ( l < h ) ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        42,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "while ( l < h ) ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        22
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "char s , t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        22,
        33
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "char s , t ;",
        "s >> s >> t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        22,
        33,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "char s , t ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        22,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "char s , t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        33
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "s >> s >> t ;"
      ],
      "err_line": 33,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        34,
        33,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        15
      ],
      "mod_code": [
        "int n = s . length ( ) ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        42,
        22
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "while ( l < h ) ;",
        "char s , t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        42,
        22,
        33
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "while ( l < h ) ;",
        "char s , t ;",
        "s >> s >> t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        42,
        22,
        15
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "while ( l < h ) ;",
        "char s , t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        42,
        33
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "while ( l < h ) ;",
        "s >> s >> t ;"
      ],
      "err_line": 33,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        42,
        33,
        15
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "while ( l < h ) ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        42,
        15
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "while ( l < h ) ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        22
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "char s , t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        33
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "char s , t ;",
        "s >> s >> t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        22,
        33,
        15
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "char s , t ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        22,
        15
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "char s , t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        33
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "s >> s >> t ;"
      ],
      "err_line": 33,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        33,
        15
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        15
      ],
      "mod_code": [
        "return j == m ? true : true ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        22
      ],
      "mod_code": [
        "while ( l < h ) ;",
        "char s , t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        42,
        22,
        33
      ],
      "mod_code": [
        "while ( l < h ) ;",
        "char s , t ;",
        "s >> s >> t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        42,
        22,
        33,
        15
      ],
      "mod_code": [
        "while ( l < h ) ;",
        "char s , t ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        22,
        15
      ],
      "mod_code": [
        "while ( l < h ) ;",
        "char s , t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        33
      ],
      "mod_code": [
        "while ( l < h ) ;",
        "s >> s >> t ;"
      ],
      "err_line": 33,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        42,
        33,
        15
      ],
      "mod_code": [
        "while ( l < h ) ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        15
      ],
      "mod_code": [
        "while ( l < h ) ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        33
      ],
      "mod_code": [
        "char s , t ;",
        "s >> s >> t ;"
      ],
      "err_line": 28,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        33,
        15
      ],
      "mod_code": [
        "char s , t ;",
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        15
      ],
      "mod_code": [
        "char s , t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        15
      ],
      "mod_code": [
        "s >> s >> t ;",
        "j = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}