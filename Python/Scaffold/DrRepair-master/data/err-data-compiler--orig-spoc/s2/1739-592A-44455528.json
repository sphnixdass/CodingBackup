{
  "meta": {
    "index": 1739,
    "hitid": "3PEG1BH7AEL88I9STDMJUTYUQ5XBKM",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "592A",
    "subid": "44455528"
  },
  "lines": [
    {
      "line": 0,
      "text": "create character variable o",
      "code": "char tabuleiro [ 8 ] [ 8 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function menorW = 9 , menorB = 9",
      "code": "int menorW = 9 , menorB = 9 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "function testeW ( integer i , integer j )",
      "code": "int testeW ( int i , int j )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "integers = dist = 0",
      "code": "int dist = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if i is 0 then do the following return 0",
      "code": "if ( i == 0 ) return 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for - 1 to greater than or equal to 0 do the following",
      "code": "for ( i - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if tabuleiro [ i ] [ j ] is not equal to B then do the following",
      "code": "if ( tabuleiro [ i ] [ j ] != ' B ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "add one to dist",
      "code": "dist ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "return menorW",
      "code": "return menorW ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if menorW is greater than dist then do the following return dist",
      "code": "if ( menorW > dist ) return dist ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return menorW",
      "code": "return menorW ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "function testeB ( integer i , integer j )",
      "code": "int testeB ( int i , int j )",
      "indent": 0
    },
    {
      "line": 15,
      "text": "integer dist = 0",
      "code": "int dist = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if i is 8 then do the following return 0",
      "code": "if ( i == 8 ) return 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for + 1 to less than 8 do the following",
      "code": "for ( i + 1 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if tabuleiro [ i ] [ j ] is not equal to W then do the following",
      "code": "if ( tabuleiro [ i ] [ j ] != ' W ' )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "add one to dist",
      "code": "dist ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "return menorB",
      "code": "return menorB ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if menorB is greater than dist then do the following return dist",
      "code": "if ( menorB > dist ) return dist ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "return menorB",
      "code": "return menorB ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 27,
      "text": "for i = 0 to less than 8 do the following",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "for j = 0 to less than 8 input tabuleiro array",
      "code": "for ( int j = 0 ; j < 8 ; j ++ ) cin >> tabuleiro [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "for i = 0 to less than 8 do the following",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for j = 0 to less than 8 do the following",
      "code": "for ( int j = 0 ; j < 8 ; j ++ )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "if tabuleiro [ i ] [ j ] is W then do the following",
      "code": "if ( tabuleiro [ i ] [ j ] == ' W ' )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "set menorW to testeW ( i , j )",
      "code": "menorW = testeW ( i , j ) ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "else if tabuleiro [ i ] [ j ] is B then do the following",
      "code": "else if ( tabuleiro [ i ] [ j ] == ' B ' )",
      "indent": 3
    },
    {
      "line": 34,
      "text": "set menorB to testeB ( i , j )",
      "code": "menorB = testeB ( i , j ) ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "if menorW is less than or equal to menorB then do the following",
      "code": "if ( menorW <= menorB )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "output A",
      "code": "cout << ' A ' << endl ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 38,
      "text": "output B",
      "code": "cout << ' B ' << endl ;",
      "indent": 2
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char o ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "void testeW ( int i , int j )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "void testeB ( int i , int j )"
      ],
      "err_line": 16,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "cout << A << endl ;"
      ],
      "err_line": 36,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int 1 = 1 ; j >= 0 ; -- 1 )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int dist [ 0 ] ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != W )"
      ],
      "err_line": 18,
      "err_msg": "‘W’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 20,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "else if ( tabuleiro [ i ] [ j ] == B )"
      ],
      "err_line": 33,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "while ( menorW <= menorB )"
      ],
      "err_line": 37,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 37,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "cout << B << endl ;"
      ],
      "err_line": 38,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        6
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        14
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        17
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        36
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        38
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        6
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        14
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        17
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        36
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        38
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        14
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        17
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        36
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        38
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        17
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        17,
        36
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        17,
        38
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        36
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        36,
        38
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        38
      ],
      "mod_code": [
        "char o ;",
        "void testeW ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        6
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        14
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        17
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        36
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        38
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        14
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        14,
        17
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        14,
        36
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        14,
        38
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        17
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        17,
        36
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        17,
        38
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        36
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        36,
        38
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        38
      ],
      "mod_code": [
        "char o ;",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        14
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        14,
        17
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        14,
        36
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        14,
        38
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        17
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        17,
        36
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        17,
        38
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        36
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        36,
        38
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        38
      ],
      "mod_code": [
        "char o ;",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "char o ;",
        "void testeB ( int i , int j )"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14,
        17
      ],
      "mod_code": [
        "char o ;",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14,
        17,
        36
      ],
      "mod_code": [
        "char o ;",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14,
        17,
        38
      ],
      "mod_code": [
        "char o ;",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14,
        36
      ],
      "mod_code": [
        "char o ;",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14,
        36,
        38
      ],
      "mod_code": [
        "char o ;",
        "void testeB ( int i , int j )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14,
        38
      ],
      "mod_code": [
        "char o ;",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "char o ;",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17,
        36
      ],
      "mod_code": [
        "char o ;",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17,
        36,
        38
      ],
      "mod_code": [
        "char o ;",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17,
        38
      ],
      "mod_code": [
        "char o ;",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        36
      ],
      "mod_code": [
        "char o ;",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        36,
        38
      ],
      "mod_code": [
        "char o ;",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        38
      ],
      "mod_code": [
        "char o ;",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘tabuleiro’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        14
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        17
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        14
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        14,
        17
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        14,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        14,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        17
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        17,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        17,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        36,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        14
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        14,
        17
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        14,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        14,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        17
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        17,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        17,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        36,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        17,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        36,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        14,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        36,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        17,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        36
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        36,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        38
      ],
      "mod_code": [
        "void testeW ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        14
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        17
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        36
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        17
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        17,
        36
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        17,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        36
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        36,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14,
        17
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        36
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14,
        36
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14,
        36,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        17,
        36
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        17,
        36,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        17,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        36
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << A << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        36,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        38
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i >= 0 ; -- 1 )",
        "cout << ' B ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        17
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        17,
        36
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        17,
        38
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        36
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        36,
        38
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        38
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        36
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        36,
        38
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        38
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        36
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        36,
        38
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        38
      ],
      "mod_code": [
        "if ( tabuleiro [ i ] [ j ] != B )",
        "cout << ' B ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        17,
        36
      ],
      "mod_code": [
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 16,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        17,
        36,
        38
      ],
      "mod_code": [
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 16,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        17,
        38
      ],
      "mod_code": [
        "void testeB ( int i , int j )",
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 16,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        36
      ],
      "mod_code": [
        "void testeB ( int i , int j )",
        "cout << A << endl ;"
      ],
      "err_line": 16,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        36,
        38
      ],
      "mod_code": [
        "void testeB ( int i , int j )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 16,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        38
      ],
      "mod_code": [
        "void testeB ( int i , int j )",
        "cout << ' B ' ;"
      ],
      "err_line": 16,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        36
      ],
      "mod_code": [
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;"
      ],
      "err_line": 36,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        36,
        38
      ],
      "mod_code": [
        "for ( j + 1 ; i < 8 ; j ++ )",
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 36,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        38
      ],
      "mod_code": [
        "cout << A << endl ;",
        "cout << ' B ' ;"
      ],
      "err_line": 36,
      "err_msg": "‘A’ was not declared in this scope"
    }
  ]
}