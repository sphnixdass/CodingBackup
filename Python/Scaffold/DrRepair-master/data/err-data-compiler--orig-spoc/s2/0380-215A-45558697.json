{
  "meta": {
    "index": 380,
    "hitid": "39WICJI5ATMYUI41ELANZPOV6MQZ3Y",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "215A",
    "subid": "45558697"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = int and a , b = int array of size 60 each",
      "code": "int n , m , a [ 60 ] , b [ 60 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n values into a",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read m values into b",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "BG = int with BG = - 1",
      "code": "int BG = - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 0 to m",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if b [ j ] is a multiple of a [ i ]",
      "code": "if ( ! ( b [ j ] % a [ i ] ) )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if b [ j ] / a [ i ] is greater than BG then set BG to b [ j ] / a [ i ]",
      "code": "if ( b [ j ] / a [ i ] > BG ) { BG = b [ j ] / a [ i ] ; }",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "ans = int with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = 0 to m",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if b [ j ] is a multiple of a [ i ] and b [ j ] / a [ i ] is BG then increment ans",
      "code": "if ( ! ( b [ j ] % a [ i ] ) && b [ j ] / a [ i ] == BG ) { ans ++ ; }",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        4,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "m = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        17,
        4,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "m = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        17,
        2,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        17,
        2,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "n = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        17,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        17,
        1,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        17,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        2,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        4,
        2,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "m = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        4,
        1,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "m = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "m = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        2,
        1,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        2,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "n = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        1,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] % a [ i ] )",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        4,
        2,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        17,
        4,
        2,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        4,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "m = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        17,
        4,
        1,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "m = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        17,
        4,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "m = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        2,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        17,
        2,
        1,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        17,
        2,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "n = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        1
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        17,
        1,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] && b [ j ] / a [ i ] == BG ) ans ++ ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        4,
        2,
        1,
        6
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        2,
        1,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , a [ 60 ] , m [ 60 ] , m ;",
        "int * BG = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int m’"
    }
  ]
}