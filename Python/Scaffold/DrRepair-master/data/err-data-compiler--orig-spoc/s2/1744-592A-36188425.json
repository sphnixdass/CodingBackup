{
  "meta": {
    "index": 1744,
    "hitid": "3YOAVL4CA0BJCEN5EZF69UG1KMSZ4P",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "592A",
    "subid": "36188425"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string array str of size 8",
      "code": "string str [ 8 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "for i = 0 to 8 exclusive , read str [ i ]",
      "code": "for ( int i = 0 ; i < 8 ; i ++ ) cin >> str [ i ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make ints a = 0x3f3f3f3f and b = 0x3f3f3f3f",
      "code": "int a = 0x3f3f3f3f , b = 0x3f3f3f3f ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to 8 exclusive",
      "code": "for ( int j = 0 ; j < 8 ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if str [ i ] [ j ] is equal to ' W '",
      "code": "if ( str [ i ] [ j ] == ' W ' )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "create bool flag = true",
      "code": "bool flag = true ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "for k = i - 1 to 0",
      "code": "for ( int k = i - 1 ; k >= 0 ; k -- )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if str [ k ] [ j ] is not equal to ' , '",
      "code": "if ( str [ k ] [ j ] != ' . ' )",
      "indent": 5
    },
    {
      "line": 10,
      "text": "set flag to false",
      "code": "flag = false ;",
      "indent": 6
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "if flag is true , set a to min ( a , i )",
      "code": "if ( flag ) a = min ( a , i ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if str [ i ] [ j ] is equal to ' B '",
      "code": "if ( str [ i ] [ j ] == ' B ' )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "create bool flag = true",
      "code": "bool flag = true ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "for k = i + 1 to 8 exclusive",
      "code": "for ( int k = i + 1 ; k < 8 ; k ++ )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "if str [ k ] [ j ] is not equal to ' . '",
      "code": "if ( str [ k ] [ j ] != ' . ' )",
      "indent": 5
    },
    {
      "line": 20,
      "text": "set flag to false",
      "code": "flag = false ;",
      "indent": 6
    },
    {
      "line": 21,
      "text": "break loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 24,
      "text": "if flag is true , set b to min of b and 8 - i - 1",
      "code": "if ( flag ) b = min ( b , 8 - i - 1 ) ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if a is less than or equal to b",
      "code": "if ( a <= b )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "display ' A '",
      "code": "cout << ' A ' << endl ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 31,
      "text": "show ' B '",
      "code": "cout << ' B ' << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string arr [ 8 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a = 0x3f3f3f3f and b = 0x3f3f3f3f ;"
      ],
      "err_line": 3,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( k = i - 1 ; k >= 0 ; k -- )"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( k = i + 1 ; k < 8 ; k ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "puts ( ' A ' ) ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        29,
        31,
        0
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' A ' ;",
        "cout << ' B ' ;",
        "string arr [ 8 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        29,
        31,
        30
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' A ' ;",
        "cout << ' B ' ;",
        "else do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        29,
        0
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' A ' ;",
        "string arr [ 8 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        29,
        0,
        30
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' A ' ;",
        "string arr [ 8 ] ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        29,
        0,
        28
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' A ' ;",
        "string arr [ 8 ] ;",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        29,
        30
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' A ' ;",
        "else do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        29,
        30,
        28
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' A ' ;",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        31,
        0
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' B ' ;",
        "string arr [ 8 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        31,
        0,
        30
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' B ' ;",
        "string arr [ 8 ] ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        31,
        0,
        28
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' B ' ;",
        "string arr [ 8 ] ;",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        31,
        30
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' B ' ;",
        "else do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        31,
        30,
        28
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "cout << ' B ' ;",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "string arr [ 8 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        0,
        30
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "string arr [ 8 ] ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        0,
        30,
        28
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "string arr [ 8 ] ;",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        0,
        28
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "string arr [ 8 ] ;",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        30
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "else do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        30,
        28
      ],
      "mod_code": [
        "if ( str [ k ] [ j ] != ' , ' )",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        31,
        0
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "cout << ' B ' ;",
        "string arr [ 8 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        31,
        0,
        30
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "cout << ' B ' ;",
        "string arr [ 8 ] ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        31,
        0,
        28
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "cout << ' B ' ;",
        "string arr [ 8 ] ;",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        31,
        30
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "cout << ' B ' ;",
        "else do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        31,
        30,
        28
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "cout << ' B ' ;",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        0
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "string arr [ 8 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        0,
        30
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "string arr [ 8 ] ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        0,
        30,
        28
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "string arr [ 8 ] ;",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        0,
        28
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "string arr [ 8 ] ;",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        30
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "else do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        29,
        30,
        28
      ],
      "mod_code": [
        "cout << ' A ' ;",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        31,
        0
      ],
      "mod_code": [
        "cout << ' B ' ;",
        "string arr [ 8 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        0,
        30
      ],
      "mod_code": [
        "cout << ' B ' ;",
        "string arr [ 8 ] ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        0,
        30,
        28
      ],
      "mod_code": [
        "cout << ' B ' ;",
        "string arr [ 8 ] ;",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        0,
        28
      ],
      "mod_code": [
        "cout << ' B ' ;",
        "string arr [ 8 ] ;",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        30
      ],
      "mod_code": [
        "cout << ' B ' ;",
        "else do"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        31,
        30,
        28
      ],
      "mod_code": [
        "cout << ' B ' ;",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        30
      ],
      "mod_code": [
        "string arr [ 8 ] ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        30,
        28
      ],
      "mod_code": [
        "string arr [ 8 ] ;",
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        28
      ],
      "mod_code": [
        "string arr [ 8 ] ;",
        "if ( a >= b )"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        28
      ],
      "mod_code": [
        "else do",
        "if ( a >= b )"
      ],
      "err_line": 32,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}