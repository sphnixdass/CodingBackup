{
  "meta": {
    "index": 76,
    "hitid": "3UOMW19E6D0O04GV0QE83OLUB0X5CX",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "412A",
    "subid": "8524393"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function check taking int a , int b , reference to string vector arr and returning bool",
      "code": "bool check ( int a , int b , vector < string > & arr )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a > = 0 and a < 8 and b > = 0 and b < 8 and arr [ a ] [ b ] is not 0",
      "code": "return a >= 0 && a < 8 && b >= 0 && b < 8 && arr [ a ] [ b ] != 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "step = two dimensional int array of sizes 4 and 2 with the values { - 2 , - 2 } , { - 2 , 2 } , { 2 , - 2 } , { 2 , 2 }",
      "code": "int step [ 4 ] [ 2 ] = { { - 2 , - 2 } , { - 2 , 2 } , { 2 , - 2 } , { 2 , 2 } } ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "in function check1 taking reference to string vector arr , long long int y , long long int x and returning int",
      "code": "int check1 ( vector < string > & arr , long long int y , long long int x )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "set arr [ y ] [ x ] to 0",
      "code": "arr [ y ] [ x ] = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to 4",
      "code": "for ( long long int i = 0 ; i < ( 4 ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "y1 = long long int with y1 = y + step [ i ] [ 0 ]",
      "code": "long long int y1 = y + step [ i ] [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "x1 = long long int with x1 = x + step [ i ] [ 1 ]",
      "code": "long long int x1 = x + step [ i ] [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if check of y1 , x1 , arr",
      "code": "if ( check ( y1 , x1 , arr ) )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if arr [ y1 ] [ x1 ] is ' K ' return 1",
      "code": "if ( arr [ y1 ] [ x1 ] == ' K ' ) return 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "r = int with r = 0",
      "code": "int r = 0 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set r to check1 of arr , y1 , x1 and if r is not - 1 return r + 1",
      "code": "if ( ( r = check1 ( arr , y1 , x1 ) ) != - 1 ) { return r + 1 ; }",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "return - 1",
      "code": "return - 1 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 18,
      "text": "call srand of 13",
      "code": "srand ( 13 ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "call fixed and setprecision of 15 on cout",
      "code": "cout << fixed << setprecision ( 15 ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "read n then k then s",
      "code": "cin >> n >> k >> s ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "l = int with l = k - 1",
      "code": "int l = k - 1 ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "r = int with r = n - k",
      "code": "int r = n - k ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if l < r",
      "code": "if ( l < r )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "pos = int with pos = l",
      "code": "int pos = l ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "loop while pos",
      "code": "while ( pos )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print \" LEFT \"",
      "code": "cout << \" LEFT\\n \" ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "decrement pos",
      "code": "-- pos ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "for i = 0 to n",
      "code": "for ( long long int i = 0 ; i < ( n ) ; ++ i )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "print \" PRINT \" then s [ i ]",
      "code": "cout << \" PRINT \" << s [ i ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "if i is not n - 1 print \" RIGHT \"",
      "code": "if ( i != n - 1 ) { cout << \" RIGHT\\n \" ; }",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 36,
      "text": "pos = int with pos = k",
      "code": "int pos = k ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "loop while pos < n",
      "code": "while ( pos < n )",
      "indent": 2
    },
    {
      "line": 38,
      "text": "print \" RIGHT \"",
      "code": "cout << \" RIGHT\\n \" ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "increment pos",
      "code": "++ pos ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 41,
      "text": "for i = n - 1 to 0 inclusive decrementing i",
      "code": "for ( long long int i = ( n ) - 1 ; i >= 0 ; -- i )",
      "indent": 2
    },
    {
      "line": 42,
      "text": "print \" PRINT \" then s [ i ]",
      "code": "cout << \" PRINT \" << s [ i ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 43,
      "text": "if i is no 0 print \" LEFT \"",
      "code": "if ( i != 0 ) { cout << \" LEFT\\n \" ; }",
      "indent": 3
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int > arr )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int check1 ( vector < int , int > y , long long int y , long long int x )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘long long int y’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int arr [ y ] [ x ] = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "declaration of ‘int arr [y][x]’ shadows a parameter"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long int y1 += step [ i ] [ 0 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "long long int x1 += step [ i ] [ 1 ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( check ( y1 , x1 ) , arr )"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘bool check(int, int, std::vector<std::__cxx11::basic_string<char> >&)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "return - l ;"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "srand . srand ( 13 ) ;"
      ],
      "err_line": 18,
      "err_msg": "request for member ‘srand’ in ‘srand’, which is of non-class type ‘void(unsigned int) throw ()’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 22,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cin >> n >> k then s ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 41,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        4
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        28
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        32
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        28
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        28,
        32
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        28,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        28,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        28,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        28,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        32
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        32,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        32,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        32,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        32,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        33,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        33,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        33,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        38,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        38,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        42,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        3,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        28
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        28,
        32
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        28,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        28,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        28,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        28,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        32
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        32,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        32,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        32,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        32,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        33,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        33,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        33,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        38,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        38,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        42,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        4,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        32
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        32,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        32,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        32,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        32,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        33,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        33,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        33,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        38,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        38,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        42,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        28,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" LEFT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        33,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        33,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        33,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        38,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        38,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        42,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        32,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        33
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        33,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        33,
        38,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        33,
        38,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        33,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        33,
        42,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        33,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        38
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        38,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        38,
        42,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        38,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        42
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        42,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        43
      ],
      "mod_code": [
        "bool check ( int a , int b , vector < int , int > arr )",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        28
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        28,
        32
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        28,
        33
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        28,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        28,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        28,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        32
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        32,
        33
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        32,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        32,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        32,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        33
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        33,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        33,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        33,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        38,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        38,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        42,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        32
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        32,
        33
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        32,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        32,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        32,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        33
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        33,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        33,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        33,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        38,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        38,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        42,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        28,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" LEFT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        33
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        33,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        33,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        33,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        38,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        38,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        42,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        32,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        33
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        33,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        33,
        38,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        33,
        38,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        33,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        33,
        42,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        33,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        38
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        38,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        38,
        42,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        38,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        42
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        42,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        43
      ],
      "mod_code": [
        "int step [ 4 ] [ 4 ] , { { - 2 , - 2 } , { 2 , - 2 } , { 2 , 2 } , { 2 , 2 } ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        32
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        32,
        33
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        32,
        38
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        32,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        32,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        33
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        33,
        38
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        33,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        33,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        38
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        38,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        38,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        42,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" LEFT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        33
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        33,
        38
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        33,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        33,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        38
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        38,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        38,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        42,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        32,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        38
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        38,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        38,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        42,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i != n - 1 ) cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        38
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        38,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        38,
        42,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        38,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" RIGHT \" ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        42
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        42,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "cout << \" PRINT \" << s [ i ] ;",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        43
      ],
      "mod_code": [
        "int check1 ( vector < long long int > arr , long long int y , long long int x )",
        "if ( i == 0 ) cout << \" LEFT \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    }
  ]
}