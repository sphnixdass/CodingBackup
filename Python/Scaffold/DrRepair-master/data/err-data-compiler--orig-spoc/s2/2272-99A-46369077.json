{
  "meta": {
    "index": 2272,
    "hitid": "3QX22DUVOOBI7K71J6QZAIK5I27MV7",
    "workerid": "A1APYLD4DUK33J",
    "probid": "99A",
    "subid": "46369077"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer i",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare string a",
      "code": "string a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to a [ i ] is not ' . ' , incrementing i",
      "code": "for ( i = 0 ; a [ i ] != ' . ' ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "end statement",
      "code": ";",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i - 1 ] is ' 9 '",
      "code": "if ( a [ i - 1 ] == ' 9 ' )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" GOTO Vasilisa . \"",
      "code": "cout << \" GOTO Vasilisa. \" ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else if a [ i + 1 ] is less than ' 5 '",
      "code": "else if ( a [ i + 1 ] < ' 5 ' )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for j = 0 to i exclusive , print a [ j ]",
      "code": "for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 0 to i - 1 exclusive , print a [ j ]",
      "code": "for ( int j = 0 ; j < i - 1 ; j ++ ) cout << a [ j ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment a [ i - 1 ]",
      "code": "a [ i - 1 ] ++ ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print a [ i - 1 ]",
      "code": "cout << a [ i - 1 ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string ans ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "<< endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        8,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "cout << a [ i - 1 ] << endl ;",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        8,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "cout << a [ i - 1 ] << endl ;",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        8,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "cout << a [ i - 1 ] << endl ;",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "cout << a [ i - 1 ] << endl ;",
        "<< endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        5,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "cout << a [ i - 1 ] << endl ;",
        "<< endl ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "cout << a [ i - 1 ] << endl ;",
        "<< endl ;",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "cout << a [ i - 1 ] << endl ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "cout << a [ i - 1 ] << endl ;",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "cout << a [ i - 1 ] << endl ;",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        5,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "<< endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "<< endl ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "<< endl ;",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "<< endl ;",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; a [ i ] != ' . ' ; i ++ )",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        5
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        8,
        5,
        10
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        8,
        5,
        12
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        8,
        10
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        10,
        12
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        12
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "<< endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        5,
        10
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "<< endl ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        5,
        10,
        12
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "<< endl ;",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        5,
        12
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "<< endl ;",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        12
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "cout << a [ i - 1 ] << endl ;",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        5,
        10
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        5,
        10,
        12
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        5,
        12
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "<< endl ;",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] <= ' 5 ' )",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "<< endl ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        10,
        12
      ],
      "mod_code": [
        "<< endl ;",
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "<< endl ;",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "n",
        "s1 [ i - 1 ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}