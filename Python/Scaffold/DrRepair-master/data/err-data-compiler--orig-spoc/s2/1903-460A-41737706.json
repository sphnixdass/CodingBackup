{
  "meta": {
    "index": 1903,
    "hitid": "3X4Q1O9UBHG4WXRHEO2WW8T7RKF7OF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "460A",
    "subid": "41737706"
  },
  "lines": [
    {
      "line": 0,
      "text": "new constant integer maxn = 200000 + 5",
      "code": "const int maxn = 200000 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new array of integers zw with maxn < < 2 elements",
      "code": "int zw [ maxn << 2 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "G is an array of int - int pairs with size = maxn",
      "code": "pair < int , int > G [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare new array of integers ans with size maxn",
      "code": "int ans [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare new integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n and m and loop further",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare new integer variable t = m",
      "code": "int t = m ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "create integer variable ans with value 0",
      "code": "int ans = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "while n ! = 0 , decrement it and continue the loop",
      "code": "while ( n -- )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "decrement m by one",
      "code": "m -- ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if m is equal to 0",
      "code": "if ( m == 0 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "change m to t",
      "code": "m = t ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "increment n by one",
      "code": "n ++ ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increment ans by one",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int zw [ maxn ] << { } ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "ans [ maxn ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "read ( n >> m ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "t = m ;"
      ],
      "err_line": 7,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "read ( n >> m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "read ( n >> m ) ;",
        "ans [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        7
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "read ( n >> m ) ;",
        "ans [ maxn ] ;",
        "t = m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        9
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "read ( n >> m ) ;",
        "ans [ maxn ] ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        7
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "read ( n >> m ) ;",
        "t = m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        9
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "read ( n >> m ) ;",
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "read ( n >> m ) ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "ans [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "ans [ maxn ] ;",
        "t = m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        9
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "ans [ maxn ] ;",
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "ans [ maxn ] ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "t = m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int zw [ 2 ] << { } ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "int zw [ maxn ] << { } ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "int zw [ maxn ] << { } ;",
        "ans [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        7
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "int zw [ maxn ] << { } ;",
        "ans [ maxn ] ;",
        "t = m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        9
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "int zw [ maxn ] << { } ;",
        "ans [ maxn ] ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        1,
        7
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "int zw [ maxn ] << { } ;",
        "t = m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        1,
        7,
        9
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "int zw [ maxn ] << { } ;",
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        1,
        9
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "int zw [ maxn ] << { } ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "ans [ maxn ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        6,
        3,
        7
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "ans [ maxn ] ;",
        "t = m ;"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        6,
        3,
        7,
        9
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "ans [ maxn ] ;",
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "ans [ maxn ] ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "t = m ;"
      ],
      "err_line": 6,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 6,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "read ( n >> m ) ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 6,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int zw [ maxn ] << { } ;",
        "ans [ maxn ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "int zw [ maxn ] << { } ;",
        "ans [ maxn ] ;",
        "t = m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        9
      ],
      "mod_code": [
        "int zw [ maxn ] << { } ;",
        "ans [ maxn ] ;",
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "int zw [ maxn ] << { } ;",
        "ans [ maxn ] ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int zw [ maxn ] << { } ;",
        "t = m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "int zw [ maxn ] << { } ;",
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int zw [ maxn ] << { } ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "ans [ maxn ] ;",
        "t = m ;"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "ans [ maxn ] ;",
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "ans [ maxn ] ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "t = m ;",
        "while ( n ) { continue ; }"
      ],
      "err_line": 7,
      "err_msg": "‘t’ was not declared in this scope"
    }
  ]
}